DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new):
Thir {
    body_type: Fn(
        ([std::vec::Vec<u8>, std::option::Option<i32>]; c_variadic: false)->core::bit_array::BitArray,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(75),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:34:49: 36:14 (#0),
            stmts: [
                s4,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(80),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:27:52: 38:10 (#0),
            stmts: [
                s0,
                s1,
                s2,
                s3,
                s5,
            ],
            expr: Some(
                e90,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(92),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:38:16: 40:10 (#0),
            stmts: [],
            expr: Some(
                e105,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(115),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:24:66: 46:6 (#0),
            stmts: [
                s6,
            ],
            expr: Some(
                e126,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).4),
                ),
            },
            ty: std::option::Option<i32>,
            temp_lifetime: Some(
                Node(5),
            ),
            span: src/core/bit_array.rs:27:43: 27:51 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(12),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).12),
                ),
                value: e0,
            },
            ty: std::option::Option<i32>,
            temp_lifetime: Some(
                Node(5),
            ),
            span: src/core/bit_array.rs:27:43: 27:51 (#0),
        },
        Expr {
            kind: Let {
                expr: e1,
                pat: Pat {
                    ty: std::option::Option<i32>,
                    span: src/core/bit_array.rs:27:26: 27:40 (#0),
                    kind: Variant {
                        adt_def: std::option::Option,
                        substs: [
                            i32,
                        ],
                        variant_index: 1,
                        subpatterns: [
                            FieldPat {
                                field: field[0],
                                pattern: Pat {
                                    ty: i32,
                                    span: src/core/bit_array.rs:27:31: 27:39 (#0),
                                    kind: Binding {
                                        mutability: Not,
                                        name: "num_bits",
                                        mode: ByValue,
                                        var: LocalVarId(
                                            HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).10),
                                        ),
                                        ty: i32,
                                        subpattern: None,
                                        is_primary: true,
                                    },
                                },
                            },
                        ],
                    },
                },
            },
            ty: bool,
            temp_lifetime: Some(
                Node(5),
            ),
            span: src/core/bit_array.rs:27:22: 27:51 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).7),
                ),
                value: e2,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(5),
            ),
            span: src/core/bit_array.rs:27:22: 27:51 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).2),
                ),
            },
            ty: std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(14),
            ),
            span: src/core/bit_array.rs:28:28: 28:32 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e4,
            },
            ty: &std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(14),
            ),
            span: src/core/bit_array.rs:28:28: 28:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).17),
                ),
                value: e5,
            },
            ty: &std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(14),
            ),
            span: src/core/bit_array.rs:28:28: 28:32 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::vec::Vec<u8>) -> usize {std::vec::Vec::<u8>::len},
            temp_lifetime: Some(
                Node(14),
            ),
            span: src/core/bit_array.rs:28:33: 28:36 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::vec::Vec<u8>) -> usize {std::vec::Vec::<u8>::len},
                fun: e7,
                args: [
                    e6,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:28:33: 28:38 (#0),
            },
            ty: usize,
            temp_lifetime: Some(
                Node(14),
            ),
            span: src/core/bit_array.rs:28:28: 28:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).15),
                ),
                value: e8,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(14),
            ),
            span: src/core/bit_array.rs:28:28: 28:38 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:29:37: 29:38 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/core/bit_array.rs:29:37: 29:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(24),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).24),
                ),
                value: e10,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/core/bit_array.rs:29:37: 29:38 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).10),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/core/bit_array.rs:29:42: 29:50 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(26),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).26),
                ),
                value: e12,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/core/bit_array.rs:29:42: 29:50 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:29:53: 29:54 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/core/bit_array.rs:29:53: 29:54 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(28),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).28),
                ),
                value: e14,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/core/bit_array.rs:29:53: 29:54 (#0),
        },
        Expr {
            kind: Binary {
                op: Rem,
                lhs: e13,
                rhs: e15,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/core/bit_array.rs:29:41: 29:55 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).25),
                ),
                value: e16,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/core/bit_array.rs:29:41: 29:55 (#0),
        },
        Expr {
            kind: Binary {
                op: Sub,
                lhs: e11,
                rhs: e17,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/core/bit_array.rs:29:36: 29:56 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(23),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).23),
                ),
                value: e18,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/core/bit_array.rs:29:36: 29:56 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:29:59: 29:60 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/core/bit_array.rs:29:59: 29:60 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(29),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).29),
                ),
                value: e20,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/core/bit_array.rs:29:59: 29:60 (#0),
        },
        Expr {
            kind: Binary {
                op: Rem,
                lhs: e19,
                rhs: e21,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/core/bit_array.rs:29:36: 29:60 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(22),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).22),
                ),
                value: e22,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/core/bit_array.rs:29:36: 29:60 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).2),
                ),
            },
            ty: std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/core/bit_array.rs:30:13: 30:17 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: false,
                },
                arg: e24,
            },
            ty: &mut std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/core/bit_array.rs:30:13: 30:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(34),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).34),
                ),
                value: e25,
            },
            ty: &mut std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/core/bit_array.rs:30:13: 30:17 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).20),
                ),
            },
            ty: usize,
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/core/bit_array.rs:30:18: 30:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(37),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).37),
                ),
                value: e27,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/core/bit_array.rs:30:18: 30:26 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        1,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:30:29: 30:30 (#0),
                },
                neg: false,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/core/bit_array.rs:30:29: 30:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(39),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).39),
                ),
                value: e29,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/core/bit_array.rs:30:29: 30:30 (#0),
        },
        Expr {
            kind: Binary {
                op: Sub,
                lhs: e28,
                rhs: e30,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/core/bit_array.rs:30:18: 30:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(36),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).36),
                ),
                value: e31,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/core/bit_array.rs:30:18: 30:30 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::vec::Vec<u8>, usize) -> &'a mut <std::vec::Vec<u8> as std::ops::Index<usize>>::Output {<std::vec::Vec<u8> as std::ops::IndexMut<usize>>::index_mut},
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/core/bit_array.rs:30:13: 30:31 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::vec::Vec<u8>, usize) -> &'a mut <std::vec::Vec<u8> as std::ops::Index<usize>>::Output {<std::vec::Vec<u8> as std::ops::IndexMut<usize>>::index_mut},
                fun: e33,
                args: [
                    e26,
                    e32,
                ],
                from_hir_call: false,
                fn_span: src/core/bit_array.rs:30:13: 30:31 (#0),
            },
            ty: &mut u8,
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/core/bit_array.rs:30:13: 30:31 (#0),
        },
        Expr {
            kind: Deref {
                arg: e34,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/core/bit_array.rs:30:13: 30:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(33),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).33),
                ),
                value: e35,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/core/bit_array.rs:30:13: 30:31 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).31),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/core/bit_array.rs:30:36: 30:52 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(40),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).40),
                ),
                value: e37,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/core/bit_array.rs:30:36: 30:52 (#0),
        },
        Expr {
            kind: AssignOp {
                op: Shr,
                lhs: e36,
                rhs: e38,
            },
            ty: (),
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/core/bit_array.rs:30:13: 30:52 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(32),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).32),
                ),
                value: e39,
            },
            ty: (),
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/core/bit_array.rs:30:13: 30:52 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).2),
                ),
            },
            ty: std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:31:13: 31:17 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: false,
                },
                arg: e41,
            },
            ty: &mut std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:31:13: 31:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(45),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).45),
                ),
                value: e42,
            },
            ty: &mut std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:31:13: 31:17 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).20),
                ),
            },
            ty: usize,
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:31:18: 31:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(48),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).48),
                ),
                value: e44,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:31:18: 31:26 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        1,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:31:29: 31:30 (#0),
                },
                neg: false,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:31:29: 31:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(50),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).50),
                ),
                value: e46,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:31:29: 31:30 (#0),
        },
        Expr {
            kind: Binary {
                op: Sub,
                lhs: e45,
                rhs: e47,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:31:18: 31:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(47),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).47),
                ),
                value: e48,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:31:18: 31:30 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::vec::Vec<u8>, usize) -> &'a mut <std::vec::Vec<u8> as std::ops::Index<usize>>::Output {<std::vec::Vec<u8> as std::ops::IndexMut<usize>>::index_mut},
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:31:13: 31:31 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::vec::Vec<u8>, usize) -> &'a mut <std::vec::Vec<u8> as std::ops::Index<usize>>::Output {<std::vec::Vec<u8> as std::ops::IndexMut<usize>>::index_mut},
                fun: e50,
                args: [
                    e43,
                    e49,
                ],
                from_hir_call: false,
                fn_span: src/core/bit_array.rs:31:13: 31:31 (#0),
            },
            ty: &mut u8,
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:31:13: 31:31 (#0),
        },
        Expr {
            kind: Deref {
                arg: e51,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:31:13: 31:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(44),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).44),
                ),
                value: e52,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:31:13: 31:31 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).31),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:31:36: 31:52 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(51),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).51),
                ),
                value: e54,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:31:36: 31:52 (#0),
        },
        Expr {
            kind: AssignOp {
                op: Shl,
                lhs: e53,
                rhs: e55,
            },
            ty: (),
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:31:13: 31:52 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(43),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).43),
                ),
                value: e56,
            },
            ty: (),
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:31:13: 31:52 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).10),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:34:16: 34:24 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(56),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).56),
                ),
                value: e58,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:34:16: 34:24 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).2),
                ),
            },
            ty: std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:34:27: 34:31 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e60,
            },
            ty: &std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:34:27: 34:37 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(62),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).62),
                ),
                value: e61,
            },
            ty: &std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:34:27: 34:31 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::vec::Vec<u8>) -> usize {std::vec::Vec::<u8>::len},
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:34:32: 34:35 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::vec::Vec<u8>) -> usize {std::vec::Vec::<u8>::len},
                fun: e63,
                args: [
                    e62,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:34:32: 34:37 (#0),
            },
            ty: usize,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:34:27: 34:37 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(60),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).60),
                ),
                value: e64,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:34:27: 34:37 (#0),
        },
        Expr {
            kind: Cast {
                source: e65,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:34:27: 34:44 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(59),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).59),
                ),
                value: e66,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:34:27: 34:44 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:34:47: 34:48 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:34:47: 34:48 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(66),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).66),
                ),
                value: e68,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:34:47: 34:48 (#0),
        },
        Expr {
            kind: Binary {
                op: Mul,
                lhs: e67,
                rhs: e69,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:34:27: 34:48 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(58),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).58),
                ),
                value: e70,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:34:27: 34:48 (#0),
        },
        Expr {
            kind: Binary {
                op: Gt,
                lhs: e59,
                rhs: e71,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:34:16: 34:48 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(55),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).55),
                ),
                value: e72,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:34:16: 34:48 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(55),
                lint_level: Inherited,
                value: e73,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:34:16: 34:48 (#0),
        },
        Expr {
            kind: Use {
                source: e74,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(77),
            ),
            span: src/core/bit_array.rs:34:16: 34:48 (#92),
        },
        Expr {
            kind: Scope {
                region_scope: Node(67),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).67),
                ),
                value: e75,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(77),
            ),
            span: src/core/bit_array.rs:34:16: 34:48 (#92),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(74),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:33 (#9),
        },
        Expr {
            kind: Scope {
                region_scope: Node(69),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).69),
                ),
                value: e77,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(74),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:33 (#9),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "explicit panic",
                        Cooked,
                    ),
                    span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#9),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(74),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#9),
        },
        Expr {
            kind: Scope {
                region_scope: Node(73),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).73),
                ),
                value: e79,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(74),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#9),
        },
        Expr {
            kind: Call {
                ty: fn(&'static str) -> ! {core::panicking::panic},
                fun: e78,
                args: [
                    e80,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#9),
            },
            ty: !,
            temp_lifetime: Some(
                Node(74),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#9),
        },
        Expr {
            kind: Scope {
                region_scope: Node(68),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).68),
                ),
                value: e81,
            },
            ty: !,
            temp_lifetime: Some(
                Node(74),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#9),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: !,
            temp_lifetime: Some(
                Node(76),
            ),
            span: src/core/bit_array.rs:34:49: 36:14 (#0),
        },
        Expr {
            kind: NeverToAny {
                source: e83,
            },
            ty: (),
            temp_lifetime: Some(
                Node(76),
            ),
            span: src/core/bit_array.rs:34:49: 36:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(76),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).76),
                ),
                value: e84,
            },
            ty: (),
            temp_lifetime: Some(
                Node(76),
            ),
            span: src/core/bit_array.rs:34:49: 36:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(76),
                lint_level: Inherited,
                value: e85,
            },
            ty: (),
            temp_lifetime: Some(
                Node(76),
            ),
            span: src/core/bit_array.rs:34:49: 36:14 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(76),
                cond: e76,
                then: e86,
                else_opt: None,
            },
            ty: (),
            temp_lifetime: Some(
                Node(77),
            ),
            span: src/core/bit_array.rs:34:13: 36:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(54),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).54),
                ),
                value: e87,
            },
            ty: (),
            temp_lifetime: Some(
                Node(77),
            ),
            span: src/core/bit_array.rs:34:13: 36:14 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).10),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(81),
            ),
            span: src/core/bit_array.rs:37:13: 37:21 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(78),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).78),
                ),
                value: e89,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(81),
            ),
            span: src/core/bit_array.rs:37:13: 37:21 (#0),
        },
        Expr {
            kind: Block {
                block: b1,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(81),
            ),
            span: src/core/bit_array.rs:27:52: 38:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(81),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).81),
                ),
                value: e91,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(81),
            ),
            span: src/core/bit_array.rs:27:52: 38:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(81),
                lint_level: Inherited,
                value: e92,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(81),
            ),
            span: src/core/bit_array.rs:27:52: 38:10 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).2),
                ),
            },
            ty: std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/core/bit_array.rs:39:13: 39:17 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e94,
            },
            ty: &std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/core/bit_array.rs:39:13: 39:23 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(87),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).87),
                ),
                value: e95,
            },
            ty: &std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/core/bit_array.rs:39:13: 39:17 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::vec::Vec<u8>) -> usize {std::vec::Vec::<u8>::len},
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/core/bit_array.rs:39:18: 39:21 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::vec::Vec<u8>) -> usize {std::vec::Vec::<u8>::len},
                fun: e97,
                args: [
                    e96,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:39:18: 39:23 (#0),
            },
            ty: usize,
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/core/bit_array.rs:39:13: 39:23 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(85),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).85),
                ),
                value: e98,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/core/bit_array.rs:39:13: 39:23 (#0),
        },
        Expr {
            kind: Cast {
                source: e99,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/core/bit_array.rs:39:13: 39:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(84),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).84),
                ),
                value: e100,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/core/bit_array.rs:39:13: 39:30 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:39:33: 39:34 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/core/bit_array.rs:39:33: 39:34 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(91),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).91),
                ),
                value: e102,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/core/bit_array.rs:39:33: 39:34 (#0),
        },
        Expr {
            kind: Binary {
                op: Mul,
                lhs: e101,
                rhs: e103,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/core/bit_array.rs:39:13: 39:34 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(83),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).83),
                ),
                value: e104,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/core/bit_array.rs:39:13: 39:34 (#0),
        },
        Expr {
            kind: Block {
                block: b2,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/core/bit_array.rs:38:16: 40:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(82),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).82),
                ),
                value: e106,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/core/bit_array.rs:38:16: 40:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(82),
                lint_level: Inherited,
                value: e107,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/core/bit_array.rs:38:16: 40:10 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(81),
                cond: e3,
                then: e93,
                else_opt: Some(
                    e108,
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(5),
            ),
            span: src/core/bit_array.rs:27:19: 40:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).6),
                ),
                value: e109,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(5),
            ),
            span: src/core/bit_array.rs:27:19: 40:10 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(std::cell::RefCell<std::vec::Vec<u8>>) -> std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> {std::rc::Rc::<std::cell::RefCell<std::vec::Vec<u8>>>::new},
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/core/bit_array.rs:42:19: 42:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(99),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).99),
                ),
                value: e111,
            },
            ty: fn(std::cell::RefCell<std::vec::Vec<u8>>) -> std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> {std::rc::Rc::<std::cell::RefCell<std::vec::Vec<u8>>>::new},
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/core/bit_array.rs:42:19: 42:26 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(2:4240 ~ core[102f]::cell::{impl#21}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(2:4238 ~ core[102f]::cell::{impl#21}),
                                        self_ty: std::cell::RefCell<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(std::vec::Vec<u8>) -> std::cell::RefCell<std::vec::Vec<u8>> {std::cell::RefCell::<std::vec::Vec<u8>>::new},
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/core/bit_array.rs:42:27: 42:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(104),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).104),
                ),
                value: e113,
            },
            ty: fn(std::vec::Vec<u8>) -> std::cell::RefCell<std::vec::Vec<u8>> {std::cell::RefCell::<std::vec::Vec<u8>>::new},
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/core/bit_array.rs:42:27: 42:39 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).2),
                ),
            },
            ty: std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/core/bit_array.rs:42:40: 42:44 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(108),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).108),
                ),
                value: e115,
            },
            ty: std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/core/bit_array.rs:42:40: 42:44 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::vec::Vec<u8>) -> std::cell::RefCell<std::vec::Vec<u8>> {std::cell::RefCell::<std::vec::Vec<u8>>::new},
                fun: e114,
                args: [
                    e116,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:42:27: 42:45 (#0),
            },
            ty: std::cell::RefCell<std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/core/bit_array.rs:42:27: 42:45 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(103),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).103),
                ),
                value: e117,
            },
            ty: std::cell::RefCell<std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/core/bit_array.rs:42:27: 42:45 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::cell::RefCell<std::vec::Vec<u8>>) -> std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> {std::rc::Rc::<std::cell::RefCell<std::vec::Vec<u8>>>::new},
                fun: e112,
                args: [
                    e118,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:42:19: 42:46 (#0),
            },
            ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/core/bit_array.rs:42:19: 42:46 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(98),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).98),
                ),
                value: e119,
            },
            ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/core/bit_array.rs:42:19: 42:46 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        0,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:43:18: 43:19 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/core/bit_array.rs:43:18: 43:19 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(111),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).111),
                ),
                value: e121,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/core/bit_array.rs:43:18: 43:19 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).94),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/core/bit_array.rs:44:13: 44:16 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(113),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).113),
                ),
                value: e123,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/core/bit_array.rs:44:13: 44:16 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: core::bit_array::BitArray,
                    variant_index: 0,
                    substs: [],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e120,
                        },
                        FieldExpr {
                            name: field[1],
                            expr: e122,
                        },
                        FieldExpr {
                            name: field[2],
                            expr: e124,
                        },
                    ],
                    base: None,
                },
            ),
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/core/bit_array.rs:41:9: 45:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(95),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).95),
                ),
                value: e125,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/core/bit_array.rs:41:9: 45:10 (#0),
        },
        Expr {
            kind: Block {
                block: b3,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/core/bit_array.rs:24:66: 46:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(116),
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).116),
                ),
                value: e127,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/core/bit_array.rs:24:66: 46:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(116),
                lint_level: Inherited,
                value: e128,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/core/bit_array.rs:24:66: 46:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 80, first_statement_index: 0},
                init_scope: Node(14),
                pattern: Pat {
                    ty: usize,
                    span: src/core/bit_array.rs:28:17: 28:25 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "data_len",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).20),
                        ),
                        ty: usize,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e9,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).19),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(14),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 80, first_statement_index: 1},
                init_scope: Node(21),
                pattern: Pat {
                    ty: i32,
                    span: src/core/bit_array.rs:29:17: 29:33 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "num_bits_to_zero",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).31),
                        ),
                        ty: i32,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e23,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).30),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(21),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(42),
                expr: e40,
            },
            opt_destruction_scope: Some(
                Destruction(42),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(53),
                expr: e57,
            },
            opt_destruction_scope: Some(
                Destruction(53),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(74),
                expr: e82,
            },
            opt_destruction_scope: Some(
                Destruction(74),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(77),
                expr: e88,
            },
            opt_destruction_scope: Some(
                Destruction(77),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 115, first_statement_index: 0},
                init_scope: Node(5),
                pattern: Pat {
                    ty: i32,
                    span: src/core/bit_array.rs:27:13: 27:16 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "len",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).94),
                        ),
                        ty: i32,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e110,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).93),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(5),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: std::vec::Vec<u8>,
                    span: src/core/bit_array.rs:24:16: 24:24 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "data",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).2),
                        ),
                        ty: std::vec::Vec<u8>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::vec::Vec<u8>,
            ty_span: Some(
                src/core/bit_array.rs:24:26: 24:33 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: std::option::Option<i32>,
                    span: src/core/bit_array.rs:24:35: 24:43 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "num_bits",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).4),
                        ),
                        ty: std::option::Option<i32>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::option::Option<i32>,
            ty_span: Some(
                src/core/bit_array.rs:24:45: 24:56 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:36 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::new).3),
            ),
        },
    ],
}

DefId(0:37 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::fresh):
Thir {
    body_type: Fn(
        ([]; c_variadic: false)->core::bit_array::BitArray,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(15),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:47:28: 49:6 (#0),
            stmts: [],
            expr: Some(
                e9,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::vec::Vec<u8>, std::option::Option<i32>) -> core::bit_array::BitArray {core::bit_array::BitArray::new},
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core/bit_array.rs:48:9: 48:18 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(2),
                lint_level: Explicit(
                    HirId(DefId(0:37 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::fresh).2),
                ),
                value: e0,
            },
            ty: fn(std::vec::Vec<u8>, std::option::Option<i32>) -> core::bit_array::BitArray {core::bit_array::BitArray::new},
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core/bit_array.rs:48:9: 48:18 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:6607 ~ alloc[42dc]::vec::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:6605 ~ alloc[42dc]::vec::{impl#0}),
                                        self_ty: std::vec::Vec<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn() -> std::vec::Vec<u8> {std::vec::Vec::<u8>::new},
            temp_lifetime: Some(
                Node(16),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:36: 44:57 (#10),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:37 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::fresh).7),
                ),
                value: e2,
            },
            ty: fn() -> std::vec::Vec<u8> {std::vec::Vec::<u8>::new},
            temp_lifetime: Some(
                Node(16),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:36: 44:57 (#10),
        },
        Expr {
            kind: Call {
                ty: fn() -> std::vec::Vec<u8> {std::vec::Vec::<u8>::new},
                fun: e3,
                args: [],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:36: 44:59 (#10),
            },
            ty: std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(16),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:36: 44:59 (#10),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:37 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::fresh).6),
                ),
                value: e4,
            },
            ty: std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(16),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:36: 44:59 (#10),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: std::option::Option,
                    variant_index: 0,
                    substs: [
                        i32,
                    ],
                    user_ty: None,
                    fields: [],
                    base: None,
                },
            ),
            ty: std::option::Option<i32>,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core/bit_array.rs:48:27: 48:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:37 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::fresh).13),
                ),
                value: e6,
            },
            ty: std::option::Option<i32>,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core/bit_array.rs:48:27: 48:31 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::vec::Vec<u8>, std::option::Option<i32>) -> core::bit_array::BitArray {core::bit_array::BitArray::new},
                fun: e1,
                args: [
                    e5,
                    e7,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:48:9: 48:32 (#0),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core/bit_array.rs:48:9: 48:32 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(1),
                lint_level: Explicit(
                    HirId(DefId(0:37 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::fresh).1),
                ),
                value: e8,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core/bit_array.rs:48:9: 48:32 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core/bit_array.rs:47:28: 49:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(16),
                lint_level: Explicit(
                    HirId(DefId(0:37 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::fresh).16),
                ),
                value: e10,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core/bit_array.rs:47:28: 49:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(16),
                lint_level: Inherited,
                value: e11,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core/bit_array.rs:47:28: 49:6 (#0),
        },
    ],
    stmts: [],
    params: [],
}

DefId(0:38 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::from_file):
Thir {
    body_type: Fn(
        ([std::string::String]; c_variadic: false)->std::result::Result<core::bit_array::BitArray, std::io::Error>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(38),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:50:61: 53:6 (#0),
            stmts: [
                s0,
            ],
            expr: Some(
                e20,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(1:5177 ~ std[f4e9]::path::{impl#63}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(1:5174 ~ std[f4e9]::path::{impl#63}),
                                        self_ty: std::path::Path,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: for<'a> fn(&'a std::string::String) -> &'a std::path::Path {std::path::Path::new::<std::string::String>},
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core/bit_array.rs:51:20: 51:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:38 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::from_file).5),
                ),
                value: e0,
            },
            ty: for<'a> fn(&'a std::string::String) -> &'a std::path::Path {std::path::Path::new::<std::string::String>},
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core/bit_array.rs:51:20: 51:40 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:38 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::from_file).2),
                ),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core/bit_array.rs:51:42: 51:46 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(12),
                lint_level: Explicit(
                    HirId(DefId(0:38 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::from_file).12),
                ),
                value: e2,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core/bit_array.rs:51:42: 51:46 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e3,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core/bit_array.rs:51:41: 51:46 (#0),
        },
        Expr {
            kind: Deref {
                arg: e4,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core/bit_array.rs:51:41: 51:46 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e5,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core/bit_array.rs:51:41: 51:46 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:38 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::from_file).11),
                ),
                value: e6,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core/bit_array.rs:51:41: 51:46 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::string::String) -> &'a std::path::Path {std::path::Path::new::<std::string::String>},
                fun: e1,
                args: [
                    e7,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:51:20: 51:47 (#0),
            },
            ty: &std::path::Path,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core/bit_array.rs:51:20: 51:47 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:38 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::from_file).4),
                ),
                value: e8,
            },
            ty: &std::path::Path,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core/bit_array.rs:51:20: 51:47 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(&std::path::Path) -> std::result::Result<std::vec::Vec<u8>, std::io::Error> {std::fs::read::<&std::path::Path>},
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/core/bit_array.rs:52:9: 52:22 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:38 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::from_file).19),
                ),
                value: e10,
            },
            ty: fn(&std::path::Path) -> std::result::Result<std::vec::Vec<u8>, std::io::Error> {std::fs::read::<&std::path::Path>},
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/core/bit_array.rs:52:9: 52:22 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:38 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::from_file).15),
                ),
            },
            ty: &std::path::Path,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/core/bit_array.rs:52:23: 52:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(23),
                lint_level: Explicit(
                    HirId(DefId(0:38 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::from_file).23),
                ),
                value: e12,
            },
            ty: &std::path::Path,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/core/bit_array.rs:52:23: 52:27 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(&std::path::Path) -> std::result::Result<std::vec::Vec<u8>, std::io::Error> {std::fs::read::<&std::path::Path>},
                fun: e11,
                args: [
                    e13,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:52:9: 52:28 (#0),
            },
            ty: std::result::Result<std::vec::Vec<u8>, std::io::Error>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/core/bit_array.rs:52:9: 52:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(18),
                lint_level: Explicit(
                    HirId(DefId(0:38 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::from_file).18),
                ),
                value: e14,
            },
            ty: std::result::Result<std::vec::Vec<u8>, std::io::Error>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/core/bit_array.rs:52:9: 52:28 (#0),
        },
        Expr {
            kind: Closure(
                ClosureExpr {
                    closure_id: DefId(0:39 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::from_file::{closure#0}),
                    substs: Closure(
                        [
                            i32,
                            extern "rust-call" fn((std::vec::Vec<u8>,)) -> core::bit_array::BitArray,
                            (),
                        ],
                    ),
                    upvars: [],
                    movability: None,
                    fake_reads: [],
                },
            ),
            ty: [closure@src/core/bit_array.rs:52:33: 52:38],
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/core/bit_array.rs:52:33: 52:59 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:38 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::from_file).25),
                ),
                value: e16,
            },
            ty: [closure@src/core/bit_array.rs:52:33: 52:38],
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/core/bit_array.rs:52:33: 52:59 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::result::Result<std::vec::Vec<u8>, std::io::Error>, [closure@src/core/bit_array.rs:52:33: 52:38]) -> std::result::Result<core::bit_array::BitArray, std::io::Error> {std::result::Result::<std::vec::Vec<u8>, std::io::Error>::map::<core::bit_array::BitArray, [closure@src/core/bit_array.rs:52:33: 52:38]>},
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/core/bit_array.rs:52:29: 52:32 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::result::Result<std::vec::Vec<u8>, std::io::Error>, [closure@src/core/bit_array.rs:52:33: 52:38]) -> std::result::Result<core::bit_array::BitArray, std::io::Error> {std::result::Result::<std::vec::Vec<u8>, std::io::Error>::map::<core::bit_array::BitArray, [closure@src/core/bit_array.rs:52:33: 52:38]>},
                fun: e18,
                args: [
                    e15,
                    e17,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:52:29: 52:60 (#0),
            },
            ty: std::result::Result<core::bit_array::BitArray, std::io::Error>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/core/bit_array.rs:52:9: 52:60 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(16),
                lint_level: Explicit(
                    HirId(DefId(0:38 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::from_file).16),
                ),
                value: e19,
            },
            ty: std::result::Result<core::bit_array::BitArray, std::io::Error>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/core/bit_array.rs:52:9: 52:60 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::result::Result<core::bit_array::BitArray, std::io::Error>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/core/bit_array.rs:50:61: 53:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(39),
                lint_level: Explicit(
                    HirId(DefId(0:38 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::from_file).39),
                ),
                value: e21,
            },
            ty: std::result::Result<core::bit_array::BitArray, std::io::Error>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/core/bit_array.rs:50:61: 53:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(39),
                lint_level: Inherited,
                value: e22,
            },
            ty: std::result::Result<core::bit_array::BitArray, std::io::Error>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/core/bit_array.rs:50:61: 53:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 38, first_statement_index: 0},
                init_scope: Node(3),
                pattern: Pat {
                    ty: &std::path::Path,
                    span: src/core/bit_array.rs:51:13: 51:17 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "path",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:38 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::from_file).15),
                        ),
                        ty: &std::path::Path,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e9,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:38 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::from_file).14),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(3),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: std::string::String,
                    span: src/core/bit_array.rs:50:22: 50:26 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "path",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:38 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::from_file).2),
                        ),
                        ty: std::string::String,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::string::String,
            ty_span: Some(
                src/core/bit_array.rs:50:28: 50:34 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:38 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::from_file).1),
            ),
        },
    ],
}

DefId(0:39 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::from_file::{closure#0}):
Thir {
    body_type: Fn(
        ([std::vec::Vec<u8>]; c_variadic: false)->core::bit_array::BitArray,
    ),
    arms: [],
    blocks: [],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::vec::Vec<u8>, std::option::Option<i32>) -> core::bit_array::BitArray {core::bit_array::BitArray::new},
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/bit_array.rs:52:39: 52:48 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(29),
                lint_level: Explicit(
                    HirId(DefId(0:38 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::from_file).29),
                ),
                value: e0,
            },
            ty: fn(std::vec::Vec<u8>, std::option::Option<i32>) -> core::bit_array::BitArray {core::bit_array::BitArray::new},
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/bit_array.rs:52:39: 52:48 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:38 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::from_file).27),
                ),
            },
            ty: std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/bit_array.rs:52:49: 52:52 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(33),
                lint_level: Explicit(
                    HirId(DefId(0:38 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::from_file).33),
                ),
                value: e2,
            },
            ty: std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/bit_array.rs:52:49: 52:52 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: std::option::Option,
                    variant_index: 0,
                    substs: [
                        i32,
                    ],
                    user_ty: None,
                    fields: [],
                    base: None,
                },
            ),
            ty: std::option::Option<i32>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/bit_array.rs:52:54: 52:58 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(35),
                lint_level: Explicit(
                    HirId(DefId(0:38 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::from_file).35),
                ),
                value: e4,
            },
            ty: std::option::Option<i32>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/bit_array.rs:52:54: 52:58 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::vec::Vec<u8>, std::option::Option<i32>) -> core::bit_array::BitArray {core::bit_array::BitArray::new},
                fun: e1,
                args: [
                    e3,
                    e5,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:52:39: 52:59 (#0),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/bit_array.rs:52:39: 52:59 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(28),
                lint_level: Explicit(
                    HirId(DefId(0:38 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::from_file).28),
                ),
                value: e6,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/bit_array.rs:52:39: 52:59 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(28),
                lint_level: Inherited,
                value: e7,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/bit_array.rs:52:39: 52:59 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: None,
            ty: [closure@src/core/bit_array.rs:52:33: 52:38],
            ty_span: None,
            self_kind: None,
            hir_id: None,
        },
        Param {
            pat: Some(
                Pat {
                    ty: std::vec::Vec<u8>,
                    span: src/core/bit_array.rs:52:34: 52:37 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "vec",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:38 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::from_file).27),
                        ),
                        ty: std::vec::Vec<u8>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::vec::Vec<u8>,
            ty_span: None,
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:38 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::from_file).26),
            ),
        },
    ],
}

DefId(0:40 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::to_file):
Thir {
    body_type: Fn(
        ([&core::bit_array::BitArray, std::string::String]; c_variadic: false)->(),
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(28),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:54:41: 57:6 (#0),
            stmts: [
                s0,
            ],
            expr: None,
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(1:2221 ~ std[f4e9]::fs::write),
                            UserSubsts {
                                substs: [
                                    std::string::String,
                                    &std::vec::Vec<u8>,
                                ],
                                user_self_ty: None,
                            },
                        ),
                    },
                ),
            },
            ty: fn(std::string::String, &std::vec::Vec<u8>) -> std::result::Result<(), std::io::Error> {std::fs::write::<std::string::String, &std::vec::Vec<u8>>},
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bit_array.rs:55:9: 55:43 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:40 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::to_file).6),
                ),
                value: e0,
            },
            ty: fn(std::string::String, &std::vec::Vec<u8>) -> std::result::Result<(), std::io::Error> {std::fs::write::<std::string::String, &std::vec::Vec<u8>>},
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bit_array.rs:55:9: 55:43 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:40 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::to_file).4),
                ),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bit_array.rs:55:44: 55:48 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(18),
                lint_level: Explicit(
                    HirId(DefId(0:40 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::to_file).18),
                ),
                value: e2,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bit_array.rs:55:44: 55:48 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:40 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::to_file).2),
                ),
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bit_array.rs:55:50: 55:54 (#0),
        },
        Expr {
            kind: Deref {
                arg: e4,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bit_array.rs:55:50: 55:54 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:40 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::to_file).25),
                ),
                value: e5,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bit_array.rs:55:50: 55:54 (#0),
        },
        Expr {
            kind: Field {
                lhs: e6,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bit_array.rs:55:50: 55:59 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e7,
            },
            ty: &std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bit_array.rs:55:50: 55:68 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>) -> &'a <std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::ops::Deref>::Target {<std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bit_array.rs:55:50: 55:68 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>) -> &'a <std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::ops::Deref>::Target {<std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::ops::Deref>::deref},
                fun: e9,
                args: [
                    e8,
                ],
                from_hir_call: false,
                fn_span: src/core/bit_array.rs:55:50: 55:68 (#0),
            },
            ty: &std::cell::RefCell<std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bit_array.rs:55:50: 55:68 (#0),
        },
        Expr {
            kind: Deref {
                arg: e10,
            },
            ty: std::cell::RefCell<std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bit_array.rs:55:50: 55:68 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e11,
            },
            ty: &std::cell::RefCell<std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bit_array.rs:55:50: 55:68 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(24),
                lint_level: Explicit(
                    HirId(DefId(0:40 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::to_file).24),
                ),
                value: e12,
            },
            ty: &std::cell::RefCell<std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bit_array.rs:55:50: 55:59 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::cell::RefCell<std::vec::Vec<u8>>) -> std::cell::Ref<'a, std::vec::Vec<u8>> {std::cell::RefCell::<std::vec::Vec<u8>>::borrow},
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bit_array.rs:55:60: 55:66 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::cell::RefCell<std::vec::Vec<u8>>) -> std::cell::Ref<'a, std::vec::Vec<u8>> {std::cell::RefCell::<std::vec::Vec<u8>>::borrow},
                fun: e14,
                args: [
                    e13,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:55:60: 55:68 (#0),
            },
            ty: std::cell::Ref<'_, std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bit_array.rs:55:50: 55:68 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e15,
            },
            ty: &std::cell::Ref<'_, std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bit_array.rs:55:50: 55:77 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::cell::Ref<'_, std::vec::Vec<u8>>) -> &'a <std::cell::Ref<'_, std::vec::Vec<u8>> as std::ops::Deref>::Target {<std::cell::Ref<'_, std::vec::Vec<u8>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bit_array.rs:55:50: 55:77 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::cell::Ref<'_, std::vec::Vec<u8>>) -> &'a <std::cell::Ref<'_, std::vec::Vec<u8>> as std::ops::Deref>::Target {<std::cell::Ref<'_, std::vec::Vec<u8>> as std::ops::Deref>::deref},
                fun: e17,
                args: [
                    e16,
                ],
                from_hir_call: false,
                fn_span: src/core/bit_array.rs:55:50: 55:77 (#0),
            },
            ty: &std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bit_array.rs:55:50: 55:77 (#0),
        },
        Expr {
            kind: Deref {
                arg: e18,
            },
            ty: std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bit_array.rs:55:50: 55:77 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e19,
            },
            ty: &std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bit_array.rs:55:50: 55:77 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(22),
                lint_level: Explicit(
                    HirId(DefId(0:40 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::to_file).22),
                ),
                value: e20,
            },
            ty: &std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bit_array.rs:55:50: 55:68 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::vec::Vec<u8>) -> &'a std::vec::Vec<u8> {<std::vec::Vec<u8> as std::convert::AsRef<std::vec::Vec<u8>>>::as_ref},
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bit_array.rs:55:69: 55:75 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::vec::Vec<u8>) -> &'a std::vec::Vec<u8> {<std::vec::Vec<u8> as std::convert::AsRef<std::vec::Vec<u8>>>::as_ref},
                fun: e22,
                args: [
                    e21,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:55:69: 55:77 (#0),
            },
            ty: &std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bit_array.rs:55:50: 55:77 (#0),
        },
        Expr {
            kind: Deref {
                arg: e23,
            },
            ty: std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bit_array.rs:55:50: 55:77 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e24,
            },
            ty: &std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bit_array.rs:55:50: 55:77 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(20),
                lint_level: Explicit(
                    HirId(DefId(0:40 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::to_file).20),
                ),
                value: e25,
            },
            ty: &std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bit_array.rs:55:50: 55:77 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::string::String, &std::vec::Vec<u8>) -> std::result::Result<(), std::io::Error> {std::fs::write::<std::string::String, &std::vec::Vec<u8>>},
                fun: e1,
                args: [
                    e3,
                    e26,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:55:9: 55:78 (#0),
            },
            ty: std::result::Result<(), std::io::Error>,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bit_array.rs:55:9: 55:78 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:40 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::to_file).5),
                ),
                value: e27,
            },
            ty: std::result::Result<(), std::io::Error>,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bit_array.rs:55:9: 55:78 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/core/bit_array.rs:54:41: 57:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(29),
                lint_level: Explicit(
                    HirId(DefId(0:40 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::to_file).29),
                ),
                value: e29,
            },
            ty: (),
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/core/bit_array.rs:54:41: 57:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(29),
                lint_level: Inherited,
                value: e30,
            },
            ty: (),
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/core/bit_array.rs:54:41: 57:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(27),
                expr: e28,
            },
            opt_destruction_scope: Some(
                Destruction(27),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &core::bit_array::BitArray,
                    span: src/core/bit_array.rs:54:20: 54:25 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:40 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::to_file).2),
                        ),
                        ty: &core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &core::bit_array::BitArray,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:40 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::to_file).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: std::string::String,
                    span: src/core/bit_array.rs:54:27: 54:31 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "path",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:40 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::to_file).4),
                        ),
                        ty: std::string::String,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::string::String,
            ty_span: Some(
                src/core/bit_array.rs:54:33: 54:39 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:40 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::to_file).3),
            ),
        },
    ],
}

DefId(0:41 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clone):
Thir {
    body_type: Fn(
        ([&core::bit_array::BitArray]; c_variadic: false)->core::bit_array::BitArray,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(19),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:58:33: 64:6 (#0),
            stmts: [],
            expr: Some(
                e20,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:41 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clone).2),
                ),
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:60:19: 60:23 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:60:19: 60:23 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:41 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clone).9),
                ),
                value: e1,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:60:19: 60:23 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:60:19: 60:28 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e3,
            },
            ty: &std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:60:19: 60:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:41 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clone).8),
                ),
                value: e4,
            },
            ty: &std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:60:19: 60:28 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>) -> std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> {<std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:60:29: 60:34 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>) -> std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> {<std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::clone::Clone>::clone},
                fun: e6,
                args: [
                    e5,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:60:29: 60:36 (#0),
            },
            ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:60:19: 60:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:41 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clone).6),
                ),
                value: e7,
            },
            ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:60:19: 60:36 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:41 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clone).2),
                ),
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:61:18: 61:22 (#0),
        },
        Expr {
            kind: Deref {
                arg: e9,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:61:18: 61:22 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:41 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clone).13),
                ),
                value: e10,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:61:18: 61:22 (#0),
        },
        Expr {
            kind: Field {
                lhs: e11,
                variant_index: 0,
                name: field[1],
            },
            ty: i32,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:61:18: 61:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(12),
                lint_level: Explicit(
                    HirId(DefId(0:41 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clone).12),
                ),
                value: e12,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:61:18: 61:26 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:41 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clone).2),
                ),
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:62:18: 62:22 (#0),
        },
        Expr {
            kind: Deref {
                arg: e14,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:62:18: 62:22 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:41 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clone).17),
                ),
                value: e15,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:62:18: 62:22 (#0),
        },
        Expr {
            kind: Field {
                lhs: e16,
                variant_index: 0,
                name: field[2],
            },
            ty: i32,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:62:18: 62:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(16),
                lint_level: Explicit(
                    HirId(DefId(0:41 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clone).16),
                ),
                value: e17,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:62:18: 62:26 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: core::bit_array::BitArray,
                    variant_index: 0,
                    substs: [],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e8,
                        },
                        FieldExpr {
                            name: field[1],
                            expr: e13,
                        },
                        FieldExpr {
                            name: field[2],
                            expr: e18,
                        },
                    ],
                    base: None,
                },
            ),
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:59:9: 63:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:41 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clone).3),
                ),
                value: e19,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:59:9: 63:10 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:58:33: 64:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(20),
                lint_level: Explicit(
                    HirId(DefId(0:41 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clone).20),
                ),
                value: e21,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:58:33: 64:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(20),
                lint_level: Inherited,
                value: e22,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:58:33: 64:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &core::bit_array::BitArray,
                    span: src/core/bit_array.rs:58:18: 58:23 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:41 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clone).2),
                        ),
                        ty: &core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &core::bit_array::BitArray,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:41 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clone).1),
            ),
        },
    ],
}

DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek):
Thir {
    body_type: Fn(
        ([&core::bit_array::BitArray, u8]; c_variadic: false)->u8,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(18),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:68:25: 70:10 (#0),
            stmts: [
                s0,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(30),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:71:26: 73:10 (#0),
            stmts: [
                s2,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(51),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:74:39: 76:10 (#0),
            stmts: [
                s4,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(82),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:77:47: 79:10 (#0),
            stmts: [],
            expr: Some(
                e124,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(209),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:86:29: 97:14 (#0),
            stmts: [
                s12,
                s13,
                s14,
                s15,
                s16,
                s17,
                s18,
            ],
            expr: Some(
                e285,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(239),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:97:20: 102:14 (#0),
            stmts: [
                s19,
                s20,
                s21,
            ],
            expr: Some(
                e316,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(240),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:79:16: 103:10 (#0),
            stmts: [
                s6,
                s7,
                s8,
                s9,
                s10,
                s11,
            ],
            expr: Some(
                e321,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(241),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:65:44: 104:6 (#0),
            stmts: [
                s1,
                s3,
                s5,
            ],
            expr: Some(
                e326,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).4),
                ),
            },
            ty: u8,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:68:12: 68:20 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).7),
                ),
                value: e0,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:68:12: 68:20 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:68:23: 68:24 (#0),
                },
                neg: false,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:68:23: 68:24 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).9),
                ),
                value: e2,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:68:23: 68:24 (#0),
        },
        Expr {
            kind: Binary {
                op: Gt,
                lhs: e1,
                rhs: e3,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:68:12: 68:24 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).6),
                ),
                value: e4,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:68:12: 68:24 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(6),
                lint_level: Inherited,
                value: e5,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:68:12: 68:24 (#0),
        },
        Expr {
            kind: Use {
                source: e6,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:68:12: 68:24 (#93),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).10),
                ),
                value: e7,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:68:12: 68:24 (#93),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(17),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:33 (#15),
        },
        Expr {
            kind: Scope {
                region_scope: Node(12),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).12),
                ),
                value: e9,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(17),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:33 (#15),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "explicit panic",
                        Cooked,
                    ),
                    span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#15),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(17),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#15),
        },
        Expr {
            kind: Scope {
                region_scope: Node(16),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).16),
                ),
                value: e11,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(17),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#15),
        },
        Expr {
            kind: Call {
                ty: fn(&'static str) -> ! {core::panicking::panic},
                fun: e10,
                args: [
                    e12,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#15),
            },
            ty: !,
            temp_lifetime: Some(
                Node(17),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#15),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).11),
                ),
                value: e13,
            },
            ty: !,
            temp_lifetime: Some(
                Node(17),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#15),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: !,
            temp_lifetime: Some(
                Node(19),
            ),
            span: src/core/bit_array.rs:68:25: 70:10 (#0),
        },
        Expr {
            kind: NeverToAny {
                source: e15,
            },
            ty: (),
            temp_lifetime: Some(
                Node(19),
            ),
            span: src/core/bit_array.rs:68:25: 70:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).19),
                ),
                value: e16,
            },
            ty: (),
            temp_lifetime: Some(
                Node(19),
            ),
            span: src/core/bit_array.rs:68:25: 70:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(19),
                lint_level: Inherited,
                value: e17,
            },
            ty: (),
            temp_lifetime: Some(
                Node(19),
            ),
            span: src/core/bit_array.rs:68:25: 70:10 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(19),
                cond: e8,
                then: e18,
                else_opt: None,
            },
            ty: (),
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:68:9: 70:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).5),
                ),
                value: e19,
            },
            ty: (),
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:68:9: 70:10 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).4),
                ),
            },
            ty: u8,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/core/bit_array.rs:71:12: 71:20 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(23),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).23),
                ),
                value: e21,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/core/bit_array.rs:71:12: 71:20 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        0,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:71:24: 71:25 (#0),
                },
                neg: false,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/core/bit_array.rs:71:24: 71:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).25),
                ),
                value: e23,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/core/bit_array.rs:71:24: 71:25 (#0),
        },
        Expr {
            kind: Binary {
                op: Eq,
                lhs: e22,
                rhs: e24,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/core/bit_array.rs:71:12: 71:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(22),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).22),
                ),
                value: e25,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/core/bit_array.rs:71:12: 71:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(22),
                lint_level: Inherited,
                value: e26,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/core/bit_array.rs:71:12: 71:25 (#0),
        },
        Expr {
            kind: Use {
                source: e27,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(32),
            ),
            span: src/core/bit_array.rs:71:12: 71:25 (#94),
        },
        Expr {
            kind: Scope {
                region_scope: Node(26),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).26),
                ),
                value: e28,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(32),
            ),
            span: src/core/bit_array.rs:71:12: 71:25 (#94),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        0,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:72:20: 72:21 (#0),
                },
                neg: false,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/core/bit_array.rs:72:20: 72:21 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(28),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).28),
                ),
                value: e30,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/core/bit_array.rs:72:20: 72:21 (#0),
        },
        Expr {
            kind: Return {
                value: Some(
                    e31,
                ),
            },
            ty: !,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/core/bit_array.rs:72:13: 72:21 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(27),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).27),
                ),
                value: e32,
            },
            ty: !,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/core/bit_array.rs:72:13: 72:21 (#0),
        },
        Expr {
            kind: Block {
                block: b1,
            },
            ty: !,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/core/bit_array.rs:71:26: 73:10 (#0),
        },
        Expr {
            kind: NeverToAny {
                source: e34,
            },
            ty: (),
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/core/bit_array.rs:71:26: 73:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(31),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).31),
                ),
                value: e35,
            },
            ty: (),
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/core/bit_array.rs:71:26: 73:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(31),
                lint_level: Inherited,
                value: e36,
            },
            ty: (),
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/core/bit_array.rs:71:26: 73:10 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(31),
                cond: e29,
                then: e37,
                else_opt: None,
            },
            ty: (),
            temp_lifetime: Some(
                Node(32),
            ),
            span: src/core/bit_array.rs:71:9: 73:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(21),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).21),
                ),
                value: e38,
            },
            ty: (),
            temp_lifetime: Some(
                Node(32),
            ),
            span: src/core/bit_array.rs:71:9: 73:10 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).4),
                ),
            },
            ty: u8,
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/core/bit_array.rs:74:12: 74:20 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(36),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).36),
                ),
                value: e40,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/core/bit_array.rs:74:12: 74:20 (#0),
        },
        Expr {
            kind: Cast {
                source: e41,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/core/bit_array.rs:74:12: 74:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(35),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).35),
                ),
                value: e42,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/core/bit_array.rs:74:12: 74:27 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).2),
                ),
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/core/bit_array.rs:74:30: 74:34 (#0),
        },
        Expr {
            kind: Deref {
                arg: e44,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/core/bit_array.rs:74:30: 74:34 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(41),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).41),
                ),
                value: e45,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/core/bit_array.rs:74:30: 74:34 (#0),
        },
        Expr {
            kind: Field {
                lhs: e46,
                variant_index: 0,
                name: field[2],
            },
            ty: i32,
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/core/bit_array.rs:74:30: 74:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(40),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).40),
                ),
                value: e47,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/core/bit_array.rs:74:30: 74:38 (#0),
        },
        Expr {
            kind: Binary {
                op: Gt,
                lhs: e43,
                rhs: e48,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/core/bit_array.rs:74:12: 74:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(34),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).34),
                ),
                value: e49,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/core/bit_array.rs:74:12: 74:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(34),
                lint_level: Inherited,
                value: e50,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/core/bit_array.rs:74:12: 74:38 (#0),
        },
        Expr {
            kind: Use {
                source: e51,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:74:12: 74:38 (#95),
        },
        Expr {
            kind: Scope {
                region_scope: Node(43),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).43),
                ),
                value: e52,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:74:12: 74:38 (#95),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(50),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:33 (#18),
        },
        Expr {
            kind: Scope {
                region_scope: Node(45),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).45),
                ),
                value: e54,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(50),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:33 (#18),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "explicit panic",
                        Cooked,
                    ),
                    span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#18),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(50),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#18),
        },
        Expr {
            kind: Scope {
                region_scope: Node(49),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).49),
                ),
                value: e56,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(50),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#18),
        },
        Expr {
            kind: Call {
                ty: fn(&'static str) -> ! {core::panicking::panic},
                fun: e55,
                args: [
                    e57,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#18),
            },
            ty: !,
            temp_lifetime: Some(
                Node(50),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#18),
        },
        Expr {
            kind: Scope {
                region_scope: Node(44),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).44),
                ),
                value: e58,
            },
            ty: !,
            temp_lifetime: Some(
                Node(50),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#18),
        },
        Expr {
            kind: Block {
                block: b2,
            },
            ty: !,
            temp_lifetime: Some(
                Node(52),
            ),
            span: src/core/bit_array.rs:74:39: 76:10 (#0),
        },
        Expr {
            kind: NeverToAny {
                source: e60,
            },
            ty: (),
            temp_lifetime: Some(
                Node(52),
            ),
            span: src/core/bit_array.rs:74:39: 76:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(52),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).52),
                ),
                value: e61,
            },
            ty: (),
            temp_lifetime: Some(
                Node(52),
            ),
            span: src/core/bit_array.rs:74:39: 76:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(52),
                lint_level: Inherited,
                value: e62,
            },
            ty: (),
            temp_lifetime: Some(
                Node(52),
            ),
            span: src/core/bit_array.rs:74:39: 76:10 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(52),
                cond: e53,
                then: e63,
                else_opt: None,
            },
            ty: (),
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:74:9: 76:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(33),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).33),
                ),
                value: e64,
            },
            ty: (),
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:74:9: 76:10 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).2),
                ),
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/bit_array.rs:77:12: 77:16 (#0),
        },
        Expr {
            kind: Deref {
                arg: e66,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/bit_array.rs:77:12: 77:16 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(59),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).59),
                ),
                value: e67,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/bit_array.rs:77:12: 77:16 (#0),
        },
        Expr {
            kind: Field {
                lhs: e68,
                variant_index: 0,
                name: field[1],
            },
            ty: i32,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/bit_array.rs:77:12: 77:20 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(58),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).58),
                ),
                value: e69,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/bit_array.rs:77:12: 77:20 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:77:23: 77:24 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/bit_array.rs:77:23: 77:24 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(61),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).61),
                ),
                value: e71,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/bit_array.rs:77:23: 77:24 (#0),
        },
        Expr {
            kind: Binary {
                op: Rem,
                lhs: e70,
                rhs: e72,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/bit_array.rs:77:12: 77:24 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(57),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).57),
                ),
                value: e73,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/bit_array.rs:77:12: 77:24 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        0,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:77:28: 77:29 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/bit_array.rs:77:28: 77:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(62),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).62),
                ),
                value: e75,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/bit_array.rs:77:28: 77:29 (#0),
        },
        Expr {
            kind: Binary {
                op: Eq,
                lhs: e74,
                rhs: e76,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/bit_array.rs:77:12: 77:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(56),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).56),
                ),
                value: e77,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/bit_array.rs:77:12: 77:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(56),
                lint_level: Inherited,
                value: e78,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/bit_array.rs:77:12: 77:29 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).4),
                ),
            },
            ty: u8,
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/core/bit_array.rs:77:33: 77:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(64),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).64),
                ),
                value: e80,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/core/bit_array.rs:77:33: 77:41 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:77:45: 77:46 (#0),
                },
                neg: false,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/core/bit_array.rs:77:45: 77:46 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(66),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).66),
                ),
                value: e82,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/core/bit_array.rs:77:45: 77:46 (#0),
        },
        Expr {
            kind: Binary {
                op: Eq,
                lhs: e81,
                rhs: e83,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/core/bit_array.rs:77:33: 77:46 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(63),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).63),
                ),
                value: e84,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/core/bit_array.rs:77:33: 77:46 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(63),
                lint_level: Inherited,
                value: e85,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/core/bit_array.rs:77:33: 77:46 (#0),
        },
        Expr {
            kind: LogicalOp {
                op: And,
                lhs: e79,
                rhs: e86,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:77:12: 77:46 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(55),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).55),
                ),
                value: e87,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:77:12: 77:46 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(55),
                lint_level: Inherited,
                value: e88,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:77:12: 77:46 (#0),
        },
        Expr {
            kind: Use {
                source: e89,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(242),
            ),
            span: src/core/bit_array.rs:77:12: 77:46 (#96),
        },
        Expr {
            kind: Scope {
                region_scope: Node(67),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).67),
                ),
                value: e90,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(242),
            ),
            span: src/core/bit_array.rs:77:12: 77:46 (#96),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).2),
                ),
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:13: 78:17 (#0),
        },
        Expr {
            kind: Deref {
                arg: e92,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:13: 78:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(72),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).72),
                ),
                value: e93,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:13: 78:17 (#0),
        },
        Expr {
            kind: Field {
                lhs: e94,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:13: 78:22 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e95,
            },
            ty: &std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:13: 78:31 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>) -> &'a <std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::ops::Deref>::Target {<std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:13: 78:31 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>) -> &'a <std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::ops::Deref>::Target {<std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::ops::Deref>::deref},
                fun: e97,
                args: [
                    e96,
                ],
                from_hir_call: false,
                fn_span: src/core/bit_array.rs:78:13: 78:31 (#0),
            },
            ty: &std::cell::RefCell<std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:13: 78:31 (#0),
        },
        Expr {
            kind: Deref {
                arg: e98,
            },
            ty: std::cell::RefCell<std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:13: 78:31 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e99,
            },
            ty: &std::cell::RefCell<std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:13: 78:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(71),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).71),
                ),
                value: e100,
            },
            ty: &std::cell::RefCell<std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:13: 78:22 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::cell::RefCell<std::vec::Vec<u8>>) -> std::cell::Ref<'a, std::vec::Vec<u8>> {std::cell::RefCell::<std::vec::Vec<u8>>::borrow},
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:23: 78:29 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::cell::RefCell<std::vec::Vec<u8>>) -> std::cell::Ref<'a, std::vec::Vec<u8>> {std::cell::RefCell::<std::vec::Vec<u8>>::borrow},
                fun: e102,
                args: [
                    e101,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:78:23: 78:31 (#0),
            },
            ty: std::cell::Ref<'_, std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:13: 78:31 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e103,
            },
            ty: &std::cell::Ref<'_, std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:13: 78:31 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::cell::Ref<'_, std::vec::Vec<u8>>) -> &'a <std::cell::Ref<'_, std::vec::Vec<u8>> as std::ops::Deref>::Target {<std::cell::Ref<'_, std::vec::Vec<u8>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:13: 78:31 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::cell::Ref<'_, std::vec::Vec<u8>>) -> &'a <std::cell::Ref<'_, std::vec::Vec<u8>> as std::ops::Deref>::Target {<std::cell::Ref<'_, std::vec::Vec<u8>> as std::ops::Deref>::deref},
                fun: e105,
                args: [
                    e104,
                ],
                from_hir_call: false,
                fn_span: src/core/bit_array.rs:78:13: 78:31 (#0),
            },
            ty: &std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:13: 78:31 (#0),
        },
        Expr {
            kind: Deref {
                arg: e106,
            },
            ty: std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:13: 78:31 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e107,
            },
            ty: &std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:13: 78:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(69),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).69),
                ),
                value: e108,
            },
            ty: &std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:13: 78:31 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).2),
                ),
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:33: 78:37 (#0),
        },
        Expr {
            kind: Deref {
                arg: e110,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:33: 78:37 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(77),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).77),
                ),
                value: e111,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:33: 78:37 (#0),
        },
        Expr {
            kind: Field {
                lhs: e112,
                variant_index: 0,
                name: field[1],
            },
            ty: i32,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:33: 78:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(76),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).76),
                ),
                value: e113,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:33: 78:41 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:78:44: 78:45 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:44: 78:45 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(79),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).79),
                ),
                value: e115,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:44: 78:45 (#0),
        },
        Expr {
            kind: Binary {
                op: Div,
                lhs: e114,
                rhs: e116,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:32: 78:46 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(75),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).75),
                ),
                value: e117,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:32: 78:46 (#0),
        },
        Expr {
            kind: Cast {
                source: e118,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:32: 78:55 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(74),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).74),
                ),
                value: e119,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:32: 78:55 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::vec::Vec<u8>, usize) -> &'a <std::vec::Vec<u8> as std::ops::Index<usize>>::Output {<std::vec::Vec<u8> as std::ops::Index<usize>>::index},
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:13: 78:56 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::vec::Vec<u8>, usize) -> &'a <std::vec::Vec<u8> as std::ops::Index<usize>>::Output {<std::vec::Vec<u8> as std::ops::Index<usize>>::index},
                fun: e121,
                args: [
                    e109,
                    e120,
                ],
                from_hir_call: false,
                fn_span: src/core/bit_array.rs:78:13: 78:56 (#0),
            },
            ty: &u8,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:13: 78:56 (#0),
        },
        Expr {
            kind: Deref {
                arg: e122,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:13: 78:56 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(68),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).68),
                ),
                value: e123,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:78:13: 78:56 (#0),
        },
        Expr {
            kind: Block {
                block: b3,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:77:47: 79:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(83),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).83),
                ),
                value: e125,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:77:47: 79:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(83),
                lint_level: Inherited,
                value: e126,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/core/bit_array.rs:77:47: 79:10 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).2),
                ),
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(85),
            ),
            span: src/core/bit_array.rs:80:30: 80:34 (#0),
        },
        Expr {
            kind: Deref {
                arg: e128,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(85),
            ),
            span: src/core/bit_array.rs:80:30: 80:34 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(88),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).88),
                ),
                value: e129,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(85),
            ),
            span: src/core/bit_array.rs:80:30: 80:34 (#0),
        },
        Expr {
            kind: Field {
                lhs: e130,
                variant_index: 0,
                name: field[1],
            },
            ty: i32,
            temp_lifetime: Some(
                Node(85),
            ),
            span: src/core/bit_array.rs:80:30: 80:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(87),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).87),
                ),
                value: e131,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(85),
            ),
            span: src/core/bit_array.rs:80:30: 80:38 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:80:41: 80:42 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(85),
            ),
            span: src/core/bit_array.rs:80:41: 80:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(90),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).90),
                ),
                value: e133,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(85),
            ),
            span: src/core/bit_array.rs:80:41: 80:42 (#0),
        },
        Expr {
            kind: Binary {
                op: Rem,
                lhs: e132,
                rhs: e134,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(85),
            ),
            span: src/core/bit_array.rs:80:30: 80:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(86),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).86),
                ),
                value: e135,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(85),
            ),
            span: src/core/bit_array.rs:80:30: 80:42 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).2),
                ),
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:33: 81:37 (#0),
        },
        Expr {
            kind: Deref {
                arg: e137,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:33: 81:37 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(98),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).98),
                ),
                value: e138,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:33: 81:37 (#0),
        },
        Expr {
            kind: Field {
                lhs: e139,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:33: 81:42 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e140,
            },
            ty: &std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:33: 81:51 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>) -> &'a <std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::ops::Deref>::Target {<std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:33: 81:51 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>) -> &'a <std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::ops::Deref>::Target {<std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::ops::Deref>::deref},
                fun: e142,
                args: [
                    e141,
                ],
                from_hir_call: false,
                fn_span: src/core/bit_array.rs:81:33: 81:51 (#0),
            },
            ty: &std::cell::RefCell<std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:33: 81:51 (#0),
        },
        Expr {
            kind: Deref {
                arg: e143,
            },
            ty: std::cell::RefCell<std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:33: 81:51 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e144,
            },
            ty: &std::cell::RefCell<std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:33: 81:51 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(97),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).97),
                ),
                value: e145,
            },
            ty: &std::cell::RefCell<std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:33: 81:42 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::cell::RefCell<std::vec::Vec<u8>>) -> std::cell::Ref<'a, std::vec::Vec<u8>> {std::cell::RefCell::<std::vec::Vec<u8>>::borrow},
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:43: 81:49 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::cell::RefCell<std::vec::Vec<u8>>) -> std::cell::Ref<'a, std::vec::Vec<u8>> {std::cell::RefCell::<std::vec::Vec<u8>>::borrow},
                fun: e147,
                args: [
                    e146,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:81:43: 81:51 (#0),
            },
            ty: std::cell::Ref<'_, std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:33: 81:51 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e148,
            },
            ty: &std::cell::Ref<'_, std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:33: 81:51 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::cell::Ref<'_, std::vec::Vec<u8>>) -> &'a <std::cell::Ref<'_, std::vec::Vec<u8>> as std::ops::Deref>::Target {<std::cell::Ref<'_, std::vec::Vec<u8>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:33: 81:51 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::cell::Ref<'_, std::vec::Vec<u8>>) -> &'a <std::cell::Ref<'_, std::vec::Vec<u8>> as std::ops::Deref>::Target {<std::cell::Ref<'_, std::vec::Vec<u8>> as std::ops::Deref>::deref},
                fun: e150,
                args: [
                    e149,
                ],
                from_hir_call: false,
                fn_span: src/core/bit_array.rs:81:33: 81:51 (#0),
            },
            ty: &std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:33: 81:51 (#0),
        },
        Expr {
            kind: Deref {
                arg: e151,
            },
            ty: std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:33: 81:51 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e152,
            },
            ty: &std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:33: 81:51 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(95),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).95),
                ),
                value: e153,
            },
            ty: &std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:33: 81:51 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).2),
                ),
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:53: 81:57 (#0),
        },
        Expr {
            kind: Deref {
                arg: e155,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:53: 81:57 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(103),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).103),
                ),
                value: e156,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:53: 81:57 (#0),
        },
        Expr {
            kind: Field {
                lhs: e157,
                variant_index: 0,
                name: field[1],
            },
            ty: i32,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:53: 81:61 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(102),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).102),
                ),
                value: e158,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:53: 81:61 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:81:64: 81:65 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:64: 81:65 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(105),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).105),
                ),
                value: e160,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:64: 81:65 (#0),
        },
        Expr {
            kind: Binary {
                op: Div,
                lhs: e159,
                rhs: e161,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:52: 81:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(101),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).101),
                ),
                value: e162,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:52: 81:66 (#0),
        },
        Expr {
            kind: Cast {
                source: e163,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:52: 81:75 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(100),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).100),
                ),
                value: e164,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:52: 81:75 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::vec::Vec<u8>, usize) -> &'a <std::vec::Vec<u8> as std::ops::Index<usize>>::Output {<std::vec::Vec<u8> as std::ops::Index<usize>>::index},
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:33: 81:76 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::vec::Vec<u8>, usize) -> &'a <std::vec::Vec<u8> as std::ops::Index<usize>>::Output {<std::vec::Vec<u8> as std::ops::Index<usize>>::index},
                fun: e166,
                args: [
                    e154,
                    e165,
                ],
                from_hir_call: false,
                fn_span: src/core/bit_array.rs:81:33: 81:76 (#0),
            },
            ty: &u8,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:33: 81:76 (#0),
        },
        Expr {
            kind: Deref {
                arg: e167,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:33: 81:76 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(94),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).94),
                ),
                value: e168,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/core/bit_array.rs:81:33: 81:76 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).109),
                ),
            },
            ty: u8,
            temp_lifetime: Some(
                Node(115),
            ),
            span: src/core/bit_array.rs:82:13: 82:22 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(111),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).111),
                ),
                value: e170,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(115),
            ),
            span: src/core/bit_array.rs:82:13: 82:22 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).92),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(115),
            ),
            span: src/core/bit_array.rs:82:27: 82:37 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(113),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).113),
                ),
                value: e172,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(115),
            ),
            span: src/core/bit_array.rs:82:27: 82:37 (#0),
        },
        Expr {
            kind: AssignOp {
                op: Shl,
                lhs: e171,
                rhs: e173,
            },
            ty: (),
            temp_lifetime: Some(
                Node(115),
            ),
            span: src/core/bit_array.rs:82:13: 82:37 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(110),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).110),
                ),
                value: e174,
            },
            ty: (),
            temp_lifetime: Some(
                Node(115),
            ),
            span: src/core/bit_array.rs:82:13: 82:37 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).92),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/core/bit_array.rs:83:32: 83:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(118),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).118),
                ),
                value: e176,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/core/bit_array.rs:83:32: 83:42 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).4),
                ),
            },
            ty: u8,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/core/bit_array.rs:83:45: 83:53 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(121),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).121),
                ),
                value: e178,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/core/bit_array.rs:83:45: 83:53 (#0),
        },
        Expr {
            kind: Cast {
                source: e179,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/core/bit_array.rs:83:45: 83:60 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(120),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).120),
                ),
                value: e180,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/core/bit_array.rs:83:45: 83:60 (#0),
        },
        Expr {
            kind: Binary {
                op: Add,
                lhs: e177,
                rhs: e181,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/core/bit_array.rs:83:32: 83:60 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(117),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).117),
                ),
                value: e182,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/core/bit_array.rs:83:32: 83:60 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        0,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:84:30: 84:31 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(127),
            ),
            span: src/core/bit_array.rs:84:30: 84:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(128),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).128),
                ),
                value: e184,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(127),
            ),
            span: src/core/bit_array.rs:84:30: 84:31 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        0,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:85:32: 85:33 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(131),
            ),
            span: src/core/bit_array.rs:85:32: 85:33 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(132),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).132),
                ),
                value: e186,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(131),
            ),
            span: src/core/bit_array.rs:85:32: 85:33 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).126),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(136),
            ),
            span: src/core/bit_array.rs:86:16: 86:24 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(137),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).137),
                ),
                value: e188,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(136),
            ),
            span: src/core/bit_array.rs:86:16: 86:24 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:86:27: 86:28 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(136),
            ),
            span: src/core/bit_array.rs:86:27: 86:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(139),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).139),
                ),
                value: e190,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(136),
            ),
            span: src/core/bit_array.rs:86:27: 86:28 (#0),
        },
        Expr {
            kind: Binary {
                op: Gt,
                lhs: e189,
                rhs: e191,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(136),
            ),
            span: src/core/bit_array.rs:86:16: 86:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(136),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).136),
                ),
                value: e192,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(136),
            ),
            span: src/core/bit_array.rs:86:16: 86:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(136),
                lint_level: Inherited,
                value: e193,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(136),
            ),
            span: src/core/bit_array.rs:86:16: 86:28 (#0),
        },
        Expr {
            kind: Use {
                source: e194,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bit_array.rs:86:16: 86:28 (#97),
        },
        Expr {
            kind: Scope {
                region_scope: Node(140),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).140),
                ),
                value: e195,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bit_array.rs:86:16: 86:28 (#97),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).134),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(148),
            ),
            span: src/core/bit_array.rs:87:17: 87:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(142),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).142),
                ),
                value: e197,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(148),
            ),
            span: src/core/bit_array.rs:87:17: 87:25 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).126),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(148),
            ),
            span: src/core/bit_array.rs:87:28: 87:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(145),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).145),
                ),
                value: e199,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(148),
            ),
            span: src/core/bit_array.rs:87:28: 87:36 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:87:39: 87:40 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(148),
            ),
            span: src/core/bit_array.rs:87:39: 87:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(147),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).147),
                ),
                value: e201,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(148),
            ),
            span: src/core/bit_array.rs:87:39: 87:40 (#0),
        },
        Expr {
            kind: Binary {
                op: Sub,
                lhs: e200,
                rhs: e202,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(148),
            ),
            span: src/core/bit_array.rs:87:28: 87:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(144),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).144),
                ),
                value: e203,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(148),
            ),
            span: src/core/bit_array.rs:87:28: 87:40 (#0),
        },
        Expr {
            kind: Assign {
                lhs: e198,
                rhs: e204,
            },
            ty: (),
            temp_lifetime: Some(
                Node(148),
            ),
            span: src/core/bit_array.rs:87:17: 87:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(141),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).141),
                ),
                value: e205,
            },
            ty: (),
            temp_lifetime: Some(
                Node(148),
            ),
            span: src/core/bit_array.rs:87:17: 87:40 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).126),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(153),
            ),
            span: src/core/bit_array.rs:88:17: 88:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(150),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).150),
                ),
                value: e207,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(153),
            ),
            span: src/core/bit_array.rs:88:17: 88:25 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:88:28: 88:29 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(153),
            ),
            span: src/core/bit_array.rs:88:28: 88:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(152),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).152),
                ),
                value: e209,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(153),
            ),
            span: src/core/bit_array.rs:88:28: 88:29 (#0),
        },
        Expr {
            kind: Assign {
                lhs: e208,
                rhs: e210,
            },
            ty: (),
            temp_lifetime: Some(
                Node(153),
            ),
            span: src/core/bit_array.rs:88:17: 88:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(149),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).149),
                ),
                value: e211,
            },
            ty: (),
            temp_lifetime: Some(
                Node(153),
            ),
            span: src/core/bit_array.rs:88:17: 88:29 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).2),
                ),
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:37: 91:41 (#0),
        },
        Expr {
            kind: Deref {
                arg: e213,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:37: 91:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(159),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).159),
                ),
                value: e214,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:37: 91:41 (#0),
        },
        Expr {
            kind: Field {
                lhs: e215,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:37: 91:46 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e216,
            },
            ty: &std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:37: 91:55 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>) -> &'a <std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::ops::Deref>::Target {<std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:37: 91:55 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>) -> &'a <std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::ops::Deref>::Target {<std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::ops::Deref>::deref},
                fun: e218,
                args: [
                    e217,
                ],
                from_hir_call: false,
                fn_span: src/core/bit_array.rs:91:37: 91:55 (#0),
            },
            ty: &std::cell::RefCell<std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:37: 91:55 (#0),
        },
        Expr {
            kind: Deref {
                arg: e219,
            },
            ty: std::cell::RefCell<std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:37: 91:55 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e220,
            },
            ty: &std::cell::RefCell<std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:37: 91:55 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(158),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).158),
                ),
                value: e221,
            },
            ty: &std::cell::RefCell<std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:37: 91:46 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::cell::RefCell<std::vec::Vec<u8>>) -> std::cell::Ref<'a, std::vec::Vec<u8>> {std::cell::RefCell::<std::vec::Vec<u8>>::borrow},
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:47: 91:53 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::cell::RefCell<std::vec::Vec<u8>>) -> std::cell::Ref<'a, std::vec::Vec<u8>> {std::cell::RefCell::<std::vec::Vec<u8>>::borrow},
                fun: e223,
                args: [
                    e222,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:91:47: 91:55 (#0),
            },
            ty: std::cell::Ref<'_, std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:37: 91:55 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e224,
            },
            ty: &std::cell::Ref<'_, std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:37: 91:55 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::cell::Ref<'_, std::vec::Vec<u8>>) -> &'a <std::cell::Ref<'_, std::vec::Vec<u8>> as std::ops::Deref>::Target {<std::cell::Ref<'_, std::vec::Vec<u8>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:37: 91:55 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::cell::Ref<'_, std::vec::Vec<u8>>) -> &'a <std::cell::Ref<'_, std::vec::Vec<u8>> as std::ops::Deref>::Target {<std::cell::Ref<'_, std::vec::Vec<u8>> as std::ops::Deref>::deref},
                fun: e226,
                args: [
                    e225,
                ],
                from_hir_call: false,
                fn_span: src/core/bit_array.rs:91:37: 91:55 (#0),
            },
            ty: &std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:37: 91:55 (#0),
        },
        Expr {
            kind: Deref {
                arg: e227,
            },
            ty: std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:37: 91:55 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e228,
            },
            ty: &std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:37: 91:55 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(156),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).156),
                ),
                value: e229,
            },
            ty: &std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:37: 91:55 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).2),
                ),
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:58: 91:62 (#0),
        },
        Expr {
            kind: Deref {
                arg: e231,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:58: 91:62 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(166),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).166),
                ),
                value: e232,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:58: 91:62 (#0),
        },
        Expr {
            kind: Field {
                lhs: e233,
                variant_index: 0,
                name: field[1],
            },
            ty: i32,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:58: 91:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(165),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).165),
                ),
                value: e234,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:58: 91:66 (#0),
        },
        Expr {
            kind: Use {
                source: e235,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:57: 91:74 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(164),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).164),
                ),
                value: e236,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:57: 91:74 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:91:77: 91:78 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:77: 91:78 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(170),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).170),
                ),
                value: e238,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:77: 91:78 (#0),
        },
        Expr {
            kind: Binary {
                op: Div,
                lhs: e237,
                rhs: e239,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:57: 91:78 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(163),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).163),
                ),
                value: e240,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:57: 91:78 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        1,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:91:81: 91:82 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:81: 91:82 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(171),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).171),
                ),
                value: e242,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:81: 91:82 (#0),
        },
        Expr {
            kind: Binary {
                op: Add,
                lhs: e241,
                rhs: e243,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:56: 91:83 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(162),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).162),
                ),
                value: e244,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:56: 91:83 (#0),
        },
        Expr {
            kind: Cast {
                source: e245,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:56: 91:92 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(161),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).161),
                ),
                value: e246,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:56: 91:92 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::vec::Vec<u8>, usize) -> &'a <std::vec::Vec<u8> as std::ops::Index<usize>>::Output {<std::vec::Vec<u8> as std::ops::Index<usize>>::index},
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:37: 91:93 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::vec::Vec<u8>, usize) -> &'a <std::vec::Vec<u8> as std::ops::Index<usize>>::Output {<std::vec::Vec<u8> as std::ops::Index<usize>>::index},
                fun: e248,
                args: [
                    e230,
                    e247,
                ],
                from_hir_call: false,
                fn_span: src/core/bit_array.rs:91:37: 91:93 (#0),
            },
            ty: &u8,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:37: 91:93 (#0),
        },
        Expr {
            kind: Deref {
                arg: e249,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:37: 91:93 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(155),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).155),
                ),
                value: e250,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(154),
            ),
            span: src/core/bit_array.rs:91:37: 91:93 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:92:41: 92:42 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(176),
            ),
            span: src/core/bit_array.rs:92:41: 92:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(178),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).178),
                ),
                value: e252,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(176),
            ),
            span: src/core/bit_array.rs:92:41: 92:42 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).134),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(176),
            ),
            span: src/core/bit_array.rs:92:45: 92:53 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(179),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).179),
                ),
                value: e254,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(176),
            ),
            span: src/core/bit_array.rs:92:45: 92:53 (#0),
        },
        Expr {
            kind: Binary {
                op: Sub,
                lhs: e253,
                rhs: e255,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(176),
            ),
            span: src/core/bit_array.rs:92:41: 92:53 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(177),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).177),
                ),
                value: e256,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(176),
            ),
            span: src/core/bit_array.rs:92:41: 92:53 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).175),
                ),
            },
            ty: u8,
            temp_lifetime: Some(
                Node(188),
            ),
            span: src/core/bit_array.rs:93:17: 93:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(184),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).184),
                ),
                value: e258,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(188),
            ),
            span: src/core/bit_array.rs:93:17: 93:26 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).182),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(188),
            ),
            span: src/core/bit_array.rs:93:31: 93:48 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(186),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).186),
                ),
                value: e260,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(188),
            ),
            span: src/core/bit_array.rs:93:31: 93:48 (#0),
        },
        Expr {
            kind: AssignOp {
                op: Shr,
                lhs: e259,
                rhs: e261,
            },
            ty: (),
            temp_lifetime: Some(
                Node(188),
            ),
            span: src/core/bit_array.rs:93:17: 93:48 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(183),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).183),
                ),
                value: e262,
            },
            ty: (),
            temp_lifetime: Some(
                Node(188),
            ),
            span: src/core/bit_array.rs:93:17: 93:48 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).175),
                ),
            },
            ty: u8,
            temp_lifetime: Some(
                Node(194),
            ),
            span: src/core/bit_array.rs:94:17: 94:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(190),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).190),
                ),
                value: e264,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(194),
            ),
            span: src/core/bit_array.rs:94:17: 94:26 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).182),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(194),
            ),
            span: src/core/bit_array.rs:94:31: 94:48 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(192),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).192),
                ),
                value: e266,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(194),
            ),
            span: src/core/bit_array.rs:94:31: 94:48 (#0),
        },
        Expr {
            kind: AssignOp {
                op: Shl,
                lhs: e265,
                rhs: e267,
            },
            ty: (),
            temp_lifetime: Some(
                Node(194),
            ),
            span: src/core/bit_array.rs:94:17: 94:48 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(189),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).189),
                ),
                value: e268,
            },
            ty: (),
            temp_lifetime: Some(
                Node(194),
            ),
            span: src/core/bit_array.rs:94:17: 94:48 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).175),
                ),
            },
            ty: u8,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/core/bit_array.rs:95:17: 95:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(196),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).196),
                ),
                value: e270,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/core/bit_array.rs:95:17: 95:26 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).126),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/core/bit_array.rs:95:31: 95:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(199),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).199),
                ),
                value: e272,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/core/bit_array.rs:95:31: 95:39 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).92),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/core/bit_array.rs:95:42: 95:52 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(201),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).201),
                ),
                value: e274,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/core/bit_array.rs:95:42: 95:52 (#0),
        },
        Expr {
            kind: Binary {
                op: Sub,
                lhs: e273,
                rhs: e275,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/core/bit_array.rs:95:31: 95:52 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(198),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).198),
                ),
                value: e276,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/core/bit_array.rs:95:31: 95:52 (#0),
        },
        Expr {
            kind: AssignOp {
                op: Shr,
                lhs: e271,
                rhs: e277,
            },
            ty: (),
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/core/bit_array.rs:95:17: 95:52 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(195),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).195),
                ),
                value: e278,
            },
            ty: (),
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/core/bit_array.rs:95:17: 95:52 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).109),
                ),
            },
            ty: u8,
            temp_lifetime: Some(
                Node(210),
            ),
            span: src/core/bit_array.rs:96:17: 96:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(205),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).205),
                ),
                value: e280,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(210),
            ),
            span: src/core/bit_array.rs:96:17: 96:26 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).175),
                ),
            },
            ty: u8,
            temp_lifetime: Some(
                Node(210),
            ),
            span: src/core/bit_array.rs:96:29: 96:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(207),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).207),
                ),
                value: e282,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(210),
            ),
            span: src/core/bit_array.rs:96:29: 96:38 (#0),
        },
        Expr {
            kind: Binary {
                op: BitOr,
                lhs: e281,
                rhs: e283,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(210),
            ),
            span: src/core/bit_array.rs:96:17: 96:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(204),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).204),
                ),
                value: e284,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(210),
            ),
            span: src/core/bit_array.rs:96:17: 96:38 (#0),
        },
        Expr {
            kind: Block {
                block: b4,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(210),
            ),
            span: src/core/bit_array.rs:86:29: 97:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(210),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).210),
                ),
                value: e286,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(210),
            ),
            span: src/core/bit_array.rs:86:29: 97:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(210),
                lint_level: Inherited,
                value: e287,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(210),
            ),
            span: src/core/bit_array.rs:86:29: 97:14 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:98:41: 98:42 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(212),
            ),
            span: src/core/bit_array.rs:98:41: 98:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(214),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).214),
                ),
                value: e289,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(212),
            ),
            span: src/core/bit_array.rs:98:41: 98:42 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).126),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(212),
            ),
            span: src/core/bit_array.rs:98:45: 98:53 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(215),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).215),
                ),
                value: e291,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(212),
            ),
            span: src/core/bit_array.rs:98:45: 98:53 (#0),
        },
        Expr {
            kind: Binary {
                op: Sub,
                lhs: e290,
                rhs: e292,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(212),
            ),
            span: src/core/bit_array.rs:98:41: 98:53 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(213),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).213),
                ),
                value: e293,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(212),
            ),
            span: src/core/bit_array.rs:98:41: 98:53 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).109),
                ),
            },
            ty: u8,
            temp_lifetime: Some(
                Node(227),
            ),
            span: src/core/bit_array.rs:99:17: 99:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(220),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).220),
                ),
                value: e295,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(227),
            ),
            span: src/core/bit_array.rs:99:17: 99:26 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).92),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(227),
            ),
            span: src/core/bit_array.rs:99:31: 99:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(223),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).223),
                ),
                value: e297,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(227),
            ),
            span: src/core/bit_array.rs:99:31: 99:41 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).218),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(227),
            ),
            span: src/core/bit_array.rs:99:44: 99:61 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(225),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).225),
                ),
                value: e299,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(227),
            ),
            span: src/core/bit_array.rs:99:44: 99:61 (#0),
        },
        Expr {
            kind: Binary {
                op: Add,
                lhs: e298,
                rhs: e300,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(227),
            ),
            span: src/core/bit_array.rs:99:31: 99:61 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(222),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).222),
                ),
                value: e301,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(227),
            ),
            span: src/core/bit_array.rs:99:31: 99:61 (#0),
        },
        Expr {
            kind: AssignOp {
                op: Shr,
                lhs: e296,
                rhs: e302,
            },
            ty: (),
            temp_lifetime: Some(
                Node(227),
            ),
            span: src/core/bit_array.rs:99:17: 99:61 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(219),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).219),
                ),
                value: e303,
            },
            ty: (),
            temp_lifetime: Some(
                Node(227),
            ),
            span: src/core/bit_array.rs:99:17: 99:61 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).109),
                ),
            },
            ty: u8,
            temp_lifetime: Some(
                Node(236),
            ),
            span: src/core/bit_array.rs:100:17: 100:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(229),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).229),
                ),
                value: e305,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(236),
            ),
            span: src/core/bit_array.rs:100:17: 100:26 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).92),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(236),
            ),
            span: src/core/bit_array.rs:100:31: 100:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(232),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).232),
                ),
                value: e307,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(236),
            ),
            span: src/core/bit_array.rs:100:31: 100:41 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).218),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(236),
            ),
            span: src/core/bit_array.rs:100:44: 100:61 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(234),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).234),
                ),
                value: e309,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(236),
            ),
            span: src/core/bit_array.rs:100:44: 100:61 (#0),
        },
        Expr {
            kind: Binary {
                op: Add,
                lhs: e308,
                rhs: e310,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(236),
            ),
            span: src/core/bit_array.rs:100:31: 100:61 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(231),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).231),
                ),
                value: e311,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(236),
            ),
            span: src/core/bit_array.rs:100:31: 100:61 (#0),
        },
        Expr {
            kind: AssignOp {
                op: Shl,
                lhs: e306,
                rhs: e312,
            },
            ty: (),
            temp_lifetime: Some(
                Node(236),
            ),
            span: src/core/bit_array.rs:100:17: 100:61 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(228),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).228),
                ),
                value: e313,
            },
            ty: (),
            temp_lifetime: Some(
                Node(236),
            ),
            span: src/core/bit_array.rs:100:17: 100:61 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).109),
                ),
            },
            ty: u8,
            temp_lifetime: Some(
                Node(211),
            ),
            span: src/core/bit_array.rs:101:17: 101:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(237),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).237),
                ),
                value: e315,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(211),
            ),
            span: src/core/bit_array.rs:101:17: 101:26 (#0),
        },
        Expr {
            kind: Block {
                block: b5,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(211),
            ),
            span: src/core/bit_array.rs:97:20: 102:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(211),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).211),
                ),
                value: e317,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(211),
            ),
            span: src/core/bit_array.rs:97:20: 102:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(211),
                lint_level: Inherited,
                value: e318,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(211),
            ),
            span: src/core/bit_array.rs:97:20: 102:14 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(210),
                cond: e196,
                then: e288,
                else_opt: Some(
                    e319,
                ),
            },
            ty: u8,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bit_array.rs:86:13: 102:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(135),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).135),
                ),
                value: e320,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bit_array.rs:86:13: 102:14 (#0),
        },
        Expr {
            kind: Block {
                block: b6,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bit_array.rs:79:16: 103:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(84),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).84),
                ),
                value: e322,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bit_array.rs:79:16: 103:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(84),
                lint_level: Inherited,
                value: e323,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bit_array.rs:79:16: 103:10 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(83),
                cond: e91,
                then: e127,
                else_opt: Some(
                    e324,
                ),
            },
            ty: u8,
            temp_lifetime: Some(
                Node(242),
            ),
            span: src/core/bit_array.rs:77:9: 103:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(54),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).54),
                ),
                value: e325,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(242),
            ),
            span: src/core/bit_array.rs:77:9: 103:10 (#0),
        },
        Expr {
            kind: Block {
                block: b7,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(242),
            ),
            span: src/core/bit_array.rs:65:44: 104:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(242),
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).242),
                ),
                value: e327,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(242),
            ),
            span: src/core/bit_array.rs:65:44: 104:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(242),
                lint_level: Inherited,
                value: e328,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(242),
            ),
            span: src/core/bit_array.rs:65:44: 104:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(17),
                expr: e14,
            },
            opt_destruction_scope: Some(
                Destruction(17),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(20),
                expr: e20,
            },
            opt_destruction_scope: Some(
                Destruction(20),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(29),
                expr: e33,
            },
            opt_destruction_scope: Some(
                Destruction(29),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(32),
                expr: e39,
            },
            opt_destruction_scope: Some(
                Destruction(32),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(50),
                expr: e59,
            },
            opt_destruction_scope: Some(
                Destruction(50),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(53),
                expr: e65,
            },
            opt_destruction_scope: Some(
                Destruction(53),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 240, first_statement_index: 0},
                init_scope: Node(85),
                pattern: Pat {
                    ty: i32,
                    span: src/core/bit_array.rs:80:17: 80:27 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "head_start",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).92),
                        ),
                        ty: i32,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e136,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).91),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(85),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 240, first_statement_index: 1},
                init_scope: Node(93),
                pattern: Pat {
                    ty: u8,
                    span: src/core/bit_array.rs:81:17: 81:30 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "head_bits",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).109),
                        ),
                        ty: u8,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e169,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).108),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(93),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(115),
                expr: e175,
            },
            opt_destruction_scope: Some(
                Destruction(115),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 240, first_statement_index: 3},
                init_scope: Node(116),
                pattern: Pat {
                    ty: i32,
                    span: src/core/bit_array.rs:83:17: 83:29 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "head_end",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).126),
                        ),
                        ty: i32,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e183,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).125),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(116),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 240, first_statement_index: 4},
                init_scope: Node(127),
                pattern: Pat {
                    ty: i32,
                    span: src/core/bit_array.rs:84:17: 84:27 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "tail_start",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).130),
                        ),
                        ty: i32,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e185,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).129),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(127),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 240, first_statement_index: 5},
                init_scope: Node(131),
                pattern: Pat {
                    ty: i32,
                    span: src/core/bit_array.rs:85:17: 85:29 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "tail_end",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).134),
                        ),
                        ty: i32,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e187,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).133),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(131),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(148),
                expr: e206,
            },
            opt_destruction_scope: Some(
                Destruction(148),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(153),
                expr: e212,
            },
            opt_destruction_scope: Some(
                Destruction(153),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 209, first_statement_index: 2},
                init_scope: Node(154),
                pattern: Pat {
                    ty: u8,
                    span: src/core/bit_array.rs:91:21: 91:34 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "tail_bits",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).175),
                        ),
                        ty: u8,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e251,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).174),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(154),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 209, first_statement_index: 3},
                init_scope: Node(176),
                pattern: Pat {
                    ty: i32,
                    span: src/core/bit_array.rs:92:21: 92:38 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "tail_bits_to_zero",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).182),
                        ),
                        ty: i32,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e257,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).181),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(176),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(188),
                expr: e263,
            },
            opt_destruction_scope: Some(
                Destruction(188),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(194),
                expr: e269,
            },
            opt_destruction_scope: Some(
                Destruction(194),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(203),
                expr: e279,
            },
            opt_destruction_scope: Some(
                Destruction(203),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 239, first_statement_index: 0},
                init_scope: Node(212),
                pattern: Pat {
                    ty: i32,
                    span: src/core/bit_array.rs:98:21: 98:38 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "head_bits_to_zero",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).218),
                        ),
                        ty: i32,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e294,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).217),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(212),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(227),
                expr: e304,
            },
            opt_destruction_scope: Some(
                Destruction(227),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(236),
                expr: e314,
            },
            opt_destruction_scope: Some(
                Destruction(236),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &core::bit_array::BitArray,
                    span: src/core/bit_array.rs:65:17: 65:22 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).2),
                        ),
                        ty: &core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &core::bit_array::BitArray,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: u8,
                    span: src/core/bit_array.rs:65:24: 65:32 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "num_bits",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).4),
                        ),
                        ty: u8,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: u8,
            ty_span: Some(
                src/core/bit_array.rs:65:34: 65:36 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:42 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::peek).3),
            ),
        },
    ],
}

DefId(0:43 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clean_offset):
Thir {
    body_type: Fn(
        ([&core::bit_array::BitArray]; c_variadic: false)->bool,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(10),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:105:40: 107:6 (#0),
            stmts: [],
            expr: Some(
                e12,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:43 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clean_offset).2),
                ),
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/core/bit_array.rs:106:9: 106:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/core/bit_array.rs:106:9: 106:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:43 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clean_offset).6),
                ),
                value: e1,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/core/bit_array.rs:106:9: 106:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[1],
            },
            ty: i32,
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/core/bit_array.rs:106:9: 106:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:43 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clean_offset).5),
                ),
                value: e3,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/core/bit_array.rs:106:9: 106:17 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:106:20: 106:21 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/core/bit_array.rs:106:20: 106:21 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:43 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clean_offset).8),
                ),
                value: e5,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/core/bit_array.rs:106:20: 106:21 (#0),
        },
        Expr {
            kind: Binary {
                op: Rem,
                lhs: e4,
                rhs: e6,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/core/bit_array.rs:106:9: 106:21 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:43 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clean_offset).4),
                ),
                value: e7,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/core/bit_array.rs:106:9: 106:21 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        0,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:106:25: 106:26 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/core/bit_array.rs:106:25: 106:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:43 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clean_offset).9),
                ),
                value: e9,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/core/bit_array.rs:106:25: 106:26 (#0),
        },
        Expr {
            kind: Binary {
                op: Eq,
                lhs: e8,
                rhs: e10,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/core/bit_array.rs:106:9: 106:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:43 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clean_offset).3),
                ),
                value: e11,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/core/bit_array.rs:106:9: 106:26 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/core/bit_array.rs:105:40: 107:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:43 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clean_offset).11),
                ),
                value: e13,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/core/bit_array.rs:105:40: 107:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(11),
                lint_level: Inherited,
                value: e14,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/core/bit_array.rs:105:40: 107:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &core::bit_array::BitArray,
                    span: src/core/bit_array.rs:105:25: 105:30 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:43 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clean_offset).2),
                        ),
                        ty: &core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &core::bit_array::BitArray,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:43 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clean_offset).1),
            ),
        },
    ],
}

DefId(0:44 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clean_end_offset):
Thir {
    body_type: Fn(
        ([&core::bit_array::BitArray]; c_variadic: false)->bool,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(14),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:108:44: 110:6 (#0),
            stmts: [],
            expr: Some(
                e19,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:44 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clean_end_offset).2),
                ),
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core/bit_array.rs:109:10: 109:14 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core/bit_array.rs:109:10: 109:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:44 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clean_end_offset).7),
                ),
                value: e1,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core/bit_array.rs:109:10: 109:14 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[1],
            },
            ty: i32,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core/bit_array.rs:109:10: 109:18 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:44 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clean_end_offset).6),
                ),
                value: e3,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core/bit_array.rs:109:10: 109:18 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:44 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clean_end_offset).2),
                ),
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core/bit_array.rs:109:21: 109:25 (#0),
        },
        Expr {
            kind: Deref {
                arg: e5,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core/bit_array.rs:109:21: 109:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:44 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clean_end_offset).10),
                ),
                value: e6,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core/bit_array.rs:109:21: 109:25 (#0),
        },
        Expr {
            kind: Field {
                lhs: e7,
                variant_index: 0,
                name: field[2],
            },
            ty: i32,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core/bit_array.rs:109:21: 109:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:44 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clean_end_offset).9),
                ),
                value: e8,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core/bit_array.rs:109:21: 109:29 (#0),
        },
        Expr {
            kind: Binary {
                op: Add,
                lhs: e4,
                rhs: e9,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core/bit_array.rs:109:9: 109:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:44 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clean_end_offset).5),
                ),
                value: e10,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core/bit_array.rs:109:9: 109:30 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:109:33: 109:34 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core/bit_array.rs:109:33: 109:34 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(12),
                lint_level: Explicit(
                    HirId(DefId(0:44 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clean_end_offset).12),
                ),
                value: e12,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core/bit_array.rs:109:33: 109:34 (#0),
        },
        Expr {
            kind: Binary {
                op: Rem,
                lhs: e11,
                rhs: e13,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core/bit_array.rs:109:9: 109:34 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:44 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clean_end_offset).4),
                ),
                value: e14,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core/bit_array.rs:109:9: 109:34 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        0,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:109:38: 109:39 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core/bit_array.rs:109:38: 109:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:44 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clean_end_offset).13),
                ),
                value: e16,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core/bit_array.rs:109:38: 109:39 (#0),
        },
        Expr {
            kind: Binary {
                op: Eq,
                lhs: e15,
                rhs: e17,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core/bit_array.rs:109:9: 109:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:44 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clean_end_offset).3),
                ),
                value: e18,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core/bit_array.rs:109:9: 109:39 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core/bit_array.rs:108:44: 110:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:44 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clean_end_offset).15),
                ),
                value: e20,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core/bit_array.rs:108:44: 110:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(15),
                lint_level: Inherited,
                value: e21,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core/bit_array.rs:108:44: 110:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &core::bit_array::BitArray,
                    span: src/core/bit_array.rs:108:29: 108:34 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:44 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clean_end_offset).2),
                        ),
                        ty: &core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &core::bit_array::BitArray,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:44 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::clean_end_offset).1),
            ),
        },
    ],
}

DefId(0:45 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::len):
Thir {
    body_type: Fn(
        ([&core::bit_array::BitArray]; c_variadic: false)->i32,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(6),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:111:30: 113:6 (#0),
            stmts: [],
            expr: Some(
                e4,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:45 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::len).2),
                ),
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/core/bit_array.rs:112:9: 112:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/core/bit_array.rs:112:9: 112:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:45 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::len).4),
                ),
                value: e1,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/core/bit_array.rs:112:9: 112:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[2],
            },
            ty: i32,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/core/bit_array.rs:112:9: 112:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:45 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::len).3),
                ),
                value: e3,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/core/bit_array.rs:112:9: 112:17 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/core/bit_array.rs:111:30: 113:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:45 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::len).7),
                ),
                value: e5,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/core/bit_array.rs:111:30: 113:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(7),
                lint_level: Inherited,
                value: e6,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/core/bit_array.rs:111:30: 113:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &core::bit_array::BitArray,
                    span: src/core/bit_array.rs:111:16: 111:21 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:45 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::len).2),
                        ),
                        ty: &core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &core::bit_array::BitArray,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:45 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::len).1),
            ),
        },
    ],
}

DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat):
Thir {
    body_type: Fn(
        ([&mut core::bit_array::BitArray, i32]; c_variadic: false)->std::option::Option<core::bit_array::BitArray>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(17),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:118:32: 120:10 (#0),
            stmts: [
                s0,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(61),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:114:58: 132:6 (#0),
            stmts: [
                s1,
                s2,
                s3,
                s4,
            ],
            expr: Some(
                e65,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).4),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:118:12: 118:20 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).7),
                ),
                value: e0,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:118:12: 118:20 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).2),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:118:23: 118:27 (#0),
        },
        Expr {
            kind: Deref {
                arg: e2,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:118:23: 118:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).10),
                ),
                value: e3,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:118:23: 118:27 (#0),
        },
        Expr {
            kind: Field {
                lhs: e4,
                variant_index: 0,
                name: field[2],
            },
            ty: i32,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:118:23: 118:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).9),
                ),
                value: e5,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:118:23: 118:31 (#0),
        },
        Expr {
            kind: Binary {
                op: Gt,
                lhs: e1,
                rhs: e6,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:118:12: 118:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).6),
                ),
                value: e7,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:118:12: 118:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(6),
                lint_level: Inherited,
                value: e8,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:118:12: 118:31 (#0),
        },
        Expr {
            kind: Use {
                source: e9,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(19),
            ),
            span: src/core/bit_array.rs:118:12: 118:31 (#98),
        },
        Expr {
            kind: Scope {
                region_scope: Node(12),
                lint_level: Explicit(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).12),
                ),
                value: e10,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(19),
            ),
            span: src/core/bit_array.rs:118:12: 118:31 (#98),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: std::option::Option,
                    variant_index: 0,
                    substs: [
                        core::bit_array::BitArray,
                    ],
                    user_ty: None,
                    fields: [],
                    base: None,
                },
            ),
            ty: std::option::Option<core::bit_array::BitArray>,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core/bit_array.rs:119:20: 119:24 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).14),
                ),
                value: e12,
            },
            ty: std::option::Option<core::bit_array::BitArray>,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core/bit_array.rs:119:20: 119:24 (#0),
        },
        Expr {
            kind: Return {
                value: Some(
                    e13,
                ),
            },
            ty: !,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core/bit_array.rs:119:13: 119:24 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).13),
                ),
                value: e14,
            },
            ty: !,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core/bit_array.rs:119:13: 119:24 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: !,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bit_array.rs:118:32: 120:10 (#0),
        },
        Expr {
            kind: NeverToAny {
                source: e16,
            },
            ty: (),
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bit_array.rs:118:32: 120:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(18),
                lint_level: Explicit(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).18),
                ),
                value: e17,
            },
            ty: (),
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bit_array.rs:118:32: 120:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(18),
                lint_level: Inherited,
                value: e18,
            },
            ty: (),
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bit_array.rs:118:32: 120:10 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(18),
                cond: e11,
                then: e19,
                else_opt: None,
            },
            ty: (),
            temp_lifetime: Some(
                Node(19),
            ),
            span: src/core/bit_array.rs:118:9: 120:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).5),
                ),
                value: e20,
            },
            ty: (),
            temp_lifetime: Some(
                Node(19),
            ),
            span: src/core/bit_array.rs:118:9: 120:10 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(2:2255 ~ core[102f]::clone::Clone::clone),
                            UserSubsts {
                                substs: [
                                    std::rc::Rc<^0>,
                                ],
                                user_self_ty: None,
                            },
                        ),
                    },
                ),
            },
            ty: for<'a> fn(&'a std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>) -> std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> {<std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:123:19: 123:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).25),
                ),
                value: e22,
            },
            ty: for<'a> fn(&'a std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>) -> std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> {<std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:123:19: 123:28 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).2),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:123:30: 123:34 (#0),
        },
        Expr {
            kind: Deref {
                arg: e24,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:123:30: 123:34 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(31),
                lint_level: Explicit(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).31),
                ),
                value: e25,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:123:30: 123:34 (#0),
        },
        Expr {
            kind: Field {
                lhs: e26,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:123:30: 123:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(30),
                lint_level: Explicit(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).30),
                ),
                value: e27,
            },
            ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:123:30: 123:39 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e28,
            },
            ty: &std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:123:29: 123:39 (#0),
        },
        Expr {
            kind: Deref {
                arg: e29,
            },
            ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:123:29: 123:39 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e30,
            },
            ty: &std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:123:29: 123:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(29),
                lint_level: Explicit(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).29),
                ),
                value: e31,
            },
            ty: &std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:123:29: 123:39 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>) -> std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> {<std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::clone::Clone>::clone},
                fun: e23,
                args: [
                    e32,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:123:19: 123:40 (#0),
            },
            ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:123:19: 123:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(24),
                lint_level: Explicit(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).24),
                ),
                value: e33,
            },
            ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:123:19: 123:40 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).2),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:124:18: 124:22 (#0),
        },
        Expr {
            kind: Deref {
                arg: e35,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:124:18: 124:22 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(35),
                lint_level: Explicit(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).35),
                ),
                value: e36,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:124:18: 124:22 (#0),
        },
        Expr {
            kind: Field {
                lhs: e37,
                variant_index: 0,
                name: field[1],
            },
            ty: i32,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:124:18: 124:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(34),
                lint_level: Explicit(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).34),
                ),
                value: e38,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:124:18: 124:26 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).4),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:125:18: 125:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(38),
                lint_level: Explicit(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).38),
                ),
                value: e40,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:125:18: 125:26 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: core::bit_array::BitArray,
                    variant_index: 0,
                    substs: [],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e34,
                        },
                        FieldExpr {
                            name: field[1],
                            expr: e39,
                        },
                        FieldExpr {
                            name: field[2],
                            expr: e41,
                        },
                    ],
                    base: None,
                },
            ),
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:122:22: 126:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(21),
                lint_level: Explicit(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).21),
                ),
                value: e42,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:122:22: 126:10 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).2),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(48),
            ),
            span: src/core/bit_array.rs:128:9: 128:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e44,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(48),
            ),
            span: src/core/bit_array.rs:128:9: 128:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(44),
                lint_level: Explicit(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).44),
                ),
                value: e45,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(48),
            ),
            span: src/core/bit_array.rs:128:9: 128:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e46,
                variant_index: 0,
                name: field[1],
            },
            ty: i32,
            temp_lifetime: Some(
                Node(48),
            ),
            span: src/core/bit_array.rs:128:9: 128:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(43),
                lint_level: Explicit(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).43),
                ),
                value: e47,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(48),
            ),
            span: src/core/bit_array.rs:128:9: 128:17 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).4),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(48),
            ),
            span: src/core/bit_array.rs:128:21: 128:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(46),
                lint_level: Explicit(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).46),
                ),
                value: e49,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(48),
            ),
            span: src/core/bit_array.rs:128:21: 128:29 (#0),
        },
        Expr {
            kind: AssignOp {
                op: Add,
                lhs: e48,
                rhs: e50,
            },
            ty: (),
            temp_lifetime: Some(
                Node(48),
            ),
            span: src/core/bit_array.rs:128:9: 128:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(42),
                lint_level: Explicit(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).42),
                ),
                value: e51,
            },
            ty: (),
            temp_lifetime: Some(
                Node(48),
            ),
            span: src/core/bit_array.rs:128:9: 128:29 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).2),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:129:9: 129:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e53,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:129:9: 129:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(51),
                lint_level: Explicit(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).51),
                ),
                value: e54,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:129:9: 129:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e55,
                variant_index: 0,
                name: field[2],
            },
            ty: i32,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:129:9: 129:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(50),
                lint_level: Explicit(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).50),
                ),
                value: e56,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:129:9: 129:17 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).4),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:129:21: 129:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(53),
                lint_level: Explicit(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).53),
                ),
                value: e58,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:129:21: 129:29 (#0),
        },
        Expr {
            kind: AssignOp {
                op: Sub,
                lhs: e57,
                rhs: e59,
            },
            ty: (),
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:129:9: 129:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(49),
                lint_level: Explicit(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).49),
                ),
                value: e60,
            },
            ty: (),
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:129:9: 129:29 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).41),
                ),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(62),
            ),
            span: src/core/bit_array.rs:131:14: 131:20 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(59),
                lint_level: Explicit(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).59),
                ),
                value: e62,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(62),
            ),
            span: src/core/bit_array.rs:131:14: 131:20 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: std::option::Option,
                    variant_index: 1,
                    substs: [
                        core::bit_array::BitArray,
                    ],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e63,
                        },
                    ],
                    base: None,
                },
            ),
            ty: std::option::Option<core::bit_array::BitArray>,
            temp_lifetime: Some(
                Node(62),
            ),
            span: src/core/bit_array.rs:131:9: 131:21 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(56),
                lint_level: Explicit(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).56),
                ),
                value: e64,
            },
            ty: std::option::Option<core::bit_array::BitArray>,
            temp_lifetime: Some(
                Node(62),
            ),
            span: src/core/bit_array.rs:131:9: 131:21 (#0),
        },
        Expr {
            kind: Block {
                block: b1,
            },
            ty: std::option::Option<core::bit_array::BitArray>,
            temp_lifetime: Some(
                Node(62),
            ),
            span: src/core/bit_array.rs:114:58: 132:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(62),
                lint_level: Explicit(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).62),
                ),
                value: e66,
            },
            ty: std::option::Option<core::bit_array::BitArray>,
            temp_lifetime: Some(
                Node(62),
            ),
            span: src/core/bit_array.rs:114:58: 132:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(62),
                lint_level: Inherited,
                value: e67,
            },
            ty: std::option::Option<core::bit_array::BitArray>,
            temp_lifetime: Some(
                Node(62),
            ),
            span: src/core/bit_array.rs:114:58: 132:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(16),
                expr: e15,
            },
            opt_destruction_scope: Some(
                Destruction(16),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(19),
                expr: e21,
            },
            opt_destruction_scope: Some(
                Destruction(19),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 61, first_statement_index: 1},
                init_scope: Node(20),
                pattern: Pat {
                    ty: core::bit_array::BitArray,
                    span: src/core/bit_array.rs:122:13: 122:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "result",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).41),
                        ),
                        ty: core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e43,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).40),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(20),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(48),
                expr: e52,
            },
            opt_destruction_scope: Some(
                Destruction(48),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(55),
                expr: e61,
            },
            opt_destruction_scope: Some(
                Destruction(55),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &mut core::bit_array::BitArray,
                    span: src/core/bit_array.rs:114:16: 114:25 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).2),
                        ),
                        ty: &mut core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut core::bit_array::BitArray,
            ty_span: None,
            self_kind: Some(
                MutRef,
            ),
            hir_id: Some(
                HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: i32,
                    span: src/core/bit_array.rs:114:27: 114:35 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "num_bits",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).4),
                        ),
                        ty: i32,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: i32,
            ty_span: Some(
                src/core/bit_array.rs:114:37: 114:40 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:46 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::eat).3),
            ),
        },
    ],
}

DefId(0:47 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance):
Thir {
    body_type: Fn(
        ([&mut core::bit_array::BitArray, i32]; c_variadic: false)->(),
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(19),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:133:46: 136:6 (#0),
            stmts: [
                s0,
                s1,
            ],
            expr: None,
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:47 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance).2),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/core/bit_array.rs:134:9: 134:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/core/bit_array.rs:134:9: 134:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:47 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance).7),
                ),
                value: e1,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/core/bit_array.rs:134:9: 134:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[1],
            },
            ty: i32,
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/core/bit_array.rs:134:9: 134:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:47 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance).6),
                ),
                value: e3,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/core/bit_array.rs:134:9: 134:17 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:47 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance).4),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/core/bit_array.rs:134:21: 134:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:47 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance).9),
                ),
                value: e5,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/core/bit_array.rs:134:21: 134:29 (#0),
        },
        Expr {
            kind: AssignOp {
                op: Add,
                lhs: e4,
                rhs: e6,
            },
            ty: (),
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/core/bit_array.rs:134:9: 134:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:47 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance).5),
                ),
                value: e7,
            },
            ty: (),
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/core/bit_array.rs:134:9: 134:29 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:47 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance).2),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bit_array.rs:135:9: 135:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e9,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bit_array.rs:135:9: 135:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:47 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance).14),
                ),
                value: e10,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bit_array.rs:135:9: 135:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e11,
                variant_index: 0,
                name: field[2],
            },
            ty: i32,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bit_array.rs:135:9: 135:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:47 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance).13),
                ),
                value: e12,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bit_array.rs:135:9: 135:17 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:47 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance).4),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bit_array.rs:135:21: 135:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(16),
                lint_level: Explicit(
                    HirId(DefId(0:47 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance).16),
                ),
                value: e14,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bit_array.rs:135:21: 135:29 (#0),
        },
        Expr {
            kind: AssignOp {
                op: Sub,
                lhs: e13,
                rhs: e15,
            },
            ty: (),
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bit_array.rs:135:9: 135:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(12),
                lint_level: Explicit(
                    HirId(DefId(0:47 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance).12),
                ),
                value: e16,
            },
            ty: (),
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bit_array.rs:135:9: 135:29 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:133:46: 136:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(20),
                lint_level: Explicit(
                    HirId(DefId(0:47 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance).20),
                ),
                value: e18,
            },
            ty: (),
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:133:46: 136:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(20),
                lint_level: Inherited,
                value: e19,
            },
            ty: (),
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:133:46: 136:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(11),
                expr: e8,
            },
            opt_destruction_scope: Some(
                Destruction(11),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(18),
                expr: e17,
            },
            opt_destruction_scope: Some(
                Destruction(18),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &mut core::bit_array::BitArray,
                    span: src/core/bit_array.rs:133:20: 133:29 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:47 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance).2),
                        ),
                        ty: &mut core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut core::bit_array::BitArray,
            ty_span: None,
            self_kind: Some(
                MutRef,
            ),
            hir_id: Some(
                HirId(DefId(0:47 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: i32,
                    span: src/core/bit_array.rs:133:31: 133:39 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "num_bits",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:47 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance).4),
                        ),
                        ty: i32,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: i32,
            ty_span: Some(
                src/core/bit_array.rs:133:41: 133:44 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:47 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance).3),
            ),
        },
    ],
}

DefId(0:48 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::matching_data):
Thir {
    body_type: Fn(
        ([&core::bit_array::BitArray, std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>]; c_variadic: false)->bool,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(11),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:137:69: 139:6 (#0),
            stmts: [],
            expr: Some(
                e11,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:48 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::matching_data).2),
                ),
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/core/bit_array.rs:138:9: 138:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/core/bit_array.rs:138:9: 138:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:48 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::matching_data).7),
                ),
                value: e1,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/core/bit_array.rs:138:9: 138:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/core/bit_array.rs:138:9: 138:18 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e3,
            },
            ty: &std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/core/bit_array.rs:138:9: 138:18 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:48 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::matching_data).6),
                ),
                value: e4,
            },
            ty: &std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/core/bit_array.rs:138:9: 138:18 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:48 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::matching_data).4),
                ),
            },
            ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/core/bit_array.rs:138:22: 138:26 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e6,
            },
            ty: &std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/core/bit_array.rs:138:22: 138:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:48 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::matching_data).9),
                ),
                value: e7,
            },
            ty: &std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/core/bit_array.rs:138:22: 138:26 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b> fn(&'a std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>, &'b std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>) -> bool {<std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::cmp::PartialEq>::eq},
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/core/bit_array.rs:138:9: 138:26 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b> fn(&'a std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>, &'b std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>) -> bool {<std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::cmp::PartialEq>::eq},
                fun: e9,
                args: [
                    e5,
                    e8,
                ],
                from_hir_call: false,
                fn_span: src/core/bit_array.rs:138:9: 138:26 (#0),
            },
            ty: bool,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/core/bit_array.rs:138:9: 138:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:48 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::matching_data).5),
                ),
                value: e10,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/core/bit_array.rs:138:9: 138:26 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/core/bit_array.rs:137:69: 139:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(12),
                lint_level: Explicit(
                    HirId(DefId(0:48 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::matching_data).12),
                ),
                value: e12,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/core/bit_array.rs:137:69: 139:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(12),
                lint_level: Inherited,
                value: e13,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/core/bit_array.rs:137:69: 139:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &core::bit_array::BitArray,
                    span: src/core/bit_array.rs:137:26: 137:31 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:48 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::matching_data).2),
                        ),
                        ty: &core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &core::bit_array::BitArray,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:48 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::matching_data).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
                    span: src/core/bit_array.rs:137:33: 137:37 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "data",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:48 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::matching_data).4),
                        ),
                        ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            ty_span: Some(
                src/core/bit_array.rs:137:39: 137:59 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:48 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::matching_data).3),
            ),
        },
    ],
}

DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match):
Thir {
    body_type: Fn(
        ([&mut core::bit_array::BitArray, core::bit_array::BitArray]; c_variadic: false)->(),
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(23),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:141:9: 141:56 (#19),
            stmts: [],
            expr: Some(
                e26,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(51),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:143:9: 143:27 (#21),
            stmts: [],
            expr: Some(
                e64,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(61),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:140:53: 145:6 (#0),
            stmts: [
                s0,
                s1,
                s2,
                s3,
            ],
            expr: None,
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).4),
                ),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:141:17: 141:22 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e0,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:141:17: 141:55 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).9),
                ),
                value: e1,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:141:17: 141:22 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).2),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:141:37: 141:41 (#0),
        },
        Expr {
            kind: Deref {
                arg: e3,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:141:37: 141:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).14),
                ),
                value: e4,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:141:37: 141:41 (#0),
        },
        Expr {
            kind: Field {
                lhs: e5,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:141:37: 141:46 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e6,
            },
            ty: &std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:141:37: 141:54 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).13),
                ),
                value: e7,
            },
            ty: &std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:141:37: 141:46 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>) -> std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> {<std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:141:47: 141:52 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>) -> std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> {<std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::clone::Clone>::clone},
                fun: e9,
                args: [
                    e8,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:141:47: 141:54 (#0),
            },
            ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:141:37: 141:54 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).11),
                ),
                value: e10,
            },
            ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:141:37: 141:54 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bit_array::BitArray, std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>) -> bool {core::bit_array::BitArray::matching_data},
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:141:23: 141:36 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bit_array::BitArray, std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>) -> bool {core::bit_array::BitArray::matching_data},
                fun: e12,
                args: [
                    e2,
                    e11,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:141:23: 141:55 (#0),
            },
            ty: bool,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:141:17: 141:55 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).7),
                ),
                value: e13,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:141:17: 141:55 (#0),
        },
        Expr {
            kind: Unary {
                op: Not,
                arg: e14,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:141:9: 141:56 (#19),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).6),
                ),
                value: e15,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:141:9: 141:56 (#19),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(6),
                lint_level: Inherited,
                value: e16,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:141:9: 141:56 (#19),
        },
        Expr {
            kind: Use {
                source: e17,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:141:9: 141:56 (#99),
        },
        Expr {
            kind: Scope {
                region_scope: Node(16),
                lint_level: Explicit(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).16),
                ),
                value: e18,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:141:9: 141:56 (#99),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(24),
            ),
            span: src/core/bit_array.rs:141:9: 141:56 (#19),
        },
        Expr {
            kind: Scope {
                region_scope: Node(18),
                lint_level: Explicit(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).18),
                ),
                value: e20,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(24),
            ),
            span: src/core/bit_array.rs:141:9: 141:56 (#19),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "assertion failed: other.matching_data(self.data.clone())",
                        Cooked,
                    ),
                    span: no-location (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(24),
            ),
            span: no-location (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(22),
                lint_level: Explicit(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).22),
                ),
                value: e22,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(24),
            ),
            span: no-location (#0),
        },
        Expr {
            kind: Call {
                ty: fn(&'static str) -> ! {core::panicking::panic},
                fun: e21,
                args: [
                    e23,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:141:9: 141:56 (#19),
            },
            ty: !,
            temp_lifetime: Some(
                Node(24),
            ),
            span: src/core/bit_array.rs:141:9: 141:56 (#19),
        },
        Expr {
            kind: NeverToAny {
                source: e24,
            },
            ty: (),
            temp_lifetime: Some(
                Node(24),
            ),
            span: src/core/bit_array.rs:141:9: 141:56 (#19),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).17),
                ),
                value: e25,
            },
            ty: (),
            temp_lifetime: Some(
                Node(24),
            ),
            span: src/core/bit_array.rs:141:9: 141:56 (#19),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(24),
            ),
            span: src/core/bit_array.rs:141:9: 141:56 (#19),
        },
        Expr {
            kind: Scope {
                region_scope: Node(24),
                lint_level: Explicit(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).24),
                ),
                value: e27,
            },
            ty: (),
            temp_lifetime: Some(
                Node(24),
            ),
            span: src/core/bit_array.rs:141:9: 141:56 (#19),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(24),
                lint_level: Inherited,
                value: e28,
            },
            ty: (),
            temp_lifetime: Some(
                Node(24),
            ),
            span: src/core/bit_array.rs:141:9: 141:56 (#19),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(24),
                cond: e19,
                then: e29,
                else_opt: None,
            },
            ty: (),
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:141:9: 141:56 (#19),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).5),
                ),
                value: e30,
            },
            ty: (),
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:141:9: 141:56 (#19),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).4),
                ),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/core/bit_array.rs:142:20: 142:25 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e32,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/core/bit_array.rs:142:20: 142:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(30),
                lint_level: Explicit(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).30),
                ),
                value: e33,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/core/bit_array.rs:142:20: 142:25 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bit_array::BitArray) -> i32 {core::bit_array::BitArray::pos},
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/core/bit_array.rs:142:26: 142:29 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bit_array::BitArray) -> i32 {core::bit_array::BitArray::pos},
                fun: e35,
                args: [
                    e34,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:142:26: 142:31 (#0),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/core/bit_array.rs:142:20: 142:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(28),
                lint_level: Explicit(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).28),
                ),
                value: e36,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/core/bit_array.rs:142:20: 142:31 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).2),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/core/bit_array.rs:142:34: 142:38 (#0),
        },
        Expr {
            kind: Deref {
                arg: e38,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/core/bit_array.rs:142:34: 142:44 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e39,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/core/bit_array.rs:142:34: 142:44 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(34),
                lint_level: Explicit(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).34),
                ),
                value: e40,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/core/bit_array.rs:142:34: 142:38 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bit_array::BitArray) -> i32 {core::bit_array::BitArray::pos},
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/core/bit_array.rs:142:39: 142:42 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bit_array::BitArray) -> i32 {core::bit_array::BitArray::pos},
                fun: e42,
                args: [
                    e41,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:142:39: 142:44 (#0),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/core/bit_array.rs:142:34: 142:44 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(32),
                lint_level: Explicit(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).32),
                ),
                value: e43,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/core/bit_array.rs:142:34: 142:44 (#0),
        },
        Expr {
            kind: Binary {
                op: Sub,
                lhs: e37,
                rhs: e44,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/core/bit_array.rs:142:20: 142:44 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(27),
                lint_level: Explicit(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).27),
                ),
                value: e45,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/core/bit_array.rs:142:20: 142:44 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).37),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/core/bit_array.rs:143:17: 143:21 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(41),
                lint_level: Explicit(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).41),
                ),
                value: e47,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/core/bit_array.rs:143:17: 143:21 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        0,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:143:25: 143:26 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/core/bit_array.rs:143:25: 143:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(43),
                lint_level: Explicit(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).43),
                ),
                value: e49,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/core/bit_array.rs:143:25: 143:26 (#0),
        },
        Expr {
            kind: Binary {
                op: Ge,
                lhs: e48,
                rhs: e50,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/core/bit_array.rs:143:17: 143:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(40),
                lint_level: Explicit(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).40),
                ),
                value: e51,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/core/bit_array.rs:143:17: 143:26 (#0),
        },
        Expr {
            kind: Unary {
                op: Not,
                arg: e52,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/core/bit_array.rs:143:9: 143:27 (#21),
        },
        Expr {
            kind: Scope {
                region_scope: Node(39),
                lint_level: Explicit(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).39),
                ),
                value: e53,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/core/bit_array.rs:143:9: 143:27 (#21),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(39),
                lint_level: Inherited,
                value: e54,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/core/bit_array.rs:143:9: 143:27 (#21),
        },
        Expr {
            kind: Use {
                source: e55,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:143:9: 143:27 (#100),
        },
        Expr {
            kind: Scope {
                region_scope: Node(44),
                lint_level: Explicit(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).44),
                ),
                value: e56,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:143:9: 143:27 (#100),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(52),
            ),
            span: src/core/bit_array.rs:143:9: 143:27 (#21),
        },
        Expr {
            kind: Scope {
                region_scope: Node(46),
                lint_level: Explicit(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).46),
                ),
                value: e58,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(52),
            ),
            span: src/core/bit_array.rs:143:9: 143:27 (#21),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "assertion failed: dist >= 0",
                        Cooked,
                    ),
                    span: no-location (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(52),
            ),
            span: no-location (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(50),
                lint_level: Explicit(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).50),
                ),
                value: e60,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(52),
            ),
            span: no-location (#0),
        },
        Expr {
            kind: Call {
                ty: fn(&'static str) -> ! {core::panicking::panic},
                fun: e59,
                args: [
                    e61,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:143:9: 143:27 (#21),
            },
            ty: !,
            temp_lifetime: Some(
                Node(52),
            ),
            span: src/core/bit_array.rs:143:9: 143:27 (#21),
        },
        Expr {
            kind: NeverToAny {
                source: e62,
            },
            ty: (),
            temp_lifetime: Some(
                Node(52),
            ),
            span: src/core/bit_array.rs:143:9: 143:27 (#21),
        },
        Expr {
            kind: Scope {
                region_scope: Node(45),
                lint_level: Explicit(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).45),
                ),
                value: e63,
            },
            ty: (),
            temp_lifetime: Some(
                Node(52),
            ),
            span: src/core/bit_array.rs:143:9: 143:27 (#21),
        },
        Expr {
            kind: Block {
                block: b1,
            },
            ty: (),
            temp_lifetime: Some(
                Node(52),
            ),
            span: src/core/bit_array.rs:143:9: 143:27 (#21),
        },
        Expr {
            kind: Scope {
                region_scope: Node(52),
                lint_level: Explicit(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).52),
                ),
                value: e65,
            },
            ty: (),
            temp_lifetime: Some(
                Node(52),
            ),
            span: src/core/bit_array.rs:143:9: 143:27 (#21),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(52),
                lint_level: Inherited,
                value: e66,
            },
            ty: (),
            temp_lifetime: Some(
                Node(52),
            ),
            span: src/core/bit_array.rs:143:9: 143:27 (#21),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(52),
                cond: e57,
                then: e67,
                else_opt: None,
            },
            ty: (),
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:143:9: 143:27 (#21),
        },
        Expr {
            kind: Scope {
                region_scope: Node(38),
                lint_level: Explicit(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).38),
                ),
                value: e68,
            },
            ty: (),
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:143:9: 143:27 (#21),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).2),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(60),
            ),
            span: src/core/bit_array.rs:144:9: 144:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e70,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(60),
            ),
            span: src/core/bit_array.rs:144:9: 144:27 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e71,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(60),
            ),
            span: src/core/bit_array.rs:144:9: 144:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(56),
                lint_level: Explicit(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).56),
                ),
                value: e72,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(60),
            ),
            span: src/core/bit_array.rs:144:9: 144:13 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).37),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(60),
            ),
            span: src/core/bit_array.rs:144:22: 144:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(58),
                lint_level: Explicit(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).58),
                ),
                value: e74,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(60),
            ),
            span: src/core/bit_array.rs:144:22: 144:26 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut core::bit_array::BitArray, i32) {core::bit_array::BitArray::advance},
            temp_lifetime: Some(
                Node(60),
            ),
            span: src/core/bit_array.rs:144:14: 144:21 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut core::bit_array::BitArray, i32) {core::bit_array::BitArray::advance},
                fun: e76,
                args: [
                    e73,
                    e75,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:144:14: 144:27 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(60),
            ),
            span: src/core/bit_array.rs:144:9: 144:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(54),
                lint_level: Explicit(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).54),
                ),
                value: e77,
            },
            ty: (),
            temp_lifetime: Some(
                Node(60),
            ),
            span: src/core/bit_array.rs:144:9: 144:27 (#0),
        },
        Expr {
            kind: Block {
                block: b2,
            },
            ty: (),
            temp_lifetime: Some(
                Node(62),
            ),
            span: src/core/bit_array.rs:140:53: 145:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(62),
                lint_level: Explicit(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).62),
                ),
                value: e79,
            },
            ty: (),
            temp_lifetime: Some(
                Node(62),
            ),
            span: src/core/bit_array.rs:140:53: 145:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(62),
                lint_level: Inherited,
                value: e80,
            },
            ty: (),
            temp_lifetime: Some(
                Node(62),
            ),
            span: src/core/bit_array.rs:140:53: 145:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(25),
                expr: e31,
            },
            opt_destruction_scope: Some(
                Destruction(25),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 61, first_statement_index: 1},
                init_scope: Node(26),
                pattern: Pat {
                    ty: i32,
                    span: src/core/bit_array.rs:142:13: 142:17 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "dist",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).37),
                        ),
                        ty: i32,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e46,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).36),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(26),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(53),
                expr: e69,
            },
            opt_destruction_scope: Some(
                Destruction(53),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(60),
                expr: e78,
            },
            opt_destruction_scope: Some(
                Destruction(60),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &mut core::bit_array::BitArray,
                    span: src/core/bit_array.rs:140:29: 140:38 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).2),
                        ),
                        ty: &mut core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut core::bit_array::BitArray,
            ty_span: None,
            self_kind: Some(
                MutRef,
            ),
            hir_id: Some(
                HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: core::bit_array::BitArray,
                    span: src/core/bit_array.rs:140:40: 140:45 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "other",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).4),
                        ),
                        ty: core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: core::bit_array::BitArray,
            ty_span: Some(
                src/core/bit_array.rs:140:47: 140:51 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:49 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::advance_to_match).3),
            ),
        },
    ],
}

DefId(0:50 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::pos):
Thir {
    body_type: Fn(
        ([&core::bit_array::BitArray]; c_variadic: false)->i32,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(6),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:146:30: 148:6 (#0),
            stmts: [],
            expr: Some(
                e4,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:50 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::pos).2),
                ),
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/core/bit_array.rs:147:9: 147:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/core/bit_array.rs:147:9: 147:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:50 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::pos).4),
                ),
                value: e1,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/core/bit_array.rs:147:9: 147:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[1],
            },
            ty: i32,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/core/bit_array.rs:147:9: 147:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:50 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::pos).3),
                ),
                value: e3,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/core/bit_array.rs:147:9: 147:17 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/core/bit_array.rs:146:30: 148:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:50 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::pos).7),
                ),
                value: e5,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/core/bit_array.rs:146:30: 148:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(7),
                lint_level: Inherited,
                value: e6,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/core/bit_array.rs:146:30: 148:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &core::bit_array::BitArray,
                    span: src/core/bit_array.rs:146:16: 146:21 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:50 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::pos).2),
                        ),
                        ty: &core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &core::bit_array::BitArray,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:50 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::pos).1),
            ),
        },
    ],
}

DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend):
Thir {
    body_type: Fn(
        ([&mut core::bit_array::BitArray, &core::bit_array::BitArray]; c_variadic: false)->(),
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(52),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:157:66: 162:10 (#0),
            stmts: [
                s0,
                s1,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(112),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:169:67: 171:14 (#0),
            stmts: [],
            expr: Some(
                e159,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(119),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:171:20: 173:14 (#0),
            stmts: [],
            expr: Some(
                e168,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(158),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:167:37: 176:10 (#0),
            stmts: [
                s6,
                s7,
                s8,
                s9,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(179),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:178:47: 180:14 (#0),
            stmts: [],
            expr: Some(
                e262,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(186),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:180:20: 182:14 (#0),
            stmts: [],
            expr: Some(
                e271,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(214),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:177:31: 185:10 (#0),
            stmts: [
                s11,
                s12,
                s13,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(218),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:177:9: 185:10 (#104),
            stmts: [
                s14,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(221),
            opt_destruction_scope: Some(
                Destruction(221),
            ),
            span: src/core/bit_array.rs:177:9: 185:10 (#104),
            stmts: [],
            expr: Some(
                e319,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(230),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:155:48: 187:6 (#0),
            stmts: [
                s2,
                s3,
                s4,
                s5,
                s10,
                s15,
                s16,
            ],
            expr: None,
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).2),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:12: 157:16 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:12: 157:16 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).9),
                ),
                value: e1,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:12: 157:16 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[1],
            },
            ty: i32,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:12: 157:20 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).8),
                ),
                value: e3,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:12: 157:20 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).2),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:23: 157:27 (#0),
        },
        Expr {
            kind: Deref {
                arg: e5,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:23: 157:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(12),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).12),
                ),
                value: e6,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:23: 157:27 (#0),
        },
        Expr {
            kind: Field {
                lhs: e7,
                variant_index: 0,
                name: field[2],
            },
            ty: i32,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:23: 157:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).11),
                ),
                value: e8,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:23: 157:31 (#0),
        },
        Expr {
            kind: Binary {
                op: Add,
                lhs: e4,
                rhs: e9,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:12: 157:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).7),
                ),
                value: e10,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:12: 157:31 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).2),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:34: 157:38 (#0),
        },
        Expr {
            kind: Deref {
                arg: e12,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:34: 157:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(20),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).20),
                ),
                value: e13,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:34: 157:38 (#0),
        },
        Expr {
            kind: Field {
                lhs: e14,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:34: 157:43 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e15,
            },
            ty: &std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:34: 157:52 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>) -> &'a <std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::ops::Deref>::Target {<std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:34: 157:52 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>) -> &'a <std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::ops::Deref>::Target {<std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::ops::Deref>::deref},
                fun: e17,
                args: [
                    e16,
                ],
                from_hir_call: false,
                fn_span: src/core/bit_array.rs:157:34: 157:52 (#0),
            },
            ty: &std::cell::RefCell<std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:34: 157:52 (#0),
        },
        Expr {
            kind: Deref {
                arg: e18,
            },
            ty: std::cell::RefCell<std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:34: 157:52 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e19,
            },
            ty: &std::cell::RefCell<std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:34: 157:52 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).19),
                ),
                value: e20,
            },
            ty: &std::cell::RefCell<std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:34: 157:43 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::cell::RefCell<std::vec::Vec<u8>>) -> std::cell::Ref<'a, std::vec::Vec<u8>> {std::cell::RefCell::<std::vec::Vec<u8>>::borrow},
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:44: 157:50 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::cell::RefCell<std::vec::Vec<u8>>) -> std::cell::Ref<'a, std::vec::Vec<u8>> {std::cell::RefCell::<std::vec::Vec<u8>>::borrow},
                fun: e22,
                args: [
                    e21,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:157:44: 157:52 (#0),
            },
            ty: std::cell::Ref<'_, std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:34: 157:52 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e23,
            },
            ty: &std::cell::Ref<'_, std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:34: 157:58 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::cell::Ref<'_, std::vec::Vec<u8>>) -> &'a <std::cell::Ref<'_, std::vec::Vec<u8>> as std::ops::Deref>::Target {<std::cell::Ref<'_, std::vec::Vec<u8>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:34: 157:58 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::cell::Ref<'_, std::vec::Vec<u8>>) -> &'a <std::cell::Ref<'_, std::vec::Vec<u8>> as std::ops::Deref>::Target {<std::cell::Ref<'_, std::vec::Vec<u8>> as std::ops::Deref>::deref},
                fun: e25,
                args: [
                    e24,
                ],
                from_hir_call: false,
                fn_span: src/core/bit_array.rs:157:34: 157:58 (#0),
            },
            ty: &std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:34: 157:58 (#0),
        },
        Expr {
            kind: Deref {
                arg: e26,
            },
            ty: std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:34: 157:58 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e27,
            },
            ty: &std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:34: 157:58 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).17),
                ),
                value: e28,
            },
            ty: &std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:34: 157:52 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::vec::Vec<u8>) -> usize {std::vec::Vec::<u8>::len},
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:53: 157:56 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::vec::Vec<u8>) -> usize {std::vec::Vec::<u8>::len},
                fun: e30,
                args: [
                    e29,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:157:53: 157:58 (#0),
            },
            ty: usize,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:34: 157:58 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).15),
                ),
                value: e31,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:34: 157:58 (#0),
        },
        Expr {
            kind: Cast {
                source: e32,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:34: 157:65 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).14),
                ),
                value: e33,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:34: 157:65 (#0),
        },
        Expr {
            kind: Binary {
                op: Lt,
                lhs: e11,
                rhs: e34,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:12: 157:65 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).6),
                ),
                value: e35,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:12: 157:65 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(6),
                lint_level: Inherited,
                value: e36,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:157:12: 157:65 (#0),
        },
        Expr {
            kind: Use {
                source: e37,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(54),
            ),
            span: src/core/bit_array.rs:157:12: 157:65 (#101),
        },
        Expr {
            kind: Scope {
                region_scope: Node(24),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).24),
                ),
                value: e38,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(54),
            ),
            span: src/core/bit_array.rs:157:12: 157:65 (#101),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(std::cell::RefCell<std::vec::Vec<u8>>) -> std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> {std::rc::Rc::<std::cell::RefCell<std::vec::Vec<u8>>>::new},
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:160:31: 160:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(27),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).27),
                ),
                value: e40,
            },
            ty: fn(std::cell::RefCell<std::vec::Vec<u8>>) -> std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> {std::rc::Rc::<std::cell::RefCell<std::vec::Vec<u8>>>::new},
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:160:31: 160:38 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(2:4240 ~ core[102f]::cell::{impl#21}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(2:4238 ~ core[102f]::cell::{impl#21}),
                                        self_ty: std::cell::RefCell<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(std::vec::Vec<u8>) -> std::cell::RefCell<std::vec::Vec<u8>> {std::cell::RefCell::<std::vec::Vec<u8>>::new},
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:160:39: 160:51 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(32),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).32),
                ),
                value: e42,
            },
            ty: fn(std::vec::Vec<u8>) -> std::cell::RefCell<std::vec::Vec<u8>> {std::cell::RefCell::<std::vec::Vec<u8>>::new},
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:160:39: 160:51 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).2),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:160:52: 160:56 (#0),
        },
        Expr {
            kind: Deref {
                arg: e44,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:160:52: 160:56 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(41),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).41),
                ),
                value: e45,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:160:52: 160:56 (#0),
        },
        Expr {
            kind: Field {
                lhs: e46,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:160:52: 160:61 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e47,
            },
            ty: &std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:160:52: 160:70 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>) -> &'a <std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::ops::Deref>::Target {<std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:160:52: 160:70 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>) -> &'a <std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::ops::Deref>::Target {<std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::ops::Deref>::deref},
                fun: e49,
                args: [
                    e48,
                ],
                from_hir_call: false,
                fn_span: src/core/bit_array.rs:160:52: 160:70 (#0),
            },
            ty: &std::cell::RefCell<std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:160:52: 160:70 (#0),
        },
        Expr {
            kind: Deref {
                arg: e50,
            },
            ty: std::cell::RefCell<std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:160:52: 160:70 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e51,
            },
            ty: &std::cell::RefCell<std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:160:52: 160:70 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(40),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).40),
                ),
                value: e52,
            },
            ty: &std::cell::RefCell<std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:160:52: 160:61 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::cell::RefCell<std::vec::Vec<u8>>) -> std::cell::Ref<'a, std::vec::Vec<u8>> {std::cell::RefCell::<std::vec::Vec<u8>>::borrow},
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:160:62: 160:68 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::cell::RefCell<std::vec::Vec<u8>>) -> std::cell::Ref<'a, std::vec::Vec<u8>> {std::cell::RefCell::<std::vec::Vec<u8>>::borrow},
                fun: e54,
                args: [
                    e53,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:160:62: 160:70 (#0),
            },
            ty: std::cell::Ref<'_, std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:160:52: 160:70 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e55,
            },
            ty: &std::cell::Ref<'_, std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:160:52: 160:78 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::cell::Ref<'_, std::vec::Vec<u8>>) -> &'a <std::cell::Ref<'_, std::vec::Vec<u8>> as std::ops::Deref>::Target {<std::cell::Ref<'_, std::vec::Vec<u8>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:160:52: 160:78 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::cell::Ref<'_, std::vec::Vec<u8>>) -> &'a <std::cell::Ref<'_, std::vec::Vec<u8>> as std::ops::Deref>::Target {<std::cell::Ref<'_, std::vec::Vec<u8>> as std::ops::Deref>::deref},
                fun: e57,
                args: [
                    e56,
                ],
                from_hir_call: false,
                fn_span: src/core/bit_array.rs:160:52: 160:78 (#0),
            },
            ty: &std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:160:52: 160:78 (#0),
        },
        Expr {
            kind: Deref {
                arg: e58,
            },
            ty: std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:160:52: 160:78 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e59,
            },
            ty: &std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:160:52: 160:78 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(38),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).38),
                ),
                value: e60,
            },
            ty: &std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:160:52: 160:70 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::vec::Vec<u8>) -> std::vec::Vec<u8> {<std::vec::Vec<u8> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:160:71: 160:76 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::vec::Vec<u8>) -> std::vec::Vec<u8> {<std::vec::Vec<u8> as std::clone::Clone>::clone},
                fun: e62,
                args: [
                    e61,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:160:71: 160:78 (#0),
            },
            ty: std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:160:52: 160:78 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(36),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).36),
                ),
                value: e63,
            },
            ty: std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:160:52: 160:78 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::vec::Vec<u8>) -> std::cell::RefCell<std::vec::Vec<u8>> {std::cell::RefCell::<std::vec::Vec<u8>>::new},
                fun: e43,
                args: [
                    e64,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:160:39: 160:79 (#0),
            },
            ty: std::cell::RefCell<std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:160:39: 160:79 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(31),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).31),
                ),
                value: e65,
            },
            ty: std::cell::RefCell<std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:160:39: 160:79 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::cell::RefCell<std::vec::Vec<u8>>) -> std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> {std::rc::Rc::<std::cell::RefCell<std::vec::Vec<u8>>>::new},
                fun: e41,
                args: [
                    e66,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:160:31: 160:80 (#0),
            },
            ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:160:31: 160:80 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(26),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).26),
                ),
                value: e67,
            },
            ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/core/bit_array.rs:160:31: 160:80 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).2),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(51),
            ),
            span: src/core/bit_array.rs:161:13: 161:17 (#0),
        },
        Expr {
            kind: Deref {
                arg: e69,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(51),
            ),
            span: src/core/bit_array.rs:161:13: 161:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(47),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).47),
                ),
                value: e70,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(51),
            ),
            span: src/core/bit_array.rs:161:13: 161:17 (#0),
        },
        Expr {
            kind: Field {
                lhs: e71,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(51),
            ),
            span: src/core/bit_array.rs:161:13: 161:22 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(46),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).46),
                ),
                value: e72,
            },
            ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(51),
            ),
            span: src/core/bit_array.rs:161:13: 161:22 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).44),
                ),
            },
            ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(51),
            ),
            span: src/core/bit_array.rs:161:25: 161:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(49),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).49),
                ),
                value: e74,
            },
            ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(51),
            ),
            span: src/core/bit_array.rs:161:25: 161:36 (#0),
        },
        Expr {
            kind: Assign {
                lhs: e73,
                rhs: e75,
            },
            ty: (),
            temp_lifetime: Some(
                Node(51),
            ),
            span: src/core/bit_array.rs:161:13: 161:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(45),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).45),
                ),
                value: e76,
            },
            ty: (),
            temp_lifetime: Some(
                Node(51),
            ),
            span: src/core/bit_array.rs:161:13: 161:36 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:157:66: 162:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(53),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).53),
                ),
                value: e78,
            },
            ty: (),
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:157:66: 162:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(53),
                lint_level: Inherited,
                value: e79,
            },
            ty: (),
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:157:66: 162:10 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(53),
                cond: e39,
                then: e80,
                else_opt: None,
            },
            ty: (),
            temp_lifetime: Some(
                Node(54),
            ),
            span: src/core/bit_array.rs:157:9: 162:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).5),
                ),
                value: e81,
            },
            ty: (),
            temp_lifetime: Some(
                Node(54),
            ),
            span: src/core/bit_array.rs:157:9: 162:10 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).4),
                ),
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:164:25: 164:30 (#0),
        },
        Expr {
            kind: Deref {
                arg: e83,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:164:25: 164:38 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e84,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:164:25: 164:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(58),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).58),
                ),
                value: e85,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:164:25: 164:30 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bit_array::BitArray) -> core::bit_array::BitArray {core::bit_array::BitArray::clone},
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:164:31: 164:36 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bit_array::BitArray) -> core::bit_array::BitArray {core::bit_array::BitArray::clone},
                fun: e87,
                args: [
                    e86,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:164:31: 164:38 (#0),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:164:25: 164:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(56),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).56),
                ),
                value: e88,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:164:25: 164:38 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).61),
                ),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(62),
            ),
            span: src/core/bit_array.rs:165:25: 165:30 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e90,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(62),
            ),
            span: src/core/bit_array.rs:165:25: 165:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(65),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).65),
                ),
                value: e91,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(62),
            ),
            span: src/core/bit_array.rs:165:25: 165:30 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bit_array::BitArray) -> i32 {core::bit_array::BitArray::len},
            temp_lifetime: Some(
                Node(62),
            ),
            span: src/core/bit_array.rs:165:31: 165:34 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bit_array::BitArray) -> i32 {core::bit_array::BitArray::len},
                fun: e93,
                args: [
                    e92,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:165:31: 165:36 (#0),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(62),
            ),
            span: src/core/bit_array.rs:165:25: 165:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(63),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).63),
                ),
                value: e94,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(62),
            ),
            span: src/core/bit_array.rs:165:25: 165:36 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).2),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(69),
            ),
            span: src/core/bit_array.rs:166:24: 166:28 (#0),
        },
        Expr {
            kind: Deref {
                arg: e96,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(69),
            ),
            span: src/core/bit_array.rs:166:24: 166:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(73),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).73),
                ),
                value: e97,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(69),
            ),
            span: src/core/bit_array.rs:166:24: 166:28 (#0),
        },
        Expr {
            kind: Field {
                lhs: e98,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(69),
            ),
            span: src/core/bit_array.rs:166:24: 166:33 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e99,
            },
            ty: &std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(69),
            ),
            span: src/core/bit_array.rs:166:24: 166:46 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>) -> &'a <std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::ops::Deref>::Target {<std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(69),
            ),
            span: src/core/bit_array.rs:166:24: 166:46 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>) -> &'a <std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::ops::Deref>::Target {<std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>> as std::ops::Deref>::deref},
                fun: e101,
                args: [
                    e100,
                ],
                from_hir_call: false,
                fn_span: src/core/bit_array.rs:166:24: 166:46 (#0),
            },
            ty: &std::cell::RefCell<std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(69),
            ),
            span: src/core/bit_array.rs:166:24: 166:46 (#0),
        },
        Expr {
            kind: Deref {
                arg: e102,
            },
            ty: std::cell::RefCell<std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(69),
            ),
            span: src/core/bit_array.rs:166:24: 166:46 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e103,
            },
            ty: &std::cell::RefCell<std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(69),
            ),
            span: src/core/bit_array.rs:166:24: 166:46 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(72),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).72),
                ),
                value: e104,
            },
            ty: &std::cell::RefCell<std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(69),
            ),
            span: src/core/bit_array.rs:166:24: 166:33 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::cell::RefCell<std::vec::Vec<u8>>) -> std::cell::RefMut<'a, std::vec::Vec<u8>> {std::cell::RefCell::<std::vec::Vec<u8>>::borrow_mut},
            temp_lifetime: Some(
                Node(69),
            ),
            span: src/core/bit_array.rs:166:34: 166:44 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::cell::RefCell<std::vec::Vec<u8>>) -> std::cell::RefMut<'a, std::vec::Vec<u8>> {std::cell::RefCell::<std::vec::Vec<u8>>::borrow_mut},
                fun: e106,
                args: [
                    e105,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:166:34: 166:46 (#0),
            },
            ty: std::cell::RefMut<'_, std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(69),
            ),
            span: src/core/bit_array.rs:166:24: 166:46 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(70),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).70),
                ),
                value: e107,
            },
            ty: std::cell::RefMut<'_, std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(69),
            ),
            span: src/core/bit_array.rs:166:24: 166:46 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).2),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(78),
            ),
            span: src/core/bit_array.rs:167:13: 167:17 (#0),
        },
        Expr {
            kind: Deref {
                arg: e109,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(78),
            ),
            span: src/core/bit_array.rs:167:13: 167:36 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e110,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(78),
            ),
            span: src/core/bit_array.rs:167:13: 167:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(81),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).81),
                ),
                value: e111,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(78),
            ),
            span: src/core/bit_array.rs:167:13: 167:17 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bit_array::BitArray) -> bool {core::bit_array::BitArray::clean_end_offset},
            temp_lifetime: Some(
                Node(78),
            ),
            span: src/core/bit_array.rs:167:18: 167:34 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bit_array::BitArray) -> bool {core::bit_array::BitArray::clean_end_offset},
                fun: e113,
                args: [
                    e112,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:167:18: 167:36 (#0),
            },
            ty: bool,
            temp_lifetime: Some(
                Node(78),
            ),
            span: src/core/bit_array.rs:167:13: 167:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(79),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).79),
                ),
                value: e114,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(78),
            ),
            span: src/core/bit_array.rs:167:13: 167:36 (#0),
        },
        Expr {
            kind: Unary {
                op: Not,
                arg: e115,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(78),
            ),
            span: src/core/bit_array.rs:167:12: 167:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(78),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).78),
                ),
                value: e116,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(78),
            ),
            span: src/core/bit_array.rs:167:12: 167:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(78),
                lint_level: Inherited,
                value: e117,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(78),
            ),
            span: src/core/bit_array.rs:167:12: 167:36 (#0),
        },
        Expr {
            kind: Use {
                source: e118,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(160),
            ),
            span: src/core/bit_array.rs:167:12: 167:36 (#102),
        },
        Expr {
            kind: Scope {
                region_scope: Node(83),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).83),
                ),
                value: e119,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(160),
            ),
            span: src/core/bit_array.rs:167:12: 167:36 (#102),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:168:41: 168:42 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bit_array.rs:168:41: 168:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(86),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).86),
                ),
                value: e121,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bit_array.rs:168:41: 168:42 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).2),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bit_array.rs:168:47: 168:51 (#0),
        },
        Expr {
            kind: Deref {
                arg: e123,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bit_array.rs:168:47: 168:51 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(91),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).91),
                ),
                value: e124,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bit_array.rs:168:47: 168:51 (#0),
        },
        Expr {
            kind: Field {
                lhs: e125,
                variant_index: 0,
                name: field[1],
            },
            ty: i32,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bit_array.rs:168:47: 168:55 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(90),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).90),
                ),
                value: e126,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bit_array.rs:168:47: 168:55 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).2),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bit_array.rs:168:58: 168:62 (#0),
        },
        Expr {
            kind: Deref {
                arg: e128,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bit_array.rs:168:58: 168:62 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(94),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).94),
                ),
                value: e129,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bit_array.rs:168:58: 168:62 (#0),
        },
        Expr {
            kind: Field {
                lhs: e130,
                variant_index: 0,
                name: field[2],
            },
            ty: i32,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bit_array.rs:168:58: 168:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(93),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).93),
                ),
                value: e131,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bit_array.rs:168:58: 168:66 (#0),
        },
        Expr {
            kind: Binary {
                op: Add,
                lhs: e127,
                rhs: e132,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bit_array.rs:168:46: 168:67 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(89),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).89),
                ),
                value: e133,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bit_array.rs:168:46: 168:67 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:168:70: 168:71 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bit_array.rs:168:70: 168:71 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(96),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).96),
                ),
                value: e135,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bit_array.rs:168:70: 168:71 (#0),
        },
        Expr {
            kind: Binary {
                op: Rem,
                lhs: e134,
                rhs: e136,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bit_array.rs:168:45: 168:72 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(88),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).88),
                ),
                value: e137,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bit_array.rs:168:45: 168:72 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:168:75: 168:76 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bit_array.rs:168:75: 168:76 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(97),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).97),
                ),
                value: e139,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bit_array.rs:168:75: 168:76 (#0),
        },
        Expr {
            kind: Binary {
                op: Rem,
                lhs: e138,
                rhs: e140,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bit_array.rs:168:45: 168:76 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(87),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).87),
                ),
                value: e141,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bit_array.rs:168:45: 168:76 (#0),
        },
        Expr {
            kind: Binary {
                op: Sub,
                lhs: e122,
                rhs: e142,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bit_array.rs:168:41: 168:76 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(85),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).85),
                ),
                value: e143,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bit_array.rs:168:41: 168:76 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).99),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(102),
            ),
            span: src/core/bit_array.rs:169:31: 169:52 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(103),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).103),
                ),
                value: e145,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(102),
            ),
            span: src/core/bit_array.rs:169:31: 169:52 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).61),
                ),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(102),
            ),
            span: src/core/bit_array.rs:169:55: 169:60 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e147,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(102),
            ),
            span: src/core/bit_array.rs:169:55: 169:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(107),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).107),
                ),
                value: e148,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(102),
            ),
            span: src/core/bit_array.rs:169:55: 169:60 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bit_array::BitArray) -> i32 {core::bit_array::BitArray::len},
            temp_lifetime: Some(
                Node(102),
            ),
            span: src/core/bit_array.rs:169:61: 169:64 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bit_array::BitArray) -> i32 {core::bit_array::BitArray::len},
                fun: e150,
                args: [
                    e149,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:169:61: 169:66 (#0),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(102),
            ),
            span: src/core/bit_array.rs:169:55: 169:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(105),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).105),
                ),
                value: e151,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(102),
            ),
            span: src/core/bit_array.rs:169:55: 169:66 (#0),
        },
        Expr {
            kind: Binary {
                op: Lt,
                lhs: e146,
                rhs: e152,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(102),
            ),
            span: src/core/bit_array.rs:169:31: 169:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(102),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).102),
                ),
                value: e153,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(102),
            ),
            span: src/core/bit_array.rs:169:31: 169:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(102),
                lint_level: Inherited,
                value: e154,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(102),
            ),
            span: src/core/bit_array.rs:169:31: 169:66 (#0),
        },
        Expr {
            kind: Use {
                source: e155,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/core/bit_array.rs:169:31: 169:66 (#103),
        },
        Expr {
            kind: Scope {
                region_scope: Node(109),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).109),
                ),
                value: e156,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/core/bit_array.rs:169:31: 169:66 (#103),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).99),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/core/bit_array.rs:170:17: 170:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(110),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).110),
                ),
                value: e158,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/core/bit_array.rs:170:17: 170:38 (#0),
        },
        Expr {
            kind: Block {
                block: b1,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/core/bit_array.rs:169:67: 171:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(113),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).113),
                ),
                value: e160,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/core/bit_array.rs:169:67: 171:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(113),
                lint_level: Inherited,
                value: e161,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/core/bit_array.rs:169:67: 171:14 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).61),
                ),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(114),
            ),
            span: src/core/bit_array.rs:172:17: 172:22 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e163,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(114),
            ),
            span: src/core/bit_array.rs:172:17: 172:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(117),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).117),
                ),
                value: e164,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(114),
            ),
            span: src/core/bit_array.rs:172:17: 172:22 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bit_array::BitArray) -> i32 {core::bit_array::BitArray::len},
            temp_lifetime: Some(
                Node(114),
            ),
            span: src/core/bit_array.rs:172:23: 172:26 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bit_array::BitArray) -> i32 {core::bit_array::BitArray::len},
                fun: e166,
                args: [
                    e165,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:172:23: 172:28 (#0),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(114),
            ),
            span: src/core/bit_array.rs:172:17: 172:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(115),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).115),
                ),
                value: e167,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(114),
            ),
            span: src/core/bit_array.rs:172:17: 172:28 (#0),
        },
        Expr {
            kind: Block {
                block: b2,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(114),
            ),
            span: src/core/bit_array.rs:171:20: 173:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(114),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).114),
                ),
                value: e169,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(114),
            ),
            span: src/core/bit_array.rs:171:20: 173:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(114),
                lint_level: Inherited,
                value: e170,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(114),
            ),
            span: src/core/bit_array.rs:171:20: 173:14 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(113),
                cond: e157,
                then: e162,
                else_opt: Some(
                    e171,
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/core/bit_array.rs:169:28: 173:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(101),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).101),
                ),
                value: e172,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/core/bit_array.rs:169:28: 173:14 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).76),
                ),
            },
            ty: std::cell::RefMut<'_, std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(122),
            ),
            span: src/core/bit_array.rs:174:28: 174:32 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e174,
            },
            ty: &std::cell::RefMut<'_, std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(122),
            ),
            span: src/core/bit_array.rs:174:28: 174:38 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::cell::RefMut<'_, std::vec::Vec<u8>>) -> &'a <std::cell::RefMut<'_, std::vec::Vec<u8>> as std::ops::Deref>::Target {<std::cell::RefMut<'_, std::vec::Vec<u8>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(122),
            ),
            span: src/core/bit_array.rs:174:28: 174:38 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::cell::RefMut<'_, std::vec::Vec<u8>>) -> &'a <std::cell::RefMut<'_, std::vec::Vec<u8>> as std::ops::Deref>::Target {<std::cell::RefMut<'_, std::vec::Vec<u8>> as std::ops::Deref>::deref},
                fun: e176,
                args: [
                    e175,
                ],
                from_hir_call: false,
                fn_span: src/core/bit_array.rs:174:28: 174:38 (#0),
            },
            ty: &std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(122),
            ),
            span: src/core/bit_array.rs:174:28: 174:38 (#0),
        },
        Expr {
            kind: Deref {
                arg: e177,
            },
            ty: std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(122),
            ),
            span: src/core/bit_array.rs:174:28: 174:38 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e178,
            },
            ty: &std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(122),
            ),
            span: src/core/bit_array.rs:174:28: 174:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(125),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).125),
                ),
                value: e179,
            },
            ty: &std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(122),
            ),
            span: src/core/bit_array.rs:174:28: 174:32 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::vec::Vec<u8>) -> usize {std::vec::Vec::<u8>::len},
            temp_lifetime: Some(
                Node(122),
            ),
            span: src/core/bit_array.rs:174:33: 174:36 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::vec::Vec<u8>) -> usize {std::vec::Vec::<u8>::len},
                fun: e181,
                args: [
                    e180,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:174:33: 174:38 (#0),
            },
            ty: usize,
            temp_lifetime: Some(
                Node(122),
            ),
            span: src/core/bit_array.rs:174:28: 174:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(123),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).123),
                ),
                value: e182,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(122),
            ),
            span: src/core/bit_array.rs:174:28: 174:38 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).76),
                ),
            },
            ty: std::cell::RefMut<'_, std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:13: 175:17 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: false,
                },
                arg: e184,
            },
            ty: &mut std::cell::RefMut<'_, std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:13: 175:17 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::cell::RefMut<'_, std::vec::Vec<u8>>) -> &'a mut <std::cell::RefMut<'_, std::vec::Vec<u8>> as std::ops::Deref>::Target {<std::cell::RefMut<'_, std::vec::Vec<u8>> as std::ops::DerefMut>::deref_mut},
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:13: 175:17 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::cell::RefMut<'_, std::vec::Vec<u8>>) -> &'a mut <std::cell::RefMut<'_, std::vec::Vec<u8>> as std::ops::Deref>::Target {<std::cell::RefMut<'_, std::vec::Vec<u8>> as std::ops::DerefMut>::deref_mut},
                fun: e186,
                args: [
                    e185,
                ],
                from_hir_call: false,
                fn_span: src/core/bit_array.rs:175:13: 175:17 (#0),
            },
            ty: &mut std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:13: 175:17 (#0),
        },
        Expr {
            kind: Deref {
                arg: e187,
            },
            ty: std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:13: 175:17 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: false,
                },
                arg: e188,
            },
            ty: &mut std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:13: 175:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(131),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).131),
                ),
                value: e189,
            },
            ty: &mut std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:13: 175:17 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).128),
                ),
            },
            ty: usize,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:18: 175:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(134),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).134),
                ),
                value: e191,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:18: 175:26 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        1,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:175:29: 175:30 (#0),
                },
                neg: false,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:29: 175:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(136),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).136),
                ),
                value: e193,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:29: 175:30 (#0),
        },
        Expr {
            kind: Binary {
                op: Sub,
                lhs: e192,
                rhs: e194,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:18: 175:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(133),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).133),
                ),
                value: e195,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:18: 175:30 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::vec::Vec<u8>, usize) -> &'a mut <std::vec::Vec<u8> as std::ops::Index<usize>>::Output {<std::vec::Vec<u8> as std::ops::IndexMut<usize>>::index_mut},
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:13: 175:31 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::vec::Vec<u8>, usize) -> &'a mut <std::vec::Vec<u8> as std::ops::Index<usize>>::Output {<std::vec::Vec<u8> as std::ops::IndexMut<usize>>::index_mut},
                fun: e197,
                args: [
                    e190,
                    e196,
                ],
                from_hir_call: false,
                fn_span: src/core/bit_array.rs:175:13: 175:31 (#0),
            },
            ty: &mut u8,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:13: 175:31 (#0),
        },
        Expr {
            kind: Deref {
                arg: e198,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:13: 175:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(130),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).130),
                ),
                value: e199,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:13: 175:31 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).61),
                ),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:35: 175:40 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e201,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:35: 175:54 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(144),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).144),
                ),
                value: e202,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:35: 175:40 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).121),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:45: 175:53 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(146),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).146),
                ),
                value: e204,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:45: 175:53 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut core::bit_array::BitArray, i32) -> std::option::Option<core::bit_array::BitArray> {core::bit_array::BitArray::eat},
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:41: 175:44 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut core::bit_array::BitArray, i32) -> std::option::Option<core::bit_array::BitArray> {core::bit_array::BitArray::eat},
                fun: e206,
                args: [
                    e203,
                    e205,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:175:41: 175:54 (#0),
            },
            ty: std::option::Option<core::bit_array::BitArray>,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:35: 175:54 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(142),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).142),
                ),
                value: e207,
            },
            ty: std::option::Option<core::bit_array::BitArray>,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:35: 175:54 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::option::Option<core::bit_array::BitArray>) -> core::bit_array::BitArray {std::option::Option::<core::bit_array::BitArray>::unwrap},
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:55: 175:61 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::option::Option<core::bit_array::BitArray>) -> core::bit_array::BitArray {std::option::Option::<core::bit_array::BitArray>::unwrap},
                fun: e209,
                args: [
                    e208,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:175:55: 175:63 (#0),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:35: 175:63 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e210,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:35: 175:84 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(140),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).140),
                ),
                value: e211,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:35: 175:63 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).121),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:69: 175:77 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(149),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).149),
                ),
                value: e213,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:69: 175:77 (#0),
        },
        Expr {
            kind: Cast {
                source: e214,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:69: 175:83 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(148),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).148),
                ),
                value: e215,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:69: 175:83 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bit_array::BitArray, u8) -> u8 {core::bit_array::BitArray::peek},
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:64: 175:68 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bit_array::BitArray, u8) -> u8 {core::bit_array::BitArray::peek},
                fun: e217,
                args: [
                    e212,
                    e216,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:175:64: 175:84 (#0),
            },
            ty: u8,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:35: 175:84 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(138),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).138),
                ),
                value: e218,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:35: 175:84 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:175:89: 175:90 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:89: 175:90 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(154),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).154),
                ),
                value: e220,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:89: 175:90 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).99),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:93: 175:114 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(155),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).155),
                ),
                value: e222,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:93: 175:114 (#0),
        },
        Expr {
            kind: Binary {
                op: Sub,
                lhs: e221,
                rhs: e223,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:88: 175:115 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(153),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).153),
                ),
                value: e224,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:88: 175:115 (#0),
        },
        Expr {
            kind: Binary {
                op: Shr,
                lhs: e219,
                rhs: e225,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:35: 175:115 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(137),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).137),
                ),
                value: e226,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:35: 175:115 (#0),
        },
        Expr {
            kind: AssignOp {
                op: BitOr,
                lhs: e200,
                rhs: e227,
            },
            ty: (),
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:13: 175:115 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(129),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).129),
                ),
                value: e228,
            },
            ty: (),
            temp_lifetime: Some(
                Node(157),
            ),
            span: src/core/bit_array.rs:175:13: 175:115 (#0),
        },
        Expr {
            kind: Block {
                block: b3,
            },
            ty: (),
            temp_lifetime: Some(
                Node(159),
            ),
            span: src/core/bit_array.rs:167:37: 176:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(159),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).159),
                ),
                value: e230,
            },
            ty: (),
            temp_lifetime: Some(
                Node(159),
            ),
            span: src/core/bit_array.rs:167:37: 176:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(159),
                lint_level: Inherited,
                value: e231,
            },
            ty: (),
            temp_lifetime: Some(
                Node(159),
            ),
            span: src/core/bit_array.rs:167:37: 176:10 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(159),
                cond: e120,
                then: e232,
                else_opt: None,
            },
            ty: (),
            temp_lifetime: Some(
                Node(160),
            ),
            span: src/core/bit_array.rs:167:9: 176:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(77),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).77),
                ),
                value: e233,
            },
            ty: (),
            temp_lifetime: Some(
                Node(160),
            ),
            span: src/core/bit_array.rs:167:9: 176:10 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).61),
                ),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(162),
            ),
            span: src/core/bit_array.rs:177:15: 177:20 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e235,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(162),
            ),
            span: src/core/bit_array.rs:177:15: 177:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(165),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).165),
                ),
                value: e236,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(162),
            ),
            span: src/core/bit_array.rs:177:15: 177:20 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bit_array::BitArray) -> i32 {core::bit_array::BitArray::len},
            temp_lifetime: Some(
                Node(162),
            ),
            span: src/core/bit_array.rs:177:21: 177:24 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bit_array::BitArray) -> i32 {core::bit_array::BitArray::len},
                fun: e238,
                args: [
                    e237,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:177:21: 177:26 (#0),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(162),
            ),
            span: src/core/bit_array.rs:177:15: 177:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(163),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).163),
                ),
                value: e239,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(162),
            ),
            span: src/core/bit_array.rs:177:15: 177:26 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        0,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:177:29: 177:30 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(162),
            ),
            span: src/core/bit_array.rs:177:29: 177:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(167),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).167),
                ),
                value: e241,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(162),
            ),
            span: src/core/bit_array.rs:177:29: 177:30 (#0),
        },
        Expr {
            kind: Binary {
                op: Gt,
                lhs: e240,
                rhs: e242,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(162),
            ),
            span: src/core/bit_array.rs:177:15: 177:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(162),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).162),
                ),
                value: e243,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(162),
            ),
            span: src/core/bit_array.rs:177:15: 177:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(162),
                lint_level: Inherited,
                value: e244,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(162),
            ),
            span: src/core/bit_array.rs:177:15: 177:30 (#0),
        },
        Expr {
            kind: Use {
                source: e245,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(221),
            ),
            span: src/core/bit_array.rs:177:15: 177:30 (#105),
        },
        Expr {
            kind: Scope {
                region_scope: Node(168),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).168),
                ),
                value: e246,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(221),
            ),
            span: src/core/bit_array.rs:177:15: 177:30 (#105),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).61),
                ),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(171),
            ),
            span: src/core/bit_array.rs:178:31: 178:36 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e248,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(171),
            ),
            span: src/core/bit_array.rs:178:31: 178:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(174),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).174),
                ),
                value: e249,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(171),
            ),
            span: src/core/bit_array.rs:178:31: 178:36 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bit_array::BitArray) -> i32 {core::bit_array::BitArray::len},
            temp_lifetime: Some(
                Node(171),
            ),
            span: src/core/bit_array.rs:178:37: 178:40 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bit_array::BitArray) -> i32 {core::bit_array::BitArray::len},
                fun: e251,
                args: [
                    e250,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:178:37: 178:42 (#0),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(171),
            ),
            span: src/core/bit_array.rs:178:31: 178:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(172),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).172),
                ),
                value: e252,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(171),
            ),
            span: src/core/bit_array.rs:178:31: 178:42 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:178:45: 178:46 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(171),
            ),
            span: src/core/bit_array.rs:178:45: 178:46 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(176),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).176),
                ),
                value: e254,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(171),
            ),
            span: src/core/bit_array.rs:178:45: 178:46 (#0),
        },
        Expr {
            kind: Binary {
                op: Gt,
                lhs: e253,
                rhs: e255,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(171),
            ),
            span: src/core/bit_array.rs:178:31: 178:46 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(171),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).171),
                ),
                value: e256,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(171),
            ),
            span: src/core/bit_array.rs:178:31: 178:46 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(171),
                lint_level: Inherited,
                value: e257,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(171),
            ),
            span: src/core/bit_array.rs:178:31: 178:46 (#0),
        },
        Expr {
            kind: Use {
                source: e258,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(169),
            ),
            span: src/core/bit_array.rs:178:31: 178:46 (#106),
        },
        Expr {
            kind: Scope {
                region_scope: Node(177),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).177),
                ),
                value: e259,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(169),
            ),
            span: src/core/bit_array.rs:178:31: 178:46 (#106),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:179:17: 179:18 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(180),
            ),
            span: src/core/bit_array.rs:179:17: 179:18 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(178),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).178),
                ),
                value: e261,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(180),
            ),
            span: src/core/bit_array.rs:179:17: 179:18 (#0),
        },
        Expr {
            kind: Block {
                block: b4,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(180),
            ),
            span: src/core/bit_array.rs:178:47: 180:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(180),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).180),
                ),
                value: e263,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(180),
            ),
            span: src/core/bit_array.rs:178:47: 180:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(180),
                lint_level: Inherited,
                value: e264,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(180),
            ),
            span: src/core/bit_array.rs:178:47: 180:14 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).61),
                ),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(181),
            ),
            span: src/core/bit_array.rs:181:17: 181:22 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e266,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(181),
            ),
            span: src/core/bit_array.rs:181:17: 181:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(184),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).184),
                ),
                value: e267,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(181),
            ),
            span: src/core/bit_array.rs:181:17: 181:22 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bit_array::BitArray) -> i32 {core::bit_array::BitArray::len},
            temp_lifetime: Some(
                Node(181),
            ),
            span: src/core/bit_array.rs:181:23: 181:26 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bit_array::BitArray) -> i32 {core::bit_array::BitArray::len},
                fun: e269,
                args: [
                    e268,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:181:23: 181:28 (#0),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(181),
            ),
            span: src/core/bit_array.rs:181:17: 181:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(182),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).182),
                ),
                value: e270,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(181),
            ),
            span: src/core/bit_array.rs:181:17: 181:28 (#0),
        },
        Expr {
            kind: Block {
                block: b5,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(181),
            ),
            span: src/core/bit_array.rs:180:20: 182:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(181),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).181),
                ),
                value: e272,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(181),
            ),
            span: src/core/bit_array.rs:180:20: 182:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(181),
                lint_level: Inherited,
                value: e273,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(181),
            ),
            span: src/core/bit_array.rs:180:20: 182:14 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(180),
                cond: e260,
                then: e265,
                else_opt: Some(
                    e274,
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(169),
            ),
            span: src/core/bit_array.rs:178:28: 182:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(170),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).170),
                ),
                value: e275,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(169),
            ),
            span: src/core/bit_array.rs:178:28: 182:14 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).61),
                ),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(189),
            ),
            span: src/core/bit_array.rs:183:21: 183:26 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e277,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(189),
            ),
            span: src/core/bit_array.rs:183:21: 183:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(196),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).196),
                ),
                value: e278,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(189),
            ),
            span: src/core/bit_array.rs:183:21: 183:26 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).188),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(189),
            ),
            span: src/core/bit_array.rs:183:31: 183:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(198),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).198),
                ),
                value: e280,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(189),
            ),
            span: src/core/bit_array.rs:183:31: 183:39 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut core::bit_array::BitArray, i32) -> std::option::Option<core::bit_array::BitArray> {core::bit_array::BitArray::eat},
            temp_lifetime: Some(
                Node(189),
            ),
            span: src/core/bit_array.rs:183:27: 183:30 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut core::bit_array::BitArray, i32) -> std::option::Option<core::bit_array::BitArray> {core::bit_array::BitArray::eat},
                fun: e282,
                args: [
                    e279,
                    e281,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:183:27: 183:40 (#0),
            },
            ty: std::option::Option<core::bit_array::BitArray>,
            temp_lifetime: Some(
                Node(189),
            ),
            span: src/core/bit_array.rs:183:21: 183:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(194),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).194),
                ),
                value: e283,
            },
            ty: std::option::Option<core::bit_array::BitArray>,
            temp_lifetime: Some(
                Node(189),
            ),
            span: src/core/bit_array.rs:183:21: 183:40 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::option::Option<core::bit_array::BitArray>) -> core::bit_array::BitArray {std::option::Option::<core::bit_array::BitArray>::unwrap},
            temp_lifetime: Some(
                Node(189),
            ),
            span: src/core/bit_array.rs:183:41: 183:47 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::option::Option<core::bit_array::BitArray>) -> core::bit_array::BitArray {std::option::Option::<core::bit_array::BitArray>::unwrap},
                fun: e285,
                args: [
                    e284,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:183:41: 183:49 (#0),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(189),
            ),
            span: src/core/bit_array.rs:183:21: 183:49 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e286,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(189),
            ),
            span: src/core/bit_array.rs:183:21: 183:70 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(192),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).192),
                ),
                value: e287,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(189),
            ),
            span: src/core/bit_array.rs:183:21: 183:49 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).188),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(189),
            ),
            span: src/core/bit_array.rs:183:55: 183:63 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(201),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).201),
                ),
                value: e289,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(189),
            ),
            span: src/core/bit_array.rs:183:55: 183:63 (#0),
        },
        Expr {
            kind: Cast {
                source: e290,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(189),
            ),
            span: src/core/bit_array.rs:183:55: 183:69 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(200),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).200),
                ),
                value: e291,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(189),
            ),
            span: src/core/bit_array.rs:183:55: 183:69 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bit_array::BitArray, u8) -> u8 {core::bit_array::BitArray::peek},
            temp_lifetime: Some(
                Node(189),
            ),
            span: src/core/bit_array.rs:183:50: 183:54 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bit_array::BitArray, u8) -> u8 {core::bit_array::BitArray::peek},
                fun: e293,
                args: [
                    e288,
                    e292,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:183:50: 183:70 (#0),
            },
            ty: u8,
            temp_lifetime: Some(
                Node(189),
            ),
            span: src/core/bit_array.rs:183:21: 183:70 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(190),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).190),
                ),
                value: e294,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(189),
            ),
            span: src/core/bit_array.rs:183:21: 183:70 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).76),
                ),
            },
            ty: std::cell::RefMut<'_, std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(213),
            ),
            span: src/core/bit_array.rs:184:13: 184:17 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: false,
                },
                arg: e296,
            },
            ty: &mut std::cell::RefMut<'_, std::vec::Vec<u8>>,
            temp_lifetime: Some(
                Node(213),
            ),
            span: src/core/bit_array.rs:184:13: 184:25 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::cell::RefMut<'_, std::vec::Vec<u8>>) -> &'a mut <std::cell::RefMut<'_, std::vec::Vec<u8>> as std::ops::Deref>::Target {<std::cell::RefMut<'_, std::vec::Vec<u8>> as std::ops::DerefMut>::deref_mut},
            temp_lifetime: Some(
                Node(213),
            ),
            span: src/core/bit_array.rs:184:13: 184:25 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::cell::RefMut<'_, std::vec::Vec<u8>>) -> &'a mut <std::cell::RefMut<'_, std::vec::Vec<u8>> as std::ops::Deref>::Target {<std::cell::RefMut<'_, std::vec::Vec<u8>> as std::ops::DerefMut>::deref_mut},
                fun: e298,
                args: [
                    e297,
                ],
                from_hir_call: false,
                fn_span: src/core/bit_array.rs:184:13: 184:25 (#0),
            },
            ty: &mut std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(213),
            ),
            span: src/core/bit_array.rs:184:13: 184:25 (#0),
        },
        Expr {
            kind: Deref {
                arg: e299,
            },
            ty: std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(213),
            ),
            span: src/core/bit_array.rs:184:13: 184:25 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e300,
            },
            ty: &mut std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(213),
            ),
            span: src/core/bit_array.rs:184:13: 184:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(209),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).209),
                ),
                value: e301,
            },
            ty: &mut std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(213),
            ),
            span: src/core/bit_array.rs:184:13: 184:17 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).206),
                ),
            },
            ty: u8,
            temp_lifetime: Some(
                Node(213),
            ),
            span: src/core/bit_array.rs:184:23: 184:24 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(211),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).211),
                ),
                value: e303,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(213),
            ),
            span: src/core/bit_array.rs:184:23: 184:24 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::vec::Vec<u8>, u8) {std::vec::Vec::<u8>::push},
            temp_lifetime: Some(
                Node(213),
            ),
            span: src/core/bit_array.rs:184:18: 184:22 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::vec::Vec<u8>, u8) {std::vec::Vec::<u8>::push},
                fun: e305,
                args: [
                    e302,
                    e304,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:184:18: 184:25 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(213),
            ),
            span: src/core/bit_array.rs:184:13: 184:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(207),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).207),
                ),
                value: e306,
            },
            ty: (),
            temp_lifetime: Some(
                Node(213),
            ),
            span: src/core/bit_array.rs:184:13: 184:25 (#0),
        },
        Expr {
            kind: Block {
                block: b6,
            },
            ty: (),
            temp_lifetime: Some(
                Node(215),
            ),
            span: src/core/bit_array.rs:177:31: 185:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(215),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).215),
                ),
                value: e308,
            },
            ty: (),
            temp_lifetime: Some(
                Node(215),
            ),
            span: src/core/bit_array.rs:177:31: 185:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(215),
                lint_level: Inherited,
                value: e309,
            },
            ty: (),
            temp_lifetime: Some(
                Node(215),
            ),
            span: src/core/bit_array.rs:177:31: 185:10 (#0),
        },
        Expr {
            kind: Break {
                label: Node(161),
                value: None,
            },
            ty: !,
            temp_lifetime: Some(
                Node(217),
            ),
            span: src/core/bit_array.rs:177:9: 185:10 (#104),
        },
        Expr {
            kind: NeverToAny {
                source: e311,
            },
            ty: (),
            temp_lifetime: Some(
                Node(217),
            ),
            span: src/core/bit_array.rs:177:9: 185:10 (#104),
        },
        Expr {
            kind: Scope {
                region_scope: Node(216),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).216),
                ),
                value: e312,
            },
            ty: (),
            temp_lifetime: Some(
                Node(217),
            ),
            span: src/core/bit_array.rs:177:9: 185:10 (#104),
        },
        Expr {
            kind: Block {
                block: b7,
            },
            ty: !,
            temp_lifetime: Some(
                Node(219),
            ),
            span: src/core/bit_array.rs:177:9: 185:10 (#104),
        },
        Expr {
            kind: NeverToAny {
                source: e314,
            },
            ty: (),
            temp_lifetime: Some(
                Node(219),
            ),
            span: src/core/bit_array.rs:177:9: 185:10 (#104),
        },
        Expr {
            kind: Scope {
                region_scope: Node(219),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).219),
                ),
                value: e315,
            },
            ty: (),
            temp_lifetime: Some(
                Node(219),
            ),
            span: src/core/bit_array.rs:177:9: 185:10 (#104),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(219),
                lint_level: Inherited,
                value: e316,
            },
            ty: (),
            temp_lifetime: Some(
                Node(219),
            ),
            span: src/core/bit_array.rs:177:9: 185:10 (#104),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(215),
                cond: e247,
                then: e310,
                else_opt: Some(
                    e317,
                ),
            },
            ty: (),
            temp_lifetime: Some(
                Node(221),
            ),
            span: src/core/bit_array.rs:177:9: 185:10 (#104),
        },
        Expr {
            kind: Scope {
                region_scope: Node(220),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).220),
                ),
                value: e318,
            },
            ty: (),
            temp_lifetime: Some(
                Node(221),
            ),
            span: src/core/bit_array.rs:177:9: 185:10 (#104),
        },
        Expr {
            kind: Block {
                block: b8,
            },
            ty: (),
            temp_lifetime: Some(
                Node(221),
            ),
            span: src/core/bit_array.rs:177:9: 185:10 (#104),
        },
        Expr {
            kind: Loop {
                body: e320,
            },
            ty: (),
            temp_lifetime: Some(
                Node(222),
            ),
            span: src/core/bit_array.rs:177:9: 185:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(161),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).161),
                ),
                value: e321,
            },
            ty: (),
            temp_lifetime: Some(
                Node(222),
            ),
            span: src/core/bit_array.rs:177:9: 185:10 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).2),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(229),
            ),
            span: src/core/bit_array.rs:186:9: 186:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e323,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(229),
            ),
            span: src/core/bit_array.rs:186:9: 186:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(225),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).225),
                ),
                value: e324,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(229),
            ),
            span: src/core/bit_array.rs:186:9: 186:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e325,
                variant_index: 0,
                name: field[2],
            },
            ty: i32,
            temp_lifetime: Some(
                Node(229),
            ),
            span: src/core/bit_array.rs:186:9: 186:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(224),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).224),
                ),
                value: e326,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(229),
            ),
            span: src/core/bit_array.rs:186:9: 186:17 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).68),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(229),
            ),
            span: src/core/bit_array.rs:186:21: 186:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(227),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).227),
                ),
                value: e328,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(229),
            ),
            span: src/core/bit_array.rs:186:21: 186:30 (#0),
        },
        Expr {
            kind: AssignOp {
                op: Add,
                lhs: e327,
                rhs: e329,
            },
            ty: (),
            temp_lifetime: Some(
                Node(229),
            ),
            span: src/core/bit_array.rs:186:9: 186:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(223),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).223),
                ),
                value: e330,
            },
            ty: (),
            temp_lifetime: Some(
                Node(229),
            ),
            span: src/core/bit_array.rs:186:9: 186:30 (#0),
        },
        Expr {
            kind: Block {
                block: b9,
            },
            ty: (),
            temp_lifetime: Some(
                Node(231),
            ),
            span: src/core/bit_array.rs:155:48: 187:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(231),
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).231),
                ),
                value: e332,
            },
            ty: (),
            temp_lifetime: Some(
                Node(231),
            ),
            span: src/core/bit_array.rs:155:48: 187:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(231),
                lint_level: Inherited,
                value: e333,
            },
            ty: (),
            temp_lifetime: Some(
                Node(231),
            ),
            span: src/core/bit_array.rs:155:48: 187:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 52, first_statement_index: 0},
                init_scope: Node(25),
                pattern: Pat {
                    ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
                    span: src/core/bit_array.rs:160:17: 160:28 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "cloned_data",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).44),
                        ),
                        ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e68,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).43),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(25),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(51),
                expr: e77,
            },
            opt_destruction_scope: Some(
                Destruction(51),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(54),
                expr: e82,
            },
            opt_destruction_scope: Some(
                Destruction(54),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 230, first_statement_index: 1},
                init_scope: Node(55),
                pattern: Pat {
                    ty: core::bit_array::BitArray,
                    span: src/core/bit_array.rs:164:13: 164:22 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "other",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).61),
                        ),
                        ty: core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e89,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).60),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(55),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 230, first_statement_index: 2},
                init_scope: Node(62),
                pattern: Pat {
                    ty: i32,
                    span: src/core/bit_array.rs:165:13: 165:22 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "other_len",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).68),
                        ),
                        ty: i32,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e95,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).67),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(62),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 230, first_statement_index: 3},
                init_scope: Node(69),
                pattern: Pat {
                    ty: std::cell::RefMut<'_, std::vec::Vec<u8>>,
                    span: src/core/bit_array.rs:166:13: 166:21 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "data",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).76),
                        ),
                        ty: std::cell::RefMut<'_, std::vec::Vec<u8>>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e108,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).75),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(69),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 158, first_statement_index: 0},
                init_scope: Node(84),
                pattern: Pat {
                    ty: i32,
                    span: src/core/bit_array.rs:168:17: 168:38 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "num_bits_free_in_self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).99),
                        ),
                        ty: i32,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e144,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).98),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(84),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 158, first_statement_index: 1},
                init_scope: Node(100),
                pattern: Pat {
                    ty: i32,
                    span: src/core/bit_array.rs:169:17: 169:25 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "num_bits",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).121),
                        ),
                        ty: i32,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e173,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).120),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(100),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 158, first_statement_index: 2},
                init_scope: Node(122),
                pattern: Pat {
                    ty: usize,
                    span: src/core/bit_array.rs:174:17: 174:25 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "data_len",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).128),
                        ),
                        ty: usize,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e183,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).127),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(122),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(157),
                expr: e229,
            },
            opt_destruction_scope: Some(
                Destruction(157),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(160),
                expr: e234,
            },
            opt_destruction_scope: Some(
                Destruction(160),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 214, first_statement_index: 0},
                init_scope: Node(169),
                pattern: Pat {
                    ty: i32,
                    span: src/core/bit_array.rs:178:17: 178:25 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "num_bits",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).188),
                        ),
                        ty: i32,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e276,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).187),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(169),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 214, first_statement_index: 1},
                init_scope: Node(189),
                pattern: Pat {
                    ty: u8,
                    span: src/core/bit_array.rs:183:17: 183:18 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "b",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).206),
                        ),
                        ty: u8,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e295,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).205),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(189),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(213),
                expr: e307,
            },
            opt_destruction_scope: Some(
                Destruction(213),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(217),
                expr: e313,
            },
            opt_destruction_scope: Some(
                Destruction(217),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(222),
                expr: e322,
            },
            opt_destruction_scope: Some(
                Destruction(222),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(229),
                expr: e331,
            },
            opt_destruction_scope: Some(
                Destruction(229),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &mut core::bit_array::BitArray,
                    span: src/core/bit_array.rs:155:19: 155:28 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).2),
                        ),
                        ty: &mut core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut core::bit_array::BitArray,
            ty_span: None,
            self_kind: Some(
                MutRef,
            ),
            hir_id: Some(
                HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &core::bit_array::BitArray,
                    span: src/core/bit_array.rs:155:30: 155:35 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "other",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).4),
                        ),
                        ty: &core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &core::bit_array::BitArray,
            ty_span: Some(
                src/core/bit_array.rs:155:37: 155:46 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:51 ~ andrew_fuzz[741f]::core::bit_array::{impl#0}::extend).3),
            ),
        },
    ],
}

DefId(0:53 ~ andrew_fuzz[741f]::core::bit_array::{impl#1}::add_assign):
Thir {
    body_type: Fn(
        ([&mut core::bit_array::BitArray, core::bit_array::BitArray]; c_variadic: false)->(),
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(13),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:192:41: 194:6 (#0),
            stmts: [
                s0,
            ],
            expr: None,
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:53 ~ andrew_fuzz[741f]::core::bit_array::{impl#1}::add_assign).2),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/core/bit_array.rs:193:9: 193:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/core/bit_array.rs:193:9: 193:26 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e1,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/core/bit_array.rs:193:9: 193:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:53 ~ andrew_fuzz[741f]::core::bit_array::{impl#1}::add_assign).7),
                ),
                value: e2,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/core/bit_array.rs:193:9: 193:13 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:53 ~ andrew_fuzz[741f]::core::bit_array::{impl#1}::add_assign).4),
                ),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/core/bit_array.rs:193:22: 193:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:53 ~ andrew_fuzz[741f]::core::bit_array::{impl#1}::add_assign).10),
                ),
                value: e4,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/core/bit_array.rs:193:22: 193:25 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e5,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/core/bit_array.rs:193:21: 193:25 (#0),
        },
        Expr {
            kind: Deref {
                arg: e6,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/core/bit_array.rs:193:21: 193:25 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e7,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/core/bit_array.rs:193:21: 193:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:53 ~ andrew_fuzz[741f]::core::bit_array::{impl#1}::add_assign).9),
                ),
                value: e8,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/core/bit_array.rs:193:21: 193:25 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b> fn(&'a mut core::bit_array::BitArray, &'b core::bit_array::BitArray) {core::bit_array::BitArray::extend},
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/core/bit_array.rs:193:14: 193:20 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b> fn(&'a mut core::bit_array::BitArray, &'b core::bit_array::BitArray) {core::bit_array::BitArray::extend},
                fun: e10,
                args: [
                    e3,
                    e9,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:193:14: 193:26 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/core/bit_array.rs:193:9: 193:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:53 ~ andrew_fuzz[741f]::core::bit_array::{impl#1}::add_assign).5),
                ),
                value: e11,
            },
            ty: (),
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/core/bit_array.rs:193:9: 193:26 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(14),
            ),
            span: src/core/bit_array.rs:192:41: 194:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:53 ~ andrew_fuzz[741f]::core::bit_array::{impl#1}::add_assign).14),
                ),
                value: e13,
            },
            ty: (),
            temp_lifetime: Some(
                Node(14),
            ),
            span: src/core/bit_array.rs:192:41: 194:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(14),
                lint_level: Inherited,
                value: e14,
            },
            ty: (),
            temp_lifetime: Some(
                Node(14),
            ),
            span: src/core/bit_array.rs:192:41: 194:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(12),
                expr: e12,
            },
            opt_destruction_scope: Some(
                Destruction(12),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &mut core::bit_array::BitArray,
                    span: src/core/bit_array.rs:192:19: 192:28 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:53 ~ andrew_fuzz[741f]::core::bit_array::{impl#1}::add_assign).2),
                        ),
                        ty: &mut core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut core::bit_array::BitArray,
            ty_span: None,
            self_kind: Some(
                MutRef,
            ),
            hir_id: Some(
                HirId(DefId(0:53 ~ andrew_fuzz[741f]::core::bit_array::{impl#1}::add_assign).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: core::bit_array::BitArray,
                    span: src/core/bit_array.rs:192:30: 192:33 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "rhs",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:53 ~ andrew_fuzz[741f]::core::bit_array::{impl#1}::add_assign).4),
                        ),
                        ty: core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: core::bit_array::BitArray,
            ty_span: Some(
                src/core/bit_array.rs:192:35: 192:39 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:53 ~ andrew_fuzz[741f]::core::bit_array::{impl#1}::add_assign).3),
            ),
        },
    ],
}

DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq):
Thir {
    body_type: Fn(
        ([&core::bit_array::BitArray, &core::bit_array::BitArray]; c_variadic: false)->bool,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(19),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:199:38: 201:10 (#0),
            stmts: [
                s0,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(59),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:206:41: 208:14 (#0),
            stmts: [],
            expr: Some(
                e72,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(64),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:208:20: 210:14 (#0),
            stmts: [],
            expr: Some(
                e77,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(123),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:215:25: 217:14 (#0),
            stmts: [
                s10,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(125),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:204:27: 218:10 (#0),
            stmts: [
                s4,
                s5,
                s6,
                s7,
                s8,
                s9,
            ],
            expr: Some(
                e143,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(129),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:204:9: 218:10 (#108),
            stmts: [
                s11,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(132),
            opt_destruction_scope: Some(
                Destruction(132),
            ),
            span: src/core/bit_array.rs:204:9: 218:10 (#108),
            stmts: [],
            expr: Some(
                e155,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(135),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:198:40: 220:6 (#0),
            stmts: [
                s1,
                s2,
                s3,
                s12,
            ],
            expr: Some(
                e160,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).2),
                ),
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:199:12: 199:16 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:199:12: 199:22 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e1,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:199:12: 199:22 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).9),
                ),
                value: e2,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:199:12: 199:16 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bit_array::BitArray) -> i32 {core::bit_array::BitArray::len},
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:199:17: 199:20 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bit_array::BitArray) -> i32 {core::bit_array::BitArray::len},
                fun: e4,
                args: [
                    e3,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:199:17: 199:22 (#0),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:199:12: 199:22 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).7),
                ),
                value: e5,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:199:12: 199:22 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).4),
                ),
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:199:26: 199:31 (#0),
        },
        Expr {
            kind: Deref {
                arg: e7,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:199:26: 199:37 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e8,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:199:26: 199:37 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).13),
                ),
                value: e9,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:199:26: 199:31 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bit_array::BitArray) -> i32 {core::bit_array::BitArray::len},
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:199:32: 199:35 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bit_array::BitArray) -> i32 {core::bit_array::BitArray::len},
                fun: e11,
                args: [
                    e10,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:199:32: 199:37 (#0),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:199:26: 199:37 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).11),
                ),
                value: e12,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:199:26: 199:37 (#0),
        },
        Expr {
            kind: Binary {
                op: Ne,
                lhs: e6,
                rhs: e13,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:199:12: 199:37 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).6),
                ),
                value: e14,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:199:12: 199:37 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(6),
                lint_level: Inherited,
                value: e15,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bit_array.rs:199:12: 199:37 (#0),
        },
        Expr {
            kind: Use {
                source: e16,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/core/bit_array.rs:199:12: 199:37 (#107),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).15),
                ),
                value: e17,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/core/bit_array.rs:199:12: 199:37 (#107),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Bool(
                        false,
                    ),
                    span: src/core/bit_array.rs:200:20: 200:25 (#0),
                },
                neg: false,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bit_array.rs:200:20: 200:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).17),
                ),
                value: e19,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bit_array.rs:200:20: 200:25 (#0),
        },
        Expr {
            kind: Return {
                value: Some(
                    e20,
                ),
            },
            ty: !,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bit_array.rs:200:13: 200:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(16),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).16),
                ),
                value: e21,
            },
            ty: !,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bit_array.rs:200:13: 200:25 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: !,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:199:38: 201:10 (#0),
        },
        Expr {
            kind: NeverToAny {
                source: e23,
            },
            ty: (),
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:199:38: 201:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(20),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).20),
                ),
                value: e24,
            },
            ty: (),
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:199:38: 201:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(20),
                lint_level: Inherited,
                value: e25,
            },
            ty: (),
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/bit_array.rs:199:38: 201:10 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(20),
                cond: e18,
                then: e26,
                else_opt: None,
            },
            ty: (),
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/core/bit_array.rs:199:9: 201:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).5),
                ),
                value: e27,
            },
            ty: (),
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/core/bit_array.rs:199:9: 201:10 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).2),
                ),
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/core/bit_array.rs:202:21: 202:25 (#0),
        },
        Expr {
            kind: Deref {
                arg: e29,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/core/bit_array.rs:202:21: 202:33 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e30,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/core/bit_array.rs:202:21: 202:33 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).25),
                ),
                value: e31,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/core/bit_array.rs:202:21: 202:25 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bit_array::BitArray) -> core::bit_array::BitArray {core::bit_array::BitArray::clone},
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/core/bit_array.rs:202:26: 202:31 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bit_array::BitArray) -> core::bit_array::BitArray {core::bit_array::BitArray::clone},
                fun: e33,
                args: [
                    e32,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:202:26: 202:33 (#0),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/core/bit_array.rs:202:21: 202:33 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(23),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).23),
                ),
                value: e34,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/core/bit_array.rs:202:21: 202:33 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).4),
                ),
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/core/bit_array.rs:203:21: 203:26 (#0),
        },
        Expr {
            kind: Deref {
                arg: e36,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/core/bit_array.rs:203:21: 203:34 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e37,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/core/bit_array.rs:203:21: 203:34 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(32),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).32),
                ),
                value: e38,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/core/bit_array.rs:203:21: 203:26 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bit_array::BitArray) -> core::bit_array::BitArray {core::bit_array::BitArray::clone},
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/core/bit_array.rs:203:27: 203:32 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bit_array::BitArray) -> core::bit_array::BitArray {core::bit_array::BitArray::clone},
                fun: e40,
                args: [
                    e39,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:203:27: 203:34 (#0),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/core/bit_array.rs:203:21: 203:34 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(30),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).30),
                ),
                value: e41,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/core/bit_array.rs:203:21: 203:34 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).28),
                ),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bit_array.rs:204:15: 204:16 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e43,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bit_array.rs:204:15: 204:22 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(40),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).40),
                ),
                value: e44,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bit_array.rs:204:15: 204:16 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bit_array::BitArray) -> i32 {core::bit_array::BitArray::len},
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bit_array.rs:204:17: 204:20 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bit_array::BitArray) -> i32 {core::bit_array::BitArray::len},
                fun: e46,
                args: [
                    e45,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:204:17: 204:22 (#0),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bit_array.rs:204:15: 204:22 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(38),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).38),
                ),
                value: e47,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bit_array.rs:204:15: 204:22 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        0,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:204:25: 204:26 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bit_array.rs:204:25: 204:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(42),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).42),
                ),
                value: e49,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bit_array.rs:204:25: 204:26 (#0),
        },
        Expr {
            kind: Binary {
                op: Gt,
                lhs: e48,
                rhs: e50,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bit_array.rs:204:15: 204:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(37),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).37),
                ),
                value: e51,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bit_array.rs:204:15: 204:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(37),
                lint_level: Inherited,
                value: e52,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bit_array.rs:204:15: 204:26 (#0),
        },
        Expr {
            kind: Use {
                source: e53,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(132),
            ),
            span: src/core/bit_array.rs:204:15: 204:26 (#109),
        },
        Expr {
            kind: Scope {
                region_scope: Node(43),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).43),
                ),
                value: e54,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(132),
            ),
            span: src/core/bit_array.rs:204:15: 204:26 (#109),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).28),
                ),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(44),
            ),
            span: src/core/bit_array.rs:205:25: 205:26 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e56,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(44),
            ),
            span: src/core/bit_array.rs:205:25: 205:32 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(47),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).47),
                ),
                value: e57,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(44),
            ),
            span: src/core/bit_array.rs:205:25: 205:26 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bit_array::BitArray) -> i32 {core::bit_array::BitArray::len},
            temp_lifetime: Some(
                Node(44),
            ),
            span: src/core/bit_array.rs:205:27: 205:30 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bit_array::BitArray) -> i32 {core::bit_array::BitArray::len},
                fun: e59,
                args: [
                    e58,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:205:27: 205:32 (#0),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(44),
            ),
            span: src/core/bit_array.rs:205:25: 205:32 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(45),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).45),
                ),
                value: e60,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(44),
            ),
            span: src/core/bit_array.rs:205:25: 205:32 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).50),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:206:31: 206:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(54),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).54),
                ),
                value: e62,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:206:31: 206:36 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:206:39: 206:40 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:206:39: 206:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(56),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).56),
                ),
                value: e64,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:206:39: 206:40 (#0),
        },
        Expr {
            kind: Binary {
                op: Gt,
                lhs: e63,
                rhs: e65,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:206:31: 206:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(53),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).53),
                ),
                value: e66,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:206:31: 206:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(53),
                lint_level: Inherited,
                value: e67,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(53),
            ),
            span: src/core/bit_array.rs:206:31: 206:40 (#0),
        },
        Expr {
            kind: Use {
                source: e68,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(51),
            ),
            span: src/core/bit_array.rs:206:31: 206:40 (#110),
        },
        Expr {
            kind: Scope {
                region_scope: Node(57),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).57),
                ),
                value: e69,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(51),
            ),
            span: src/core/bit_array.rs:206:31: 206:40 (#110),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/core/bit_array.rs:207:17: 207:18 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(60),
            ),
            span: src/core/bit_array.rs:207:17: 207:18 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(58),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).58),
                ),
                value: e71,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(60),
            ),
            span: src/core/bit_array.rs:207:17: 207:18 (#0),
        },
        Expr {
            kind: Block {
                block: b1,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(60),
            ),
            span: src/core/bit_array.rs:206:41: 208:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(60),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).60),
                ),
                value: e73,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(60),
            ),
            span: src/core/bit_array.rs:206:41: 208:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(60),
                lint_level: Inherited,
                value: e74,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(60),
            ),
            span: src/core/bit_array.rs:206:41: 208:14 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).50),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(61),
            ),
            span: src/core/bit_array.rs:209:17: 209:22 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(62),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).62),
                ),
                value: e76,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(61),
            ),
            span: src/core/bit_array.rs:209:17: 209:22 (#0),
        },
        Expr {
            kind: Block {
                block: b2,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(61),
            ),
            span: src/core/bit_array.rs:208:20: 210:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(61),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).61),
                ),
                value: e78,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(61),
            ),
            span: src/core/bit_array.rs:208:20: 210:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(61),
                lint_level: Inherited,
                value: e79,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(61),
            ),
            span: src/core/bit_array.rs:208:20: 210:14 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(60),
                cond: e70,
                then: e75,
                else_opt: Some(
                    e80,
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(51),
            ),
            span: src/core/bit_array.rs:206:28: 210:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(52),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).52),
                ),
                value: e81,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(51),
            ),
            span: src/core/bit_array.rs:206:28: 210:14 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).28),
                ),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(67),
            ),
            span: src/core/bit_array.rs:211:25: 211:26 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e83,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(67),
            ),
            span: src/core/bit_array.rs:211:25: 211:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(72),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).72),
                ),
                value: e84,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(67),
            ),
            span: src/core/bit_array.rs:211:25: 211:26 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).66),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(67),
            ),
            span: src/core/bit_array.rs:211:31: 211:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(74),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).74),
                ),
                value: e86,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(67),
            ),
            span: src/core/bit_array.rs:211:31: 211:39 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut core::bit_array::BitArray, i32) -> std::option::Option<core::bit_array::BitArray> {core::bit_array::BitArray::eat},
            temp_lifetime: Some(
                Node(67),
            ),
            span: src/core/bit_array.rs:211:27: 211:30 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut core::bit_array::BitArray, i32) -> std::option::Option<core::bit_array::BitArray> {core::bit_array::BitArray::eat},
                fun: e88,
                args: [
                    e85,
                    e87,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:211:27: 211:40 (#0),
            },
            ty: std::option::Option<core::bit_array::BitArray>,
            temp_lifetime: Some(
                Node(67),
            ),
            span: src/core/bit_array.rs:211:25: 211:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(70),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).70),
                ),
                value: e89,
            },
            ty: std::option::Option<core::bit_array::BitArray>,
            temp_lifetime: Some(
                Node(67),
            ),
            span: src/core/bit_array.rs:211:25: 211:40 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::option::Option<core::bit_array::BitArray>) -> core::bit_array::BitArray {std::option::Option::<core::bit_array::BitArray>::unwrap},
            temp_lifetime: Some(
                Node(67),
            ),
            span: src/core/bit_array.rs:211:41: 211:47 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::option::Option<core::bit_array::BitArray>) -> core::bit_array::BitArray {std::option::Option::<core::bit_array::BitArray>::unwrap},
                fun: e91,
                args: [
                    e90,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:211:41: 211:49 (#0),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(67),
            ),
            span: src/core/bit_array.rs:211:25: 211:49 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(68),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).68),
                ),
                value: e92,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(67),
            ),
            span: src/core/bit_array.rs:211:25: 211:49 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).35),
                ),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(78),
            ),
            span: src/core/bit_array.rs:212:25: 212:26 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e94,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(78),
            ),
            span: src/core/bit_array.rs:212:25: 212:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(83),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).83),
                ),
                value: e95,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(78),
            ),
            span: src/core/bit_array.rs:212:25: 212:26 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).66),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(78),
            ),
            span: src/core/bit_array.rs:212:31: 212:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(85),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).85),
                ),
                value: e97,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(78),
            ),
            span: src/core/bit_array.rs:212:31: 212:39 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut core::bit_array::BitArray, i32) -> std::option::Option<core::bit_array::BitArray> {core::bit_array::BitArray::eat},
            temp_lifetime: Some(
                Node(78),
            ),
            span: src/core/bit_array.rs:212:27: 212:30 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut core::bit_array::BitArray, i32) -> std::option::Option<core::bit_array::BitArray> {core::bit_array::BitArray::eat},
                fun: e99,
                args: [
                    e96,
                    e98,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:212:27: 212:40 (#0),
            },
            ty: std::option::Option<core::bit_array::BitArray>,
            temp_lifetime: Some(
                Node(78),
            ),
            span: src/core/bit_array.rs:212:25: 212:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(81),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).81),
                ),
                value: e100,
            },
            ty: std::option::Option<core::bit_array::BitArray>,
            temp_lifetime: Some(
                Node(78),
            ),
            span: src/core/bit_array.rs:212:25: 212:40 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::option::Option<core::bit_array::BitArray>) -> core::bit_array::BitArray {std::option::Option::<core::bit_array::BitArray>::unwrap},
            temp_lifetime: Some(
                Node(78),
            ),
            span: src/core/bit_array.rs:212:41: 212:47 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::option::Option<core::bit_array::BitArray>) -> core::bit_array::BitArray {std::option::Option::<core::bit_array::BitArray>::unwrap},
                fun: e102,
                args: [
                    e101,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:212:41: 212:49 (#0),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(78),
            ),
            span: src/core/bit_array.rs:212:25: 212:49 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(79),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).79),
                ),
                value: e103,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(78),
            ),
            span: src/core/bit_array.rs:212:25: 212:49 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).77),
                ),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(89),
            ),
            span: src/core/bit_array.rs:213:22: 213:27 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e105,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(89),
            ),
            span: src/core/bit_array.rs:213:22: 213:48 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(92),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).92),
                ),
                value: e106,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(89),
            ),
            span: src/core/bit_array.rs:213:22: 213:27 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).66),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(89),
            ),
            span: src/core/bit_array.rs:213:33: 213:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(95),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).95),
                ),
                value: e108,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(89),
            ),
            span: src/core/bit_array.rs:213:33: 213:41 (#0),
        },
        Expr {
            kind: Cast {
                source: e109,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(89),
            ),
            span: src/core/bit_array.rs:213:33: 213:47 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(94),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).94),
                ),
                value: e110,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(89),
            ),
            span: src/core/bit_array.rs:213:33: 213:47 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bit_array::BitArray, u8) -> u8 {core::bit_array::BitArray::peek},
            temp_lifetime: Some(
                Node(89),
            ),
            span: src/core/bit_array.rs:213:28: 213:32 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bit_array::BitArray, u8) -> u8 {core::bit_array::BitArray::peek},
                fun: e112,
                args: [
                    e107,
                    e111,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:213:28: 213:48 (#0),
            },
            ty: u8,
            temp_lifetime: Some(
                Node(89),
            ),
            span: src/core/bit_array.rs:213:22: 213:48 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(90),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).90),
                ),
                value: e113,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(89),
            ),
            span: src/core/bit_array.rs:213:22: 213:48 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).88),
                ),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/core/bit_array.rs:214:22: 214:27 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e115,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/core/bit_array.rs:214:22: 214:48 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(104),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).104),
                ),
                value: e116,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/core/bit_array.rs:214:22: 214:27 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).66),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/core/bit_array.rs:214:33: 214:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(107),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).107),
                ),
                value: e118,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/core/bit_array.rs:214:33: 214:41 (#0),
        },
        Expr {
            kind: Cast {
                source: e119,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/core/bit_array.rs:214:33: 214:47 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(106),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).106),
                ),
                value: e120,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/core/bit_array.rs:214:33: 214:47 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bit_array::BitArray, u8) -> u8 {core::bit_array::BitArray::peek},
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/core/bit_array.rs:214:28: 214:32 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bit_array::BitArray, u8) -> u8 {core::bit_array::BitArray::peek},
                fun: e122,
                args: [
                    e117,
                    e121,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:214:28: 214:48 (#0),
            },
            ty: u8,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/core/bit_array.rs:214:22: 214:48 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(102),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).102),
                ),
                value: e123,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/core/bit_array.rs:214:22: 214:48 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).100),
                ),
            },
            ty: u8,
            temp_lifetime: Some(
                Node(114),
            ),
            span: src/core/bit_array.rs:215:16: 215:18 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(115),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).115),
                ),
                value: e125,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(114),
            ),
            span: src/core/bit_array.rs:215:16: 215:18 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).112),
                ),
            },
            ty: u8,
            temp_lifetime: Some(
                Node(114),
            ),
            span: src/core/bit_array.rs:215:22: 215:24 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(117),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).117),
                ),
                value: e127,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(114),
            ),
            span: src/core/bit_array.rs:215:22: 215:24 (#0),
        },
        Expr {
            kind: Binary {
                op: Ne,
                lhs: e126,
                rhs: e128,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(114),
            ),
            span: src/core/bit_array.rs:215:16: 215:24 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(114),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).114),
                ),
                value: e129,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(114),
            ),
            span: src/core/bit_array.rs:215:16: 215:24 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(114),
                lint_level: Inherited,
                value: e130,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(114),
            ),
            span: src/core/bit_array.rs:215:16: 215:24 (#0),
        },
        Expr {
            kind: Use {
                source: e131,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(126),
            ),
            span: src/core/bit_array.rs:215:16: 215:24 (#111),
        },
        Expr {
            kind: Scope {
                region_scope: Node(119),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).119),
                ),
                value: e132,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(126),
            ),
            span: src/core/bit_array.rs:215:16: 215:24 (#111),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Bool(
                        false,
                    ),
                    span: src/core/bit_array.rs:216:24: 216:29 (#0),
                },
                neg: false,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(122),
            ),
            span: src/core/bit_array.rs:216:24: 216:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(121),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).121),
                ),
                value: e134,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(122),
            ),
            span: src/core/bit_array.rs:216:24: 216:29 (#0),
        },
        Expr {
            kind: Return {
                value: Some(
                    e135,
                ),
            },
            ty: !,
            temp_lifetime: Some(
                Node(122),
            ),
            span: src/core/bit_array.rs:216:17: 216:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(120),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).120),
                ),
                value: e136,
            },
            ty: !,
            temp_lifetime: Some(
                Node(122),
            ),
            span: src/core/bit_array.rs:216:17: 216:29 (#0),
        },
        Expr {
            kind: Block {
                block: b3,
            },
            ty: !,
            temp_lifetime: Some(
                Node(124),
            ),
            span: src/core/bit_array.rs:215:25: 217:14 (#0),
        },
        Expr {
            kind: NeverToAny {
                source: e138,
            },
            ty: (),
            temp_lifetime: Some(
                Node(124),
            ),
            span: src/core/bit_array.rs:215:25: 217:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(124),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).124),
                ),
                value: e139,
            },
            ty: (),
            temp_lifetime: Some(
                Node(124),
            ),
            span: src/core/bit_array.rs:215:25: 217:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(124),
                lint_level: Inherited,
                value: e140,
            },
            ty: (),
            temp_lifetime: Some(
                Node(124),
            ),
            span: src/core/bit_array.rs:215:25: 217:14 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(124),
                cond: e133,
                then: e141,
                else_opt: None,
            },
            ty: (),
            temp_lifetime: Some(
                Node(126),
            ),
            span: src/core/bit_array.rs:215:13: 217:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(113),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).113),
                ),
                value: e142,
            },
            ty: (),
            temp_lifetime: Some(
                Node(126),
            ),
            span: src/core/bit_array.rs:215:13: 217:14 (#0),
        },
        Expr {
            kind: Block {
                block: b4,
            },
            ty: (),
            temp_lifetime: Some(
                Node(126),
            ),
            span: src/core/bit_array.rs:204:27: 218:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(126),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).126),
                ),
                value: e144,
            },
            ty: (),
            temp_lifetime: Some(
                Node(126),
            ),
            span: src/core/bit_array.rs:204:27: 218:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(126),
                lint_level: Inherited,
                value: e145,
            },
            ty: (),
            temp_lifetime: Some(
                Node(126),
            ),
            span: src/core/bit_array.rs:204:27: 218:10 (#0),
        },
        Expr {
            kind: Break {
                label: Node(36),
                value: None,
            },
            ty: !,
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/core/bit_array.rs:204:9: 218:10 (#108),
        },
        Expr {
            kind: NeverToAny {
                source: e147,
            },
            ty: (),
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/core/bit_array.rs:204:9: 218:10 (#108),
        },
        Expr {
            kind: Scope {
                region_scope: Node(127),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).127),
                ),
                value: e148,
            },
            ty: (),
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/core/bit_array.rs:204:9: 218:10 (#108),
        },
        Expr {
            kind: Block {
                block: b5,
            },
            ty: !,
            temp_lifetime: Some(
                Node(130),
            ),
            span: src/core/bit_array.rs:204:9: 218:10 (#108),
        },
        Expr {
            kind: NeverToAny {
                source: e150,
            },
            ty: (),
            temp_lifetime: Some(
                Node(130),
            ),
            span: src/core/bit_array.rs:204:9: 218:10 (#108),
        },
        Expr {
            kind: Scope {
                region_scope: Node(130),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).130),
                ),
                value: e151,
            },
            ty: (),
            temp_lifetime: Some(
                Node(130),
            ),
            span: src/core/bit_array.rs:204:9: 218:10 (#108),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(130),
                lint_level: Inherited,
                value: e152,
            },
            ty: (),
            temp_lifetime: Some(
                Node(130),
            ),
            span: src/core/bit_array.rs:204:9: 218:10 (#108),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(126),
                cond: e55,
                then: e146,
                else_opt: Some(
                    e153,
                ),
            },
            ty: (),
            temp_lifetime: Some(
                Node(132),
            ),
            span: src/core/bit_array.rs:204:9: 218:10 (#108),
        },
        Expr {
            kind: Scope {
                region_scope: Node(131),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).131),
                ),
                value: e154,
            },
            ty: (),
            temp_lifetime: Some(
                Node(132),
            ),
            span: src/core/bit_array.rs:204:9: 218:10 (#108),
        },
        Expr {
            kind: Block {
                block: b6,
            },
            ty: (),
            temp_lifetime: Some(
                Node(132),
            ),
            span: src/core/bit_array.rs:204:9: 218:10 (#108),
        },
        Expr {
            kind: Loop {
                body: e156,
            },
            ty: (),
            temp_lifetime: Some(
                Node(133),
            ),
            span: src/core/bit_array.rs:204:9: 218:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(36),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).36),
                ),
                value: e157,
            },
            ty: (),
            temp_lifetime: Some(
                Node(133),
            ),
            span: src/core/bit_array.rs:204:9: 218:10 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Bool(
                        true,
                    ),
                    span: src/core/bit_array.rs:219:9: 219:13 (#0),
                },
                neg: false,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(136),
            ),
            span: src/core/bit_array.rs:219:9: 219:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(134),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).134),
                ),
                value: e159,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(136),
            ),
            span: src/core/bit_array.rs:219:9: 219:13 (#0),
        },
        Expr {
            kind: Block {
                block: b7,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(136),
            ),
            span: src/core/bit_array.rs:198:40: 220:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(136),
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).136),
                ),
                value: e161,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(136),
            ),
            span: src/core/bit_array.rs:198:40: 220:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(136),
                lint_level: Inherited,
                value: e162,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(136),
            ),
            span: src/core/bit_array.rs:198:40: 220:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(18),
                expr: e22,
            },
            opt_destruction_scope: Some(
                Destruction(18),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(21),
                expr: e28,
            },
            opt_destruction_scope: Some(
                Destruction(21),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 135, first_statement_index: 1},
                init_scope: Node(22),
                pattern: Pat {
                    ty: core::bit_array::BitArray,
                    span: src/core/bit_array.rs:202:13: 202:18 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "a",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).28),
                        ),
                        ty: core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e35,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).27),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(22),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 135, first_statement_index: 2},
                init_scope: Node(29),
                pattern: Pat {
                    ty: core::bit_array::BitArray,
                    span: src/core/bit_array.rs:203:13: 203:18 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "b",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).35),
                        ),
                        ty: core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e42,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).34),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(29),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 125, first_statement_index: 0},
                init_scope: Node(44),
                pattern: Pat {
                    ty: i32,
                    span: src/core/bit_array.rs:205:17: 205:22 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "a_len",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).50),
                        ),
                        ty: i32,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e61,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).49),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(44),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 125, first_statement_index: 1},
                init_scope: Node(51),
                pattern: Pat {
                    ty: i32,
                    span: src/core/bit_array.rs:206:17: 206:25 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "num_bits",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).66),
                        ),
                        ty: i32,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e82,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).65),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(51),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 125, first_statement_index: 2},
                init_scope: Node(67),
                pattern: Pat {
                    ty: core::bit_array::BitArray,
                    span: src/core/bit_array.rs:211:17: 211:22 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "a_val",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).77),
                        ),
                        ty: core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e93,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).76),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(67),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 125, first_statement_index: 3},
                init_scope: Node(78),
                pattern: Pat {
                    ty: core::bit_array::BitArray,
                    span: src/core/bit_array.rs:212:17: 212:22 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "b_val",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).88),
                        ),
                        ty: core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e104,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).87),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(78),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 125, first_statement_index: 4},
                init_scope: Node(89),
                pattern: Pat {
                    ty: u8,
                    span: src/core/bit_array.rs:213:17: 213:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "t1",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).100),
                        ),
                        ty: u8,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e114,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).99),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(89),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 125, first_statement_index: 5},
                init_scope: Node(101),
                pattern: Pat {
                    ty: u8,
                    span: src/core/bit_array.rs:214:17: 214:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "t2",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).112),
                        ),
                        ty: u8,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e124,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).111),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(101),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(122),
                expr: e137,
            },
            opt_destruction_scope: Some(
                Destruction(122),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(128),
                expr: e149,
            },
            opt_destruction_scope: Some(
                Destruction(128),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(133),
                expr: e158,
            },
            opt_destruction_scope: Some(
                Destruction(133),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &core::bit_array::BitArray,
                    span: src/core/bit_array.rs:198:11: 198:16 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).2),
                        ),
                        ty: &core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &core::bit_array::BitArray,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &core::bit_array::BitArray,
                    span: src/core/bit_array.rs:198:18: 198:23 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "other",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).4),
                        ),
                        ty: &core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &core::bit_array::BitArray,
            ty_span: Some(
                src/core/bit_array.rs:198:25: 198:30 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:55 ~ andrew_fuzz[741f]::core::bit_array::{impl#2}::eq).3),
            ),
        },
    ],
}

DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt):
Thir {
    body_type: Fn(
        ([&core::bit_array::BitArray, &mut std::fmt::Formatter<'_>]; c_variadic: false)->std::result::Result<(), std::fmt::Error>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(53),
            opt_destruction_scope: None,
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
            stmts: [],
            expr: Some(
                e65,
            ),
            safety_mode: BuiltinUnsafe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(56),
            opt_destruction_scope: None,
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:136:23: 138:6 (#23),
            stmts: [
                s0,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(62),
            opt_destruction_scope: None,
            span: src/core/bit_array.rs:224:72: 234:6 (#0),
            stmts: [
                s1,
            ],
            expr: Some(
                e77,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(std::fmt::Arguments<'a>) {std::io::_print},
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:9: 137:27 (#23),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).7),
                ),
                value: e0,
            },
            ty: for<'a> fn(std::fmt::Arguments<'a>) {std::io::_print},
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:9: 137:27 (#23),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(2:9001 ~ core[102f]::fmt::{impl#4}::new_v1_formatted),
                            UserSubsts {
                                substs: [
                                    ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon(0, None) }),
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(2:8997 ~ core[102f]::fmt::{impl#4}),
                                        self_ty: std::fmt::Arguments<'_>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>], &[std::fmt::rt::v1::Argument], core::fmt::UnsafeArg) -> std::fmt::Arguments<'_> {std::fmt::Arguments::<'_>::new_v1_formatted},
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Scope {
                region_scope: Node(48),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).48),
                ),
                value: e2,
            },
            ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>], &[std::fmt::rt::v1::Argument], core::fmt::UnsafeArg) -> std::fmt::Arguments<'_> {std::fmt::Arguments::<'_>::new_v1_formatted},
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "",
                        Cooked,
                    ),
                    span: src/core/bit_array.rs:232:18: 232:27 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:232:18: 232:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(12),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).12),
                ),
                value: e4,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:232:18: 232:27 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "\n",
                        Cooked,
                    ),
                    span: src/core/bit_array.rs:232:18: 232:27 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:232:18: 232:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).13),
                ),
                value: e6,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:232:18: 232:27 (#0),
        },
        Expr {
            kind: Array {
                fields: [
                    e5,
                    e7,
                ],
            },
            ty: [&str; 2],
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:232:18: 232:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).14),
                ),
                value: e8,
            },
            ty: [&str; 2],
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:232:18: 232:27 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e9,
            },
            ty: &[&str; 2],
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:232:18: 232:27 (#0),
        },
        Expr {
            kind: Deref {
                arg: e10,
            },
            ty: [&str; 2],
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:232:18: 232:27 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e11,
            },
            ty: &[&str; 2],
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:232:18: 232:27 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e12,
            },
            ty: &[&str],
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:232:18: 232:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).15),
                ),
                value: e13,
            },
            ty: &[&str],
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:232:18: 232:27 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(2:49769 ~ core[102f]::fmt::{impl#3}::new_debug),
                            UserSubsts {
                                substs: [
                                    ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon(0, None) }),
                                    ^1,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(2:8990 ~ core[102f]::fmt::{impl#3}),
                                        self_ty: core::fmt::ArgumentV1<'_>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: for<'b> fn(&'b std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>>},
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:232:29: 232:38 (#24),
        },
        Expr {
            kind: Scope {
                region_scope: Node(42),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).42),
                ),
                value: e15,
            },
            ty: for<'b> fn(&'b std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>>},
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:232:29: 232:38 (#24),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).2),
                ),
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:232:29: 232:33 (#0),
        },
        Expr {
            kind: Deref {
                arg: e17,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:232:29: 232:33 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(37),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).37),
                ),
                value: e18,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:232:29: 232:33 (#0),
        },
        Expr {
            kind: Field {
                lhs: e19,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:232:29: 232:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(36),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).36),
                ),
                value: e20,
            },
            ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:232:29: 232:38 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e21,
            },
            ty: &std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:232:29: 232:38 (#24),
        },
        Expr {
            kind: Deref {
                arg: e22,
            },
            ty: std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:232:29: 232:38 (#24),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e23,
            },
            ty: &std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:232:29: 232:38 (#24),
        },
        Expr {
            kind: Scope {
                region_scope: Node(39),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).39),
                ),
                value: e24,
            },
            ty: &std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:232:29: 232:38 (#24),
        },
        Expr {
            kind: Call {
                ty: for<'b> fn(&'b std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<std::rc::Rc<std::cell::RefCell<std::vec::Vec<u8>>>>},
                fun: e16,
                args: [
                    e25,
                ],
                from_hir_call: true,
                fn_span: src/core/bit_array.rs:232:29: 232:38 (#24),
            },
            ty: core::fmt::ArgumentV1<'_>,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:232:29: 232:38 (#24),
        },
        Expr {
            kind: Scope {
                region_scope: Node(43),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).43),
                ),
                value: e26,
            },
            ty: core::fmt::ArgumentV1<'_>,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/core/bit_array.rs:232:29: 232:38 (#24),
        },
        Expr {
            kind: Array {
                fields: [
                    e27,
                ],
            },
            ty: [core::fmt::ArgumentV1<'_>; 1],
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Scope {
                region_scope: Node(44),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).44),
                ),
                value: e28,
            },
            ty: [core::fmt::ArgumentV1<'_>; 1],
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e29,
            },
            ty: &[core::fmt::ArgumentV1<'_>; 1],
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Deref {
                arg: e30,
            },
            ty: [core::fmt::ArgumentV1<'_>; 1],
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e31,
            },
            ty: &[core::fmt::ArgumentV1<'_>; 1],
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e32,
            },
            ty: &[core::fmt::ArgumentV1<'_>],
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Scope {
                region_scope: Node(45),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).45),
                ),
                value: e33,
            },
            ty: &[core::fmt::ArgumentV1<'_>],
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(usize, char, std::fmt::rt::v1::Alignment, u32, std::fmt::rt::v1::Count, std::fmt::rt::v1::Count) -> std::fmt::rt::v1::Argument {std::fmt::rt::v1::Argument::new},
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Scope {
                region_scope: Node(32),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).32),
                ),
                value: e35,
            },
            ty: fn(usize, char, std::fmt::rt::v1::Alignment, u32, std::fmt::rt::v1::Count, std::fmt::rt::v1::Count) -> std::fmt::rt::v1::Argument {std::fmt::rt::v1::Argument::new},
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        0,
                        Unsigned(
                            Usize,
                        ),
                    ),
                    span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
                },
                neg: false,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Scope {
                region_scope: Node(16),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).16),
                ),
                value: e37,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Char(
                        ' ',
                    ),
                    span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
                },
                neg: false,
            },
            ty: char,
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).17),
                ),
                value: e39,
            },
            ty: char,
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: std::fmt::rt::v1::Alignment,
                    variant_index: 3,
                    substs: [],
                    user_ty: None,
                    fields: [],
                    base: None,
                },
            ),
            ty: std::fmt::rt::v1::Alignment,
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Scope {
                region_scope: Node(20),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).20),
                ),
                value: e41,
            },
            ty: std::fmt::rt::v1::Alignment,
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        40,
                        Unsigned(
                            U32,
                        ),
                    ),
                    span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
                },
                neg: false,
            },
            ty: u32,
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Scope {
                region_scope: Node(21),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).21),
                ),
                value: e43,
            },
            ty: u32,
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: std::fmt::rt::v1::Count,
                    variant_index: 2,
                    substs: [],
                    user_ty: None,
                    fields: [],
                    base: None,
                },
            ),
            ty: std::fmt::rt::v1::Count,
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Scope {
                region_scope: Node(24),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).24),
                ),
                value: e45,
            },
            ty: std::fmt::rt::v1::Count,
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(usize) -> std::fmt::rt::v1::Count {std::fmt::rt::v1::Count::Is},
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Scope {
                region_scope: Node(27),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).27),
                ),
                value: e47,
            },
            ty: fn(usize) -> std::fmt::rt::v1::Count {std::fmt::rt::v1::Count::Is},
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        2,
                        Unsigned(
                            Usize,
                        ),
                    ),
                    span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
                },
                neg: false,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Scope {
                region_scope: Node(28),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).28),
                ),
                value: e49,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Call {
                ty: fn(usize) -> std::fmt::rt::v1::Count {std::fmt::rt::v1::Count::Is},
                fun: e48,
                args: [
                    e50,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
            },
            ty: std::fmt::rt::v1::Count,
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Scope {
                region_scope: Node(29),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).29),
                ),
                value: e51,
            },
            ty: std::fmt::rt::v1::Count,
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Call {
                ty: fn(usize, char, std::fmt::rt::v1::Alignment, u32, std::fmt::rt::v1::Count, std::fmt::rt::v1::Count) -> std::fmt::rt::v1::Argument {std::fmt::rt::v1::Argument::new},
                fun: e36,
                args: [
                    e38,
                    e40,
                    e42,
                    e44,
                    e46,
                    e52,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
            },
            ty: std::fmt::rt::v1::Argument,
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Scope {
                region_scope: Node(33),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).33),
                ),
                value: e53,
            },
            ty: std::fmt::rt::v1::Argument,
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Array {
                fields: [
                    e54,
                ],
            },
            ty: [std::fmt::rt::v1::Argument; 1],
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Scope {
                region_scope: Node(34),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).34),
                ),
                value: e55,
            },
            ty: [std::fmt::rt::v1::Argument; 1],
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e56,
            },
            ty: &[std::fmt::rt::v1::Argument; 1],
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Deref {
                arg: e57,
            },
            ty: [std::fmt::rt::v1::Argument; 1],
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e58,
            },
            ty: &[std::fmt::rt::v1::Argument; 1],
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e59,
            },
            ty: &[std::fmt::rt::v1::Argument],
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Scope {
                region_scope: Node(35),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).35),
                ),
                value: e60,
            },
            ty: &[std::fmt::rt::v1::Argument],
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: unsafe fn() -> core::fmt::UnsafeArg {core::fmt::UnsafeArg::new},
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Scope {
                region_scope: Node(51),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).51),
                ),
                value: e62,
            },
            ty: unsafe fn() -> core::fmt::UnsafeArg {core::fmt::UnsafeArg::new},
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Call {
                ty: unsafe fn() -> core::fmt::UnsafeArg {core::fmt::UnsafeArg::new},
                fun: e63,
                args: [],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
            },
            ty: core::fmt::UnsafeArg,
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Scope {
                region_scope: Node(52),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).52),
                ),
                value: e64,
            },
            ty: core::fmt::UnsafeArg,
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: core::fmt::UnsafeArg,
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Scope {
                region_scope: Node(54),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).54),
                ),
                value: e66,
            },
            ty: core::fmt::UnsafeArg,
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Call {
                ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>], &[std::fmt::rt::v1::Argument], core::fmt::UnsafeArg) -> std::fmt::Arguments<'_> {std::fmt::Arguments::<'_>::new_v1_formatted},
                fun: e3,
                args: [
                    e14,
                    e34,
                    e61,
                    e67,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
            },
            ty: std::fmt::Arguments<'_>,
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).11),
                ),
                value: e68,
            },
            ty: std::fmt::Arguments<'_>,
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#24),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(std::fmt::Arguments<'a>) {std::io::_print},
                fun: e1,
                args: [
                    e69,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:9: 137:62 (#23),
            },
            ty: (),
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:9: 137:62 (#23),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).6),
                ),
                value: e70,
            },
            ty: (),
            temp_lifetime: Some(
                Node(55),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:9: 137:62 (#23),
        },
        Expr {
            kind: Block {
                block: b1,
            },
            ty: (),
            temp_lifetime: Some(
                Node(57),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:136:23: 138:6 (#23),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).5),
                ),
                value: e72,
            },
            ty: (),
            temp_lifetime: Some(
                Node(57),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:136:23: 138:6 (#23),
        },
        Expr {
            kind: Tuple {
                fields: [],
            },
            ty: (),
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/core/bit_array.rs:233:12: 233:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(61),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).61),
                ),
                value: e74,
            },
            ty: (),
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/core/bit_array.rs:233:12: 233:14 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: std::result::Result,
                    variant_index: 0,
                    substs: [
                        (),
                        std::fmt::Error,
                    ],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e75,
                        },
                    ],
                    base: None,
                },
            ),
            ty: std::result::Result<(), std::fmt::Error>,
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/core/bit_array.rs:233:9: 233:15 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(58),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).58),
                ),
                value: e76,
            },
            ty: std::result::Result<(), std::fmt::Error>,
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/core/bit_array.rs:233:9: 233:15 (#0),
        },
        Expr {
            kind: Block {
                block: b2,
            },
            ty: std::result::Result<(), std::fmt::Error>,
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/core/bit_array.rs:224:72: 234:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(63),
                lint_level: Explicit(
                    HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).63),
                ),
                value: e78,
            },
            ty: std::result::Result<(), std::fmt::Error>,
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/core/bit_array.rs:224:72: 234:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(63),
                lint_level: Inherited,
                value: e79,
            },
            ty: std::result::Result<(), std::fmt::Error>,
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/core/bit_array.rs:224:72: 234:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(55),
                expr: e71,
            },
            opt_destruction_scope: Some(
                Destruction(55),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(57),
                expr: e73,
            },
            opt_destruction_scope: Some(
                Destruction(57),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &core::bit_array::BitArray,
                    span: src/core/bit_array.rs:224:12: 224:17 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).2),
                        ),
                        ty: &core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &core::bit_array::BitArray,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &mut std::fmt::Formatter<'_>,
                    span: src/core/bit_array.rs:224:19: 224:20 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "f",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).4),
                        ),
                        ty: &mut std::fmt::Formatter<'_>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut std::fmt::Formatter<'_>,
            ty_span: Some(
                src/core/bit_array.rs:224:22: 224:50 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:57 ~ andrew_fuzz[741f]::core::bit_array::{impl#3}::fmt).3),
            ),
        },
    ],
}

DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new):
Thir {
    body_type: Fn(
        ([std::vec::Vec<std::string::String>]; c_variadic: false)->core::feature_vector::FeatureVector,
    ),
    arms: [
        Arm {
            pattern: Pat {
                ty: std::option::Option<&std::string::String>,
                span: src/core/feature_vector.rs:11:9: 13:10 (#112),
                kind: Variant {
                    adt_def: std::option::Option,
                    substs: [
                        &std::string::String,
                    ],
                    variant_index: 0,
                    subpatterns: [],
                },
            },
            guard: None,
            body: e25,
            lint_level: Explicit(
                HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).18),
            ),
            scope: Node(18),
            span: src/core/feature_vector.rs:11:9: 13:10 (#112),
        },
        Arm {
            pattern: Pat {
                ty: std::option::Option<&std::string::String>,
                span: src/core/feature_vector.rs:11:13: 11:14 (#114),
                kind: Variant {
                    adt_def: std::option::Option,
                    substs: [
                        &std::string::String,
                    ],
                    variant_index: 1,
                    subpatterns: [
                        FieldPat {
                            field: field[0],
                            pattern: Pat {
                                ty: &std::string::String,
                                span: src/core/feature_vector.rs:11:13: 11:14 (#0),
                                kind: Binding {
                                    mutability: Not,
                                    name: "f",
                                    mode: ByValue,
                                    var: LocalVarId(
                                        HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).14),
                                    ),
                                    ty: &std::string::String,
                                    subpattern: None,
                                    is_primary: true,
                                },
                            },
                        },
                    ],
                },
            },
            guard: None,
            body: e43,
            lint_level: Explicit(
                HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).33),
            ),
            scope: Node(33),
            span: src/core/feature_vector.rs:11:28: 13:10 (#0),
        },
        Arm {
            pattern: Pat {
                ty: std::slice::Iter<'_, std::string::String>,
                span: src/core/feature_vector.rs:11:18: 11:27 (#113),
                kind: Binding {
                    mutability: Mut,
                    name: "iter",
                    mode: ByValue,
                    var: LocalVarId(
                        HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).34),
                    ),
                    ty: std::slice::Iter<'_, std::string::String>,
                    subpattern: None,
                    is_primary: true,
                },
            },
            guard: None,
            body: e49,
            lint_level: Explicit(
                HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).43),
            ),
            scope: Node(43),
            span: src/core/feature_vector.rs:11:9: 13:10 (#112),
        },
    ],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(31),
            opt_destruction_scope: None,
            span: src/core/feature_vector.rs:11:28: 13:10 (#0),
            stmts: [
                s1,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(42),
            opt_destruction_scope: Some(
                Destruction(42),
            ),
            span: src/core/feature_vector.rs:11:9: 13:10 (#112),
            stmts: [
                s2,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(57),
            opt_destruction_scope: None,
            span: src/core/feature_vector.rs:9:47: 18:6 (#0),
            stmts: [
                s0,
                s3,
            ],
            expr: Some(
                e60,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(1:742 ~ std[f4e9]::collections::hash::map::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                    ^1,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(1:739 ~ std[f4e9]::collections::hash::map::{impl#0}),
                                        self_ty: std::collections::HashMap<^2, ^3, ^4>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn() -> std::collections::HashMap<std::string::String, f64> {std::collections::HashMap::<std::string::String, f64>::new},
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core/feature_vector.rs:10:21: 10:33 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).5),
                ),
                value: e0,
            },
            ty: fn() -> std::collections::HashMap<std::string::String, f64> {std::collections::HashMap::<std::string::String, f64>::new},
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core/feature_vector.rs:10:21: 10:33 (#0),
        },
        Expr {
            kind: Call {
                ty: fn() -> std::collections::HashMap<std::string::String, f64> {std::collections::HashMap::<std::string::String, f64>::new},
                fun: e1,
                args: [],
                from_hir_call: true,
                fn_span: src/core/feature_vector.rs:10:21: 10:35 (#0),
            },
            ty: std::collections::HashMap<std::string::String, f64>,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core/feature_vector.rs:10:21: 10:35 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).4),
                ),
                value: e2,
            },
            ty: std::collections::HashMap<std::string::String, f64>,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core/feature_vector.rs:10:21: 10:35 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(&std::vec::Vec<std::string::String>) -> <&std::vec::Vec<std::string::String> as std::iter::IntoIterator>::IntoIter {<&std::vec::Vec<std::string::String> as std::iter::IntoIterator>::into_iter},
            temp_lifetime: Some(
                Node(46),
            ),
            span: src/core/feature_vector.rs:11:18: 11:27 (#113),
        },
        Expr {
            kind: Scope {
                region_scope: Node(44),
                lint_level: Explicit(
                    HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).44),
                ),
                value: e4,
            },
            ty: fn(&std::vec::Vec<std::string::String>) -> <&std::vec::Vec<std::string::String> as std::iter::IntoIterator>::IntoIter {<&std::vec::Vec<std::string::String> as std::iter::IntoIterator>::into_iter},
            temp_lifetime: Some(
                Node(46),
            ),
            span: src/core/feature_vector.rs:11:18: 11:27 (#113),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).2),
                ),
            },
            ty: std::vec::Vec<std::string::String>,
            temp_lifetime: Some(
                Node(46),
            ),
            span: src/core/feature_vector.rs:11:19: 11:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(12),
                lint_level: Explicit(
                    HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).12),
                ),
                value: e6,
            },
            ty: std::vec::Vec<std::string::String>,
            temp_lifetime: Some(
                Node(46),
            ),
            span: src/core/feature_vector.rs:11:19: 11:27 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e7,
            },
            ty: &std::vec::Vec<std::string::String>,
            temp_lifetime: Some(
                Node(46),
            ),
            span: src/core/feature_vector.rs:11:18: 11:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).11),
                ),
                value: e8,
            },
            ty: &std::vec::Vec<std::string::String>,
            temp_lifetime: Some(
                Node(46),
            ),
            span: src/core/feature_vector.rs:11:18: 11:27 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(&std::vec::Vec<std::string::String>) -> <&std::vec::Vec<std::string::String> as std::iter::IntoIterator>::IntoIter {<&std::vec::Vec<std::string::String> as std::iter::IntoIterator>::into_iter},
                fun: e5,
                args: [
                    e9,
                ],
                from_hir_call: true,
                fn_span: src/core/feature_vector.rs:11:18: 11:27 (#113),
            },
            ty: std::slice::Iter<'_, std::string::String>,
            temp_lifetime: Some(
                Node(46),
            ),
            span: src/core/feature_vector.rs:11:18: 11:27 (#113),
        },
        Expr {
            kind: Scope {
                region_scope: Node(45),
                lint_level: Explicit(
                    HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).45),
                ),
                value: e10,
            },
            ty: std::slice::Iter<'_, std::string::String>,
            temp_lifetime: Some(
                Node(46),
            ),
            span: src/core/feature_vector.rs:11:18: 11:27 (#113),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::slice::Iter<'_, std::string::String>) -> std::option::Option<<std::slice::Iter<'_, std::string::String> as std::iter::Iterator>::Item> {<std::slice::Iter<'_, std::string::String> as std::iter::Iterator>::next},
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/core/feature_vector.rs:11:18: 11:27 (#113),
        },
        Expr {
            kind: Scope {
                region_scope: Node(38),
                lint_level: Explicit(
                    HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).38),
                ),
                value: e12,
            },
            ty: for<'a> fn(&'a mut std::slice::Iter<'_, std::string::String>) -> std::option::Option<<std::slice::Iter<'_, std::string::String> as std::iter::Iterator>::Item> {<std::slice::Iter<'_, std::string::String> as std::iter::Iterator>::next},
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/core/feature_vector.rs:11:18: 11:27 (#113),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).34),
                ),
            },
            ty: std::slice::Iter<'_, std::string::String>,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/core/feature_vector.rs:11:18: 11:27 (#113),
        },
        Expr {
            kind: Scope {
                region_scope: Node(36),
                lint_level: Explicit(
                    HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).36),
                ),
                value: e14,
            },
            ty: std::slice::Iter<'_, std::string::String>,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/core/feature_vector.rs:11:18: 11:27 (#113),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: false,
                },
                arg: e15,
            },
            ty: &mut std::slice::Iter<'_, std::string::String>,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/core/feature_vector.rs:11:18: 11:27 (#113),
        },
        Expr {
            kind: Deref {
                arg: e16,
            },
            ty: std::slice::Iter<'_, std::string::String>,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/core/feature_vector.rs:11:18: 11:27 (#113),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e17,
            },
            ty: &mut std::slice::Iter<'_, std::string::String>,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/core/feature_vector.rs:11:18: 11:27 (#113),
        },
        Expr {
            kind: Scope {
                region_scope: Node(37),
                lint_level: Explicit(
                    HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).37),
                ),
                value: e18,
            },
            ty: &mut std::slice::Iter<'_, std::string::String>,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/core/feature_vector.rs:11:18: 11:27 (#113),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::slice::Iter<'_, std::string::String>) -> std::option::Option<<std::slice::Iter<'_, std::string::String> as std::iter::Iterator>::Item> {<std::slice::Iter<'_, std::string::String> as std::iter::Iterator>::next},
                fun: e13,
                args: [
                    e19,
                ],
                from_hir_call: true,
                fn_span: src/core/feature_vector.rs:11:18: 11:27 (#113),
            },
            ty: std::option::Option<&std::string::String>,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/core/feature_vector.rs:11:18: 11:27 (#113),
        },
        Expr {
            kind: Scope {
                region_scope: Node(39),
                lint_level: Explicit(
                    HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).39),
                ),
                value: e20,
            },
            ty: std::option::Option<&std::string::String>,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/core/feature_vector.rs:11:18: 11:27 (#113),
        },
        Expr {
            kind: Break {
                label: Node(15),
                value: None,
            },
            ty: !,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core/feature_vector.rs:11:9: 13:10 (#112),
        },
        Expr {
            kind: NeverToAny {
                source: e22,
            },
            ty: (),
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core/feature_vector.rs:11:9: 13:10 (#112),
        },
        Expr {
            kind: Scope {
                region_scope: Node(16),
                lint_level: Explicit(
                    HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).16),
                ),
                value: e23,
            },
            ty: (),
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core/feature_vector.rs:11:9: 13:10 (#112),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(16),
                lint_level: Inherited,
                value: e24,
            },
            ty: (),
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core/feature_vector.rs:11:9: 13:10 (#112),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).10),
                ),
            },
            ty: std::collections::HashMap<std::string::String, f64>,
            temp_lifetime: Some(
                Node(30),
            ),
            span: src/core/feature_vector.rs:12:13: 12:14 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e26,
            },
            ty: &mut std::collections::HashMap<std::string::String, f64>,
            temp_lifetime: Some(
                Node(30),
            ),
            span: src/core/feature_vector.rs:12:13: 12:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(23),
                lint_level: Explicit(
                    HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).23),
                ),
                value: e27,
            },
            ty: &mut std::collections::HashMap<std::string::String, f64>,
            temp_lifetime: Some(
                Node(30),
            ),
            span: src/core/feature_vector.rs:12:13: 12:14 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).14),
                ),
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(30),
            ),
            span: src/core/feature_vector.rs:12:22: 12:23 (#0),
        },
        Expr {
            kind: Deref {
                arg: e29,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(30),
            ),
            span: src/core/feature_vector.rs:12:22: 12:35 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e30,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(30),
            ),
            span: src/core/feature_vector.rs:12:22: 12:35 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(27),
                lint_level: Explicit(
                    HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).27),
                ),
                value: e31,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(30),
            ),
            span: src/core/feature_vector.rs:12:22: 12:23 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::string::String) -> std::string::String {<std::string::String as std::string::ToString>::to_string},
            temp_lifetime: Some(
                Node(30),
            ),
            span: src/core/feature_vector.rs:12:24: 12:33 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::string::String) -> std::string::String {<std::string::String as std::string::ToString>::to_string},
                fun: e33,
                args: [
                    e32,
                ],
                from_hir_call: true,
                fn_span: src/core/feature_vector.rs:12:24: 12:35 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(30),
            ),
            span: src/core/feature_vector.rs:12:22: 12:35 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).25),
                ),
                value: e34,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(30),
            ),
            span: src/core/feature_vector.rs:12:22: 12:35 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Float(
                        "0",
                        Suffixed(
                            F64,
                        ),
                    ),
                    span: src/core/feature_vector.rs:12:37: 12:41 (#0),
                },
                neg: false,
            },
            ty: f64,
            temp_lifetime: Some(
                Node(30),
            ),
            span: src/core/feature_vector.rs:12:37: 12:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(29),
                lint_level: Explicit(
                    HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).29),
                ),
                value: e36,
            },
            ty: f64,
            temp_lifetime: Some(
                Node(30),
            ),
            span: src/core/feature_vector.rs:12:37: 12:41 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::collections::HashMap<std::string::String, f64>, std::string::String, f64) -> std::option::Option<f64> {std::collections::HashMap::<std::string::String, f64>::insert},
            temp_lifetime: Some(
                Node(30),
            ),
            span: src/core/feature_vector.rs:12:15: 12:21 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::collections::HashMap<std::string::String, f64>, std::string::String, f64) -> std::option::Option<f64> {std::collections::HashMap::<std::string::String, f64>::insert},
                fun: e38,
                args: [
                    e28,
                    e35,
                    e37,
                ],
                from_hir_call: true,
                fn_span: src/core/feature_vector.rs:12:15: 12:42 (#0),
            },
            ty: std::option::Option<f64>,
            temp_lifetime: Some(
                Node(30),
            ),
            span: src/core/feature_vector.rs:12:13: 12:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(21),
                lint_level: Explicit(
                    HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).21),
                ),
                value: e39,
            },
            ty: std::option::Option<f64>,
            temp_lifetime: Some(
                Node(30),
            ),
            span: src/core/feature_vector.rs:12:13: 12:42 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(32),
            ),
            span: src/core/feature_vector.rs:11:28: 13:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(32),
                lint_level: Explicit(
                    HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).32),
                ),
                value: e41,
            },
            ty: (),
            temp_lifetime: Some(
                Node(32),
            ),
            span: src/core/feature_vector.rs:11:28: 13:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(32),
                lint_level: Inherited,
                value: e42,
            },
            ty: (),
            temp_lifetime: Some(
                Node(32),
            ),
            span: src/core/feature_vector.rs:11:28: 13:10 (#0),
        },
        Expr {
            kind: Match {
                scrutinee: e21,
                arms: [
                    a0,
                    a1,
                ],
            },
            ty: (),
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/core/feature_vector.rs:11:18: 11:27 (#113),
        },
        Expr {
            kind: Scope {
                region_scope: Node(40),
                lint_level: Explicit(
                    HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).40),
                ),
                value: e44,
            },
            ty: (),
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/core/feature_vector.rs:11:18: 11:27 (#113),
        },
        Expr {
            kind: Block {
                block: b1,
            },
            ty: (),
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/core/feature_vector.rs:11:9: 13:10 (#112),
        },
        Expr {
            kind: Loop {
                body: e46,
            },
            ty: (),
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core/feature_vector.rs:11:9: 13:10 (#112),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).15),
                ),
                value: e47,
            },
            ty: (),
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core/feature_vector.rs:11:9: 13:10 (#112),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(15),
                lint_level: Inherited,
                value: e48,
            },
            ty: (),
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core/feature_vector.rs:11:9: 13:10 (#112),
        },
        Expr {
            kind: Match {
                scrutinee: e11,
                arms: [
                    a2,
                ],
            },
            ty: (),
            temp_lifetime: Some(
                Node(46),
            ),
            span: src/core/feature_vector.rs:11:9: 13:10 (#112),
        },
        Expr {
            kind: Scope {
                region_scope: Node(46),
                lint_level: Explicit(
                    HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).46),
                ),
                value: e50,
            },
            ty: (),
            temp_lifetime: Some(
                Node(46),
            ),
            span: src/core/feature_vector.rs:11:9: 13:10 (#112),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(46),
                lint_level: Inherited,
                value: e51,
            },
            ty: (),
            temp_lifetime: Some(
                Node(46),
            ),
            span: src/core/feature_vector.rs:11:9: 13:10 (#112),
        },
        Expr {
            kind: Use {
                source: e52,
            },
            ty: (),
            temp_lifetime: Some(
                Node(48),
            ),
            span: src/core/feature_vector.rs:11:9: 13:10 (#112),
        },
        Expr {
            kind: Scope {
                region_scope: Node(47),
                lint_level: Explicit(
                    HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).47),
                ),
                value: e53,
            },
            ty: (),
            temp_lifetime: Some(
                Node(48),
            ),
            span: src/core/feature_vector.rs:11:9: 13:10 (#112),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).2),
                ),
            },
            ty: std::vec::Vec<std::string::String>,
            temp_lifetime: Some(
                Node(58),
            ),
            span: src/core/feature_vector.rs:15:17: 15:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(52),
                lint_level: Explicit(
                    HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).52),
                ),
                value: e55,
            },
            ty: std::vec::Vec<std::string::String>,
            temp_lifetime: Some(
                Node(58),
            ),
            span: src/core/feature_vector.rs:15:17: 15:25 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).10),
                ),
            },
            ty: std::collections::HashMap<std::string::String, f64>,
            temp_lifetime: Some(
                Node(58),
            ),
            span: src/core/feature_vector.rs:16:13: 16:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(55),
                lint_level: Explicit(
                    HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).55),
                ),
                value: e57,
            },
            ty: std::collections::HashMap<std::string::String, f64>,
            temp_lifetime: Some(
                Node(58),
            ),
            span: src/core/feature_vector.rs:16:13: 16:14 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: core::feature_vector::FeatureVector,
                    variant_index: 0,
                    substs: [],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e56,
                        },
                        FieldExpr {
                            name: field[1],
                            expr: e58,
                        },
                    ],
                    base: None,
                },
            ),
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(58),
            ),
            span: src/core/feature_vector.rs:14:9: 17:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(49),
                lint_level: Explicit(
                    HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).49),
                ),
                value: e59,
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(58),
            ),
            span: src/core/feature_vector.rs:14:9: 17:10 (#0),
        },
        Expr {
            kind: Block {
                block: b2,
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(58),
            ),
            span: src/core/feature_vector.rs:9:47: 18:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(58),
                lint_level: Explicit(
                    HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).58),
                ),
                value: e61,
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(58),
            ),
            span: src/core/feature_vector.rs:9:47: 18:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(58),
                lint_level: Inherited,
                value: e62,
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(58),
            ),
            span: src/core/feature_vector.rs:9:47: 18:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 57, first_statement_index: 0},
                init_scope: Node(3),
                pattern: Pat {
                    ty: std::collections::HashMap<std::string::String, f64>,
                    span: src/core/feature_vector.rs:10:13: 10:18 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "d",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).10),
                        ),
                        ty: std::collections::HashMap<std::string::String, f64>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e3,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).9),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(3),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(30),
                expr: e40,
            },
            opt_destruction_scope: Some(
                Destruction(30),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(41),
                expr: e45,
            },
            opt_destruction_scope: Some(
                Destruction(41),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(48),
                expr: e54,
            },
            opt_destruction_scope: Some(
                Destruction(48),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: std::vec::Vec<std::string::String>,
                    span: src/core/feature_vector.rs:9:16: 9:24 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "features",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).2),
                        ),
                        ty: std::vec::Vec<std::string::String>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::vec::Vec<std::string::String>,
            ty_span: Some(
                src/core/feature_vector.rs:9:26: 9:37 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:66 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::new).1),
            ),
        },
    ],
}

DefId(0:67 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::tally):
Thir {
    body_type: Fn(
        ([&mut core::feature_vector::FeatureVector, std::string::String, i32]; c_variadic: false)->(),
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(29),
            opt_destruction_scope: None,
            span: src/core/feature_vector.rs:19:58: 21:6 (#0),
            stmts: [
                s0,
            ],
            expr: None,
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:67 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::tally).2),
                ),
            },
            ty: &mut core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/feature_vector.rs:20:10: 20:14 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/feature_vector.rs:20:10: 20:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:67 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::tally).14),
                ),
                value: e1,
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/feature_vector.rs:20:10: 20:14 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[1],
            },
            ty: std::collections::HashMap<std::string::String, f64>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/feature_vector.rs:20:10: 20:16 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e3,
            },
            ty: &mut std::collections::HashMap<std::string::String, f64>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/feature_vector.rs:20:10: 20:34 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:67 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::tally).13),
                ),
                value: e4,
            },
            ty: &mut std::collections::HashMap<std::string::String, f64>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/feature_vector.rs:20:10: 20:16 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:67 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::tally).4),
                ),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/feature_vector.rs:20:26: 20:33 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:67 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::tally).17),
                ),
                value: e6,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/feature_vector.rs:20:26: 20:33 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e7,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/feature_vector.rs:20:25: 20:33 (#0),
        },
        Expr {
            kind: Deref {
                arg: e8,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/feature_vector.rs:20:25: 20:33 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e9,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/feature_vector.rs:20:25: 20:33 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(16),
                lint_level: Explicit(
                    HirId(DefId(0:67 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::tally).16),
                ),
                value: e10,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/feature_vector.rs:20:25: 20:33 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b> fn(&'a mut std::collections::HashMap<std::string::String, f64>, &'b std::string::String) -> std::option::Option<&'a mut f64> {std::collections::HashMap::<std::string::String, f64>::get_mut::<std::string::String>},
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/feature_vector.rs:20:17: 20:24 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b> fn(&'a mut std::collections::HashMap<std::string::String, f64>, &'b std::string::String) -> std::option::Option<&'a mut f64> {std::collections::HashMap::<std::string::String, f64>::get_mut::<std::string::String>},
                fun: e12,
                args: [
                    e5,
                    e11,
                ],
                from_hir_call: true,
                fn_span: src/core/feature_vector.rs:20:17: 20:34 (#0),
            },
            ty: std::option::Option<&mut f64>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/feature_vector.rs:20:10: 20:34 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:67 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::tally).11),
                ),
                value: e13,
            },
            ty: std::option::Option<&mut f64>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/feature_vector.rs:20:10: 20:34 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::option::Option<&mut f64>) -> &mut f64 {std::option::Option::<&mut f64>::unwrap},
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/feature_vector.rs:20:35: 20:41 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::option::Option<&mut f64>) -> &mut f64 {std::option::Option::<&mut f64>::unwrap},
                fun: e15,
                args: [
                    e14,
                ],
                from_hir_call: true,
                fn_span: src/core/feature_vector.rs:20:35: 20:43 (#0),
            },
            ty: &mut f64,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/feature_vector.rs:20:10: 20:43 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:67 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::tally).9),
                ),
                value: e16,
            },
            ty: &mut f64,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/feature_vector.rs:20:10: 20:43 (#0),
        },
        Expr {
            kind: Deref {
                arg: e17,
            },
            ty: f64,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/feature_vector.rs:20:9: 20:43 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:67 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::tally).8),
                ),
                value: e18,
            },
            ty: f64,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/feature_vector.rs:20:9: 20:43 (#0),
        },
        Expr {
            kind: NamedConst {
                def_id: DefId(2:214 ~ core[102f]::f64::consts::E),
                substs: [],
                user_ty: None,
            },
            ty: f64,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/feature_vector.rs:20:47: 20:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(21),
                lint_level: Explicit(
                    HirId(DefId(0:67 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::tally).21),
                ),
                value: e20,
            },
            ty: f64,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/feature_vector.rs:20:47: 20:66 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:67 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::tally).6),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/feature_vector.rs:20:72: 20:77 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(26),
                lint_level: Explicit(
                    HirId(DefId(0:67 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::tally).26),
                ),
                value: e22,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/feature_vector.rs:20:72: 20:77 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(f64, i32) -> f64 {std::f64::<impl f64>::powi},
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/feature_vector.rs:20:67: 20:71 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(f64, i32) -> f64 {std::f64::<impl f64>::powi},
                fun: e24,
                args: [
                    e21,
                    e23,
                ],
                from_hir_call: true,
                fn_span: src/core/feature_vector.rs:20:67: 20:78 (#0),
            },
            ty: f64,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/feature_vector.rs:20:47: 20:78 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:67 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::tally).19),
                ),
                value: e25,
            },
            ty: f64,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/feature_vector.rs:20:47: 20:78 (#0),
        },
        Expr {
            kind: AssignOp {
                op: Add,
                lhs: e19,
                rhs: e26,
            },
            ty: (),
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/feature_vector.rs:20:9: 20:78 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:67 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::tally).7),
                ),
                value: e27,
            },
            ty: (),
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/feature_vector.rs:20:9: 20:78 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(30),
            ),
            span: src/core/feature_vector.rs:19:58: 21:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(30),
                lint_level: Explicit(
                    HirId(DefId(0:67 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::tally).30),
                ),
                value: e29,
            },
            ty: (),
            temp_lifetime: Some(
                Node(30),
            ),
            span: src/core/feature_vector.rs:19:58: 21:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(30),
                lint_level: Inherited,
                value: e30,
            },
            ty: (),
            temp_lifetime: Some(
                Node(30),
            ),
            span: src/core/feature_vector.rs:19:58: 21:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(28),
                expr: e28,
            },
            opt_destruction_scope: Some(
                Destruction(28),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &mut core::feature_vector::FeatureVector,
                    span: src/core/feature_vector.rs:19:18: 19:27 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:67 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::tally).2),
                        ),
                        ty: &mut core::feature_vector::FeatureVector,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut core::feature_vector::FeatureVector,
            ty_span: None,
            self_kind: Some(
                MutRef,
            ),
            hir_id: Some(
                HirId(DefId(0:67 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::tally).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: std::string::String,
                    span: src/core/feature_vector.rs:19:29: 19:36 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "feature",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:67 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::tally).4),
                        ),
                        ty: std::string::String,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::string::String,
            ty_span: Some(
                src/core/feature_vector.rs:19:38: 19:44 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:67 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::tally).3),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: i32,
                    span: src/core/feature_vector.rs:19:46: 19:51 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "depth",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:67 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::tally).6),
                        ),
                        ty: i32,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: i32,
            ty_span: Some(
                src/core/feature_vector.rs:19:53: 19:56 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:67 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::tally).5),
            ),
        },
    ],
}

DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values):
Thir {
    body_type: Fn(
        ([&core::feature_vector::FeatureVector]; c_variadic: false)->std::vec::Vec<f64>,
    ),
    arms: [
        Arm {
            pattern: Pat {
                ty: std::option::Option<&std::string::String>,
                span: src/core/feature_vector.rs:24:9: 26:10 (#115),
                kind: Variant {
                    adt_def: std::option::Option,
                    substs: [
                        &std::string::String,
                    ],
                    variant_index: 0,
                    subpatterns: [],
                },
            },
            guard: None,
            body: e34,
            lint_level: Explicit(
                HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).20),
            ),
            scope: Node(20),
            span: src/core/feature_vector.rs:24:9: 26:10 (#115),
        },
        Arm {
            pattern: Pat {
                ty: std::option::Option<&std::string::String>,
                span: src/core/feature_vector.rs:24:13: 24:14 (#117),
                kind: Variant {
                    adt_def: std::option::Option,
                    substs: [
                        &std::string::String,
                    ],
                    variant_index: 1,
                    subpatterns: [
                        FieldPat {
                            field: field[0],
                            pattern: Pat {
                                ty: &std::string::String,
                                span: src/core/feature_vector.rs:24:13: 24:14 (#0),
                                kind: Binding {
                                    mutability: Not,
                                    name: "f",
                                    mode: ByValue,
                                    var: LocalVarId(
                                        HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).16),
                                    ),
                                    ty: &std::string::String,
                                    subpattern: None,
                                    is_primary: true,
                                },
                            },
                        },
                    ],
                },
            },
            guard: None,
            body: e68,
            lint_level: Explicit(
                HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).43),
            ),
            scope: Node(43),
            span: src/core/feature_vector.rs:24:33: 26:10 (#0),
        },
        Arm {
            pattern: Pat {
                ty: std::slice::Iter<'_, std::string::String>,
                span: src/core/feature_vector.rs:24:18: 24:32 (#116),
                kind: Binding {
                    mutability: Mut,
                    name: "iter",
                    mode: ByValue,
                    var: LocalVarId(
                        HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).44),
                    ),
                    ty: std::slice::Iter<'_, std::string::String>,
                    subpattern: None,
                    is_primary: true,
                },
            },
            guard: None,
            body: e74,
            lint_level: Explicit(
                HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).53),
            ),
            scope: Node(53),
            span: src/core/feature_vector.rs:24:9: 26:10 (#115),
        },
    ],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(41),
            opt_destruction_scope: None,
            span: src/core/feature_vector.rs:24:33: 26:10 (#0),
            stmts: [
                s1,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(52),
            opt_destruction_scope: Some(
                Destruction(52),
            ),
            span: src/core/feature_vector.rs:24:9: 26:10 (#115),
            stmts: [
                s2,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(61),
            opt_destruction_scope: None,
            span: src/core/feature_vector.rs:22:38: 28:6 (#0),
            stmts: [
                s0,
                s3,
            ],
            expr: Some(
                e81,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:6607 ~ alloc[42dc]::vec::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:6605 ~ alloc[42dc]::vec::{impl#0}),
                                        self_ty: std::vec::Vec<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn() -> std::vec::Vec<f64> {std::vec::Vec::<f64>::new},
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core/feature_vector.rs:23:26: 23:34 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).5),
                ),
                value: e0,
            },
            ty: fn() -> std::vec::Vec<f64> {std::vec::Vec::<f64>::new},
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core/feature_vector.rs:23:26: 23:34 (#0),
        },
        Expr {
            kind: Call {
                ty: fn() -> std::vec::Vec<f64> {std::vec::Vec::<f64>::new},
                fun: e1,
                args: [],
                from_hir_call: true,
                fn_span: src/core/feature_vector.rs:23:26: 23:36 (#0),
            },
            ty: std::vec::Vec<f64>,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core/feature_vector.rs:23:26: 23:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).4),
                ),
                value: e2,
            },
            ty: std::vec::Vec<f64>,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core/feature_vector.rs:23:26: 23:36 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::slice::Iter<'_, std::string::String>) -> <std::slice::Iter<'_, std::string::String> as std::iter::IntoIterator>::IntoIter {<std::slice::Iter<'_, std::string::String> as std::iter::IntoIterator>::into_iter},
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/feature_vector.rs:24:18: 24:32 (#116),
        },
        Expr {
            kind: Scope {
                region_scope: Node(54),
                lint_level: Explicit(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).54),
                ),
                value: e4,
            },
            ty: fn(std::slice::Iter<'_, std::string::String>) -> <std::slice::Iter<'_, std::string::String> as std::iter::IntoIterator>::IntoIter {<std::slice::Iter<'_, std::string::String> as std::iter::IntoIterator>::into_iter},
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/feature_vector.rs:24:18: 24:32 (#116),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).2),
                ),
            },
            ty: &core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/feature_vector.rs:24:18: 24:22 (#0),
        },
        Expr {
            kind: Deref {
                arg: e6,
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/feature_vector.rs:24:18: 24:22 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).14),
                ),
                value: e7,
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/feature_vector.rs:24:18: 24:22 (#0),
        },
        Expr {
            kind: Field {
                lhs: e8,
                variant_index: 0,
                name: field[0],
            },
            ty: std::vec::Vec<std::string::String>,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/feature_vector.rs:24:18: 24:25 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e9,
            },
            ty: &std::vec::Vec<std::string::String>,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/feature_vector.rs:24:18: 24:32 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::vec::Vec<std::string::String>) -> &'a <std::vec::Vec<std::string::String> as std::ops::Deref>::Target {<std::vec::Vec<std::string::String> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/feature_vector.rs:24:18: 24:32 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::vec::Vec<std::string::String>) -> &'a <std::vec::Vec<std::string::String> as std::ops::Deref>::Target {<std::vec::Vec<std::string::String> as std::ops::Deref>::deref},
                fun: e11,
                args: [
                    e10,
                ],
                from_hir_call: false,
                fn_span: src/core/feature_vector.rs:24:18: 24:32 (#0),
            },
            ty: &[std::string::String],
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/feature_vector.rs:24:18: 24:32 (#0),
        },
        Expr {
            kind: Deref {
                arg: e12,
            },
            ty: [std::string::String],
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/feature_vector.rs:24:18: 24:32 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e13,
            },
            ty: &[std::string::String],
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/feature_vector.rs:24:18: 24:32 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).13),
                ),
                value: e14,
            },
            ty: &[std::string::String],
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/feature_vector.rs:24:18: 24:25 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a [std::string::String]) -> std::slice::Iter<'a, std::string::String> {core::slice::<impl [std::string::String]>::iter},
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/feature_vector.rs:24:26: 24:30 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a [std::string::String]) -> std::slice::Iter<'a, std::string::String> {core::slice::<impl [std::string::String]>::iter},
                fun: e16,
                args: [
                    e15,
                ],
                from_hir_call: true,
                fn_span: src/core/feature_vector.rs:24:26: 24:32 (#0),
            },
            ty: std::slice::Iter<'_, std::string::String>,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/feature_vector.rs:24:18: 24:32 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).11),
                ),
                value: e17,
            },
            ty: std::slice::Iter<'_, std::string::String>,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/feature_vector.rs:24:18: 24:32 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::slice::Iter<'_, std::string::String>) -> <std::slice::Iter<'_, std::string::String> as std::iter::IntoIterator>::IntoIter {<std::slice::Iter<'_, std::string::String> as std::iter::IntoIterator>::into_iter},
                fun: e5,
                args: [
                    e18,
                ],
                from_hir_call: true,
                fn_span: src/core/feature_vector.rs:24:18: 24:32 (#116),
            },
            ty: std::slice::Iter<'_, std::string::String>,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/feature_vector.rs:24:18: 24:32 (#116),
        },
        Expr {
            kind: Scope {
                region_scope: Node(55),
                lint_level: Explicit(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).55),
                ),
                value: e19,
            },
            ty: std::slice::Iter<'_, std::string::String>,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/feature_vector.rs:24:18: 24:32 (#116),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::slice::Iter<'_, std::string::String>) -> std::option::Option<<std::slice::Iter<'_, std::string::String> as std::iter::Iterator>::Item> {<std::slice::Iter<'_, std::string::String> as std::iter::Iterator>::next},
            temp_lifetime: Some(
                Node(51),
            ),
            span: src/core/feature_vector.rs:24:18: 24:32 (#116),
        },
        Expr {
            kind: Scope {
                region_scope: Node(48),
                lint_level: Explicit(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).48),
                ),
                value: e21,
            },
            ty: for<'a> fn(&'a mut std::slice::Iter<'_, std::string::String>) -> std::option::Option<<std::slice::Iter<'_, std::string::String> as std::iter::Iterator>::Item> {<std::slice::Iter<'_, std::string::String> as std::iter::Iterator>::next},
            temp_lifetime: Some(
                Node(51),
            ),
            span: src/core/feature_vector.rs:24:18: 24:32 (#116),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).44),
                ),
            },
            ty: std::slice::Iter<'_, std::string::String>,
            temp_lifetime: Some(
                Node(51),
            ),
            span: src/core/feature_vector.rs:24:18: 24:32 (#116),
        },
        Expr {
            kind: Scope {
                region_scope: Node(46),
                lint_level: Explicit(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).46),
                ),
                value: e23,
            },
            ty: std::slice::Iter<'_, std::string::String>,
            temp_lifetime: Some(
                Node(51),
            ),
            span: src/core/feature_vector.rs:24:18: 24:32 (#116),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: false,
                },
                arg: e24,
            },
            ty: &mut std::slice::Iter<'_, std::string::String>,
            temp_lifetime: Some(
                Node(51),
            ),
            span: src/core/feature_vector.rs:24:18: 24:32 (#116),
        },
        Expr {
            kind: Deref {
                arg: e25,
            },
            ty: std::slice::Iter<'_, std::string::String>,
            temp_lifetime: Some(
                Node(51),
            ),
            span: src/core/feature_vector.rs:24:18: 24:32 (#116),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e26,
            },
            ty: &mut std::slice::Iter<'_, std::string::String>,
            temp_lifetime: Some(
                Node(51),
            ),
            span: src/core/feature_vector.rs:24:18: 24:32 (#116),
        },
        Expr {
            kind: Scope {
                region_scope: Node(47),
                lint_level: Explicit(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).47),
                ),
                value: e27,
            },
            ty: &mut std::slice::Iter<'_, std::string::String>,
            temp_lifetime: Some(
                Node(51),
            ),
            span: src/core/feature_vector.rs:24:18: 24:32 (#116),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::slice::Iter<'_, std::string::String>) -> std::option::Option<<std::slice::Iter<'_, std::string::String> as std::iter::Iterator>::Item> {<std::slice::Iter<'_, std::string::String> as std::iter::Iterator>::next},
                fun: e22,
                args: [
                    e28,
                ],
                from_hir_call: true,
                fn_span: src/core/feature_vector.rs:24:18: 24:32 (#116),
            },
            ty: std::option::Option<&std::string::String>,
            temp_lifetime: Some(
                Node(51),
            ),
            span: src/core/feature_vector.rs:24:18: 24:32 (#116),
        },
        Expr {
            kind: Scope {
                region_scope: Node(49),
                lint_level: Explicit(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).49),
                ),
                value: e29,
            },
            ty: std::option::Option<&std::string::String>,
            temp_lifetime: Some(
                Node(51),
            ),
            span: src/core/feature_vector.rs:24:18: 24:32 (#116),
        },
        Expr {
            kind: Break {
                label: Node(17),
                value: None,
            },
            ty: !,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/feature_vector.rs:24:9: 26:10 (#115),
        },
        Expr {
            kind: NeverToAny {
                source: e31,
            },
            ty: (),
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/feature_vector.rs:24:9: 26:10 (#115),
        },
        Expr {
            kind: Scope {
                region_scope: Node(18),
                lint_level: Explicit(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).18),
                ),
                value: e32,
            },
            ty: (),
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/feature_vector.rs:24:9: 26:10 (#115),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(18),
                lint_level: Inherited,
                value: e33,
            },
            ty: (),
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/feature_vector.rs:24:9: 26:10 (#115),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).10),
                ),
            },
            ty: std::vec::Vec<f64>,
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:25:13: 25:19 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e35,
            },
            ty: &mut std::vec::Vec<f64>,
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:25:13: 25:62 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).25),
                ),
                value: e36,
            },
            ty: &mut std::vec::Vec<f64>,
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:25:13: 25:19 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).2),
                ),
            },
            ty: &core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:25:26: 25:30 (#0),
        },
        Expr {
            kind: Deref {
                arg: e38,
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:25:26: 25:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(33),
                lint_level: Explicit(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).33),
                ),
                value: e39,
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:25:26: 25:30 (#0),
        },
        Expr {
            kind: Field {
                lhs: e40,
                variant_index: 0,
                name: field[1],
            },
            ty: std::collections::HashMap<std::string::String, f64>,
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:25:26: 25:32 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e41,
            },
            ty: &std::collections::HashMap<std::string::String, f64>,
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:25:26: 25:52 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(32),
                lint_level: Explicit(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).32),
                ),
                value: e42,
            },
            ty: &std::collections::HashMap<std::string::String, f64>,
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:25:26: 25:32 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).16),
                ),
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:25:38: 25:39 (#0),
        },
        Expr {
            kind: Deref {
                arg: e44,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:25:38: 25:51 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e45,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:25:38: 25:51 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(38),
                lint_level: Explicit(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).38),
                ),
                value: e46,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:25:38: 25:39 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::string::String) -> std::string::String {<std::string::String as std::string::ToString>::to_string},
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:25:40: 25:49 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::string::String) -> std::string::String {<std::string::String as std::string::ToString>::to_string},
                fun: e48,
                args: [
                    e47,
                ],
                from_hir_call: true,
                fn_span: src/core/feature_vector.rs:25:40: 25:51 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:25:38: 25:51 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(36),
                lint_level: Explicit(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).36),
                ),
                value: e49,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:25:38: 25:51 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e50,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:25:37: 25:51 (#0),
        },
        Expr {
            kind: Deref {
                arg: e51,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:25:37: 25:51 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e52,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:25:37: 25:51 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(35),
                lint_level: Explicit(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).35),
                ),
                value: e53,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:25:37: 25:51 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b> fn(&'a std::collections::HashMap<std::string::String, f64>, &'b std::string::String) -> std::option::Option<&'a f64> {std::collections::HashMap::<std::string::String, f64>::get::<std::string::String>},
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:25:33: 25:36 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b> fn(&'a std::collections::HashMap<std::string::String, f64>, &'b std::string::String) -> std::option::Option<&'a f64> {std::collections::HashMap::<std::string::String, f64>::get::<std::string::String>},
                fun: e55,
                args: [
                    e43,
                    e54,
                ],
                from_hir_call: true,
                fn_span: src/core/feature_vector.rs:25:33: 25:52 (#0),
            },
            ty: std::option::Option<&f64>,
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:25:26: 25:52 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(30),
                lint_level: Explicit(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).30),
                ),
                value: e56,
            },
            ty: std::option::Option<&f64>,
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:25:26: 25:52 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::option::Option<&f64>) -> &f64 {std::option::Option::<&f64>::unwrap},
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:25:53: 25:59 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::option::Option<&f64>) -> &f64 {std::option::Option::<&f64>::unwrap},
                fun: e58,
                args: [
                    e57,
                ],
                from_hir_call: true,
                fn_span: src/core/feature_vector.rs:25:53: 25:61 (#0),
            },
            ty: &f64,
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:25:26: 25:61 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(28),
                lint_level: Explicit(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).28),
                ),
                value: e59,
            },
            ty: &f64,
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:25:26: 25:61 (#0),
        },
        Expr {
            kind: Deref {
                arg: e60,
            },
            ty: f64,
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:25:25: 25:61 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(27),
                lint_level: Explicit(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).27),
                ),
                value: e61,
            },
            ty: f64,
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:25:25: 25:61 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::vec::Vec<f64>, f64) {std::vec::Vec::<f64>::push},
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:25:20: 25:24 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::vec::Vec<f64>, f64) {std::vec::Vec::<f64>::push},
                fun: e63,
                args: [
                    e37,
                    e62,
                ],
                from_hir_call: true,
                fn_span: src/core/feature_vector.rs:25:20: 25:62 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:25:13: 25:62 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(23),
                lint_level: Explicit(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).23),
                ),
                value: e64,
            },
            ty: (),
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:25:13: 25:62 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/core/feature_vector.rs:24:33: 26:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(42),
                lint_level: Explicit(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).42),
                ),
                value: e66,
            },
            ty: (),
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/core/feature_vector.rs:24:33: 26:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(42),
                lint_level: Inherited,
                value: e67,
            },
            ty: (),
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/core/feature_vector.rs:24:33: 26:10 (#0),
        },
        Expr {
            kind: Match {
                scrutinee: e30,
                arms: [
                    a0,
                    a1,
                ],
            },
            ty: (),
            temp_lifetime: Some(
                Node(51),
            ),
            span: src/core/feature_vector.rs:24:18: 24:32 (#116),
        },
        Expr {
            kind: Scope {
                region_scope: Node(50),
                lint_level: Explicit(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).50),
                ),
                value: e69,
            },
            ty: (),
            temp_lifetime: Some(
                Node(51),
            ),
            span: src/core/feature_vector.rs:24:18: 24:32 (#116),
        },
        Expr {
            kind: Block {
                block: b1,
            },
            ty: (),
            temp_lifetime: Some(
                Node(52),
            ),
            span: src/core/feature_vector.rs:24:9: 26:10 (#115),
        },
        Expr {
            kind: Loop {
                body: e71,
            },
            ty: (),
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/feature_vector.rs:24:9: 26:10 (#115),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).17),
                ),
                value: e72,
            },
            ty: (),
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/feature_vector.rs:24:9: 26:10 (#115),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(17),
                lint_level: Inherited,
                value: e73,
            },
            ty: (),
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/feature_vector.rs:24:9: 26:10 (#115),
        },
        Expr {
            kind: Match {
                scrutinee: e20,
                arms: [
                    a2,
                ],
            },
            ty: (),
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/feature_vector.rs:24:9: 26:10 (#115),
        },
        Expr {
            kind: Scope {
                region_scope: Node(56),
                lint_level: Explicit(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).56),
                ),
                value: e75,
            },
            ty: (),
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/feature_vector.rs:24:9: 26:10 (#115),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(56),
                lint_level: Inherited,
                value: e76,
            },
            ty: (),
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/core/feature_vector.rs:24:9: 26:10 (#115),
        },
        Expr {
            kind: Use {
                source: e77,
            },
            ty: (),
            temp_lifetime: Some(
                Node(58),
            ),
            span: src/core/feature_vector.rs:24:9: 26:10 (#115),
        },
        Expr {
            kind: Scope {
                region_scope: Node(57),
                lint_level: Explicit(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).57),
                ),
                value: e78,
            },
            ty: (),
            temp_lifetime: Some(
                Node(58),
            ),
            span: src/core/feature_vector.rs:24:9: 26:10 (#115),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).10),
                ),
            },
            ty: std::vec::Vec<f64>,
            temp_lifetime: Some(
                Node(62),
            ),
            span: src/core/feature_vector.rs:27:9: 27:15 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(59),
                lint_level: Explicit(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).59),
                ),
                value: e80,
            },
            ty: std::vec::Vec<f64>,
            temp_lifetime: Some(
                Node(62),
            ),
            span: src/core/feature_vector.rs:27:9: 27:15 (#0),
        },
        Expr {
            kind: Block {
                block: b2,
            },
            ty: std::vec::Vec<f64>,
            temp_lifetime: Some(
                Node(62),
            ),
            span: src/core/feature_vector.rs:22:38: 28:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(62),
                lint_level: Explicit(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).62),
                ),
                value: e82,
            },
            ty: std::vec::Vec<f64>,
            temp_lifetime: Some(
                Node(62),
            ),
            span: src/core/feature_vector.rs:22:38: 28:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(62),
                lint_level: Inherited,
                value: e83,
            },
            ty: std::vec::Vec<f64>,
            temp_lifetime: Some(
                Node(62),
            ),
            span: src/core/feature_vector.rs:22:38: 28:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 61, first_statement_index: 0},
                init_scope: Node(3),
                pattern: Pat {
                    ty: std::vec::Vec<f64>,
                    span: src/core/feature_vector.rs:23:13: 23:23 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "result",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).10),
                        ),
                        ty: std::vec::Vec<f64>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e3,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).9),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(3),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(40),
                expr: e65,
            },
            opt_destruction_scope: Some(
                Destruction(40),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(51),
                expr: e70,
            },
            opt_destruction_scope: Some(
                Destruction(51),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(58),
                expr: e79,
            },
            opt_destruction_scope: Some(
                Destruction(58),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &core::feature_vector::FeatureVector,
                    span: src/core/feature_vector.rs:22:19: 22:24 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).2),
                        ),
                        ty: &core::feature_vector::FeatureVector,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &core::feature_vector::FeatureVector,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:68 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::values).1),
            ),
        },
    ],
}

DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist):
Thir {
    body_type: Fn(
        ([&core::feature_vector::FeatureVector, &core::feature_vector::FeatureVector]; c_variadic: false)->f64,
    ),
    arms: [
        Arm {
            pattern: Pat {
                ty: std::option::Option<(&f64, &f64)>,
                span: src/core/feature_vector.rs:32:9: 34:10 (#119),
                kind: Variant {
                    adt_def: std::option::Option,
                    substs: [
                        (&f64, &f64),
                    ],
                    variant_index: 0,
                    subpatterns: [],
                },
            },
            guard: None,
            body: e94,
            lint_level: Explicit(
                HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).66),
            ),
            scope: Node(66),
            span: src/core/feature_vector.rs:32:9: 34:10 (#119),
        },
        Arm {
            pattern: Pat {
                ty: std::option::Option<(&f64, &f64)>,
                span: src/core/feature_vector.rs:32:13: 32:34 (#121),
                kind: Variant {
                    adt_def: std::option::Option,
                    substs: [
                        (&f64, &f64),
                    ],
                    variant_index: 1,
                    subpatterns: [
                        FieldPat {
                            field: field[0],
                            pattern: Pat {
                                ty: (&f64, &f64),
                                span: src/core/feature_vector.rs:32:13: 32:34 (#0),
                                kind: Leaf {
                                    subpatterns: [
                                        FieldPat {
                                            field: field[0],
                                            pattern: Pat {
                                                ty: &f64,
                                                span: src/core/feature_vector.rs:32:14: 32:22 (#0),
                                                kind: Binding {
                                                    mutability: Not,
                                                    name: "self_val",
                                                    mode: ByValue,
                                                    var: LocalVarId(
                                                        HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).60),
                                                    ),
                                                    ty: &f64,
                                                    subpattern: None,
                                                    is_primary: true,
                                                },
                                            },
                                        },
                                        FieldPat {
                                            field: field[1],
                                            pattern: Pat {
                                                ty: &f64,
                                                span: src/core/feature_vector.rs:32:24: 32:33 (#0),
                                                kind: Binding {
                                                    mutability: Not,
                                                    name: "other_val",
                                                    mode: ByValue,
                                                    var: LocalVarId(
                                                        HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).61),
                                                    ),
                                                    ty: &f64,
                                                    subpattern: None,
                                                    is_primary: true,
                                                },
                                            },
                                        },
                                    ],
                                },
                            },
                        },
                    ],
                },
            },
            guard: None,
            body: e113,
            lint_level: Explicit(
                HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).83),
            ),
            scope: Node(83),
            span: src/core/feature_vector.rs:32:85: 34:10 (#0),
        },
        Arm {
            pattern: Pat {
                ty: std::iter::Zip<std::slice::Iter<'_, f64>, std::slice::Iter<'_, f64>>,
                span: src/core/feature_vector.rs:32:38: 32:85 (#120),
                kind: Binding {
                    mutability: Mut,
                    name: "iter",
                    mode: ByValue,
                    var: LocalVarId(
                        HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).84),
                    ),
                    ty: std::iter::Zip<std::slice::Iter<'_, f64>, std::slice::Iter<'_, f64>>,
                    subpattern: None,
                    is_primary: true,
                },
            },
            guard: None,
            body: e119,
            lint_level: Explicit(
                HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).93),
            ),
            scope: Node(93),
            span: src/core/feature_vector.rs:32:9: 34:10 (#119),
        },
    ],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(39),
            opt_destruction_scope: None,
            span: src/core/feature_vector.rs:30:9: 30:105 (#25),
            stmts: [],
            expr: Some(
                e36,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(81),
            opt_destruction_scope: None,
            span: src/core/feature_vector.rs:32:85: 34:10 (#0),
            stmts: [
                s2,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(92),
            opt_destruction_scope: Some(
                Destruction(92),
            ),
            span: src/core/feature_vector.rs:32:9: 34:10 (#119),
            stmts: [
                s3,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(101),
            opt_destruction_scope: None,
            span: src/core/feature_vector.rs:29:54: 36:6 (#0),
            stmts: [
                s0,
                s1,
                s4,
            ],
            expr: Some(
                e126,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).2),
                ),
            },
            ty: &core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/feature_vector.rs:30:17: 30:21 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/feature_vector.rs:30:17: 30:32 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e1,
            },
            ty: &core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/feature_vector.rs:30:17: 30:32 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(18),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).18),
                ),
                value: e2,
            },
            ty: &core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/feature_vector.rs:30:17: 30:21 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::feature_vector::FeatureVector) -> std::slice::Iter<'a, std::string::String> {core::feature_vector::FeatureVector::features},
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/feature_vector.rs:30:22: 30:30 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::feature_vector::FeatureVector) -> std::slice::Iter<'a, std::string::String> {core::feature_vector::FeatureVector::features},
                fun: e4,
                args: [
                    e3,
                ],
                from_hir_call: true,
                fn_span: src/core/feature_vector.rs:30:22: 30:32 (#0),
            },
            ty: std::slice::Iter<'_, std::string::String>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/feature_vector.rs:30:17: 30:32 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(16),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).16),
                ),
                value: e5,
            },
            ty: std::slice::Iter<'_, std::string::String>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/feature_vector.rs:30:17: 30:32 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(2:7265 ~ core[102f]::iter::traits::iterator::Iterator::collect),
                            UserSubsts {
                                substs: [
                                    ^0,
                                    std::vec::Vec<&std::string::String>,
                                ],
                                user_self_ty: None,
                            },
                        ),
                    },
                ),
            },
            ty: fn(std::slice::Iter<'_, std::string::String>) -> std::vec::Vec<&std::string::String> {<std::slice::Iter<'_, std::string::String> as std::iter::Iterator>::collect::<std::vec::Vec<&std::string::String>>},
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/feature_vector.rs:30:33: 30:40 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::slice::Iter<'_, std::string::String>) -> std::vec::Vec<&std::string::String> {<std::slice::Iter<'_, std::string::String> as std::iter::Iterator>::collect::<std::vec::Vec<&std::string::String>>},
                fun: e7,
                args: [
                    e6,
                ],
                from_hir_call: true,
                fn_span: src/core/feature_vector.rs:30:33: 30:58 (#0),
            },
            ty: std::vec::Vec<&std::string::String>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/feature_vector.rs:30:17: 30:58 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e8,
            },
            ty: &std::vec::Vec<&std::string::String>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/feature_vector.rs:30:17: 30:58 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).8),
                ),
                value: e9,
            },
            ty: &std::vec::Vec<&std::string::String>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/feature_vector.rs:30:17: 30:58 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).4),
                ),
            },
            ty: &core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/feature_vector.rs:30:62: 30:67 (#0),
        },
        Expr {
            kind: Deref {
                arg: e11,
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/feature_vector.rs:30:62: 30:78 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e12,
            },
            ty: &core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/feature_vector.rs:30:62: 30:78 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(30),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).30),
                ),
                value: e13,
            },
            ty: &core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/feature_vector.rs:30:62: 30:67 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::feature_vector::FeatureVector) -> std::slice::Iter<'a, std::string::String> {core::feature_vector::FeatureVector::features},
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/feature_vector.rs:30:68: 30:76 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::feature_vector::FeatureVector) -> std::slice::Iter<'a, std::string::String> {core::feature_vector::FeatureVector::features},
                fun: e15,
                args: [
                    e14,
                ],
                from_hir_call: true,
                fn_span: src/core/feature_vector.rs:30:68: 30:78 (#0),
            },
            ty: std::slice::Iter<'_, std::string::String>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/feature_vector.rs:30:62: 30:78 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(28),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).28),
                ),
                value: e16,
            },
            ty: std::slice::Iter<'_, std::string::String>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/feature_vector.rs:30:62: 30:78 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(2:7265 ~ core[102f]::iter::traits::iterator::Iterator::collect),
                            UserSubsts {
                                substs: [
                                    ^0,
                                    std::vec::Vec<&std::string::String>,
                                ],
                                user_self_ty: None,
                            },
                        ),
                    },
                ),
            },
            ty: fn(std::slice::Iter<'_, std::string::String>) -> std::vec::Vec<&std::string::String> {<std::slice::Iter<'_, std::string::String> as std::iter::Iterator>::collect::<std::vec::Vec<&std::string::String>>},
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/feature_vector.rs:30:79: 30:86 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::slice::Iter<'_, std::string::String>) -> std::vec::Vec<&std::string::String> {<std::slice::Iter<'_, std::string::String> as std::iter::Iterator>::collect::<std::vec::Vec<&std::string::String>>},
                fun: e18,
                args: [
                    e17,
                ],
                from_hir_call: true,
                fn_span: src/core/feature_vector.rs:30:79: 30:104 (#0),
            },
            ty: std::vec::Vec<&std::string::String>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/feature_vector.rs:30:62: 30:104 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e19,
            },
            ty: &std::vec::Vec<&std::string::String>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/feature_vector.rs:30:62: 30:104 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(20),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).20),
                ),
                value: e20,
            },
            ty: &std::vec::Vec<&std::string::String>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/feature_vector.rs:30:62: 30:104 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b> fn(&'a std::vec::Vec<&std::string::String>, &'b std::vec::Vec<&std::string::String>) -> bool {<std::vec::Vec<&std::string::String> as std::cmp::PartialEq>::eq},
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/feature_vector.rs:30:17: 30:104 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b> fn(&'a std::vec::Vec<&std::string::String>, &'b std::vec::Vec<&std::string::String>) -> bool {<std::vec::Vec<&std::string::String> as std::cmp::PartialEq>::eq},
                fun: e22,
                args: [
                    e10,
                    e21,
                ],
                from_hir_call: false,
                fn_span: src/core/feature_vector.rs:30:17: 30:104 (#0),
            },
            ty: bool,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/feature_vector.rs:30:17: 30:104 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).7),
                ),
                value: e23,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/feature_vector.rs:30:17: 30:104 (#0),
        },
        Expr {
            kind: Unary {
                op: Not,
                arg: e24,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/feature_vector.rs:30:9: 30:105 (#25),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).6),
                ),
                value: e25,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/feature_vector.rs:30:9: 30:105 (#25),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(6),
                lint_level: Inherited,
                value: e26,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/feature_vector.rs:30:9: 30:105 (#25),
        },
        Expr {
            kind: Use {
                source: e27,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/core/feature_vector.rs:30:9: 30:105 (#118),
        },
        Expr {
            kind: Scope {
                region_scope: Node(32),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).32),
                ),
                value: e28,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/core/feature_vector.rs:30:9: 30:105 (#118),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:30:9: 30:105 (#25),
        },
        Expr {
            kind: Scope {
                region_scope: Node(34),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).34),
                ),
                value: e30,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:30:9: 30:105 (#25),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "assertion failed: self.features().collect::<Vec<&String>>() ==\\n    other.features().collect::<Vec<&String>>()",
                        Cooked,
                    ),
                    span: no-location (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(40),
            ),
            span: no-location (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(38),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).38),
                ),
                value: e32,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(40),
            ),
            span: no-location (#0),
        },
        Expr {
            kind: Call {
                ty: fn(&'static str) -> ! {core::panicking::panic},
                fun: e31,
                args: [
                    e33,
                ],
                from_hir_call: true,
                fn_span: src/core/feature_vector.rs:30:9: 30:105 (#25),
            },
            ty: !,
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:30:9: 30:105 (#25),
        },
        Expr {
            kind: NeverToAny {
                source: e34,
            },
            ty: (),
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:30:9: 30:105 (#25),
        },
        Expr {
            kind: Scope {
                region_scope: Node(33),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).33),
                ),
                value: e35,
            },
            ty: (),
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:30:9: 30:105 (#25),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:30:9: 30:105 (#25),
        },
        Expr {
            kind: Scope {
                region_scope: Node(40),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).40),
                ),
                value: e37,
            },
            ty: (),
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:30:9: 30:105 (#25),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(40),
                lint_level: Inherited,
                value: e38,
            },
            ty: (),
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core/feature_vector.rs:30:9: 30:105 (#25),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(40),
                cond: e29,
                then: e39,
                else_opt: None,
            },
            ty: (),
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/core/feature_vector.rs:30:9: 30:105 (#25),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).5),
                ),
                value: e40,
            },
            ty: (),
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/core/feature_vector.rs:30:9: 30:105 (#25),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Float(
                        "0",
                        Suffixed(
                            F64,
                        ),
                    ),
                    span: src/core/feature_vector.rs:31:26: 31:30 (#0),
                },
                neg: false,
            },
            ty: f64,
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/core/feature_vector.rs:31:26: 31:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(43),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).43),
                ),
                value: e42,
            },
            ty: f64,
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/core/feature_vector.rs:31:26: 31:30 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::iter::Zip<std::slice::Iter<'_, f64>, std::slice::Iter<'_, f64>>) -> <std::iter::Zip<std::slice::Iter<'_, f64>, std::slice::Iter<'_, f64>> as std::iter::IntoIterator>::IntoIter {<std::iter::Zip<std::slice::Iter<'_, f64>, std::slice::Iter<'_, f64>> as std::iter::IntoIterator>::into_iter},
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:38: 32:85 (#120),
        },
        Expr {
            kind: Scope {
                region_scope: Node(94),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).94),
                ),
                value: e44,
            },
            ty: fn(std::iter::Zip<std::slice::Iter<'_, f64>, std::slice::Iter<'_, f64>>) -> <std::iter::Zip<std::slice::Iter<'_, f64>, std::slice::Iter<'_, f64>> as std::iter::IntoIterator>::IntoIter {<std::iter::Zip<std::slice::Iter<'_, f64>, std::slice::Iter<'_, f64>> as std::iter::IntoIterator>::into_iter},
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:38: 32:85 (#120),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).2),
                ),
            },
            ty: &core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:38: 32:42 (#0),
        },
        Expr {
            kind: Deref {
                arg: e46,
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:38: 32:51 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e47,
            },
            ty: &core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:38: 32:51 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(52),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).52),
                ),
                value: e48,
            },
            ty: &core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:38: 32:42 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::feature_vector::FeatureVector) -> std::vec::Vec<f64> {core::feature_vector::FeatureVector::values},
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:43: 32:49 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::feature_vector::FeatureVector) -> std::vec::Vec<f64> {core::feature_vector::FeatureVector::values},
                fun: e50,
                args: [
                    e49,
                ],
                from_hir_call: true,
                fn_span: src/core/feature_vector.rs:32:43: 32:51 (#0),
            },
            ty: std::vec::Vec<f64>,
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:38: 32:51 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e51,
            },
            ty: &std::vec::Vec<f64>,
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:38: 32:58 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::vec::Vec<f64>) -> &'a <std::vec::Vec<f64> as std::ops::Deref>::Target {<std::vec::Vec<f64> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:38: 32:58 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::vec::Vec<f64>) -> &'a <std::vec::Vec<f64> as std::ops::Deref>::Target {<std::vec::Vec<f64> as std::ops::Deref>::deref},
                fun: e53,
                args: [
                    e52,
                ],
                from_hir_call: false,
                fn_span: src/core/feature_vector.rs:32:38: 32:58 (#0),
            },
            ty: &[f64],
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:38: 32:58 (#0),
        },
        Expr {
            kind: Deref {
                arg: e54,
            },
            ty: [f64],
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:38: 32:58 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e55,
            },
            ty: &[f64],
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:38: 32:58 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(50),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).50),
                ),
                value: e56,
            },
            ty: &[f64],
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:38: 32:51 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a [f64]) -> std::slice::Iter<'a, f64> {core::slice::<impl [f64]>::iter},
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:52: 32:56 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a [f64]) -> std::slice::Iter<'a, f64> {core::slice::<impl [f64]>::iter},
                fun: e58,
                args: [
                    e57,
                ],
                from_hir_call: true,
                fn_span: src/core/feature_vector.rs:32:52: 32:58 (#0),
            },
            ty: std::slice::Iter<'_, f64>,
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:38: 32:58 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(48),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).48),
                ),
                value: e59,
            },
            ty: std::slice::Iter<'_, f64>,
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:38: 32:58 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).4),
                ),
            },
            ty: &core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:63: 32:68 (#0),
        },
        Expr {
            kind: Deref {
                arg: e61,
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:63: 32:77 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e62,
            },
            ty: &core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:63: 32:77 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(58),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).58),
                ),
                value: e63,
            },
            ty: &core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:63: 32:68 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::feature_vector::FeatureVector) -> std::vec::Vec<f64> {core::feature_vector::FeatureVector::values},
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:69: 32:75 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::feature_vector::FeatureVector) -> std::vec::Vec<f64> {core::feature_vector::FeatureVector::values},
                fun: e65,
                args: [
                    e64,
                ],
                from_hir_call: true,
                fn_span: src/core/feature_vector.rs:32:69: 32:77 (#0),
            },
            ty: std::vec::Vec<f64>,
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:63: 32:77 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e66,
            },
            ty: &std::vec::Vec<f64>,
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:63: 32:84 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::vec::Vec<f64>) -> &'a <std::vec::Vec<f64> as std::ops::Deref>::Target {<std::vec::Vec<f64> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:63: 32:84 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::vec::Vec<f64>) -> &'a <std::vec::Vec<f64> as std::ops::Deref>::Target {<std::vec::Vec<f64> as std::ops::Deref>::deref},
                fun: e68,
                args: [
                    e67,
                ],
                from_hir_call: false,
                fn_span: src/core/feature_vector.rs:32:63: 32:84 (#0),
            },
            ty: &[f64],
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:63: 32:84 (#0),
        },
        Expr {
            kind: Deref {
                arg: e69,
            },
            ty: [f64],
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:63: 32:84 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e70,
            },
            ty: &[f64],
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:63: 32:84 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(56),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).56),
                ),
                value: e71,
            },
            ty: &[f64],
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:63: 32:77 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a [f64]) -> std::slice::Iter<'a, f64> {core::slice::<impl [f64]>::iter},
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:78: 32:82 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a [f64]) -> std::slice::Iter<'a, f64> {core::slice::<impl [f64]>::iter},
                fun: e73,
                args: [
                    e72,
                ],
                from_hir_call: true,
                fn_span: src/core/feature_vector.rs:32:78: 32:84 (#0),
            },
            ty: std::slice::Iter<'_, f64>,
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:63: 32:84 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(54),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).54),
                ),
                value: e74,
            },
            ty: std::slice::Iter<'_, f64>,
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:63: 32:84 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::slice::Iter<'_, f64>, std::slice::Iter<'_, f64>) -> std::iter::Zip<std::slice::Iter<'_, f64>, <std::slice::Iter<'_, f64> as std::iter::IntoIterator>::IntoIter> {<std::slice::Iter<'_, f64> as std::iter::Iterator>::zip::<std::slice::Iter<'_, f64>>},
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:59: 32:62 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::slice::Iter<'_, f64>, std::slice::Iter<'_, f64>) -> std::iter::Zip<std::slice::Iter<'_, f64>, <std::slice::Iter<'_, f64> as std::iter::IntoIterator>::IntoIter> {<std::slice::Iter<'_, f64> as std::iter::Iterator>::zip::<std::slice::Iter<'_, f64>>},
                fun: e76,
                args: [
                    e60,
                    e75,
                ],
                from_hir_call: true,
                fn_span: src/core/feature_vector.rs:32:59: 32:85 (#0),
            },
            ty: std::iter::Zip<std::slice::Iter<'_, f64>, std::slice::Iter<'_, f64>>,
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:38: 32:85 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(46),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).46),
                ),
                value: e77,
            },
            ty: std::iter::Zip<std::slice::Iter<'_, f64>, std::slice::Iter<'_, f64>>,
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:38: 32:85 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::iter::Zip<std::slice::Iter<'_, f64>, std::slice::Iter<'_, f64>>) -> <std::iter::Zip<std::slice::Iter<'_, f64>, std::slice::Iter<'_, f64>> as std::iter::IntoIterator>::IntoIter {<std::iter::Zip<std::slice::Iter<'_, f64>, std::slice::Iter<'_, f64>> as std::iter::IntoIterator>::into_iter},
                fun: e45,
                args: [
                    e78,
                ],
                from_hir_call: true,
                fn_span: src/core/feature_vector.rs:32:38: 32:85 (#120),
            },
            ty: std::iter::Zip<std::slice::Iter<'_, f64>, std::slice::Iter<'_, f64>>,
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:38: 32:85 (#120),
        },
        Expr {
            kind: Scope {
                region_scope: Node(95),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).95),
                ),
                value: e79,
            },
            ty: std::iter::Zip<std::slice::Iter<'_, f64>, std::slice::Iter<'_, f64>>,
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:38: 32:85 (#120),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::iter::Zip<std::slice::Iter<'_, f64>, std::slice::Iter<'_, f64>>) -> std::option::Option<<std::iter::Zip<std::slice::Iter<'_, f64>, std::slice::Iter<'_, f64>> as std::iter::Iterator>::Item> {<std::iter::Zip<std::slice::Iter<'_, f64>, std::slice::Iter<'_, f64>> as std::iter::Iterator>::next},
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/core/feature_vector.rs:32:38: 32:85 (#120),
        },
        Expr {
            kind: Scope {
                region_scope: Node(88),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).88),
                ),
                value: e81,
            },
            ty: for<'a> fn(&'a mut std::iter::Zip<std::slice::Iter<'_, f64>, std::slice::Iter<'_, f64>>) -> std::option::Option<<std::iter::Zip<std::slice::Iter<'_, f64>, std::slice::Iter<'_, f64>> as std::iter::Iterator>::Item> {<std::iter::Zip<std::slice::Iter<'_, f64>, std::slice::Iter<'_, f64>> as std::iter::Iterator>::next},
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/core/feature_vector.rs:32:38: 32:85 (#120),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).84),
                ),
            },
            ty: std::iter::Zip<std::slice::Iter<'_, f64>, std::slice::Iter<'_, f64>>,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/core/feature_vector.rs:32:38: 32:85 (#120),
        },
        Expr {
            kind: Scope {
                region_scope: Node(86),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).86),
                ),
                value: e83,
            },
            ty: std::iter::Zip<std::slice::Iter<'_, f64>, std::slice::Iter<'_, f64>>,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/core/feature_vector.rs:32:38: 32:85 (#120),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: false,
                },
                arg: e84,
            },
            ty: &mut std::iter::Zip<std::slice::Iter<'_, f64>, std::slice::Iter<'_, f64>>,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/core/feature_vector.rs:32:38: 32:85 (#120),
        },
        Expr {
            kind: Deref {
                arg: e85,
            },
            ty: std::iter::Zip<std::slice::Iter<'_, f64>, std::slice::Iter<'_, f64>>,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/core/feature_vector.rs:32:38: 32:85 (#120),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e86,
            },
            ty: &mut std::iter::Zip<std::slice::Iter<'_, f64>, std::slice::Iter<'_, f64>>,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/core/feature_vector.rs:32:38: 32:85 (#120),
        },
        Expr {
            kind: Scope {
                region_scope: Node(87),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).87),
                ),
                value: e87,
            },
            ty: &mut std::iter::Zip<std::slice::Iter<'_, f64>, std::slice::Iter<'_, f64>>,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/core/feature_vector.rs:32:38: 32:85 (#120),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::iter::Zip<std::slice::Iter<'_, f64>, std::slice::Iter<'_, f64>>) -> std::option::Option<<std::iter::Zip<std::slice::Iter<'_, f64>, std::slice::Iter<'_, f64>> as std::iter::Iterator>::Item> {<std::iter::Zip<std::slice::Iter<'_, f64>, std::slice::Iter<'_, f64>> as std::iter::Iterator>::next},
                fun: e82,
                args: [
                    e88,
                ],
                from_hir_call: true,
                fn_span: src/core/feature_vector.rs:32:38: 32:85 (#120),
            },
            ty: std::option::Option<(&f64, &f64)>,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/core/feature_vector.rs:32:38: 32:85 (#120),
        },
        Expr {
            kind: Scope {
                region_scope: Node(89),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).89),
                ),
                value: e89,
            },
            ty: std::option::Option<(&f64, &f64)>,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/core/feature_vector.rs:32:38: 32:85 (#120),
        },
        Expr {
            kind: Break {
                label: Node(63),
                value: None,
            },
            ty: !,
            temp_lifetime: Some(
                Node(64),
            ),
            span: src/core/feature_vector.rs:32:9: 34:10 (#119),
        },
        Expr {
            kind: NeverToAny {
                source: e91,
            },
            ty: (),
            temp_lifetime: Some(
                Node(64),
            ),
            span: src/core/feature_vector.rs:32:9: 34:10 (#119),
        },
        Expr {
            kind: Scope {
                region_scope: Node(64),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).64),
                ),
                value: e92,
            },
            ty: (),
            temp_lifetime: Some(
                Node(64),
            ),
            span: src/core/feature_vector.rs:32:9: 34:10 (#119),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(64),
                lint_level: Inherited,
                value: e93,
            },
            ty: (),
            temp_lifetime: Some(
                Node(64),
            ),
            span: src/core/feature_vector.rs:32:9: 34:10 (#119),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).45),
                ),
            },
            ty: f64,
            temp_lifetime: Some(
                Node(80),
            ),
            span: src/core/feature_vector.rs:33:13: 33:19 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(70),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).70),
                ),
                value: e95,
            },
            ty: f64,
            temp_lifetime: Some(
                Node(80),
            ),
            span: src/core/feature_vector.rs:33:13: 33:19 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).60),
                ),
            },
            ty: &f64,
            temp_lifetime: Some(
                Node(80),
            ),
            span: src/core/feature_vector.rs:33:24: 33:32 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(75),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).75),
                ),
                value: e97,
            },
            ty: &f64,
            temp_lifetime: Some(
                Node(80),
            ),
            span: src/core/feature_vector.rs:33:24: 33:32 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).61),
                ),
            },
            ty: &f64,
            temp_lifetime: Some(
                Node(80),
            ),
            span: src/core/feature_vector.rs:33:35: 33:44 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(77),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).77),
                ),
                value: e99,
            },
            ty: &f64,
            temp_lifetime: Some(
                Node(80),
            ),
            span: src/core/feature_vector.rs:33:35: 33:44 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(&f64, &f64) -> <&f64 as std::ops::Sub>::Output {<&f64 as std::ops::Sub>::sub},
            temp_lifetime: Some(
                Node(80),
            ),
            span: src/core/feature_vector.rs:33:23: 33:45 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(&f64, &f64) -> <&f64 as std::ops::Sub>::Output {<&f64 as std::ops::Sub>::sub},
                fun: e101,
                args: [
                    e98,
                    e100,
                ],
                from_hir_call: false,
                fn_span: src/core/feature_vector.rs:33:23: 33:45 (#0),
            },
            ty: f64,
            temp_lifetime: Some(
                Node(80),
            ),
            span: src/core/feature_vector.rs:33:23: 33:45 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(74),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).74),
                ),
                value: e102,
            },
            ty: f64,
            temp_lifetime: Some(
                Node(80),
            ),
            span: src/core/feature_vector.rs:33:23: 33:45 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        2,
                        Unsuffixed,
                    ),
                    span: src/core/feature_vector.rs:33:51: 33:52 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(80),
            ),
            span: src/core/feature_vector.rs:33:51: 33:52 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(79),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).79),
                ),
                value: e104,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(80),
            ),
            span: src/core/feature_vector.rs:33:51: 33:52 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(f64, i32) -> f64 {std::f64::<impl f64>::powi},
            temp_lifetime: Some(
                Node(80),
            ),
            span: src/core/feature_vector.rs:33:46: 33:50 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(f64, i32) -> f64 {std::f64::<impl f64>::powi},
                fun: e106,
                args: [
                    e103,
                    e105,
                ],
                from_hir_call: true,
                fn_span: src/core/feature_vector.rs:33:46: 33:53 (#0),
            },
            ty: f64,
            temp_lifetime: Some(
                Node(80),
            ),
            span: src/core/feature_vector.rs:33:23: 33:53 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(72),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).72),
                ),
                value: e107,
            },
            ty: f64,
            temp_lifetime: Some(
                Node(80),
            ),
            span: src/core/feature_vector.rs:33:23: 33:53 (#0),
        },
        Expr {
            kind: AssignOp {
                op: Add,
                lhs: e96,
                rhs: e108,
            },
            ty: (),
            temp_lifetime: Some(
                Node(80),
            ),
            span: src/core/feature_vector.rs:33:13: 33:53 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(69),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).69),
                ),
                value: e109,
            },
            ty: (),
            temp_lifetime: Some(
                Node(80),
            ),
            span: src/core/feature_vector.rs:33:13: 33:53 (#0),
        },
        Expr {
            kind: Block {
                block: b1,
            },
            ty: (),
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/core/feature_vector.rs:32:85: 34:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(82),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).82),
                ),
                value: e111,
            },
            ty: (),
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/core/feature_vector.rs:32:85: 34:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(82),
                lint_level: Inherited,
                value: e112,
            },
            ty: (),
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/core/feature_vector.rs:32:85: 34:10 (#0),
        },
        Expr {
            kind: Match {
                scrutinee: e90,
                arms: [
                    a0,
                    a1,
                ],
            },
            ty: (),
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/core/feature_vector.rs:32:38: 32:85 (#120),
        },
        Expr {
            kind: Scope {
                region_scope: Node(90),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).90),
                ),
                value: e114,
            },
            ty: (),
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/core/feature_vector.rs:32:38: 32:85 (#120),
        },
        Expr {
            kind: Block {
                block: b2,
            },
            ty: (),
            temp_lifetime: Some(
                Node(92),
            ),
            span: src/core/feature_vector.rs:32:9: 34:10 (#119),
        },
        Expr {
            kind: Loop {
                body: e116,
            },
            ty: (),
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/core/feature_vector.rs:32:9: 34:10 (#119),
        },
        Expr {
            kind: Scope {
                region_scope: Node(63),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).63),
                ),
                value: e117,
            },
            ty: (),
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/core/feature_vector.rs:32:9: 34:10 (#119),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(63),
                lint_level: Inherited,
                value: e118,
            },
            ty: (),
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/core/feature_vector.rs:32:9: 34:10 (#119),
        },
        Expr {
            kind: Match {
                scrutinee: e80,
                arms: [
                    a2,
                ],
            },
            ty: (),
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:9: 34:10 (#119),
        },
        Expr {
            kind: Scope {
                region_scope: Node(96),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).96),
                ),
                value: e120,
            },
            ty: (),
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:9: 34:10 (#119),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(96),
                lint_level: Inherited,
                value: e121,
            },
            ty: (),
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/core/feature_vector.rs:32:9: 34:10 (#119),
        },
        Expr {
            kind: Use {
                source: e122,
            },
            ty: (),
            temp_lifetime: Some(
                Node(98),
            ),
            span: src/core/feature_vector.rs:32:9: 34:10 (#119),
        },
        Expr {
            kind: Scope {
                region_scope: Node(97),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).97),
                ),
                value: e123,
            },
            ty: (),
            temp_lifetime: Some(
                Node(98),
            ),
            span: src/core/feature_vector.rs:32:9: 34:10 (#119),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).45),
                ),
            },
            ty: f64,
            temp_lifetime: Some(
                Node(102),
            ),
            span: src/core/feature_vector.rs:35:9: 35:15 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(99),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).99),
                ),
                value: e125,
            },
            ty: f64,
            temp_lifetime: Some(
                Node(102),
            ),
            span: src/core/feature_vector.rs:35:9: 35:15 (#0),
        },
        Expr {
            kind: Block {
                block: b3,
            },
            ty: f64,
            temp_lifetime: Some(
                Node(102),
            ),
            span: src/core/feature_vector.rs:29:54: 36:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(102),
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).102),
                ),
                value: e127,
            },
            ty: f64,
            temp_lifetime: Some(
                Node(102),
            ),
            span: src/core/feature_vector.rs:29:54: 36:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(102),
                lint_level: Inherited,
                value: e128,
            },
            ty: f64,
            temp_lifetime: Some(
                Node(102),
            ),
            span: src/core/feature_vector.rs:29:54: 36:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(41),
                expr: e41,
            },
            opt_destruction_scope: Some(
                Destruction(41),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 101, first_statement_index: 1},
                init_scope: Node(42),
                pattern: Pat {
                    ty: f64,
                    span: src/core/feature_vector.rs:31:13: 31:23 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "result",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).45),
                        ),
                        ty: f64,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e43,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).44),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(42),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(80),
                expr: e110,
            },
            opt_destruction_scope: Some(
                Destruction(80),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(91),
                expr: e115,
            },
            opt_destruction_scope: Some(
                Destruction(91),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(98),
                expr: e124,
            },
            opt_destruction_scope: Some(
                Destruction(98),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &core::feature_vector::FeatureVector,
                    span: src/core/feature_vector.rs:29:17: 29:22 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).2),
                        ),
                        ty: &core::feature_vector::FeatureVector,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &core::feature_vector::FeatureVector,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &core::feature_vector::FeatureVector,
                    span: src/core/feature_vector.rs:29:24: 29:29 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "other",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).4),
                        ),
                        ty: &core::feature_vector::FeatureVector,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &core::feature_vector::FeatureVector,
            ty_span: Some(
                src/core/feature_vector.rs:29:31: 29:45 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:69 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::dist).3),
            ),
        },
    ],
}

DefId(0:70 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::features):
Thir {
    body_type: Fn(
        ([&core::feature_vector::FeatureVector]; c_variadic: false)->std::slice::Iter<'_, std::string::String>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(8),
            opt_destruction_scope: None,
            span: src/core/feature_vector.rs:37:48: 39:6 (#0),
            stmts: [],
            expr: Some(
                e12,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:70 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::features).2),
                ),
            },
            ty: &core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/core/feature_vector.rs:38:9: 38:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/core/feature_vector.rs:38:9: 38:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:70 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::features).6),
                ),
                value: e1,
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/core/feature_vector.rs:38:9: 38:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[0],
            },
            ty: std::vec::Vec<std::string::String>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/core/feature_vector.rs:38:9: 38:16 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e3,
            },
            ty: &std::vec::Vec<std::string::String>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/core/feature_vector.rs:38:9: 38:23 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::vec::Vec<std::string::String>) -> &'a <std::vec::Vec<std::string::String> as std::ops::Deref>::Target {<std::vec::Vec<std::string::String> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/core/feature_vector.rs:38:9: 38:23 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::vec::Vec<std::string::String>) -> &'a <std::vec::Vec<std::string::String> as std::ops::Deref>::Target {<std::vec::Vec<std::string::String> as std::ops::Deref>::deref},
                fun: e5,
                args: [
                    e4,
                ],
                from_hir_call: false,
                fn_span: src/core/feature_vector.rs:38:9: 38:23 (#0),
            },
            ty: &[std::string::String],
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/core/feature_vector.rs:38:9: 38:23 (#0),
        },
        Expr {
            kind: Deref {
                arg: e6,
            },
            ty: [std::string::String],
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/core/feature_vector.rs:38:9: 38:23 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e7,
            },
            ty: &[std::string::String],
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/core/feature_vector.rs:38:9: 38:23 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:70 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::features).5),
                ),
                value: e8,
            },
            ty: &[std::string::String],
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/core/feature_vector.rs:38:9: 38:16 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a [std::string::String]) -> std::slice::Iter<'a, std::string::String> {core::slice::<impl [std::string::String]>::iter},
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/core/feature_vector.rs:38:17: 38:21 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a [std::string::String]) -> std::slice::Iter<'a, std::string::String> {core::slice::<impl [std::string::String]>::iter},
                fun: e10,
                args: [
                    e9,
                ],
                from_hir_call: true,
                fn_span: src/core/feature_vector.rs:38:17: 38:23 (#0),
            },
            ty: std::slice::Iter<'_, std::string::String>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/core/feature_vector.rs:38:9: 38:23 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:70 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::features).3),
                ),
                value: e11,
            },
            ty: std::slice::Iter<'_, std::string::String>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/core/feature_vector.rs:38:9: 38:23 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::slice::Iter<'_, std::string::String>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/core/feature_vector.rs:37:48: 39:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:70 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::features).9),
                ),
                value: e13,
            },
            ty: std::slice::Iter<'_, std::string::String>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/core/feature_vector.rs:37:48: 39:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(9),
                lint_level: Inherited,
                value: e14,
            },
            ty: std::slice::Iter<'_, std::string::String>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/core/feature_vector.rs:37:48: 39:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &core::feature_vector::FeatureVector,
                    span: src/core/feature_vector.rs:37:21: 37:26 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:70 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::features).2),
                        ),
                        ty: &core::feature_vector::FeatureVector,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &core::feature_vector::FeatureVector,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:70 ~ andrew_fuzz[741f]::core::feature_vector::{impl#0}::features).1),
            ),
        },
    ],
}

DefId(0:98 ~ andrew_fuzz[741f]::core::context::{impl#0}::new):
Thir {
    body_type: Fn(
        ([std::rc::Weak<core::context::Context<'_>>, core::context::Children<'_>]; c_variadic: false)->core::context::Context<'_>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(13),
            opt_destruction_scope: None,
            span: src/core/context.rs:18:75: 23:6 (#0),
            stmts: [],
            expr: Some(
                e5,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:98 ~ andrew_fuzz[741f]::core::context::{impl#0}::new).2),
                ),
            },
            ty: std::rc::Weak<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(14),
            ),
            span: src/core/context.rs:20:21: 20:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:98 ~ andrew_fuzz[741f]::core::context::{impl#0}::new).8),
                ),
                value: e0,
            },
            ty: std::rc::Weak<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(14),
            ),
            span: src/core/context.rs:20:21: 20:27 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:98 ~ andrew_fuzz[741f]::core::context::{impl#0}::new).4),
                ),
            },
            ty: core::context::Children<'_>,
            temp_lifetime: Some(
                Node(14),
            ),
            span: src/core/context.rs:21:13: 21:21 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:98 ~ andrew_fuzz[741f]::core::context::{impl#0}::new).11),
                ),
                value: e2,
            },
            ty: core::context::Children<'_>,
            temp_lifetime: Some(
                Node(14),
            ),
            span: src/core/context.rs:21:13: 21:21 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: core::context::Context,
                    variant_index: 0,
                    substs: [
                        ReErased,
                    ],
                    user_ty: Some(
                        Canonical {
                            max_universe: U0,
                            variables: [],
                            value: TypeOf(
                                DefId(0:79 ~ andrew_fuzz[741f]::core::context::Context),
                                UserSubsts {
                                    substs: [
                                        ReEarlyBound(0, 'a),
                                    ],
                                    user_self_ty: None,
                                },
                            ),
                        },
                    ),
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e1,
                        },
                        FieldExpr {
                            name: field[1],
                            expr: e3,
                        },
                    ],
                    base: None,
                },
            ),
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(14),
            ),
            span: src/core/context.rs:19:9: 22:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:98 ~ andrew_fuzz[741f]::core::context::{impl#0}::new).5),
                ),
                value: e4,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(14),
            ),
            span: src/core/context.rs:19:9: 22:10 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(14),
            ),
            span: src/core/context.rs:18:75: 23:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:98 ~ andrew_fuzz[741f]::core::context::{impl#0}::new).14),
                ),
                value: e6,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(14),
            ),
            span: src/core/context.rs:18:75: 23:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(14),
                lint_level: Inherited,
                value: e7,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(14),
            ),
            span: src/core/context.rs:18:75: 23:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: std::rc::Weak<core::context::Context<'_>>,
                    span: src/core/context.rs:18:16: 18:22 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "parent",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:98 ~ andrew_fuzz[741f]::core::context::{impl#0}::new).2),
                        ),
                        ty: std::rc::Weak<core::context::Context<'_>>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::rc::Weak<core::context::Context<'_>>,
            ty_span: Some(
                src/core/context.rs:18:24: 18:41 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:98 ~ andrew_fuzz[741f]::core::context::{impl#0}::new).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: core::context::Children<'_>,
                    span: src/core/context.rs:18:43: 18:51 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "children",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:98 ~ andrew_fuzz[741f]::core::context::{impl#0}::new).4),
                        ),
                        ty: core::context::Children<'_>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: core::context::Children<'_>,
            ty_span: Some(
                src/core/context.rs:18:53: 18:65 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:98 ~ andrew_fuzz[741f]::core::context::{impl#0}::new).3),
            ),
        },
    ],
}

DefId(0:99 ~ andrew_fuzz[741f]::core::context::{impl#0}::parent):
Thir {
    body_type: Fn(
        ([&core::context::Context<'_>]; c_variadic: false)->std::rc::Rc<core::context::Context<'_>>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(12),
            opt_destruction_scope: None,
            span: src/core/context.rs:24:41: 26:6 (#0),
            stmts: [],
            expr: Some(
                e15,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:99 ~ andrew_fuzz[741f]::core::context::{impl#0}::parent).2),
                ),
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/core/context.rs:25:9: 25:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/core/context.rs:25:9: 25:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:99 ~ andrew_fuzz[741f]::core::context::{impl#0}::parent).10),
                ),
                value: e1,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/core/context.rs:25:9: 25:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Weak<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/core/context.rs:25:9: 25:20 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e3,
            },
            ty: &std::rc::Weak<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/core/context.rs:25:9: 25:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:99 ~ andrew_fuzz[741f]::core::context::{impl#0}::parent).9),
                ),
                value: e4,
            },
            ty: &std::rc::Weak<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/core/context.rs:25:9: 25:20 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Weak<core::context::Context<'_>>) -> std::option::Option<std::rc::Rc<core::context::Context<'_>>> {std::rc::Weak::<core::context::Context<'_>>::upgrade},
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/core/context.rs:25:21: 25:28 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Weak<core::context::Context<'_>>) -> std::option::Option<std::rc::Rc<core::context::Context<'_>>> {std::rc::Weak::<core::context::Context<'_>>::upgrade},
                fun: e6,
                args: [
                    e5,
                ],
                from_hir_call: true,
                fn_span: src/core/context.rs:25:21: 25:30 (#0),
            },
            ty: std::option::Option<std::rc::Rc<core::context::Context<'_>>>,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/core/context.rs:25:9: 25:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:99 ~ andrew_fuzz[741f]::core::context::{impl#0}::parent).7),
                ),
                value: e7,
            },
            ty: std::option::Option<std::rc::Rc<core::context::Context<'_>>>,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/core/context.rs:25:9: 25:30 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::option::Option<std::rc::Rc<core::context::Context<'_>>>) -> std::rc::Rc<core::context::Context<'_>> {std::option::Option::<std::rc::Rc<core::context::Context<'_>>>::unwrap},
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/core/context.rs:25:31: 25:37 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::option::Option<std::rc::Rc<core::context::Context<'_>>>) -> std::rc::Rc<core::context::Context<'_>> {std::option::Option::<std::rc::Rc<core::context::Context<'_>>>::unwrap},
                fun: e9,
                args: [
                    e8,
                ],
                from_hir_call: true,
                fn_span: src/core/context.rs:25:31: 25:39 (#0),
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/core/context.rs:25:9: 25:39 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e10,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/core/context.rs:25:9: 25:47 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:99 ~ andrew_fuzz[741f]::core::context::{impl#0}::parent).5),
                ),
                value: e11,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/core/context.rs:25:9: 25:39 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> std::rc::Rc<core::context::Context<'_>> {<std::rc::Rc<core::context::Context<'_>> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/core/context.rs:25:40: 25:45 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> std::rc::Rc<core::context::Context<'_>> {<std::rc::Rc<core::context::Context<'_>> as std::clone::Clone>::clone},
                fun: e13,
                args: [
                    e12,
                ],
                from_hir_call: true,
                fn_span: src/core/context.rs:25:40: 25:47 (#0),
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/core/context.rs:25:9: 25:47 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:99 ~ andrew_fuzz[741f]::core::context::{impl#0}::parent).3),
                ),
                value: e14,
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/core/context.rs:25:9: 25:47 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/core/context.rs:24:41: 26:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:99 ~ andrew_fuzz[741f]::core::context::{impl#0}::parent).13),
                ),
                value: e16,
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/core/context.rs:24:41: 26:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(13),
                lint_level: Inherited,
                value: e17,
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/core/context.rs:24:41: 26:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &core::context::Context<'_>,
                    span: src/core/context.rs:24:19: 24:24 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:99 ~ andrew_fuzz[741f]::core::context::{impl#0}::parent).2),
                        ),
                        ty: &core::context::Context<'_>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &core::context::Context<'_>,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:99 ~ andrew_fuzz[741f]::core::context::{impl#0}::parent).1),
            ),
        },
    ],
}

DefId(0:100 ~ andrew_fuzz[741f]::core::context::{impl#0}::child):
Thir {
    body_type: Fn(
        ([&core::context::Context<'_>]; c_variadic: false)->std::rc::Rc<dyn core::DataModel>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(18),
            opt_destruction_scope: None,
            span: src/core/context.rs:28:56: 30:10 (#0),
            stmts: [],
            expr: Some(
                e16,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(27),
            opt_destruction_scope: None,
            span: src/core/context.rs:30:16: 32:10 (#0),
            stmts: [],
            expr: Some(
                e27,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(28),
            opt_destruction_scope: None,
            span: src/core/context.rs:27:46: 33:6 (#0),
            stmts: [],
            expr: Some(
                e33,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:100 ~ andrew_fuzz[741f]::core::context::{impl#0}::child).2),
                ),
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/core/context.rs:28:42: 28:46 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/core/context.rs:28:42: 28:46 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(12),
                lint_level: Explicit(
                    HirId(DefId(0:100 ~ andrew_fuzz[741f]::core::context::{impl#0}::child).12),
                ),
                value: e1,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/core/context.rs:28:42: 28:46 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[1],
            },
            ty: core::context::Children<'_>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/core/context.rs:28:42: 28:55 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:100 ~ andrew_fuzz[741f]::core::context::{impl#0}::child).11),
                ),
                value: e3,
            },
            ty: core::context::Children<'_>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/core/context.rs:28:42: 28:55 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e4,
            },
            ty: &core::context::Children<'_>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/core/context.rs:28:41: 28:55 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:100 ~ andrew_fuzz[741f]::core::context::{impl#0}::child).10),
                ),
                value: e5,
            },
            ty: &core::context::Children<'_>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/core/context.rs:28:41: 28:55 (#0),
        },
        Expr {
            kind: Let {
                expr: e6,
                pat: Pat {
                    ty: &core::context::Children<'_>,
                    span: src/core/context.rs:28:16: 28:38 (#0),
                    kind: Deref {
                        subpattern: Pat {
                            ty: core::context::Children<'_>,
                            span: src/core/context.rs:28:16: 28:38 (#0),
                            kind: Variant {
                                adt_def: core::context::Children,
                                substs: [
                                    ReErased,
                                ],
                                variant_index: 1,
                                subpatterns: [
                                    FieldPat {
                                        field: field[0],
                                        pattern: Pat {
                                            ty: std::rc::Rc<dyn core::DataModel>,
                                            span: src/core/context.rs:28:32: 28:37 (#0),
                                            kind: Binding {
                                                mutability: Not,
                                                name: "child",
                                                mode: ByRef(
                                                    Shared,
                                                ),
                                                var: LocalVarId(
                                                    HirId(DefId(0:100 ~ andrew_fuzz[741f]::core::context::{impl#0}::child).8),
                                                ),
                                                ty: &std::rc::Rc<dyn core::DataModel>,
                                                subpattern: None,
                                                is_primary: true,
                                            },
                                        },
                                    },
                                ],
                            },
                        },
                    },
                },
            },
            ty: bool,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/core/context.rs:28:12: 28:55 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:100 ~ andrew_fuzz[741f]::core::context::{impl#0}::child).4),
                ),
                value: e7,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/core/context.rs:28:12: 28:55 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:100 ~ andrew_fuzz[741f]::core::context::{impl#0}::child).8),
                ),
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(19),
            ),
            span: src/core/context.rs:29:13: 29:18 (#0),
        },
        Expr {
            kind: Deref {
                arg: e9,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(19),
            ),
            span: src/core/context.rs:29:13: 29:26 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e10,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(19),
            ),
            span: src/core/context.rs:29:13: 29:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(16),
                lint_level: Explicit(
                    HirId(DefId(0:100 ~ andrew_fuzz[741f]::core::context::{impl#0}::child).16),
                ),
                value: e11,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(19),
            ),
            span: src/core/context.rs:29:13: 29:18 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(19),
            ),
            span: src/core/context.rs:29:19: 29:24 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e13,
                args: [
                    e12,
                ],
                from_hir_call: true,
                fn_span: src/core/context.rs:29:19: 29:26 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(19),
            ),
            span: src/core/context.rs:29:13: 29:26 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e14,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(19),
            ),
            span: src/core/context.rs:29:13: 29:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:100 ~ andrew_fuzz[741f]::core::context::{impl#0}::child).14),
                ),
                value: e15,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(19),
            ),
            span: src/core/context.rs:29:13: 29:26 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(19),
            ),
            span: src/core/context.rs:29:13: 29:26 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e17,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(19),
            ),
            span: src/core/context.rs:29:13: 29:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:100 ~ andrew_fuzz[741f]::core::context::{impl#0}::child).19),
                ),
                value: e18,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(19),
            ),
            span: src/core/context.rs:28:56: 30:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(19),
                lint_level: Inherited,
                value: e19,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(19),
            ),
            span: src/core/context.rs:28:56: 30:10 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(20),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:33 (#29),
        },
        Expr {
            kind: Scope {
                region_scope: Node(22),
                lint_level: Explicit(
                    HirId(DefId(0:100 ~ andrew_fuzz[741f]::core::context::{impl#0}::child).22),
                ),
                value: e21,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(20),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:33 (#29),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "explicit panic",
                        Cooked,
                    ),
                    span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#29),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(20),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#29),
        },
        Expr {
            kind: Scope {
                region_scope: Node(26),
                lint_level: Explicit(
                    HirId(DefId(0:100 ~ andrew_fuzz[741f]::core::context::{impl#0}::child).26),
                ),
                value: e23,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(20),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#29),
        },
        Expr {
            kind: Call {
                ty: fn(&'static str) -> ! {core::panicking::panic},
                fun: e22,
                args: [
                    e24,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#29),
            },
            ty: !,
            temp_lifetime: Some(
                Node(20),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#29),
        },
        Expr {
            kind: NeverToAny {
                source: e25,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(20),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#29),
        },
        Expr {
            kind: Scope {
                region_scope: Node(21),
                lint_level: Explicit(
                    HirId(DefId(0:100 ~ andrew_fuzz[741f]::core::context::{impl#0}::child).21),
                ),
                value: e26,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(20),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#29),
        },
        Expr {
            kind: Block {
                block: b1,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/context.rs:30:16: 32:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(20),
                lint_level: Explicit(
                    HirId(DefId(0:100 ~ andrew_fuzz[741f]::core::context::{impl#0}::child).20),
                ),
                value: e28,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/context.rs:30:16: 32:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(20),
                lint_level: Inherited,
                value: e29,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/core/context.rs:30:16: 32:10 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(19),
                cond: e8,
                then: e20,
                else_opt: Some(
                    e30,
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/core/context.rs:28:9: 32:10 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e31,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/core/context.rs:28:9: 32:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:100 ~ andrew_fuzz[741f]::core::context::{impl#0}::child).3),
                ),
                value: e32,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/core/context.rs:28:9: 32:10 (#0),
        },
        Expr {
            kind: Block {
                block: b2,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/core/context.rs:28:9: 32:10 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e34,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/core/context.rs:28:9: 32:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(29),
                lint_level: Explicit(
                    HirId(DefId(0:100 ~ andrew_fuzz[741f]::core::context::{impl#0}::child).29),
                ),
                value: e35,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/core/context.rs:27:46: 33:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(29),
                lint_level: Inherited,
                value: e36,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/core/context.rs:27:46: 33:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &core::context::Context<'_>,
                    span: src/core/context.rs:27:18: 27:23 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:100 ~ andrew_fuzz[741f]::core::context::{impl#0}::child).2),
                        ),
                        ty: &core::context::Context<'_>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &core::context::Context<'_>,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:100 ~ andrew_fuzz[741f]::core::context::{impl#0}::child).1),
            ),
        },
    ],
}

DefId(0:101 ~ andrew_fuzz[741f]::core::context::{impl#0}::vec):
Thir {
    body_type: Fn(
        ([&core::context::Context<'_>]; c_variadic: false)->&std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(17),
            opt_destruction_scope: None,
            span: src/core/context.rs:35:65: 37:10 (#0),
            stmts: [],
            expr: Some(
                e14,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(26),
            opt_destruction_scope: None,
            span: src/core/context.rs:37:16: 39:10 (#0),
            stmts: [],
            expr: Some(
                e24,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(27),
            opt_destruction_scope: None,
            span: src/core/context.rs:34:50: 40:6 (#0),
            stmts: [],
            expr: Some(
                e29,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:101 ~ andrew_fuzz[741f]::core::context::{impl#0}::vec).2),
                ),
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/context.rs:35:51: 35:55 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/context.rs:35:51: 35:55 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(12),
                lint_level: Explicit(
                    HirId(DefId(0:101 ~ andrew_fuzz[741f]::core::context::{impl#0}::vec).12),
                ),
                value: e1,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/context.rs:35:51: 35:55 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[1],
            },
            ty: core::context::Children<'_>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/context.rs:35:51: 35:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:101 ~ andrew_fuzz[741f]::core::context::{impl#0}::vec).11),
                ),
                value: e3,
            },
            ty: core::context::Children<'_>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/context.rs:35:51: 35:64 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e4,
            },
            ty: &core::context::Children<'_>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/context.rs:35:50: 35:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:101 ~ andrew_fuzz[741f]::core::context::{impl#0}::vec).10),
                ),
                value: e5,
            },
            ty: &core::context::Children<'_>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/context.rs:35:50: 35:64 (#0),
        },
        Expr {
            kind: Let {
                expr: e6,
                pat: Pat {
                    ty: &core::context::Children<'_>,
                    span: src/core/context.rs:35:16: 35:47 (#0),
                    kind: Deref {
                        subpattern: Pat {
                            ty: core::context::Children<'_>,
                            span: src/core/context.rs:35:16: 35:47 (#0),
                            kind: Variant {
                                adt_def: core::context::Children,
                                substs: [
                                    ReErased,
                                ],
                                variant_index: 2,
                                subpatterns: [
                                    FieldPat {
                                        field: field[0],
                                        pattern: Pat {
                                            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
                                            span: src/core/context.rs:35:36: 35:46 (#0),
                                            kind: Binding {
                                                mutability: Not,
                                                name: "child_list",
                                                mode: ByRef(
                                                    Shared,
                                                ),
                                                var: LocalVarId(
                                                    HirId(DefId(0:101 ~ andrew_fuzz[741f]::core::context::{impl#0}::vec).8),
                                                ),
                                                ty: &&std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
                                                subpattern: None,
                                                is_primary: true,
                                            },
                                        },
                                    },
                                ],
                            },
                        },
                    },
                },
            },
            ty: bool,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/context.rs:35:12: 35:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:101 ~ andrew_fuzz[741f]::core::context::{impl#0}::vec).4),
                ),
                value: e7,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/context.rs:35:12: 35:64 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:101 ~ andrew_fuzz[741f]::core::context::{impl#0}::vec).8),
                ),
            },
            ty: &&std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/context.rs:36:14: 36:24 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:101 ~ andrew_fuzz[741f]::core::context::{impl#0}::vec).15),
                ),
                value: e9,
            },
            ty: &&std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/context.rs:36:14: 36:24 (#0),
        },
        Expr {
            kind: Deref {
                arg: e10,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/context.rs:36:13: 36:24 (#0),
        },
        Expr {
            kind: Deref {
                arg: e11,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/context.rs:36:13: 36:24 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e12,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/context.rs:36:13: 36:24 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:101 ~ andrew_fuzz[741f]::core::context::{impl#0}::vec).14),
                ),
                value: e13,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/context.rs:36:13: 36:24 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/context.rs:35:65: 37:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(18),
                lint_level: Explicit(
                    HirId(DefId(0:101 ~ andrew_fuzz[741f]::core::context::{impl#0}::vec).18),
                ),
                value: e15,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/context.rs:35:65: 37:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(18),
                lint_level: Inherited,
                value: e16,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/context.rs:35:65: 37:10 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(19),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:33 (#32),
        },
        Expr {
            kind: Scope {
                region_scope: Node(21),
                lint_level: Explicit(
                    HirId(DefId(0:101 ~ andrew_fuzz[741f]::core::context::{impl#0}::vec).21),
                ),
                value: e18,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(19),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:33 (#32),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "explicit panic",
                        Cooked,
                    ),
                    span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#32),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(19),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#32),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:101 ~ andrew_fuzz[741f]::core::context::{impl#0}::vec).25),
                ),
                value: e20,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(19),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#32),
        },
        Expr {
            kind: Call {
                ty: fn(&'static str) -> ! {core::panicking::panic},
                fun: e19,
                args: [
                    e21,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#32),
            },
            ty: !,
            temp_lifetime: Some(
                Node(19),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#32),
        },
        Expr {
            kind: NeverToAny {
                source: e22,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(19),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#32),
        },
        Expr {
            kind: Scope {
                region_scope: Node(20),
                lint_level: Explicit(
                    HirId(DefId(0:101 ~ andrew_fuzz[741f]::core::context::{impl#0}::vec).20),
                ),
                value: e23,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(19),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#32),
        },
        Expr {
            kind: Block {
                block: b1,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(19),
            ),
            span: src/core/context.rs:37:16: 39:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:101 ~ andrew_fuzz[741f]::core::context::{impl#0}::vec).19),
                ),
                value: e25,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(19),
            ),
            span: src/core/context.rs:37:16: 39:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(19),
                lint_level: Inherited,
                value: e26,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(19),
            ),
            span: src/core/context.rs:37:16: 39:10 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(18),
                cond: e8,
                then: e17,
                else_opt: Some(
                    e27,
                ),
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/context.rs:35:9: 39:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:101 ~ andrew_fuzz[741f]::core::context::{impl#0}::vec).3),
                ),
                value: e28,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/context.rs:35:9: 39:10 (#0),
        },
        Expr {
            kind: Block {
                block: b2,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/context.rs:34:50: 40:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(28),
                lint_level: Explicit(
                    HirId(DefId(0:101 ~ andrew_fuzz[741f]::core::context::{impl#0}::vec).28),
                ),
                value: e30,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/context.rs:34:50: 40:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(28),
                lint_level: Inherited,
                value: e31,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/context.rs:34:50: 40:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &core::context::Context<'_>,
                    span: src/core/context.rs:34:16: 34:21 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:101 ~ andrew_fuzz[741f]::core::context::{impl#0}::vec).2),
                        ),
                        ty: &core::context::Context<'_>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &core::context::Context<'_>,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:101 ~ andrew_fuzz[741f]::core::context::{impl#0}::vec).1),
            ),
        },
    ],
}

DefId(0:102 ~ andrew_fuzz[741f]::core::context::{impl#0}::map):
Thir {
    body_type: Fn(
        ([&core::context::Context<'_>]; c_variadic: false)->&core::bolts::ChildMap,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(17),
            opt_destruction_scope: None,
            span: src/core/context.rs:42:63: 44:10 (#0),
            stmts: [],
            expr: Some(
                e14,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(26),
            opt_destruction_scope: None,
            span: src/core/context.rs:44:16: 46:10 (#0),
            stmts: [],
            expr: Some(
                e24,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(27),
            opt_destruction_scope: None,
            span: src/core/context.rs:41:36: 47:6 (#0),
            stmts: [],
            expr: Some(
                e29,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:102 ~ andrew_fuzz[741f]::core::context::{impl#0}::map).2),
                ),
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/context.rs:42:49: 42:53 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/context.rs:42:49: 42:53 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(12),
                lint_level: Explicit(
                    HirId(DefId(0:102 ~ andrew_fuzz[741f]::core::context::{impl#0}::map).12),
                ),
                value: e1,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/context.rs:42:49: 42:53 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[1],
            },
            ty: core::context::Children<'_>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/context.rs:42:49: 42:62 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:102 ~ andrew_fuzz[741f]::core::context::{impl#0}::map).11),
                ),
                value: e3,
            },
            ty: core::context::Children<'_>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/context.rs:42:49: 42:62 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e4,
            },
            ty: &core::context::Children<'_>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/context.rs:42:48: 42:62 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:102 ~ andrew_fuzz[741f]::core::context::{impl#0}::map).10),
                ),
                value: e5,
            },
            ty: &core::context::Children<'_>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/context.rs:42:48: 42:62 (#0),
        },
        Expr {
            kind: Let {
                expr: e6,
                pat: Pat {
                    ty: &core::context::Children<'_>,
                    span: src/core/context.rs:42:16: 42:45 (#0),
                    kind: Deref {
                        subpattern: Pat {
                            ty: core::context::Children<'_>,
                            span: src/core/context.rs:42:16: 42:45 (#0),
                            kind: Variant {
                                adt_def: core::context::Children,
                                substs: [
                                    ReErased,
                                ],
                                variant_index: 3,
                                subpatterns: [
                                    FieldPat {
                                        field: field[0],
                                        pattern: Pat {
                                            ty: &core::bolts::ChildMap,
                                            span: src/core/context.rs:42:35: 42:44 (#0),
                                            kind: Binding {
                                                mutability: Not,
                                                name: "child_map",
                                                mode: ByRef(
                                                    Shared,
                                                ),
                                                var: LocalVarId(
                                                    HirId(DefId(0:102 ~ andrew_fuzz[741f]::core::context::{impl#0}::map).8),
                                                ),
                                                ty: &&core::bolts::ChildMap,
                                                subpattern: None,
                                                is_primary: true,
                                            },
                                        },
                                    },
                                ],
                            },
                        },
                    },
                },
            },
            ty: bool,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/context.rs:42:12: 42:62 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:102 ~ andrew_fuzz[741f]::core::context::{impl#0}::map).4),
                ),
                value: e7,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/context.rs:42:12: 42:62 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:102 ~ andrew_fuzz[741f]::core::context::{impl#0}::map).8),
                ),
            },
            ty: &&core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/context.rs:43:14: 43:23 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:102 ~ andrew_fuzz[741f]::core::context::{impl#0}::map).15),
                ),
                value: e9,
            },
            ty: &&core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/context.rs:43:14: 43:23 (#0),
        },
        Expr {
            kind: Deref {
                arg: e10,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/context.rs:43:13: 43:23 (#0),
        },
        Expr {
            kind: Deref {
                arg: e11,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/context.rs:43:13: 43:23 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e12,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/context.rs:43:13: 43:23 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:102 ~ andrew_fuzz[741f]::core::context::{impl#0}::map).14),
                ),
                value: e13,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/context.rs:43:13: 43:23 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/context.rs:42:63: 44:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(18),
                lint_level: Explicit(
                    HirId(DefId(0:102 ~ andrew_fuzz[741f]::core::context::{impl#0}::map).18),
                ),
                value: e15,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/context.rs:42:63: 44:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(18),
                lint_level: Inherited,
                value: e16,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/context.rs:42:63: 44:10 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(19),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:33 (#35),
        },
        Expr {
            kind: Scope {
                region_scope: Node(21),
                lint_level: Explicit(
                    HirId(DefId(0:102 ~ andrew_fuzz[741f]::core::context::{impl#0}::map).21),
                ),
                value: e18,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(19),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:33 (#35),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "explicit panic",
                        Cooked,
                    ),
                    span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#35),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(19),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#35),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:102 ~ andrew_fuzz[741f]::core::context::{impl#0}::map).25),
                ),
                value: e20,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(19),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#35),
        },
        Expr {
            kind: Call {
                ty: fn(&'static str) -> ! {core::panicking::panic},
                fun: e19,
                args: [
                    e21,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#35),
            },
            ty: !,
            temp_lifetime: Some(
                Node(19),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#35),
        },
        Expr {
            kind: NeverToAny {
                source: e22,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(19),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#35),
        },
        Expr {
            kind: Scope {
                region_scope: Node(20),
                lint_level: Explicit(
                    HirId(DefId(0:102 ~ andrew_fuzz[741f]::core::context::{impl#0}::map).20),
                ),
                value: e23,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(19),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#35),
        },
        Expr {
            kind: Block {
                block: b1,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(19),
            ),
            span: src/core/context.rs:44:16: 46:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:102 ~ andrew_fuzz[741f]::core::context::{impl#0}::map).19),
                ),
                value: e25,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(19),
            ),
            span: src/core/context.rs:44:16: 46:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(19),
                lint_level: Inherited,
                value: e26,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(19),
            ),
            span: src/core/context.rs:44:16: 46:10 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(18),
                cond: e8,
                then: e17,
                else_opt: Some(
                    e27,
                ),
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/context.rs:42:9: 46:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:102 ~ andrew_fuzz[741f]::core::context::{impl#0}::map).3),
                ),
                value: e28,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/context.rs:42:9: 46:10 (#0),
        },
        Expr {
            kind: Block {
                block: b2,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/context.rs:41:36: 47:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(28),
                lint_level: Explicit(
                    HirId(DefId(0:102 ~ andrew_fuzz[741f]::core::context::{impl#0}::map).28),
                ),
                value: e30,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/context.rs:41:36: 47:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(28),
                lint_level: Inherited,
                value: e31,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/core/context.rs:41:36: 47:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &core::context::Context<'_>,
                    span: src/core/context.rs:41:16: 41:21 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:102 ~ andrew_fuzz[741f]::core::context::{impl#0}::map).2),
                        ),
                        ty: &core::context::Context<'_>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &core::context::Context<'_>,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:102 ~ andrew_fuzz[741f]::core::context::{impl#0}::map).1),
            ),
        },
    ],
}

DefId(0:116 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::empty):
Thir {
    body_type: Fn(
        ([&core::bolts::ChildMap]; c_variadic: false)->core::bolts::ChildMap,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(17),
            opt_destruction_scope: None,
            span: src/core/bolts.rs:13:33: 18:6 (#0),
            stmts: [],
            expr: Some(
                e14,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:116 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::empty).2),
                ),
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:15:21: 15:25 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:15:21: 15:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:116 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::empty).9),
                ),
                value: e1,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:15:21: 15:25 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<std::collections::HashMap<&str, usize>>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:15:21: 15:32 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e3,
            },
            ty: &std::rc::Rc<std::collections::HashMap<&str, usize>>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:15:21: 15:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:116 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::empty).8),
                ),
                value: e4,
            },
            ty: &std::rc::Rc<std::collections::HashMap<&str, usize>>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:15:21: 15:32 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<std::collections::HashMap<&str, usize>>) -> std::rc::Rc<std::collections::HashMap<&str, usize>> {<std::rc::Rc<std::collections::HashMap<&str, usize>> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:15:33: 15:38 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<std::collections::HashMap<&str, usize>>) -> std::rc::Rc<std::collections::HashMap<&str, usize>> {<std::rc::Rc<std::collections::HashMap<&str, usize>> as std::clone::Clone>::clone},
                fun: e6,
                args: [
                    e5,
                ],
                from_hir_call: true,
                fn_span: src/core/bolts.rs:15:33: 15:40 (#0),
            },
            ty: std::rc::Rc<std::collections::HashMap<&str, usize>>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:15:21: 15:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:116 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::empty).6),
                ),
                value: e7,
            },
            ty: std::rc::Rc<std::collections::HashMap<&str, usize>>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:15:21: 15:40 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:6607 ~ alloc[42dc]::vec::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:6605 ~ alloc[42dc]::vec::{impl#0}),
                                        self_ty: std::vec::Vec<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:16:18: 16:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:116 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::empty).13),
                ),
                value: e9,
            },
            ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:16:18: 16:26 (#0),
        },
        Expr {
            kind: Call {
                ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
                fun: e10,
                args: [],
                from_hir_call: true,
                fn_span: src/core/bolts.rs:16:18: 16:28 (#0),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:16:18: 16:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(12),
                lint_level: Explicit(
                    HirId(DefId(0:116 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::empty).12),
                ),
                value: e11,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:16:18: 16:28 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: core::bolts::ChildMap,
                    variant_index: 0,
                    substs: [],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e8,
                        },
                        FieldExpr {
                            name: field[1],
                            expr: e12,
                        },
                    ],
                    base: None,
                },
            ),
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:14:9: 17:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:116 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::empty).3),
                ),
                value: e13,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:14:9: 17:10 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:13:33: 18:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(18),
                lint_level: Explicit(
                    HirId(DefId(0:116 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::empty).18),
                ),
                value: e15,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:13:33: 18:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(18),
                lint_level: Inherited,
                value: e16,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:13:33: 18:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &core::bolts::ChildMap,
                    span: src/core/bolts.rs:13:18: 13:23 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:116 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::empty).2),
                        ),
                        ty: &core::bolts::ChildMap,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &core::bolts::ChildMap,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:116 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::empty).1),
            ),
        },
    ],
}

DefId(0:117 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::clone):
Thir {
    body_type: Fn(
        ([&core::bolts::ChildMap]; c_variadic: false)->core::bolts::ChildMap,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(17),
            opt_destruction_scope: None,
            span: src/core/bolts.rs:19:33: 24:6 (#0),
            stmts: [],
            expr: Some(
                e19,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:117 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::clone).2),
                ),
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:21:21: 21:25 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:21:21: 21:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:117 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::clone).9),
                ),
                value: e1,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:21:21: 21:25 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<std::collections::HashMap<&str, usize>>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:21:21: 21:32 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e3,
            },
            ty: &std::rc::Rc<std::collections::HashMap<&str, usize>>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:21:21: 21:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:117 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::clone).8),
                ),
                value: e4,
            },
            ty: &std::rc::Rc<std::collections::HashMap<&str, usize>>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:21:21: 21:32 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<std::collections::HashMap<&str, usize>>) -> std::rc::Rc<std::collections::HashMap<&str, usize>> {<std::rc::Rc<std::collections::HashMap<&str, usize>> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:21:33: 21:38 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<std::collections::HashMap<&str, usize>>) -> std::rc::Rc<std::collections::HashMap<&str, usize>> {<std::rc::Rc<std::collections::HashMap<&str, usize>> as std::clone::Clone>::clone},
                fun: e6,
                args: [
                    e5,
                ],
                from_hir_call: true,
                fn_span: src/core/bolts.rs:21:33: 21:40 (#0),
            },
            ty: std::rc::Rc<std::collections::HashMap<&str, usize>>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:21:21: 21:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:117 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::clone).6),
                ),
                value: e7,
            },
            ty: std::rc::Rc<std::collections::HashMap<&str, usize>>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:21:21: 21:40 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:117 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::clone).2),
                ),
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:22:18: 22:22 (#0),
        },
        Expr {
            kind: Deref {
                arg: e9,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:22:18: 22:22 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:117 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::clone).15),
                ),
                value: e10,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:22:18: 22:22 (#0),
        },
        Expr {
            kind: Field {
                lhs: e11,
                variant_index: 0,
                name: field[1],
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:22:18: 22:26 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e12,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:22:18: 22:34 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:117 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::clone).14),
                ),
                value: e13,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:22:18: 22:26 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {<std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:22:27: 22:32 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {<std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::clone::Clone>::clone},
                fun: e15,
                args: [
                    e14,
                ],
                from_hir_call: true,
                fn_span: src/core/bolts.rs:22:27: 22:34 (#0),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:22:18: 22:34 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(12),
                lint_level: Explicit(
                    HirId(DefId(0:117 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::clone).12),
                ),
                value: e16,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:22:18: 22:34 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: core::bolts::ChildMap,
                    variant_index: 0,
                    substs: [],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e8,
                        },
                        FieldExpr {
                            name: field[1],
                            expr: e17,
                        },
                    ],
                    base: None,
                },
            ),
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:20:9: 23:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:117 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::clone).3),
                ),
                value: e18,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:20:9: 23:10 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:19:33: 24:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(18),
                lint_level: Explicit(
                    HirId(DefId(0:117 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::clone).18),
                ),
                value: e20,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:19:33: 24:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(18),
                lint_level: Inherited,
                value: e21,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core/bolts.rs:19:33: 24:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &core::bolts::ChildMap,
                    span: src/core/bolts.rs:19:18: 19:23 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:117 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::clone).2),
                        ),
                        ty: &core::bolts::ChildMap,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &core::bolts::ChildMap,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:117 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::clone).1),
            ),
        },
    ],
}

DefId(0:118 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::vals):
Thir {
    body_type: Fn(
        ([&core::bolts::ChildMap]; c_variadic: false)->&std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(7),
            opt_destruction_scope: None,
            span: src/core/bolts.rs:25:51: 27:6 (#0),
            stmts: [],
            expr: Some(
                e8,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:118 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::vals).2),
                ),
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/core/bolts.rs:26:10: 26:14 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/core/bolts.rs:26:10: 26:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:118 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::vals).5),
                ),
                value: e1,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/core/bolts.rs:26:10: 26:14 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[1],
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/core/bolts.rs:26:10: 26:18 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:118 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::vals).4),
                ),
                value: e3,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/core/bolts.rs:26:10: 26:18 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e4,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/core/bolts.rs:26:9: 26:18 (#0),
        },
        Expr {
            kind: Deref {
                arg: e5,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/core/bolts.rs:26:9: 26:18 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e6,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/core/bolts.rs:26:9: 26:18 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:118 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::vals).3),
                ),
                value: e7,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/core/bolts.rs:26:9: 26:18 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/core/bolts.rs:25:51: 27:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:118 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::vals).8),
                ),
                value: e9,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/core/bolts.rs:25:51: 27:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(8),
                lint_level: Inherited,
                value: e10,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/core/bolts.rs:25:51: 27:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &core::bolts::ChildMap,
                    span: src/core/bolts.rs:25:17: 25:22 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:118 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::vals).2),
                        ),
                        ty: &core::bolts::ChildMap,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &core::bolts::ChildMap,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:118 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::vals).1),
            ),
        },
    ],
}

DefId(0:119 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::push):
Thir {
    body_type: Fn(
        ([&mut core::bolts::ChildMap, std::rc::Rc<dyn core::DataModel>]; c_variadic: false)->(),
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(25),
            opt_destruction_scope: None,
            span: src/core/bolts.rs:29:48: 31:10 (#0),
            stmts: [
                s0,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(36),
            opt_destruction_scope: None,
            span: src/core/bolts.rs:28:54: 33:6 (#0),
            stmts: [
                s1,
                s2,
            ],
            expr: None,
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:119 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::push).2),
                ),
            },
            ty: &mut core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bolts.rs:29:12: 29:16 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bolts.rs:29:12: 29:16 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:119 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::push).10),
                ),
                value: e1,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bolts.rs:29:12: 29:16 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[1],
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bolts.rs:29:12: 29:20 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e3,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bolts.rs:29:12: 29:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:119 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::push).9),
                ),
                value: e4,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bolts.rs:29:12: 29:20 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> usize {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::len},
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bolts.rs:29:21: 29:24 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> usize {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::len},
                fun: e6,
                args: [
                    e5,
                ],
                from_hir_call: true,
                fn_span: src/core/bolts.rs:29:21: 29:26 (#0),
            },
            ty: usize,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bolts.rs:29:12: 29:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:119 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::push).7),
                ),
                value: e7,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bolts.rs:29:12: 29:26 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:119 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::push).2),
                ),
            },
            ty: &mut core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bolts.rs:29:30: 29:34 (#0),
        },
        Expr {
            kind: Deref {
                arg: e9,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bolts.rs:29:30: 29:34 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:119 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::push).15),
                ),
                value: e10,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bolts.rs:29:30: 29:34 (#0),
        },
        Expr {
            kind: Field {
                lhs: e11,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<std::collections::HashMap<&str, usize>>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bolts.rs:29:30: 29:41 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e12,
            },
            ty: &std::rc::Rc<std::collections::HashMap<&str, usize>>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bolts.rs:29:30: 29:47 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<std::collections::HashMap<&str, usize>>) -> &'a <std::rc::Rc<std::collections::HashMap<&str, usize>> as std::ops::Deref>::Target {<std::rc::Rc<std::collections::HashMap<&str, usize>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bolts.rs:29:30: 29:47 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<std::collections::HashMap<&str, usize>>) -> &'a <std::rc::Rc<std::collections::HashMap<&str, usize>> as std::ops::Deref>::Target {<std::rc::Rc<std::collections::HashMap<&str, usize>> as std::ops::Deref>::deref},
                fun: e14,
                args: [
                    e13,
                ],
                from_hir_call: false,
                fn_span: src/core/bolts.rs:29:30: 29:47 (#0),
            },
            ty: &std::collections::HashMap<&str, usize>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bolts.rs:29:30: 29:47 (#0),
        },
        Expr {
            kind: Deref {
                arg: e15,
            },
            ty: std::collections::HashMap<&str, usize>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bolts.rs:29:30: 29:47 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e16,
            },
            ty: &std::collections::HashMap<&str, usize>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bolts.rs:29:30: 29:47 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:119 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::push).14),
                ),
                value: e17,
            },
            ty: &std::collections::HashMap<&str, usize>,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bolts.rs:29:30: 29:41 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::collections::HashMap<&str, usize>) -> usize {std::collections::HashMap::<&str, usize>::len},
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bolts.rs:29:42: 29:45 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::collections::HashMap<&str, usize>) -> usize {std::collections::HashMap::<&str, usize>::len},
                fun: e19,
                args: [
                    e18,
                ],
                from_hir_call: true,
                fn_span: src/core/bolts.rs:29:42: 29:47 (#0),
            },
            ty: usize,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bolts.rs:29:30: 29:47 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(12),
                lint_level: Explicit(
                    HirId(DefId(0:119 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::push).12),
                ),
                value: e20,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bolts.rs:29:30: 29:47 (#0),
        },
        Expr {
            kind: Binary {
                op: Ge,
                lhs: e8,
                rhs: e21,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bolts.rs:29:12: 29:47 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:119 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::push).6),
                ),
                value: e22,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bolts.rs:29:12: 29:47 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(6),
                lint_level: Inherited,
                value: e23,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/core/bolts.rs:29:12: 29:47 (#0),
        },
        Expr {
            kind: Use {
                source: e24,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bolts.rs:29:12: 29:47 (#122),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:119 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::push).17),
                ),
                value: e25,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bolts.rs:29:12: 29:47 (#122),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(24),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:33 (#38),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:119 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::push).19),
                ),
                value: e27,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(24),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:33 (#38),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "explicit panic",
                        Cooked,
                    ),
                    span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#38),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(24),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#38),
        },
        Expr {
            kind: Scope {
                region_scope: Node(23),
                lint_level: Explicit(
                    HirId(DefId(0:119 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::push).23),
                ),
                value: e29,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(24),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#38),
        },
        Expr {
            kind: Call {
                ty: fn(&'static str) -> ! {core::panicking::panic},
                fun: e28,
                args: [
                    e30,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#38),
            },
            ty: !,
            temp_lifetime: Some(
                Node(24),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#38),
        },
        Expr {
            kind: Scope {
                region_scope: Node(18),
                lint_level: Explicit(
                    HirId(DefId(0:119 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::push).18),
                ),
                value: e31,
            },
            ty: !,
            temp_lifetime: Some(
                Node(24),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#38),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: !,
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/core/bolts.rs:29:48: 31:10 (#0),
        },
        Expr {
            kind: NeverToAny {
                source: e33,
            },
            ty: (),
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/core/bolts.rs:29:48: 31:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(26),
                lint_level: Explicit(
                    HirId(DefId(0:119 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::push).26),
                ),
                value: e34,
            },
            ty: (),
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/core/bolts.rs:29:48: 31:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(26),
                lint_level: Inherited,
                value: e35,
            },
            ty: (),
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/core/bolts.rs:29:48: 31:10 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(26),
                cond: e26,
                then: e36,
                else_opt: None,
            },
            ty: (),
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bolts.rs:29:9: 31:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:119 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::push).5),
                ),
                value: e37,
            },
            ty: (),
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/core/bolts.rs:29:9: 31:10 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:119 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::push).2),
                ),
            },
            ty: &mut core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/core/bolts.rs:32:9: 32:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e39,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/core/bolts.rs:32:9: 32:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(31),
                lint_level: Explicit(
                    HirId(DefId(0:119 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::push).31),
                ),
                value: e40,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/core/bolts.rs:32:9: 32:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e41,
                variant_index: 0,
                name: field[1],
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/core/bolts.rs:32:9: 32:17 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e42,
            },
            ty: &mut std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/core/bolts.rs:32:9: 32:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(30),
                lint_level: Explicit(
                    HirId(DefId(0:119 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::push).30),
                ),
                value: e43,
            },
            ty: &mut std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/core/bolts.rs:32:9: 32:17 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:119 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::push).4),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/core/bolts.rs:32:23: 32:28 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e45,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/core/bolts.rs:32:23: 32:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(33),
                lint_level: Explicit(
                    HirId(DefId(0:119 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::push).33),
                ),
                value: e46,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/core/bolts.rs:32:23: 32:28 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::vec::Vec<std::rc::Rc<dyn core::DataModel>>, std::rc::Rc<dyn core::DataModel>) {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::push},
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/core/bolts.rs:32:18: 32:22 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::vec::Vec<std::rc::Rc<dyn core::DataModel>>, std::rc::Rc<dyn core::DataModel>) {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::push},
                fun: e48,
                args: [
                    e44,
                    e47,
                ],
                from_hir_call: true,
                fn_span: src/core/bolts.rs:32:18: 32:29 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/core/bolts.rs:32:9: 32:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(28),
                lint_level: Explicit(
                    HirId(DefId(0:119 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::push).28),
                ),
                value: e49,
            },
            ty: (),
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/core/bolts.rs:32:9: 32:29 (#0),
        },
        Expr {
            kind: Block {
                block: b1,
            },
            ty: (),
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bolts.rs:28:54: 33:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(37),
                lint_level: Explicit(
                    HirId(DefId(0:119 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::push).37),
                ),
                value: e51,
            },
            ty: (),
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bolts.rs:28:54: 33:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(37),
                lint_level: Inherited,
                value: e52,
            },
            ty: (),
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bolts.rs:28:54: 33:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(24),
                expr: e32,
            },
            opt_destruction_scope: Some(
                Destruction(24),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(27),
                expr: e38,
            },
            opt_destruction_scope: Some(
                Destruction(27),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(35),
                expr: e50,
            },
            opt_destruction_scope: Some(
                Destruction(35),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &mut core::bolts::ChildMap,
                    span: src/core/bolts.rs:28:17: 28:26 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:119 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::push).2),
                        ),
                        ty: &mut core::bolts::ChildMap,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut core::bolts::ChildMap,
            ty_span: None,
            self_kind: Some(
                MutRef,
            ),
            hir_id: Some(
                HirId(DefId(0:119 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::push).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: std::rc::Rc<dyn core::DataModel>,
                    span: src/core/bolts.rs:28:28: 28:33 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "child",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:119 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::push).4),
                        ),
                        ty: std::rc::Rc<dyn core::DataModel>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::rc::Rc<dyn core::DataModel>,
            ty_span: Some(
                src/core/bolts.rs:28:35: 28:52 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:119 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::push).3),
            ),
        },
    ],
}

DefId(0:120 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get):
Thir {
    body_type: Fn(
        ([&core::bolts::ChildMap, &str]; c_variadic: false)->std::option::Option<std::rc::Rc<dyn core::DataModel>>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(36),
            opt_destruction_scope: None,
            span: src/core/bolts.rs:35:47: 37:10 (#0),
            stmts: [],
            expr: Some(
                e40,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(41),
            opt_destruction_scope: None,
            span: src/core/bolts.rs:37:16: 39:10 (#0),
            stmts: [],
            expr: Some(
                e45,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(42),
            opt_destruction_scope: None,
            span: src/core/bolts.rs:34:63: 40:6 (#0),
            stmts: [],
            expr: Some(
                e50,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:120 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get).2),
                ),
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/core/bolts.rs:35:26: 35:30 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/core/bolts.rs:35:26: 35:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:120 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get).14),
                ),
                value: e1,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/core/bolts.rs:35:26: 35:30 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<std::collections::HashMap<&str, usize>>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/core/bolts.rs:35:26: 35:37 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e3,
            },
            ty: &std::rc::Rc<std::collections::HashMap<&str, usize>>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/core/bolts.rs:35:26: 35:46 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<std::collections::HashMap<&str, usize>>) -> &'a <std::rc::Rc<std::collections::HashMap<&str, usize>> as std::ops::Deref>::Target {<std::rc::Rc<std::collections::HashMap<&str, usize>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/core/bolts.rs:35:26: 35:46 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<std::collections::HashMap<&str, usize>>) -> &'a <std::rc::Rc<std::collections::HashMap<&str, usize>> as std::ops::Deref>::Target {<std::rc::Rc<std::collections::HashMap<&str, usize>> as std::ops::Deref>::deref},
                fun: e5,
                args: [
                    e4,
                ],
                from_hir_call: false,
                fn_span: src/core/bolts.rs:35:26: 35:46 (#0),
            },
            ty: &std::collections::HashMap<&str, usize>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/core/bolts.rs:35:26: 35:46 (#0),
        },
        Expr {
            kind: Deref {
                arg: e6,
            },
            ty: std::collections::HashMap<&str, usize>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/core/bolts.rs:35:26: 35:46 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e7,
            },
            ty: &std::collections::HashMap<&str, usize>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/core/bolts.rs:35:26: 35:46 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:120 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get).13),
                ),
                value: e8,
            },
            ty: &std::collections::HashMap<&str, usize>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/core/bolts.rs:35:26: 35:37 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:120 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get).4),
                ),
            },
            ty: &str,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/core/bolts.rs:35:42: 35:45 (#0),
        },
        Expr {
            kind: Deref {
                arg: e10,
            },
            ty: str,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/core/bolts.rs:35:42: 35:45 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e11,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/core/bolts.rs:35:42: 35:45 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(16),
                lint_level: Explicit(
                    HirId(DefId(0:120 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get).16),
                ),
                value: e12,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/core/bolts.rs:35:42: 35:45 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b> fn(&'a std::collections::HashMap<&str, usize>, &'b str) -> std::option::Option<&'a usize> {std::collections::HashMap::<&str, usize>::get::<str>},
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/core/bolts.rs:35:38: 35:41 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b> fn(&'a std::collections::HashMap<&str, usize>, &'b str) -> std::option::Option<&'a usize> {std::collections::HashMap::<&str, usize>::get::<str>},
                fun: e14,
                args: [
                    e9,
                    e13,
                ],
                from_hir_call: true,
                fn_span: src/core/bolts.rs:35:38: 35:46 (#0),
            },
            ty: std::option::Option<&usize>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/core/bolts.rs:35:26: 35:46 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:120 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get).11),
                ),
                value: e15,
            },
            ty: std::option::Option<&usize>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/core/bolts.rs:35:26: 35:46 (#0),
        },
        Expr {
            kind: Let {
                expr: e16,
                pat: Pat {
                    ty: std::option::Option<&usize>,
                    span: src/core/bolts.rs:35:16: 35:23 (#0),
                    kind: Variant {
                        adt_def: std::option::Option,
                        substs: [
                            &usize,
                        ],
                        variant_index: 1,
                        subpatterns: [
                            FieldPat {
                                field: field[0],
                                pattern: Pat {
                                    ty: &usize,
                                    span: src/core/bolts.rs:35:21: 35:22 (#0),
                                    kind: Binding {
                                        mutability: Not,
                                        name: "i",
                                        mode: ByValue,
                                        var: LocalVarId(
                                            HirId(DefId(0:120 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get).9),
                                        ),
                                        ty: &usize,
                                        subpattern: None,
                                        is_primary: true,
                                    },
                                },
                            },
                        ],
                    },
                },
            },
            ty: bool,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/core/bolts.rs:35:12: 35:46 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:120 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get).6),
                ),
                value: e17,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/core/bolts.rs:35:12: 35:46 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:120 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get).2),
                ),
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bolts.rs:36:13: 36:17 (#0),
        },
        Expr {
            kind: Deref {
                arg: e19,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bolts.rs:36:13: 36:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(23),
                lint_level: Explicit(
                    HirId(DefId(0:120 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get).23),
                ),
                value: e20,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bolts.rs:36:13: 36:17 (#0),
        },
        Expr {
            kind: Field {
                lhs: e21,
                variant_index: 0,
                name: field[1],
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bolts.rs:36:13: 36:21 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e22,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bolts.rs:36:13: 36:29 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> &'a <std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::ops::Deref>::Target {<std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bolts.rs:36:13: 36:29 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> &'a <std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::ops::Deref>::Target {<std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::ops::Deref>::deref},
                fun: e24,
                args: [
                    e23,
                ],
                from_hir_call: false,
                fn_span: src/core/bolts.rs:36:13: 36:29 (#0),
            },
            ty: &[std::rc::Rc<dyn core::DataModel>],
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bolts.rs:36:13: 36:29 (#0),
        },
        Expr {
            kind: Deref {
                arg: e25,
            },
            ty: [std::rc::Rc<dyn core::DataModel>],
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bolts.rs:36:13: 36:29 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e26,
            },
            ty: &[std::rc::Rc<dyn core::DataModel>],
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bolts.rs:36:13: 36:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(22),
                lint_level: Explicit(
                    HirId(DefId(0:120 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get).22),
                ),
                value: e27,
            },
            ty: &[std::rc::Rc<dyn core::DataModel>],
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bolts.rs:36:13: 36:21 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:120 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get).9),
                ),
            },
            ty: &usize,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bolts.rs:36:27: 36:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(26),
                lint_level: Explicit(
                    HirId(DefId(0:120 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get).26),
                ),
                value: e29,
            },
            ty: &usize,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bolts.rs:36:27: 36:28 (#0),
        },
        Expr {
            kind: Deref {
                arg: e30,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bolts.rs:36:26: 36:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:120 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get).25),
                ),
                value: e31,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bolts.rs:36:26: 36:28 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a [std::rc::Rc<dyn core::DataModel>], usize) -> std::option::Option<&'a <usize as std::slice::SliceIndex<[std::rc::Rc<dyn core::DataModel>]>>::Output> {core::slice::<impl [std::rc::Rc<dyn core::DataModel>]>::get::<usize>},
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bolts.rs:36:22: 36:25 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a [std::rc::Rc<dyn core::DataModel>], usize) -> std::option::Option<&'a <usize as std::slice::SliceIndex<[std::rc::Rc<dyn core::DataModel>]>>::Output> {core::slice::<impl [std::rc::Rc<dyn core::DataModel>]>::get::<usize>},
                fun: e33,
                args: [
                    e28,
                    e32,
                ],
                from_hir_call: true,
                fn_span: src/core/bolts.rs:36:22: 36:29 (#0),
            },
            ty: std::option::Option<&std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bolts.rs:36:13: 36:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(20),
                lint_level: Explicit(
                    HirId(DefId(0:120 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get).20),
                ),
                value: e34,
            },
            ty: std::option::Option<&std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bolts.rs:36:13: 36:29 (#0),
        },
        Expr {
            kind: Closure(
                ClosureExpr {
                    closure_id: DefId(0:121 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get::{closure#0}),
                    substs: Closure(
                        [
                            i32,
                            extern "rust-call" fn((&std::rc::Rc<dyn core::DataModel>,)) -> std::rc::Rc<dyn core::DataModel>,
                            (),
                        ],
                    ),
                    upvars: [],
                    movability: None,
                    fake_reads: [],
                },
            ),
            ty: [closure@src/core/bolts.rs:36:34: 36:38],
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bolts.rs:36:34: 36:49 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(28),
                lint_level: Explicit(
                    HirId(DefId(0:120 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get).28),
                ),
                value: e36,
            },
            ty: [closure@src/core/bolts.rs:36:34: 36:38],
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bolts.rs:36:34: 36:49 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::option::Option<&std::rc::Rc<dyn core::DataModel>>, [closure@src/core/bolts.rs:36:34: 36:38]) -> std::option::Option<std::rc::Rc<dyn core::DataModel>> {std::option::Option::<&std::rc::Rc<dyn core::DataModel>>::map::<std::rc::Rc<dyn core::DataModel>, [closure@src/core/bolts.rs:36:34: 36:38]>},
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bolts.rs:36:30: 36:33 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::option::Option<&std::rc::Rc<dyn core::DataModel>>, [closure@src/core/bolts.rs:36:34: 36:38]) -> std::option::Option<std::rc::Rc<dyn core::DataModel>> {std::option::Option::<&std::rc::Rc<dyn core::DataModel>>::map::<std::rc::Rc<dyn core::DataModel>, [closure@src/core/bolts.rs:36:34: 36:38]>},
                fun: e38,
                args: [
                    e35,
                    e37,
                ],
                from_hir_call: true,
                fn_span: src/core/bolts.rs:36:30: 36:50 (#0),
            },
            ty: std::option::Option<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bolts.rs:36:13: 36:50 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(18),
                lint_level: Explicit(
                    HirId(DefId(0:120 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get).18),
                ),
                value: e39,
            },
            ty: std::option::Option<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bolts.rs:36:13: 36:50 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::option::Option<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bolts.rs:35:47: 37:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(37),
                lint_level: Explicit(
                    HirId(DefId(0:120 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get).37),
                ),
                value: e41,
            },
            ty: std::option::Option<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bolts.rs:35:47: 37:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(37),
                lint_level: Inherited,
                value: e42,
            },
            ty: std::option::Option<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/core/bolts.rs:35:47: 37:10 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: std::option::Option,
                    variant_index: 0,
                    substs: [
                        std::rc::Rc<dyn core::DataModel>,
                    ],
                    user_ty: None,
                    fields: [],
                    base: None,
                },
            ),
            ty: std::option::Option<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/core/bolts.rs:38:13: 38:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(39),
                lint_level: Explicit(
                    HirId(DefId(0:120 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get).39),
                ),
                value: e44,
            },
            ty: std::option::Option<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/core/bolts.rs:38:13: 38:17 (#0),
        },
        Expr {
            kind: Block {
                block: b1,
            },
            ty: std::option::Option<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/core/bolts.rs:37:16: 39:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(38),
                lint_level: Explicit(
                    HirId(DefId(0:120 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get).38),
                ),
                value: e46,
            },
            ty: std::option::Option<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/core/bolts.rs:37:16: 39:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(38),
                lint_level: Inherited,
                value: e47,
            },
            ty: std::option::Option<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/core/bolts.rs:37:16: 39:10 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(37),
                cond: e18,
                then: e43,
                else_opt: Some(
                    e48,
                ),
            },
            ty: std::option::Option<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/core/bolts.rs:35:9: 39:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:120 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get).5),
                ),
                value: e49,
            },
            ty: std::option::Option<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/core/bolts.rs:35:9: 39:10 (#0),
        },
        Expr {
            kind: Block {
                block: b2,
            },
            ty: std::option::Option<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/core/bolts.rs:34:63: 40:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(43),
                lint_level: Explicit(
                    HirId(DefId(0:120 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get).43),
                ),
                value: e51,
            },
            ty: std::option::Option<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/core/bolts.rs:34:63: 40:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(43),
                lint_level: Inherited,
                value: e52,
            },
            ty: std::option::Option<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/core/bolts.rs:34:63: 40:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &core::bolts::ChildMap,
                    span: src/core/bolts.rs:34:16: 34:21 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:120 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get).2),
                        ),
                        ty: &core::bolts::ChildMap,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &core::bolts::ChildMap,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:120 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &str,
                    span: src/core/bolts.rs:34:23: 34:26 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "key",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:120 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get).4),
                        ),
                        ty: &str,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &str,
            ty_span: Some(
                src/core/bolts.rs:34:28: 34:32 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:120 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get).3),
            ),
        },
    ],
}

DefId(0:121 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get::{closure#0}):
Thir {
    body_type: Fn(
        ([&std::rc::Rc<dyn core::DataModel>]; c_variadic: false)->std::rc::Rc<dyn core::DataModel>,
    ),
    arms: [],
    blocks: [],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:120 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get).30),
                ),
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/core/bolts.rs:36:39: 36:41 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/core/bolts.rs:36:39: 36:49 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e1,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/core/bolts.rs:36:39: 36:49 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(33),
                lint_level: Explicit(
                    HirId(DefId(0:120 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get).33),
                ),
                value: e2,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/core/bolts.rs:36:39: 36:41 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/core/bolts.rs:36:42: 36:47 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e4,
                args: [
                    e3,
                ],
                from_hir_call: true,
                fn_span: src/core/bolts.rs:36:42: 36:49 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/core/bolts.rs:36:39: 36:49 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(31),
                lint_level: Explicit(
                    HirId(DefId(0:120 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get).31),
                ),
                value: e5,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/core/bolts.rs:36:39: 36:49 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(31),
                lint_level: Inherited,
                value: e6,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/core/bolts.rs:36:39: 36:49 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: None,
            ty: [closure@src/core/bolts.rs:36:34: 36:38],
            ty_span: None,
            self_kind: None,
            hir_id: None,
        },
        Param {
            pat: Some(
                Pat {
                    ty: &std::rc::Rc<dyn core::DataModel>,
                    span: src/core/bolts.rs:36:35: 36:37 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "dm",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:120 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get).30),
                        ),
                        ty: &std::rc::Rc<dyn core::DataModel>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &std::rc::Rc<dyn core::DataModel>,
            ty_span: None,
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:120 ~ andrew_fuzz[741f]::core::bolts::{impl#0}::get).29),
            ),
        },
    ],
}

DefId(0:124 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::{constant#0}):
Thir {
    body_type: Const(
        usize,
    ),
    arms: [],
    blocks: [],
    exprs: [
        Expr {
            kind: ConstParam {
                param: N/#0,
                def_id: DefId(0:123 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::N),
            },
            ty: usize,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core/bolts.rs:43:63: 43:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(16),
                lint_level: Explicit(
                    HirId(DefId(0:122 ~ andrew_fuzz[741f]::core::bolts::{impl#1}).16),
                ),
                value: e0,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core/bolts.rs:43:63: 43:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(16),
                lint_level: Inherited,
                value: e1,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core/bolts.rs:43:63: 43:64 (#0),
        },
    ],
    stmts: [],
    params: [],
}

DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from):
Thir {
    body_type: Fn(
        ([[(&str, std::rc::Rc<dyn core::DataModel>); N]]; c_variadic: false)->core::bolts::ChildMap,
    ),
    arms: [
        Arm {
            pattern: Pat {
                ty: std::option::Option<(usize, &(&str, std::rc::Rc<dyn core::DataModel>))>,
                span: src/core/bolts.rs:47:9: 51:10 (#123),
                kind: Variant {
                    adt_def: std::option::Option,
                    substs: [
                        (usize, &(&str, std::rc::Rc<dyn core::DataModel>)),
                    ],
                    variant_index: 0,
                    subpatterns: [],
                },
            },
            guard: None,
            body: e35,
            lint_level: Explicit(
                HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).33),
            ),
            scope: Node(33),
            span: src/core/bolts.rs:47:9: 51:10 (#123),
        },
        Arm {
            pattern: Pat {
                ty: std::option::Option<(usize, &(&str, std::rc::Rc<dyn core::DataModel>))>,
                span: src/core/bolts.rs:47:13: 47:28 (#125),
                kind: Variant {
                    adt_def: std::option::Option,
                    substs: [
                        (usize, &(&str, std::rc::Rc<dyn core::DataModel>)),
                    ],
                    variant_index: 1,
                    subpatterns: [
                        FieldPat {
                            field: field[0],
                            pattern: Pat {
                                ty: (usize, &(&str, std::rc::Rc<dyn core::DataModel>)),
                                span: src/core/bolts.rs:47:13: 47:28 (#0),
                                kind: Leaf {
                                    subpatterns: [
                                        FieldPat {
                                            field: field[0],
                                            pattern: Pat {
                                                ty: usize,
                                                span: src/core/bolts.rs:47:14: 47:15 (#0),
                                                kind: Binding {
                                                    mutability: Not,
                                                    name: "i",
                                                    mode: ByValue,
                                                    var: LocalVarId(
                                                        HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).25),
                                                    ),
                                                    ty: usize,
                                                    subpattern: None,
                                                    is_primary: true,
                                                },
                                            },
                                        },
                                        FieldPat {
                                            field: field[1],
                                            pattern: Pat {
                                                ty: &(&str, std::rc::Rc<dyn core::DataModel>),
                                                span: src/core/bolts.rs:47:17: 47:27 (#0),
                                                kind: Deref {
                                                    subpattern: Pat {
                                                        ty: (&str, std::rc::Rc<dyn core::DataModel>),
                                                        span: src/core/bolts.rs:47:17: 47:27 (#0),
                                                        kind: Leaf {
                                                            subpatterns: [
                                                                FieldPat {
                                                                    field: field[0],
                                                                    pattern: Pat {
                                                                        ty: &str,
                                                                        span: src/core/bolts.rs:47:18: 47:19 (#0),
                                                                        kind: Binding {
                                                                            mutability: Not,
                                                                            name: "k",
                                                                            mode: ByRef(
                                                                                Shared,
                                                                            ),
                                                                            var: LocalVarId(
                                                                                HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).26),
                                                                            ),
                                                                            ty: &&str,
                                                                            subpattern: None,
                                                                            is_primary: true,
                                                                        },
                                                                    },
                                                                },
                                                                FieldPat {
                                                                    field: field[1],
                                                                    pattern: Pat {
                                                                        ty: std::rc::Rc<dyn core::DataModel>,
                                                                        span: src/core/bolts.rs:47:21: 47:26 (#0),
                                                                        kind: Binding {
                                                                            mutability: Not,
                                                                            name: "child",
                                                                            mode: ByRef(
                                                                                Shared,
                                                                            ),
                                                                            var: LocalVarId(
                                                                                HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).27),
                                                                            ),
                                                                            ty: &std::rc::Rc<dyn core::DataModel>,
                                                                            subpattern: None,
                                                                            is_primary: true,
                                                                        },
                                                                    },
                                                                },
                                                            ],
                                                        },
                                                    },
                                                },
                                            },
                                        },
                                    ],
                                },
                            },
                        },
                    ],
                },
            },
            guard: None,
            body: e89,
            lint_level: Explicit(
                HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).76),
            ),
            scope: Node(76),
            span: src/core/bolts.rs:47:58: 51:10 (#0),
        },
        Arm {
            pattern: Pat {
                ty: std::iter::Enumerate<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>>,
                span: src/core/bolts.rs:47:32: 47:57 (#124),
                kind: Binding {
                    mutability: Mut,
                    name: "iter",
                    mode: ByValue,
                    var: LocalVarId(
                        HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).77),
                    ),
                    ty: std::iter::Enumerate<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>>,
                    subpattern: None,
                    is_primary: true,
                },
            },
            guard: None,
            body: e95,
            lint_level: Explicit(
                HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).86),
            ),
            scope: Node(86),
            span: src/core/bolts.rs:47:9: 51:10 (#123),
        },
    ],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(62),
            opt_destruction_scope: None,
            span: src/core/bolts.rs:49:13: 49:36 (#39),
            stmts: [],
            expr: Some(
                e68,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(74),
            opt_destruction_scope: None,
            span: src/core/bolts.rs:47:58: 51:10 (#0),
            stmts: [
                s2,
                s3,
                s4,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(85),
            opt_destruction_scope: Some(
                Destruction(85),
            ),
            span: src/core/bolts.rs:47:9: 51:10 (#123),
            stmts: [
                s5,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(105),
            opt_destruction_scope: None,
            span: src/core/bolts.rs:44:69: 56:6 (#0),
            stmts: [
                s0,
                s1,
                s6,
            ],
            expr: Some(
                e110,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(1:742 ~ std[f4e9]::collections::hash::map::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                    ^1,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(1:739 ~ std[f4e9]::collections::hash::map::{impl#0}),
                                        self_ty: std::collections::HashMap<^2, ^3, ^4>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn() -> std::collections::HashMap<&str, usize> {std::collections::HashMap::<&str, usize>::new},
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core/bolts.rs:45:26: 45:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).5),
                ),
                value: e0,
            },
            ty: fn() -> std::collections::HashMap<&str, usize> {std::collections::HashMap::<&str, usize>::new},
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core/bolts.rs:45:26: 45:38 (#0),
        },
        Expr {
            kind: Call {
                ty: fn() -> std::collections::HashMap<&str, usize> {std::collections::HashMap::<&str, usize>::new},
                fun: e1,
                args: [],
                from_hir_call: true,
                fn_span: src/core/bolts.rs:45:26: 45:40 (#0),
            },
            ty: std::collections::HashMap<&str, usize>,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core/bolts.rs:45:26: 45:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).4),
                ),
                value: e2,
            },
            ty: std::collections::HashMap<&str, usize>,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core/bolts.rs:45:26: 45:40 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:6607 ~ alloc[42dc]::vec::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:6605 ~ alloc[42dc]::vec::{impl#0}),
                                        self_ty: std::vec::Vec<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/core/bolts.rs:46:23: 46:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).13),
                ),
                value: e4,
            },
            ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/core/bolts.rs:46:23: 46:31 (#0),
        },
        Expr {
            kind: Call {
                ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
                fun: e5,
                args: [],
                from_hir_call: true,
                fn_span: src/core/bolts.rs:46:23: 46:33 (#0),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/core/bolts.rs:46:23: 46:33 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(12),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).12),
                ),
                value: e6,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/core/bolts.rs:46:23: 46:33 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::iter::Enumerate<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>>) -> <std::iter::Enumerate<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>> as std::iter::IntoIterator>::IntoIter {<std::iter::Enumerate<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>> as std::iter::IntoIterator>::into_iter},
            temp_lifetime: Some(
                Node(89),
            ),
            span: src/core/bolts.rs:47:32: 47:57 (#124),
        },
        Expr {
            kind: Scope {
                region_scope: Node(87),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).87),
                ),
                value: e8,
            },
            ty: fn(std::iter::Enumerate<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>>) -> <std::iter::Enumerate<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>> as std::iter::IntoIterator>::IntoIter {<std::iter::Enumerate<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>> as std::iter::IntoIterator>::into_iter},
            temp_lifetime: Some(
                Node(89),
            ),
            span: src/core/bolts.rs:47:32: 47:57 (#124),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).2),
                ),
            },
            ty: [(&str, std::rc::Rc<dyn core::DataModel>); N],
            temp_lifetime: Some(
                Node(89),
            ),
            span: src/core/bolts.rs:47:32: 47:38 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e10,
            },
            ty: &[(&str, std::rc::Rc<dyn core::DataModel>); N],
            temp_lifetime: Some(
                Node(89),
            ),
            span: src/core/bolts.rs:47:32: 47:45 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e11,
            },
            ty: &[(&str, std::rc::Rc<dyn core::DataModel>)],
            temp_lifetime: Some(
                Node(89),
            ),
            span: src/core/bolts.rs:47:32: 47:45 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(23),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).23),
                ),
                value: e12,
            },
            ty: &[(&str, std::rc::Rc<dyn core::DataModel>)],
            temp_lifetime: Some(
                Node(89),
            ),
            span: src/core/bolts.rs:47:32: 47:38 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a [(&str, std::rc::Rc<dyn core::DataModel>)]) -> std::slice::Iter<'a, (&str, std::rc::Rc<dyn core::DataModel>)> {core::slice::<impl [(&str, std::rc::Rc<dyn core::DataModel>)]>::iter},
            temp_lifetime: Some(
                Node(89),
            ),
            span: src/core/bolts.rs:47:39: 47:43 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a [(&str, std::rc::Rc<dyn core::DataModel>)]) -> std::slice::Iter<'a, (&str, std::rc::Rc<dyn core::DataModel>)> {core::slice::<impl [(&str, std::rc::Rc<dyn core::DataModel>)]>::iter},
                fun: e14,
                args: [
                    e13,
                ],
                from_hir_call: true,
                fn_span: src/core/bolts.rs:47:39: 47:45 (#0),
            },
            ty: std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>,
            temp_lifetime: Some(
                Node(89),
            ),
            span: src/core/bolts.rs:47:32: 47:45 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(21),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).21),
                ),
                value: e15,
            },
            ty: std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>,
            temp_lifetime: Some(
                Node(89),
            ),
            span: src/core/bolts.rs:47:32: 47:45 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>) -> std::iter::Enumerate<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>> {<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)> as std::iter::Iterator>::enumerate},
            temp_lifetime: Some(
                Node(89),
            ),
            span: src/core/bolts.rs:47:46: 47:55 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>) -> std::iter::Enumerate<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>> {<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)> as std::iter::Iterator>::enumerate},
                fun: e17,
                args: [
                    e16,
                ],
                from_hir_call: true,
                fn_span: src/core/bolts.rs:47:46: 47:57 (#0),
            },
            ty: std::iter::Enumerate<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>>,
            temp_lifetime: Some(
                Node(89),
            ),
            span: src/core/bolts.rs:47:32: 47:57 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).19),
                ),
                value: e18,
            },
            ty: std::iter::Enumerate<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>>,
            temp_lifetime: Some(
                Node(89),
            ),
            span: src/core/bolts.rs:47:32: 47:57 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::iter::Enumerate<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>>) -> <std::iter::Enumerate<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>> as std::iter::IntoIterator>::IntoIter {<std::iter::Enumerate<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>> as std::iter::IntoIterator>::into_iter},
                fun: e9,
                args: [
                    e19,
                ],
                from_hir_call: true,
                fn_span: src/core/bolts.rs:47:32: 47:57 (#124),
            },
            ty: std::iter::Enumerate<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>>,
            temp_lifetime: Some(
                Node(89),
            ),
            span: src/core/bolts.rs:47:32: 47:57 (#124),
        },
        Expr {
            kind: Scope {
                region_scope: Node(88),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).88),
                ),
                value: e20,
            },
            ty: std::iter::Enumerate<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>>,
            temp_lifetime: Some(
                Node(89),
            ),
            span: src/core/bolts.rs:47:32: 47:57 (#124),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::iter::Enumerate<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>>) -> std::option::Option<<std::iter::Enumerate<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>> as std::iter::Iterator>::Item> {<std::iter::Enumerate<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>> as std::iter::Iterator>::next},
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bolts.rs:47:32: 47:57 (#124),
        },
        Expr {
            kind: Scope {
                region_scope: Node(81),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).81),
                ),
                value: e22,
            },
            ty: for<'a> fn(&'a mut std::iter::Enumerate<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>>) -> std::option::Option<<std::iter::Enumerate<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>> as std::iter::Iterator>::Item> {<std::iter::Enumerate<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>> as std::iter::Iterator>::next},
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bolts.rs:47:32: 47:57 (#124),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).77),
                ),
            },
            ty: std::iter::Enumerate<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>>,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bolts.rs:47:32: 47:57 (#124),
        },
        Expr {
            kind: Scope {
                region_scope: Node(79),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).79),
                ),
                value: e24,
            },
            ty: std::iter::Enumerate<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>>,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bolts.rs:47:32: 47:57 (#124),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: false,
                },
                arg: e25,
            },
            ty: &mut std::iter::Enumerate<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>>,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bolts.rs:47:32: 47:57 (#124),
        },
        Expr {
            kind: Deref {
                arg: e26,
            },
            ty: std::iter::Enumerate<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>>,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bolts.rs:47:32: 47:57 (#124),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e27,
            },
            ty: &mut std::iter::Enumerate<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>>,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bolts.rs:47:32: 47:57 (#124),
        },
        Expr {
            kind: Scope {
                region_scope: Node(80),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).80),
                ),
                value: e28,
            },
            ty: &mut std::iter::Enumerate<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>>,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bolts.rs:47:32: 47:57 (#124),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::iter::Enumerate<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>>) -> std::option::Option<<std::iter::Enumerate<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>> as std::iter::Iterator>::Item> {<std::iter::Enumerate<std::slice::Iter<'_, (&str, std::rc::Rc<dyn core::DataModel>)>> as std::iter::Iterator>::next},
                fun: e23,
                args: [
                    e29,
                ],
                from_hir_call: true,
                fn_span: src/core/bolts.rs:47:32: 47:57 (#124),
            },
            ty: std::option::Option<(usize, &(&str, std::rc::Rc<dyn core::DataModel>))>,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bolts.rs:47:32: 47:57 (#124),
        },
        Expr {
            kind: Scope {
                region_scope: Node(82),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).82),
                ),
                value: e30,
            },
            ty: std::option::Option<(usize, &(&str, std::rc::Rc<dyn core::DataModel>))>,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bolts.rs:47:32: 47:57 (#124),
        },
        Expr {
            kind: Break {
                label: Node(30),
                value: None,
            },
            ty: !,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/core/bolts.rs:47:9: 51:10 (#123),
        },
        Expr {
            kind: NeverToAny {
                source: e32,
            },
            ty: (),
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/core/bolts.rs:47:9: 51:10 (#123),
        },
        Expr {
            kind: Scope {
                region_scope: Node(31),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).31),
                ),
                value: e33,
            },
            ty: (),
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/core/bolts.rs:47:9: 51:10 (#123),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(31),
                lint_level: Inherited,
                value: e34,
            },
            ty: (),
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/core/bolts.rs:47:9: 51:10 (#123),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).10),
                ),
            },
            ty: std::collections::HashMap<&str, usize>,
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core/bolts.rs:48:26: 48:32 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e36,
            },
            ty: &mut std::collections::HashMap<&str, usize>,
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core/bolts.rs:48:26: 48:46 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(39),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).39),
                ),
                value: e37,
            },
            ty: &mut std::collections::HashMap<&str, usize>,
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core/bolts.rs:48:26: 48:32 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).26),
                ),
            },
            ty: &&str,
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core/bolts.rs:48:41: 48:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(42),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).42),
                ),
                value: e39,
            },
            ty: &&str,
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core/bolts.rs:48:41: 48:42 (#0),
        },
        Expr {
            kind: Deref {
                arg: e40,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core/bolts.rs:48:40: 48:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(41),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).41),
                ),
                value: e41,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core/bolts.rs:48:40: 48:42 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).25),
                ),
            },
            ty: usize,
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core/bolts.rs:48:44: 48:45 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(44),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).44),
                ),
                value: e43,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core/bolts.rs:48:44: 48:45 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::collections::HashMap<&str, usize>, &str, usize) -> std::option::Option<usize> {std::collections::HashMap::<&str, usize>::insert},
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core/bolts.rs:48:33: 48:39 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::collections::HashMap<&str, usize>, &str, usize) -> std::option::Option<usize> {std::collections::HashMap::<&str, usize>::insert},
                fun: e45,
                args: [
                    e38,
                    e42,
                    e44,
                ],
                from_hir_call: true,
                fn_span: src/core/bolts.rs:48:33: 48:46 (#0),
            },
            ty: std::option::Option<usize>,
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core/bolts.rs:48:26: 48:46 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(37),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).37),
                ),
                value: e46,
            },
            ty: std::option::Option<usize>,
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core/bolts.rs:48:26: 48:46 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).47),
                ),
            },
            ty: std::option::Option<usize>,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/core/bolts.rs:49:21: 49:27 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e48,
            },
            ty: &std::option::Option<usize>,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/core/bolts.rs:49:21: 49:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(51),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).51),
                ),
                value: e49,
            },
            ty: &std::option::Option<usize>,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/core/bolts.rs:49:21: 49:27 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: std::option::Option,
                    variant_index: 0,
                    substs: [
                        usize,
                    ],
                    user_ty: None,
                    fields: [],
                    base: None,
                },
            ),
            ty: std::option::Option<usize>,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/core/bolts.rs:49:31: 49:35 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e51,
            },
            ty: &std::option::Option<usize>,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/core/bolts.rs:49:31: 49:35 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(53),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).53),
                ),
                value: e52,
            },
            ty: &std::option::Option<usize>,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/core/bolts.rs:49:31: 49:35 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b> fn(&'a std::option::Option<usize>, &'b std::option::Option<usize>) -> bool {<std::option::Option<usize> as std::cmp::PartialEq>::eq},
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/core/bolts.rs:49:21: 49:35 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b> fn(&'a std::option::Option<usize>, &'b std::option::Option<usize>) -> bool {<std::option::Option<usize> as std::cmp::PartialEq>::eq},
                fun: e54,
                args: [
                    e50,
                    e53,
                ],
                from_hir_call: false,
                fn_span: src/core/bolts.rs:49:21: 49:35 (#0),
            },
            ty: bool,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/core/bolts.rs:49:21: 49:35 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(50),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).50),
                ),
                value: e55,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/core/bolts.rs:49:21: 49:35 (#0),
        },
        Expr {
            kind: Unary {
                op: Not,
                arg: e56,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/core/bolts.rs:49:13: 49:36 (#39),
        },
        Expr {
            kind: Scope {
                region_scope: Node(49),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).49),
                ),
                value: e57,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/core/bolts.rs:49:13: 49:36 (#39),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(49),
                lint_level: Inherited,
                value: e58,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/core/bolts.rs:49:13: 49:36 (#39),
        },
        Expr {
            kind: Use {
                source: e59,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(64),
            ),
            span: src/core/bolts.rs:49:13: 49:36 (#126),
        },
        Expr {
            kind: Scope {
                region_scope: Node(55),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).55),
                ),
                value: e60,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(64),
            ),
            span: src/core/bolts.rs:49:13: 49:36 (#126),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/core/bolts.rs:49:13: 49:36 (#39),
        },
        Expr {
            kind: Scope {
                region_scope: Node(57),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).57),
                ),
                value: e62,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/core/bolts.rs:49:13: 49:36 (#39),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "assertion failed: result == None",
                        Cooked,
                    ),
                    span: no-location (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(63),
            ),
            span: no-location (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(61),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).61),
                ),
                value: e64,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(63),
            ),
            span: no-location (#0),
        },
        Expr {
            kind: Call {
                ty: fn(&'static str) -> ! {core::panicking::panic},
                fun: e63,
                args: [
                    e65,
                ],
                from_hir_call: true,
                fn_span: src/core/bolts.rs:49:13: 49:36 (#39),
            },
            ty: !,
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/core/bolts.rs:49:13: 49:36 (#39),
        },
        Expr {
            kind: NeverToAny {
                source: e66,
            },
            ty: (),
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/core/bolts.rs:49:13: 49:36 (#39),
        },
        Expr {
            kind: Scope {
                region_scope: Node(56),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).56),
                ),
                value: e67,
            },
            ty: (),
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/core/bolts.rs:49:13: 49:36 (#39),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/core/bolts.rs:49:13: 49:36 (#39),
        },
        Expr {
            kind: Scope {
                region_scope: Node(63),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).63),
                ),
                value: e69,
            },
            ty: (),
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/core/bolts.rs:49:13: 49:36 (#39),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(63),
                lint_level: Inherited,
                value: e70,
            },
            ty: (),
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/core/bolts.rs:49:13: 49:36 (#39),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(63),
                cond: e61,
                then: e71,
                else_opt: None,
            },
            ty: (),
            temp_lifetime: Some(
                Node(64),
            ),
            span: src/core/bolts.rs:49:13: 49:36 (#39),
        },
        Expr {
            kind: Scope {
                region_scope: Node(48),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).48),
                ),
                value: e72,
            },
            ty: (),
            temp_lifetime: Some(
                Node(64),
            ),
            span: src/core/bolts.rs:49:13: 49:36 (#39),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).18),
                ),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(73),
            ),
            span: src/core/bolts.rs:50:13: 50:16 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e74,
            },
            ty: &mut std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(73),
            ),
            span: src/core/bolts.rs:50:13: 50:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(67),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).67),
                ),
                value: e75,
            },
            ty: &mut std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(73),
            ),
            span: src/core/bolts.rs:50:13: 50:16 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).27),
                ),
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(73),
            ),
            span: src/core/bolts.rs:50:22: 50:27 (#0),
        },
        Expr {
            kind: Deref {
                arg: e77,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(73),
            ),
            span: src/core/bolts.rs:50:22: 50:35 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e78,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(73),
            ),
            span: src/core/bolts.rs:50:22: 50:35 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(71),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).71),
                ),
                value: e79,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(73),
            ),
            span: src/core/bolts.rs:50:22: 50:27 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(73),
            ),
            span: src/core/bolts.rs:50:28: 50:33 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e81,
                args: [
                    e80,
                ],
                from_hir_call: true,
                fn_span: src/core/bolts.rs:50:28: 50:35 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(73),
            ),
            span: src/core/bolts.rs:50:22: 50:35 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(69),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).69),
                ),
                value: e82,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(73),
            ),
            span: src/core/bolts.rs:50:22: 50:35 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::vec::Vec<std::rc::Rc<dyn core::DataModel>>, std::rc::Rc<dyn core::DataModel>) {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::push},
            temp_lifetime: Some(
                Node(73),
            ),
            span: src/core/bolts.rs:50:17: 50:21 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::vec::Vec<std::rc::Rc<dyn core::DataModel>>, std::rc::Rc<dyn core::DataModel>) {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::push},
                fun: e84,
                args: [
                    e76,
                    e83,
                ],
                from_hir_call: true,
                fn_span: src/core/bolts.rs:50:17: 50:36 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(73),
            ),
            span: src/core/bolts.rs:50:13: 50:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(65),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).65),
                ),
                value: e85,
            },
            ty: (),
            temp_lifetime: Some(
                Node(73),
            ),
            span: src/core/bolts.rs:50:13: 50:36 (#0),
        },
        Expr {
            kind: Block {
                block: b1,
            },
            ty: (),
            temp_lifetime: Some(
                Node(75),
            ),
            span: src/core/bolts.rs:47:58: 51:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(75),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).75),
                ),
                value: e87,
            },
            ty: (),
            temp_lifetime: Some(
                Node(75),
            ),
            span: src/core/bolts.rs:47:58: 51:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(75),
                lint_level: Inherited,
                value: e88,
            },
            ty: (),
            temp_lifetime: Some(
                Node(75),
            ),
            span: src/core/bolts.rs:47:58: 51:10 (#0),
        },
        Expr {
            kind: Match {
                scrutinee: e31,
                arms: [
                    a0,
                    a1,
                ],
            },
            ty: (),
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bolts.rs:47:32: 47:57 (#124),
        },
        Expr {
            kind: Scope {
                region_scope: Node(83),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).83),
                ),
                value: e90,
            },
            ty: (),
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/core/bolts.rs:47:32: 47:57 (#124),
        },
        Expr {
            kind: Block {
                block: b2,
            },
            ty: (),
            temp_lifetime: Some(
                Node(85),
            ),
            span: src/core/bolts.rs:47:9: 51:10 (#123),
        },
        Expr {
            kind: Loop {
                body: e92,
            },
            ty: (),
            temp_lifetime: Some(
                Node(30),
            ),
            span: src/core/bolts.rs:47:9: 51:10 (#123),
        },
        Expr {
            kind: Scope {
                region_scope: Node(30),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).30),
                ),
                value: e93,
            },
            ty: (),
            temp_lifetime: Some(
                Node(30),
            ),
            span: src/core/bolts.rs:47:9: 51:10 (#123),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(30),
                lint_level: Inherited,
                value: e94,
            },
            ty: (),
            temp_lifetime: Some(
                Node(30),
            ),
            span: src/core/bolts.rs:47:9: 51:10 (#123),
        },
        Expr {
            kind: Match {
                scrutinee: e21,
                arms: [
                    a2,
                ],
            },
            ty: (),
            temp_lifetime: Some(
                Node(89),
            ),
            span: src/core/bolts.rs:47:9: 51:10 (#123),
        },
        Expr {
            kind: Scope {
                region_scope: Node(89),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).89),
                ),
                value: e96,
            },
            ty: (),
            temp_lifetime: Some(
                Node(89),
            ),
            span: src/core/bolts.rs:47:9: 51:10 (#123),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(89),
                lint_level: Inherited,
                value: e97,
            },
            ty: (),
            temp_lifetime: Some(
                Node(89),
            ),
            span: src/core/bolts.rs:47:9: 51:10 (#123),
        },
        Expr {
            kind: Use {
                source: e98,
            },
            ty: (),
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/core/bolts.rs:47:9: 51:10 (#123),
        },
        Expr {
            kind: Scope {
                region_scope: Node(90),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).90),
                ),
                value: e99,
            },
            ty: (),
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/core/bolts.rs:47:9: 51:10 (#123),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(std::collections::HashMap<&str, usize>) -> std::rc::Rc<std::collections::HashMap<&str, usize>> {std::rc::Rc::<std::collections::HashMap<&str, usize>>::new},
            temp_lifetime: Some(
                Node(106),
            ),
            span: src/core/bolts.rs:53:21: 53:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(96),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).96),
                ),
                value: e101,
            },
            ty: fn(std::collections::HashMap<&str, usize>) -> std::rc::Rc<std::collections::HashMap<&str, usize>> {std::rc::Rc::<std::collections::HashMap<&str, usize>>::new},
            temp_lifetime: Some(
                Node(106),
            ),
            span: src/core/bolts.rs:53:21: 53:28 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).10),
                ),
            },
            ty: std::collections::HashMap<&str, usize>,
            temp_lifetime: Some(
                Node(106),
            ),
            span: src/core/bolts.rs:53:29: 53:35 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(100),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).100),
                ),
                value: e103,
            },
            ty: std::collections::HashMap<&str, usize>,
            temp_lifetime: Some(
                Node(106),
            ),
            span: src/core/bolts.rs:53:29: 53:35 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::collections::HashMap<&str, usize>) -> std::rc::Rc<std::collections::HashMap<&str, usize>> {std::rc::Rc::<std::collections::HashMap<&str, usize>>::new},
                fun: e102,
                args: [
                    e104,
                ],
                from_hir_call: true,
                fn_span: src/core/bolts.rs:53:21: 53:36 (#0),
            },
            ty: std::rc::Rc<std::collections::HashMap<&str, usize>>,
            temp_lifetime: Some(
                Node(106),
            ),
            span: src/core/bolts.rs:53:21: 53:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(95),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).95),
                ),
                value: e105,
            },
            ty: std::rc::Rc<std::collections::HashMap<&str, usize>>,
            temp_lifetime: Some(
                Node(106),
            ),
            span: src/core/bolts.rs:53:21: 53:36 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).18),
                ),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(106),
            ),
            span: src/core/bolts.rs:54:13: 54:16 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(103),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).103),
                ),
                value: e107,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(106),
            ),
            span: src/core/bolts.rs:54:13: 54:16 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: core::bolts::ChildMap,
                    variant_index: 0,
                    substs: [],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e106,
                        },
                        FieldExpr {
                            name: field[1],
                            expr: e108,
                        },
                    ],
                    base: None,
                },
            ),
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(106),
            ),
            span: src/core/bolts.rs:52:9: 55:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(92),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).92),
                ),
                value: e109,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(106),
            ),
            span: src/core/bolts.rs:52:9: 55:10 (#0),
        },
        Expr {
            kind: Block {
                block: b3,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(106),
            ),
            span: src/core/bolts.rs:44:69: 56:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(106),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).106),
                ),
                value: e111,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(106),
            ),
            span: src/core/bolts.rs:44:69: 56:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(106),
                lint_level: Inherited,
                value: e112,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(106),
            ),
            span: src/core/bolts.rs:44:69: 56:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 105, first_statement_index: 0},
                init_scope: Node(3),
                pattern: Pat {
                    ty: std::collections::HashMap<&str, usize>,
                    span: src/core/bolts.rs:45:13: 45:23 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "k_to_i",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).10),
                        ),
                        ty: std::collections::HashMap<&str, usize>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e3,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).9),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(3),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 105, first_statement_index: 1},
                init_scope: Node(11),
                pattern: Pat {
                    ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
                    span: src/core/bolts.rs:46:13: 46:20 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "arr",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).18),
                        ),
                        ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e7,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).17),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(11),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 74, first_statement_index: 0},
                init_scope: Node(36),
                pattern: Pat {
                    ty: std::option::Option<usize>,
                    span: src/core/bolts.rs:48:17: 48:23 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "result",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).47),
                        ),
                        ty: std::option::Option<usize>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e47,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).46),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(36),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(64),
                expr: e73,
            },
            opt_destruction_scope: Some(
                Destruction(64),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(73),
                expr: e86,
            },
            opt_destruction_scope: Some(
                Destruction(73),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(84),
                expr: e91,
            },
            opt_destruction_scope: Some(
                Destruction(84),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(91),
                expr: e100,
            },
            opt_destruction_scope: Some(
                Destruction(91),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: [(&str, std::rc::Rc<dyn core::DataModel>); N],
                    span: src/core/bolts.rs:44:13: 44:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "kv_arr",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).2),
                        ),
                        ty: [(&str, std::rc::Rc<dyn core::DataModel>); N],
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: [(&str, std::rc::Rc<dyn core::DataModel>); N],
            ty_span: Some(
                src/core/bolts.rs:44:21: 44:59 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).1),
            ),
        },
    ],
}

DefId(0:126 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from::{constant#0}):
Thir {
    body_type: Const(
        usize,
    ),
    arms: [],
    blocks: [],
    exprs: [
        Expr {
            kind: ConstParam {
                param: N/#0,
                def_id: DefId(0:123 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::N),
            },
            ty: usize,
            temp_lifetime: Some(
                Node(119),
            ),
            span: src/core/bolts.rs:44:57: 44:58 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(119),
                lint_level: Explicit(
                    HirId(DefId(0:125 ~ andrew_fuzz[741f]::core::bolts::{impl#1}::from).119),
                ),
                value: e0,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(119),
            ),
            span: src/core/bolts.rs:44:57: 44:58 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(119),
                lint_level: Inherited,
                value: e1,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(119),
            ),
            span: src/core/bolts.rs:44:57: 44:58 (#0),
        },
    ],
    stmts: [],
    params: [],
}

DefId(0:129 ~ andrew_fuzz[741f]::core::bolts::{impl#2}::index):
Thir {
    body_type: Fn(
        ([&core::bolts::ChildMap, &str]; c_variadic: false)->&std::rc::Rc<dyn core::DataModel>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(16),
            opt_destruction_scope: None,
            span: src/core/bolts.rs:66:54: 68:6 (#0),
            stmts: [],
            expr: Some(
                e31,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:129 ~ andrew_fuzz[741f]::core::bolts::{impl#2}::index).2),
                ),
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:67:10: 67:14 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:67:10: 67:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:129 ~ andrew_fuzz[741f]::core::bolts::{impl#2}::index).8),
                ),
                value: e1,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:67:10: 67:14 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[1],
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:67:10: 67:18 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e3,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:67:10: 67:18 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:129 ~ andrew_fuzz[741f]::core::bolts::{impl#2}::index).7),
                ),
                value: e4,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:67:10: 67:18 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:129 ~ andrew_fuzz[741f]::core::bolts::{impl#2}::index).2),
                ),
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:67:19: 67:23 (#0),
        },
        Expr {
            kind: Deref {
                arg: e6,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:67:19: 67:23 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(12),
                lint_level: Explicit(
                    HirId(DefId(0:129 ~ andrew_fuzz[741f]::core::bolts::{impl#2}::index).12),
                ),
                value: e7,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:67:19: 67:23 (#0),
        },
        Expr {
            kind: Field {
                lhs: e8,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<std::collections::HashMap<&str, usize>>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:67:19: 67:30 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e9,
            },
            ty: &std::rc::Rc<std::collections::HashMap<&str, usize>>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:67:19: 67:30 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<std::collections::HashMap<&str, usize>>) -> &'a <std::rc::Rc<std::collections::HashMap<&str, usize>> as std::ops::Deref>::Target {<std::rc::Rc<std::collections::HashMap<&str, usize>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:67:19: 67:30 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<std::collections::HashMap<&str, usize>>) -> &'a <std::rc::Rc<std::collections::HashMap<&str, usize>> as std::ops::Deref>::Target {<std::rc::Rc<std::collections::HashMap<&str, usize>> as std::ops::Deref>::deref},
                fun: e11,
                args: [
                    e10,
                ],
                from_hir_call: false,
                fn_span: src/core/bolts.rs:67:19: 67:30 (#0),
            },
            ty: &std::collections::HashMap<&str, usize>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:67:19: 67:30 (#0),
        },
        Expr {
            kind: Deref {
                arg: e12,
            },
            ty: std::collections::HashMap<&str, usize>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:67:19: 67:30 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e13,
            },
            ty: &std::collections::HashMap<&str, usize>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:67:19: 67:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:129 ~ andrew_fuzz[741f]::core::bolts::{impl#2}::index).11),
                ),
                value: e14,
            },
            ty: &std::collections::HashMap<&str, usize>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:67:19: 67:30 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:129 ~ andrew_fuzz[741f]::core::bolts::{impl#2}::index).4),
                ),
            },
            ty: &str,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:67:31: 67:34 (#0),
        },
        Expr {
            kind: Deref {
                arg: e16,
            },
            ty: str,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:67:31: 67:34 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e17,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:67:31: 67:34 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:129 ~ andrew_fuzz[741f]::core::bolts::{impl#2}::index).14),
                ),
                value: e18,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:67:31: 67:34 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::collections::HashMap<&str, usize>, &str) -> &'a <std::collections::HashMap<&str, usize> as std::ops::Index<&str>>::Output {<std::collections::HashMap<&str, usize> as std::ops::Index<&str>>::index},
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:67:19: 67:35 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::collections::HashMap<&str, usize>, &str) -> &'a <std::collections::HashMap<&str, usize> as std::ops::Index<&str>>::Output {<std::collections::HashMap<&str, usize> as std::ops::Index<&str>>::index},
                fun: e20,
                args: [
                    e15,
                    e19,
                ],
                from_hir_call: false,
                fn_span: src/core/bolts.rs:67:19: 67:35 (#0),
            },
            ty: &usize,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:67:19: 67:35 (#0),
        },
        Expr {
            kind: Deref {
                arg: e21,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:67:19: 67:35 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:129 ~ andrew_fuzz[741f]::core::bolts::{impl#2}::index).10),
                ),
                value: e22,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:67:19: 67:35 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::vec::Vec<std::rc::Rc<dyn core::DataModel>>, usize) -> &'a <std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::ops::Index<usize>>::Output {<std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::ops::Index<usize>>::index},
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:67:10: 67:36 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::vec::Vec<std::rc::Rc<dyn core::DataModel>>, usize) -> &'a <std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::ops::Index<usize>>::Output {<std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::ops::Index<usize>>::index},
                fun: e24,
                args: [
                    e5,
                    e23,
                ],
                from_hir_call: false,
                fn_span: src/core/bolts.rs:67:10: 67:36 (#0),
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:67:10: 67:36 (#0),
        },
        Expr {
            kind: Deref {
                arg: e25,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:67:10: 67:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:129 ~ andrew_fuzz[741f]::core::bolts::{impl#2}::index).6),
                ),
                value: e26,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:67:10: 67:36 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e27,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:67:9: 67:36 (#0),
        },
        Expr {
            kind: Deref {
                arg: e28,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:67:9: 67:36 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e29,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:67:9: 67:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:129 ~ andrew_fuzz[741f]::core::bolts::{impl#2}::index).5),
                ),
                value: e30,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:67:9: 67:36 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:66:54: 68:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:129 ~ andrew_fuzz[741f]::core::bolts::{impl#2}::index).17),
                ),
                value: e32,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:66:54: 68:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(17),
                lint_level: Inherited,
                value: e33,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core/bolts.rs:66:54: 68:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &core::bolts::ChildMap,
                    span: src/core/bolts.rs:66:14: 66:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:129 ~ andrew_fuzz[741f]::core::bolts::{impl#2}::index).2),
                        ),
                        ty: &core::bolts::ChildMap,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &core::bolts::ChildMap,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:129 ~ andrew_fuzz[741f]::core::bolts::{impl#2}::index).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &str,
                    span: src/core/bolts.rs:66:21: 66:24 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "key",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:129 ~ andrew_fuzz[741f]::core::bolts::{impl#2}::index).4),
                        ),
                        ty: &str,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &str,
            ty_span: Some(
                src/core/bolts.rs:66:26: 66:30 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:129 ~ andrew_fuzz[741f]::core::bolts::{impl#2}::index).3),
            ),
        },
    ],
}

DefId(0:134 ~ andrew_fuzz[741f]::core::{impl#0}::new):
Thir {
    body_type: Fn(
        ([std::string::String]; c_variadic: false)->core::DataModelBase,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(8),
            opt_destruction_scope: None,
            span: src/core.rs:21:38: 25:6 (#0),
            stmts: [],
            expr: Some(
                e3,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:134 ~ andrew_fuzz[741f]::core::{impl#0}::new).2),
                ),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/core.rs:23:13: 23:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:134 ~ andrew_fuzz[741f]::core::{impl#0}::new).6),
                ),
                value: e0,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/core.rs:23:13: 23:17 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: core::DataModelBase,
                    variant_index: 0,
                    substs: [],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e1,
                        },
                    ],
                    base: None,
                },
            ),
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/core.rs:22:9: 24:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:134 ~ andrew_fuzz[741f]::core::{impl#0}::new).3),
                ),
                value: e2,
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/core.rs:22:9: 24:10 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/core.rs:21:38: 25:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:134 ~ andrew_fuzz[741f]::core::{impl#0}::new).9),
                ),
                value: e4,
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/core.rs:21:38: 25:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(9),
                lint_level: Inherited,
                value: e5,
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/core.rs:21:38: 25:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: std::string::String,
                    span: src/core.rs:21:16: 21:20 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "name",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:134 ~ andrew_fuzz[741f]::core::{impl#0}::new).2),
                        ),
                        ty: std::string::String,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::string::String,
            ty_span: Some(
                src/core.rs:21:22: 21:28 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:134 ~ andrew_fuzz[741f]::core::{impl#0}::new).1),
            ),
        },
    ],
}

DefId(0:135 ~ andrew_fuzz[741f]::core::{impl#0}::name):
Thir {
    body_type: Fn(
        ([&core::DataModelBase]; c_variadic: false)->&std::string::String,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(7),
            opt_destruction_scope: None,
            span: src/core.rs:26:35: 28:6 (#0),
            stmts: [],
            expr: Some(
                e8,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:135 ~ andrew_fuzz[741f]::core::{impl#0}::name).2),
                ),
            },
            ty: &core::DataModelBase,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/core.rs:27:10: 27:14 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/core.rs:27:10: 27:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:135 ~ andrew_fuzz[741f]::core::{impl#0}::name).5),
                ),
                value: e1,
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/core.rs:27:10: 27:14 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[0],
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/core.rs:27:10: 27:19 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:135 ~ andrew_fuzz[741f]::core::{impl#0}::name).4),
                ),
                value: e3,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/core.rs:27:10: 27:19 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e4,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/core.rs:27:9: 27:19 (#0),
        },
        Expr {
            kind: Deref {
                arg: e5,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/core.rs:27:9: 27:19 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e6,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/core.rs:27:9: 27:19 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:135 ~ andrew_fuzz[741f]::core::{impl#0}::name).3),
                ),
                value: e7,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/core.rs:27:9: 27:19 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/core.rs:26:35: 28:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:135 ~ andrew_fuzz[741f]::core::{impl#0}::name).8),
                ),
                value: e9,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/core.rs:26:35: 28:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(8),
                lint_level: Inherited,
                value: e10,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/core.rs:26:35: 28:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &core::DataModelBase,
                    span: src/core.rs:26:17: 26:22 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:135 ~ andrew_fuzz[741f]::core::{impl#0}::name).2),
                        ),
                        ty: &core::DataModelBase,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &core::DataModelBase,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:135 ~ andrew_fuzz[741f]::core::{impl#0}::name).1),
            ),
        },
    ],
}

DefId(0:141 ~ andrew_fuzz[741f]::core::Contextual::child):
Thir {
    body_type: Fn(
        ([&Self]; c_variadic: false)->std::rc::Rc<dyn core::DataModel>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(9),
            opt_destruction_scope: None,
            span: src/core.rs:41:42: 43:6 (#0),
            stmts: [],
            expr: Some(
                e6,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:33 (#43),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:141 ~ andrew_fuzz[741f]::core::Contextual::child).4),
                ),
                value: e0,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:33 (#43),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "explicit panic",
                        Cooked,
                    ),
                    span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#43),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#43),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:141 ~ andrew_fuzz[741f]::core::Contextual::child).8),
                ),
                value: e2,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#43),
        },
        Expr {
            kind: Call {
                ty: fn(&'static str) -> ! {core::panicking::panic},
                fun: e1,
                args: [
                    e3,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#43),
            },
            ty: !,
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#43),
        },
        Expr {
            kind: NeverToAny {
                source: e4,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#43),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:141 ~ andrew_fuzz[741f]::core::Contextual::child).3),
                ),
                value: e5,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#43),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#43),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e7,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#43),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:141 ~ andrew_fuzz[741f]::core::Contextual::child).10),
                ),
                value: e8,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/core.rs:41:42: 43:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(10),
                lint_level: Inherited,
                value: e9,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/core.rs:41:42: 43:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &Self,
                    span: src/core.rs:41:14: 41:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:141 ~ andrew_fuzz[741f]::core::Contextual::child).2),
                        ),
                        ty: &Self,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &Self,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:141 ~ andrew_fuzz[741f]::core::Contextual::child).1),
            ),
        },
    ],
}

DefId(0:142 ~ andrew_fuzz[741f]::core::Contextual::vec):
Thir {
    body_type: Fn(
        ([&Self]; c_variadic: false)->&std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(9),
            opt_destruction_scope: None,
            span: src/core.rs:44:46: 46:6 (#0),
            stmts: [],
            expr: Some(
                e6,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:33 (#46),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:142 ~ andrew_fuzz[741f]::core::Contextual::vec).4),
                ),
                value: e0,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:33 (#46),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "explicit panic",
                        Cooked,
                    ),
                    span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#46),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#46),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:142 ~ andrew_fuzz[741f]::core::Contextual::vec).8),
                ),
                value: e2,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#46),
        },
        Expr {
            kind: Call {
                ty: fn(&'static str) -> ! {core::panicking::panic},
                fun: e1,
                args: [
                    e3,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#46),
            },
            ty: !,
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#46),
        },
        Expr {
            kind: NeverToAny {
                source: e4,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#46),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:142 ~ andrew_fuzz[741f]::core::Contextual::vec).3),
                ),
                value: e5,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#46),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/core.rs:44:46: 46:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:142 ~ andrew_fuzz[741f]::core::Contextual::vec).10),
                ),
                value: e7,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/core.rs:44:46: 46:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(10),
                lint_level: Inherited,
                value: e8,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/core.rs:44:46: 46:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &Self,
                    span: src/core.rs:44:12: 44:17 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:142 ~ andrew_fuzz[741f]::core::Contextual::vec).2),
                        ),
                        ty: &Self,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &Self,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:142 ~ andrew_fuzz[741f]::core::Contextual::vec).1),
            ),
        },
    ],
}

DefId(0:143 ~ andrew_fuzz[741f]::core::Contextual::map):
Thir {
    body_type: Fn(
        ([&Self]; c_variadic: false)->&core::bolts::ChildMap,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(9),
            opt_destruction_scope: None,
            span: src/core.rs:47:32: 49:6 (#0),
            stmts: [],
            expr: Some(
                e6,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:33 (#49),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:143 ~ andrew_fuzz[741f]::core::Contextual::map).4),
                ),
                value: e0,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:33 (#49),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "explicit panic",
                        Cooked,
                    ),
                    span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#49),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#49),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:143 ~ andrew_fuzz[741f]::core::Contextual::map).8),
                ),
                value: e2,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#49),
        },
        Expr {
            kind: Call {
                ty: fn(&'static str) -> ! {core::panicking::panic},
                fun: e1,
                args: [
                    e3,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#49),
            },
            ty: !,
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#49),
        },
        Expr {
            kind: NeverToAny {
                source: e4,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#49),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:143 ~ andrew_fuzz[741f]::core::Contextual::map).3),
                ),
                value: e5,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#49),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/core.rs:47:32: 49:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:143 ~ andrew_fuzz[741f]::core::Contextual::map).10),
                ),
                value: e7,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/core.rs:47:32: 49:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(10),
                lint_level: Inherited,
                value: e8,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/core.rs:47:32: 49:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &Self,
                    span: src/core.rs:47:12: 47:17 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:143 ~ andrew_fuzz[741f]::core::Contextual::map).2),
                        ),
                        ty: &Self,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &Self,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:143 ~ andrew_fuzz[741f]::core::Contextual::map).1),
            ),
        },
    ],
}

DefId(0:144 ~ andrew_fuzz[741f]::core::Contextual::data):
Thir {
    body_type: Fn(
        ([&Self]; c_variadic: false)->&core::bit_array::BitArray,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(9),
            opt_destruction_scope: None,
            span: src/core.rs:50:33: 52:6 (#0),
            stmts: [],
            expr: Some(
                e6,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:33 (#52),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:144 ~ andrew_fuzz[741f]::core::Contextual::data).4),
                ),
                value: e0,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:33 (#52),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "explicit panic",
                        Cooked,
                    ),
                    span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#52),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#52),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:144 ~ andrew_fuzz[741f]::core::Contextual::data).8),
                ),
                value: e2,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#52),
        },
        Expr {
            kind: Call {
                ty: fn(&'static str) -> ! {core::panicking::panic},
                fun: e1,
                args: [
                    e3,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#52),
            },
            ty: !,
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#52),
        },
        Expr {
            kind: NeverToAny {
                source: e4,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#52),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:144 ~ andrew_fuzz[741f]::core::Contextual::data).3),
                ),
                value: e5,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#52),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/core.rs:50:33: 52:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:144 ~ andrew_fuzz[741f]::core::Contextual::data).10),
                ),
                value: e7,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/core.rs:50:33: 52:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(10),
                lint_level: Inherited,
                value: e8,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/core.rs:50:33: 52:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &Self,
                    span: src/core.rs:50:13: 50:18 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:144 ~ andrew_fuzz[741f]::core::Contextual::data).2),
                        ),
                        ty: &Self,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &Self,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:144 ~ andrew_fuzz[741f]::core::Contextual::data).1),
            ),
        },
    ],
}

DefId(0:145 ~ andrew_fuzz[741f]::core::Contextual::int):
Thir {
    body_type: Fn(
        ([&Self]; c_variadic: false)->i32,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(9),
            opt_destruction_scope: None,
            span: src/core.rs:53:26: 55:6 (#0),
            stmts: [],
            expr: Some(
                e6,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:33 (#55),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:145 ~ andrew_fuzz[741f]::core::Contextual::int).4),
                ),
                value: e0,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:33 (#55),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "explicit panic",
                        Cooked,
                    ),
                    span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#55),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#55),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:145 ~ andrew_fuzz[741f]::core::Contextual::int).8),
                ),
                value: e2,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#55),
        },
        Expr {
            kind: Call {
                ty: fn(&'static str) -> ! {core::panicking::panic},
                fun: e1,
                args: [
                    e3,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#55),
            },
            ty: !,
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#55),
        },
        Expr {
            kind: NeverToAny {
                source: e4,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#55),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:145 ~ andrew_fuzz[741f]::core::Contextual::int).3),
                ),
                value: e5,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#55),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/core.rs:53:26: 55:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:145 ~ andrew_fuzz[741f]::core::Contextual::int).10),
                ),
                value: e7,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/core.rs:53:26: 55:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(10),
                lint_level: Inherited,
                value: e8,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/core.rs:53:26: 55:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &Self,
                    span: src/core.rs:53:12: 53:17 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:145 ~ andrew_fuzz[741f]::core::Contextual::int).2),
                        ),
                        ty: &Self,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &Self,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:145 ~ andrew_fuzz[741f]::core::Contextual::int).1),
            ),
        },
    ],
}

DefId(0:146 ~ andrew_fuzz[741f]::core::Contextual::str):
Thir {
    body_type: Fn(
        ([&Self]; c_variadic: false)->&std::string::String,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(9),
            opt_destruction_scope: None,
            span: src/core.rs:56:30: 58:6 (#0),
            stmts: [],
            expr: Some(
                e6,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:33 (#58),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:146 ~ andrew_fuzz[741f]::core::Contextual::str).4),
                ),
                value: e0,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:33 (#58),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "explicit panic",
                        Cooked,
                    ),
                    span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#58),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#58),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:146 ~ andrew_fuzz[741f]::core::Contextual::str).8),
                ),
                value: e2,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:34: 50:50 (#58),
        },
        Expr {
            kind: Call {
                ty: fn(&'static str) -> ! {core::panicking::panic},
                fun: e1,
                args: [
                    e3,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#58),
            },
            ty: !,
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#58),
        },
        Expr {
            kind: NeverToAny {
                source: e4,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#58),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:146 ~ andrew_fuzz[741f]::core::Contextual::str).3),
                ),
                value: e5,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(10),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:50:9: 50:51 (#58),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/core.rs:56:30: 58:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:146 ~ andrew_fuzz[741f]::core::Contextual::str).10),
                ),
                value: e7,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/core.rs:56:30: 58:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(10),
                lint_level: Inherited,
                value: e8,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/core.rs:56:30: 58:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &Self,
                    span: src/core.rs:56:12: 56:17 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:146 ~ andrew_fuzz[741f]::core::Contextual::str).2),
                        ),
                        ty: &Self,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &Self,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:146 ~ andrew_fuzz[741f]::core::Contextual::str).1),
            ),
        },
    ],
}

DefId(0:150 ~ andrew_fuzz[741f]::core::Ast::debug):
Thir {
    body_type: Fn(
        ([&Self]; c_variadic: false)->std::string::String,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(39),
            opt_destruction_scope: None,
            span: src/core.rs:65:31: 69:6 (#0),
            stmts: [
                s0,
                s1,
            ],
            expr: Some(
                e53,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn() -> std::string::String {std::string::String::new},
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core.rs:66:26: 66:37 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:150 ~ andrew_fuzz[741f]::core::Ast::debug).5),
                ),
                value: e0,
            },
            ty: fn() -> std::string::String {std::string::String::new},
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core.rs:66:26: 66:37 (#0),
        },
        Expr {
            kind: Call {
                ty: fn() -> std::string::String {std::string::String::new},
                fun: e1,
                args: [],
                from_hir_call: true,
                fn_span: src/core.rs:66:26: 66:39 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core.rs:66:26: 66:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:150 ~ andrew_fuzz[741f]::core::Ast::debug).4),
                ),
                value: e2,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core.rs:66:26: 66:39 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:150 ~ andrew_fuzz[741f]::core::Ast::debug).10),
                ),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:16: 67:22 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e4,
            },
            ty: &mut std::string::String,
            temp_lifetime: Some(
                Node(36),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:9: 520:55 (#59),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:150 ~ andrew_fuzz[741f]::core::Ast::debug).15),
                ),
                value: e5,
            },
            ty: &mut std::string::String,
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:16: 67:22 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(2:9000 ~ core[102f]::fmt::{impl#4}::new_v1),
                            UserSubsts {
                                substs: [
                                    ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon(0, None) }),
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(2:8997 ~ core[102f]::fmt::{impl#4}),
                                        self_ty: std::fmt::Arguments<'_>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> std::fmt::Arguments<'_> {std::fmt::Arguments::<'_>::new_v1},
            temp_lifetime: Some(
                Node(36),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#60),
        },
        Expr {
            kind: Scope {
                region_scope: Node(34),
                lint_level: Explicit(
                    HirId(DefId(0:150 ~ andrew_fuzz[741f]::core::Ast::debug).34),
                ),
                value: e7,
            },
            ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> std::fmt::Arguments<'_> {std::fmt::Arguments::<'_>::new_v1},
            temp_lifetime: Some(
                Node(36),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#60),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "",
                        Cooked,
                    ),
                    span: src/core.rs:67:24: 67:28 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:24: 67:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(18),
                lint_level: Explicit(
                    HirId(DefId(0:150 ~ andrew_fuzz[741f]::core::Ast::debug).18),
                ),
                value: e9,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:24: 67:28 (#0),
        },
        Expr {
            kind: Array {
                fields: [
                    e10,
                ],
            },
            ty: [&str; 1],
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:24: 67:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:150 ~ andrew_fuzz[741f]::core::Ast::debug).19),
                ),
                value: e11,
            },
            ty: [&str; 1],
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:24: 67:28 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e12,
            },
            ty: &[&str; 1],
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:24: 67:28 (#0),
        },
        Expr {
            kind: Deref {
                arg: e13,
            },
            ty: [&str; 1],
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:24: 67:28 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e14,
            },
            ty: &[&str; 1],
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:24: 67:28 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e15,
            },
            ty: &[&str],
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:24: 67:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(20),
                lint_level: Explicit(
                    HirId(DefId(0:150 ~ andrew_fuzz[741f]::core::Ast::debug).20),
                ),
                value: e16,
            },
            ty: &[&str],
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:24: 67:28 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(2:49766 ~ core[102f]::fmt::{impl#3}::new_display),
                            UserSubsts {
                                substs: [
                                    ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon(0, None) }),
                                    ^1,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(2:8990 ~ core[102f]::fmt::{impl#3}),
                                        self_ty: core::fmt::ArgumentV1<'_>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: for<'b> fn(&'b &std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<&std::string::String>},
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:30: 67:41 (#60),
        },
        Expr {
            kind: Scope {
                region_scope: Node(28),
                lint_level: Explicit(
                    HirId(DefId(0:150 ~ andrew_fuzz[741f]::core::Ast::debug).28),
                ),
                value: e18,
            },
            ty: for<'b> fn(&'b &std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<&std::string::String>},
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:30: 67:41 (#60),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:150 ~ andrew_fuzz[741f]::core::Ast::debug).2),
                ),
            },
            ty: &Self,
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:30: 67:34 (#0),
        },
        Expr {
            kind: Deref {
                arg: e20,
            },
            ty: Self,
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:30: 67:41 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e21,
            },
            ty: &Self,
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:30: 67:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(23),
                lint_level: Explicit(
                    HirId(DefId(0:150 ~ andrew_fuzz[741f]::core::Ast::debug).23),
                ),
                value: e22,
            },
            ty: &Self,
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:30: 67:34 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a Self) -> &'a std::string::String {<Self as core::Named>::name},
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:35: 67:39 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a Self) -> &'a std::string::String {<Self as core::Named>::name},
                fun: e24,
                args: [
                    e23,
                ],
                from_hir_call: true,
                fn_span: src/core.rs:67:35: 67:41 (#0),
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:30: 67:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(21),
                lint_level: Explicit(
                    HirId(DefId(0:150 ~ andrew_fuzz[741f]::core::Ast::debug).21),
                ),
                value: e25,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:30: 67:41 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e26,
            },
            ty: &&std::string::String,
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:30: 67:41 (#60),
        },
        Expr {
            kind: Deref {
                arg: e27,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:30: 67:41 (#60),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e28,
            },
            ty: &&std::string::String,
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:30: 67:41 (#60),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:150 ~ andrew_fuzz[741f]::core::Ast::debug).25),
                ),
                value: e29,
            },
            ty: &&std::string::String,
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:30: 67:41 (#60),
        },
        Expr {
            kind: Call {
                ty: for<'b> fn(&'b &std::string::String) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<&std::string::String>},
                fun: e19,
                args: [
                    e30,
                ],
                from_hir_call: true,
                fn_span: src/core.rs:67:30: 67:41 (#60),
            },
            ty: core::fmt::ArgumentV1<'_>,
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:30: 67:41 (#60),
        },
        Expr {
            kind: Scope {
                region_scope: Node(29),
                lint_level: Explicit(
                    HirId(DefId(0:150 ~ andrew_fuzz[741f]::core::Ast::debug).29),
                ),
                value: e31,
            },
            ty: core::fmt::ArgumentV1<'_>,
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:30: 67:41 (#60),
        },
        Expr {
            kind: Array {
                fields: [
                    e32,
                ],
            },
            ty: [core::fmt::ArgumentV1<'_>; 1],
            temp_lifetime: Some(
                Node(36),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#60),
        },
        Expr {
            kind: Scope {
                region_scope: Node(30),
                lint_level: Explicit(
                    HirId(DefId(0:150 ~ andrew_fuzz[741f]::core::Ast::debug).30),
                ),
                value: e33,
            },
            ty: [core::fmt::ArgumentV1<'_>; 1],
            temp_lifetime: Some(
                Node(36),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#60),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e34,
            },
            ty: &[core::fmt::ArgumentV1<'_>; 1],
            temp_lifetime: Some(
                Node(36),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#60),
        },
        Expr {
            kind: Deref {
                arg: e35,
            },
            ty: [core::fmt::ArgumentV1<'_>; 1],
            temp_lifetime: Some(
                Node(36),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#60),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e36,
            },
            ty: &[core::fmt::ArgumentV1<'_>; 1],
            temp_lifetime: Some(
                Node(36),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#60),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e37,
            },
            ty: &[core::fmt::ArgumentV1<'_>],
            temp_lifetime: Some(
                Node(36),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#60),
        },
        Expr {
            kind: Scope {
                region_scope: Node(31),
                lint_level: Explicit(
                    HirId(DefId(0:150 ~ andrew_fuzz[741f]::core::Ast::debug).31),
                ),
                value: e38,
            },
            ty: &[core::fmt::ArgumentV1<'_>],
            temp_lifetime: Some(
                Node(36),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#60),
        },
        Expr {
            kind: Call {
                ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> std::fmt::Arguments<'_> {std::fmt::Arguments::<'_>::new_v1},
                fun: e8,
                args: [
                    e17,
                    e39,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#60),
            },
            ty: std::fmt::Arguments<'_>,
            temp_lifetime: Some(
                Node(36),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#60),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:150 ~ andrew_fuzz[741f]::core::Ast::debug).17),
                ),
                value: e40,
            },
            ty: std::fmt::Arguments<'_>,
            temp_lifetime: Some(
                Node(36),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#60),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b> fn(&'a mut std::string::String, std::fmt::Arguments<'b>) -> std::result::Result<(), std::fmt::Error> {<std::string::String as std::fmt::Write>::write_fmt},
            temp_lifetime: Some(
                Node(36),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:14: 520:23 (#59),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b> fn(&'a mut std::string::String, std::fmt::Arguments<'b>) -> std::result::Result<(), std::fmt::Error> {<std::string::String as std::fmt::Write>::write_fmt},
                fun: e42,
                args: [
                    e6,
                    e41,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:14: 520:55 (#59),
            },
            ty: std::result::Result<(), std::fmt::Error>,
            temp_lifetime: Some(
                Node(36),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:9: 520:55 (#59),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:150 ~ andrew_fuzz[741f]::core::Ast::debug).13),
                ),
                value: e43,
            },
            ty: std::result::Result<(), std::fmt::Error>,
            temp_lifetime: Some(
                Node(36),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:9: 520:55 (#59),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "err writing",
                        Cooked,
                    ),
                    span: src/core.rs:67:50: 67:63 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:50: 67:63 (#0),
        },
        Expr {
            kind: Deref {
                arg: e45,
            },
            ty: str,
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:50: 67:63 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e46,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:50: 67:63 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(35),
                lint_level: Explicit(
                    HirId(DefId(0:150 ~ andrew_fuzz[741f]::core::Ast::debug).35),
                ),
                value: e47,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:50: 67:63 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(std::result::Result<(), std::fmt::Error>, &'a str) {std::result::Result::<(), std::fmt::Error>::expect},
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:43: 67:49 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(std::result::Result<(), std::fmt::Error>, &'a str) {std::result::Result::<(), std::fmt::Error>::expect},
                fun: e49,
                args: [
                    e44,
                    e48,
                ],
                from_hir_call: true,
                fn_span: src/core.rs:67:43: 67:64 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:9: 67:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:150 ~ andrew_fuzz[741f]::core::Ast::debug).11),
                ),
                value: e50,
            },
            ty: (),
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/core.rs:67:9: 67:64 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:150 ~ andrew_fuzz[741f]::core::Ast::debug).10),
                ),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core.rs:68:9: 68:15 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(37),
                lint_level: Explicit(
                    HirId(DefId(0:150 ~ andrew_fuzz[741f]::core::Ast::debug).37),
                ),
                value: e52,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core.rs:68:9: 68:15 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core.rs:65:31: 69:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(40),
                lint_level: Explicit(
                    HirId(DefId(0:150 ~ andrew_fuzz[741f]::core::Ast::debug).40),
                ),
                value: e54,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core.rs:65:31: 69:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(40),
                lint_level: Inherited,
                value: e55,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/core.rs:65:31: 69:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 39, first_statement_index: 0},
                init_scope: Node(3),
                pattern: Pat {
                    ty: std::string::String,
                    span: src/core.rs:66:13: 66:23 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "result",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:150 ~ andrew_fuzz[741f]::core::Ast::debug).10),
                        ),
                        ty: std::string::String,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e3,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:150 ~ andrew_fuzz[741f]::core::Ast::debug).9),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(3),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(36),
                expr: e51,
            },
            opt_destruction_scope: Some(
                Destruction(36),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &Self,
                    span: src/core.rs:65:14: 65:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:150 ~ andrew_fuzz[741f]::core::Ast::debug).2),
                        ),
                        ty: &Self,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &Self,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:150 ~ andrew_fuzz[741f]::core::Ast::debug).1),
            ),
        },
    ],
}

DefId(0:157 ~ andrew_fuzz[741f]::core::Vectorizer::do_features):
Thir {
    body_type: Fn(
        ([&Self, &mut std::collections::HashSet<std::string::String>]; c_variadic: false)->(),
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(16),
            opt_destruction_scope: None,
            span: src/core.rs:82:59: 84:6 (#0),
            stmts: [
                s0,
            ],
            expr: None,
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:157 ~ andrew_fuzz[741f]::core::Vectorizer::do_features).4),
                ),
            },
            ty: &mut std::collections::HashSet<std::string::String>,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core.rs:83:9: 83:17 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: std::collections::HashSet<std::string::String>,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core.rs:83:9: 83:49 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e1,
            },
            ty: &mut std::collections::HashSet<std::string::String>,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core.rs:83:9: 83:49 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:157 ~ andrew_fuzz[741f]::core::Vectorizer::do_features).7),
                ),
                value: e2,
            },
            ty: &mut std::collections::HashSet<std::string::String>,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core.rs:83:9: 83:17 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:157 ~ andrew_fuzz[741f]::core::Vectorizer::do_features).2),
                ),
            },
            ty: &Self,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core.rs:83:25: 83:29 (#0),
        },
        Expr {
            kind: Deref {
                arg: e4,
            },
            ty: Self,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core.rs:83:25: 83:36 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e5,
            },
            ty: &Self,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core.rs:83:25: 83:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:157 ~ andrew_fuzz[741f]::core::Vectorizer::do_features).13),
                ),
                value: e6,
            },
            ty: &Self,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core.rs:83:25: 83:29 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a Self) -> &'a std::string::String {<Self as core::Named>::name},
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core.rs:83:30: 83:34 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a Self) -> &'a std::string::String {<Self as core::Named>::name},
                fun: e8,
                args: [
                    e7,
                ],
                from_hir_call: true,
                fn_span: src/core.rs:83:30: 83:36 (#0),
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core.rs:83:25: 83:36 (#0),
        },
        Expr {
            kind: Deref {
                arg: e9,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core.rs:83:25: 83:48 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e10,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core.rs:83:25: 83:48 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:157 ~ andrew_fuzz[741f]::core::Vectorizer::do_features).11),
                ),
                value: e11,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core.rs:83:25: 83:36 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::string::String) -> std::string::String {<std::string::String as std::string::ToString>::to_string},
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core.rs:83:37: 83:46 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::string::String) -> std::string::String {<std::string::String as std::string::ToString>::to_string},
                fun: e13,
                args: [
                    e12,
                ],
                from_hir_call: true,
                fn_span: src/core.rs:83:37: 83:48 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core.rs:83:25: 83:48 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:157 ~ andrew_fuzz[741f]::core::Vectorizer::do_features).9),
                ),
                value: e14,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core.rs:83:25: 83:48 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::collections::HashSet<std::string::String>, std::string::String) -> bool {std::collections::HashSet::<std::string::String>::insert},
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core.rs:83:18: 83:24 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::collections::HashSet<std::string::String>, std::string::String) -> bool {std::collections::HashSet::<std::string::String>::insert},
                fun: e16,
                args: [
                    e3,
                    e15,
                ],
                from_hir_call: true,
                fn_span: src/core.rs:83:18: 83:49 (#0),
            },
            ty: bool,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core.rs:83:9: 83:49 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:157 ~ andrew_fuzz[741f]::core::Vectorizer::do_features).5),
                ),
                value: e17,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/core.rs:83:9: 83:49 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core.rs:82:59: 84:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:157 ~ andrew_fuzz[741f]::core::Vectorizer::do_features).17),
                ),
                value: e19,
            },
            ty: (),
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core.rs:82:59: 84:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(17),
                lint_level: Inherited,
                value: e20,
            },
            ty: (),
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/core.rs:82:59: 84:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(15),
                expr: e18,
            },
            opt_destruction_scope: Some(
                Destruction(15),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &Self,
                    span: src/core.rs:82:20: 82:25 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:157 ~ andrew_fuzz[741f]::core::Vectorizer::do_features).2),
                        ),
                        ty: &Self,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &Self,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:157 ~ andrew_fuzz[741f]::core::Vectorizer::do_features).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &mut std::collections::HashSet<std::string::String>,
                    span: src/core.rs:82:27: 82:35 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "features",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:157 ~ andrew_fuzz[741f]::core::Vectorizer::do_features).4),
                        ),
                        ty: &mut std::collections::HashSet<std::string::String>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut std::collections::HashSet<std::string::String>,
            ty_span: Some(
                src/core.rs:82:37: 82:57 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:157 ~ andrew_fuzz[741f]::core::Vectorizer::do_features).3),
            ),
        },
    ],
}

DefId(0:158 ~ andrew_fuzz[741f]::core::Vectorizer::features):
Thir {
    body_type: Fn(
        ([&Self]; c_variadic: false)->core::feature_vector::FeatureVector,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(30),
            opt_destruction_scope: None,
            span: src/core.rs:86:41: 90:6 (#0),
            stmts: [
                s0,
                s1,
            ],
            expr: Some(
                e28,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(1:1442 ~ std[f4e9]::collections::hash::set::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(1:1440 ~ std[f4e9]::collections::hash::set::{impl#0}),
                                        self_ty: std::collections::HashSet<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn() -> std::collections::HashSet<std::string::String> {std::collections::HashSet::<std::string::String>::new},
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core.rs:87:28: 87:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:158 ~ andrew_fuzz[741f]::core::Vectorizer::features).5),
                ),
                value: e0,
            },
            ty: fn() -> std::collections::HashSet<std::string::String> {std::collections::HashSet::<std::string::String>::new},
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core.rs:87:28: 87:40 (#0),
        },
        Expr {
            kind: Call {
                ty: fn() -> std::collections::HashSet<std::string::String> {std::collections::HashSet::<std::string::String>::new},
                fun: e1,
                args: [],
                from_hir_call: true,
                fn_span: src/core.rs:87:28: 87:42 (#0),
            },
            ty: std::collections::HashSet<std::string::String>,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core.rs:87:28: 87:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:158 ~ andrew_fuzz[741f]::core::Vectorizer::features).4),
                ),
                value: e2,
            },
            ty: std::collections::HashSet<std::string::String>,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core.rs:87:28: 87:42 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:158 ~ andrew_fuzz[741f]::core::Vectorizer::features).2),
                ),
            },
            ty: &Self,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:88:9: 88:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e4,
            },
            ty: Self,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:88:9: 88:40 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e5,
            },
            ty: &Self,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:88:9: 88:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:158 ~ andrew_fuzz[741f]::core::Vectorizer::features).13),
                ),
                value: e6,
            },
            ty: &Self,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:88:9: 88:13 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:158 ~ andrew_fuzz[741f]::core::Vectorizer::features).10),
                ),
            },
            ty: std::collections::HashSet<std::string::String>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:88:31: 88:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(16),
                lint_level: Explicit(
                    HirId(DefId(0:158 ~ andrew_fuzz[741f]::core::Vectorizer::features).16),
                ),
                value: e8,
            },
            ty: std::collections::HashSet<std::string::String>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:88:31: 88:39 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: false,
                },
                arg: e9,
            },
            ty: &mut std::collections::HashSet<std::string::String>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:88:26: 88:39 (#0),
        },
        Expr {
            kind: Deref {
                arg: e10,
            },
            ty: std::collections::HashSet<std::string::String>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:88:26: 88:39 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e11,
            },
            ty: &mut std::collections::HashSet<std::string::String>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:88:26: 88:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:158 ~ andrew_fuzz[741f]::core::Vectorizer::features).15),
                ),
                value: e12,
            },
            ty: &mut std::collections::HashSet<std::string::String>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:88:26: 88:39 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b> fn(&'a Self, &'b mut std::collections::HashSet<std::string::String>) {<Self as core::Vectorizer>::do_features},
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:88:14: 88:25 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b> fn(&'a Self, &'b mut std::collections::HashSet<std::string::String>) {<Self as core::Vectorizer>::do_features},
                fun: e14,
                args: [
                    e7,
                    e13,
                ],
                from_hir_call: true,
                fn_span: src/core.rs:88:14: 88:40 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:88:9: 88:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:158 ~ andrew_fuzz[741f]::core::Vectorizer::features).11),
                ),
                value: e15,
            },
            ty: (),
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:88:9: 88:40 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::vec::Vec<std::string::String>) -> core::feature_vector::FeatureVector {core::feature_vector::FeatureVector::new},
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/core.rs:89:9: 89:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(20),
                lint_level: Explicit(
                    HirId(DefId(0:158 ~ andrew_fuzz[741f]::core::Vectorizer::features).20),
                ),
                value: e17,
            },
            ty: fn(std::vec::Vec<std::string::String>) -> core::feature_vector::FeatureVector {core::feature_vector::FeatureVector::new},
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/core.rs:89:9: 89:27 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:158 ~ andrew_fuzz[741f]::core::Vectorizer::features).10),
                ),
            },
            ty: std::collections::HashSet<std::string::String>,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/core.rs:89:28: 89:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(28),
                lint_level: Explicit(
                    HirId(DefId(0:158 ~ andrew_fuzz[741f]::core::Vectorizer::features).28),
                ),
                value: e19,
            },
            ty: std::collections::HashSet<std::string::String>,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/core.rs:89:28: 89:36 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::collections::HashSet<std::string::String>) -> <std::collections::HashSet<std::string::String> as std::iter::IntoIterator>::IntoIter {<std::collections::HashSet<std::string::String> as std::iter::IntoIterator>::into_iter},
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/core.rs:89:37: 89:46 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::collections::HashSet<std::string::String>) -> <std::collections::HashSet<std::string::String> as std::iter::IntoIterator>::IntoIter {<std::collections::HashSet<std::string::String> as std::iter::IntoIterator>::into_iter},
                fun: e21,
                args: [
                    e20,
                ],
                from_hir_call: true,
                fn_span: src/core.rs:89:37: 89:48 (#0),
            },
            ty: std::collections::hash_set::IntoIter<std::string::String>,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/core.rs:89:28: 89:48 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(26),
                lint_level: Explicit(
                    HirId(DefId(0:158 ~ andrew_fuzz[741f]::core::Vectorizer::features).26),
                ),
                value: e22,
            },
            ty: std::collections::hash_set::IntoIter<std::string::String>,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/core.rs:89:28: 89:48 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::collections::hash_set::IntoIter<std::string::String>) -> std::vec::Vec<std::string::String> {<std::collections::hash_set::IntoIter<std::string::String> as std::iter::Iterator>::collect::<std::vec::Vec<std::string::String>>},
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/core.rs:89:49: 89:56 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::collections::hash_set::IntoIter<std::string::String>) -> std::vec::Vec<std::string::String> {<std::collections::hash_set::IntoIter<std::string::String> as std::iter::Iterator>::collect::<std::vec::Vec<std::string::String>>},
                fun: e24,
                args: [
                    e23,
                ],
                from_hir_call: true,
                fn_span: src/core.rs:89:49: 89:58 (#0),
            },
            ty: std::vec::Vec<std::string::String>,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/core.rs:89:28: 89:58 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(24),
                lint_level: Explicit(
                    HirId(DefId(0:158 ~ andrew_fuzz[741f]::core::Vectorizer::features).24),
                ),
                value: e25,
            },
            ty: std::vec::Vec<std::string::String>,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/core.rs:89:28: 89:58 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::vec::Vec<std::string::String>) -> core::feature_vector::FeatureVector {core::feature_vector::FeatureVector::new},
                fun: e18,
                args: [
                    e26,
                ],
                from_hir_call: true,
                fn_span: src/core.rs:89:9: 89:59 (#0),
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/core.rs:89:9: 89:59 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:158 ~ andrew_fuzz[741f]::core::Vectorizer::features).19),
                ),
                value: e27,
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/core.rs:89:9: 89:59 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/core.rs:86:41: 90:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(31),
                lint_level: Explicit(
                    HirId(DefId(0:158 ~ andrew_fuzz[741f]::core::Vectorizer::features).31),
                ),
                value: e29,
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/core.rs:86:41: 90:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(31),
                lint_level: Inherited,
                value: e30,
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/core.rs:86:41: 90:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 30, first_statement_index: 0},
                init_scope: Node(3),
                pattern: Pat {
                    ty: std::collections::HashSet<std::string::String>,
                    span: src/core.rs:87:13: 87:25 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "features",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:158 ~ andrew_fuzz[741f]::core::Vectorizer::features).10),
                        ),
                        ty: std::collections::HashSet<std::string::String>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e3,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:158 ~ andrew_fuzz[741f]::core::Vectorizer::features).9),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(3),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(18),
                expr: e16,
            },
            opt_destruction_scope: Some(
                Destruction(18),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &Self,
                    span: src/core.rs:86:17: 86:22 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:158 ~ andrew_fuzz[741f]::core::Vectorizer::features).2),
                        ),
                        ty: &Self,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &Self,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:158 ~ andrew_fuzz[741f]::core::Vectorizer::features).1),
            ),
        },
    ],
}

DefId(0:159 ~ andrew_fuzz[741f]::core::Vectorizer::do_vectorization):
Thir {
    body_type: Fn(
        ([&Self, &mut core::feature_vector::FeatureVector, i32]; c_variadic: false)->(),
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(17),
            opt_destruction_scope: None,
            span: src/core.rs:91:68: 93:6 (#0),
            stmts: [
                s0,
            ],
            expr: None,
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:159 ~ andrew_fuzz[741f]::core::Vectorizer::do_vectorization).4),
                ),
            },
            ty: &mut core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core.rs:92:9: 92:11 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core.rs:92:9: 92:42 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e1,
            },
            ty: &mut core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core.rs:92:9: 92:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:159 ~ andrew_fuzz[741f]::core::Vectorizer::do_vectorization).9),
                ),
                value: e2,
            },
            ty: &mut core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core.rs:92:9: 92:11 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "U8",
                        Cooked,
                    ),
                    span: src/core.rs:92:18: 92:22 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core.rs:92:18: 92:22 (#0),
        },
        Expr {
            kind: Deref {
                arg: e4,
            },
            ty: str,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core.rs:92:18: 92:34 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e5,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core.rs:92:18: 92:34 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:159 ~ andrew_fuzz[741f]::core::Vectorizer::do_vectorization).13),
                ),
                value: e6,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core.rs:92:18: 92:22 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core.rs:92:23: 92:32 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
                fun: e8,
                args: [
                    e7,
                ],
                from_hir_call: true,
                fn_span: src/core.rs:92:23: 92:34 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core.rs:92:18: 92:34 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:159 ~ andrew_fuzz[741f]::core::Vectorizer::do_vectorization).11),
                ),
                value: e9,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core.rs:92:18: 92:34 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:159 ~ andrew_fuzz[741f]::core::Vectorizer::do_vectorization).6),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core.rs:92:36: 92:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:159 ~ andrew_fuzz[741f]::core::Vectorizer::do_vectorization).14),
                ),
                value: e11,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core.rs:92:36: 92:41 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut core::feature_vector::FeatureVector, std::string::String, i32) {core::feature_vector::FeatureVector::tally},
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core.rs:92:12: 92:17 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut core::feature_vector::FeatureVector, std::string::String, i32) {core::feature_vector::FeatureVector::tally},
                fun: e13,
                args: [
                    e3,
                    e10,
                    e12,
                ],
                from_hir_call: true,
                fn_span: src/core.rs:92:12: 92:42 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core.rs:92:9: 92:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:159 ~ andrew_fuzz[741f]::core::Vectorizer::do_vectorization).7),
                ),
                value: e14,
            },
            ty: (),
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/core.rs:92:9: 92:42 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:91:68: 93:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(18),
                lint_level: Explicit(
                    HirId(DefId(0:159 ~ andrew_fuzz[741f]::core::Vectorizer::do_vectorization).18),
                ),
                value: e16,
            },
            ty: (),
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:91:68: 93:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(18),
                lint_level: Inherited,
                value: e17,
            },
            ty: (),
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:91:68: 93:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(16),
                expr: e15,
            },
            opt_destruction_scope: Some(
                Destruction(16),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &Self,
                    span: src/core.rs:91:25: 91:30 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:159 ~ andrew_fuzz[741f]::core::Vectorizer::do_vectorization).2),
                        ),
                        ty: &Self,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &Self,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:159 ~ andrew_fuzz[741f]::core::Vectorizer::do_vectorization).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &mut core::feature_vector::FeatureVector,
                    span: src/core.rs:91:32: 91:34 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "fv",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:159 ~ andrew_fuzz[741f]::core::Vectorizer::do_vectorization).4),
                        ),
                        ty: &mut core::feature_vector::FeatureVector,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut core::feature_vector::FeatureVector,
            ty_span: Some(
                src/core.rs:91:36: 91:54 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:159 ~ andrew_fuzz[741f]::core::Vectorizer::do_vectorization).3),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: i32,
                    span: src/core.rs:91:56: 91:61 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "depth",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:159 ~ andrew_fuzz[741f]::core::Vectorizer::do_vectorization).6),
                        ),
                        ty: i32,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: i32,
            ty_span: Some(
                src/core.rs:91:63: 91:66 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:159 ~ andrew_fuzz[741f]::core::Vectorizer::do_vectorization).5),
            ),
        },
    ],
}

DefId(0:160 ~ andrew_fuzz[741f]::core::Vectorizer::vectorize):
Thir {
    body_type: Fn(
        ([&Self]; c_variadic: false)->core::feature_vector::FeatureVector,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(21),
            opt_destruction_scope: None,
            span: src/core.rs:95:42: 99:6 (#0),
            stmts: [
                s0,
                s1,
            ],
            expr: Some(
                e23,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:160 ~ andrew_fuzz[741f]::core::Vectorizer::vectorize).2),
                ),
            },
            ty: &Self,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core.rs:96:22: 96:26 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: Self,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core.rs:96:22: 96:37 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e1,
            },
            ty: &Self,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core.rs:96:22: 96:37 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:160 ~ andrew_fuzz[741f]::core::Vectorizer::vectorize).6),
                ),
                value: e2,
            },
            ty: &Self,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core.rs:96:22: 96:26 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a Self) -> core::feature_vector::FeatureVector {<Self as core::Vectorizer>::features},
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core.rs:96:27: 96:35 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a Self) -> core::feature_vector::FeatureVector {<Self as core::Vectorizer>::features},
                fun: e4,
                args: [
                    e3,
                ],
                from_hir_call: true,
                fn_span: src/core.rs:96:27: 96:37 (#0),
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core.rs:96:22: 96:37 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:160 ~ andrew_fuzz[741f]::core::Vectorizer::vectorize).4),
                ),
                value: e5,
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core.rs:96:22: 96:37 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:160 ~ andrew_fuzz[741f]::core::Vectorizer::vectorize).2),
                ),
            },
            ty: &Self,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:97:9: 97:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e7,
            },
            ty: Self,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:97:9: 97:42 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e8,
            },
            ty: &Self,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:97:9: 97:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(12),
                lint_level: Explicit(
                    HirId(DefId(0:160 ~ andrew_fuzz[741f]::core::Vectorizer::vectorize).12),
                ),
                value: e9,
            },
            ty: &Self,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:97:9: 97:13 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:160 ~ andrew_fuzz[741f]::core::Vectorizer::vectorize).9),
                ),
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:97:36: 97:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:160 ~ andrew_fuzz[741f]::core::Vectorizer::vectorize).15),
                ),
                value: e11,
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:97:36: 97:38 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: false,
                },
                arg: e12,
            },
            ty: &mut core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:97:31: 97:38 (#0),
        },
        Expr {
            kind: Deref {
                arg: e13,
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:97:31: 97:38 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e14,
            },
            ty: &mut core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:97:31: 97:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:160 ~ andrew_fuzz[741f]::core::Vectorizer::vectorize).14),
                ),
                value: e15,
            },
            ty: &mut core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:97:31: 97:38 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        0,
                        Unsuffixed,
                    ),
                    span: src/core.rs:97:40: 97:41 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:97:40: 97:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:160 ~ andrew_fuzz[741f]::core::Vectorizer::vectorize).17),
                ),
                value: e17,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:97:40: 97:41 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b> fn(&'a Self, &'b mut core::feature_vector::FeatureVector, i32) {<Self as core::Vectorizer>::do_vectorization},
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:97:14: 97:30 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b> fn(&'a Self, &'b mut core::feature_vector::FeatureVector, i32) {<Self as core::Vectorizer>::do_vectorization},
                fun: e19,
                args: [
                    e10,
                    e16,
                    e18,
                ],
                from_hir_call: true,
                fn_span: src/core.rs:97:14: 97:42 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:97:9: 97:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:160 ~ andrew_fuzz[741f]::core::Vectorizer::vectorize).10),
                ),
                value: e20,
            },
            ty: (),
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:97:9: 97:42 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:160 ~ andrew_fuzz[741f]::core::Vectorizer::vectorize).9),
                ),
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/core.rs:98:9: 98:11 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:160 ~ andrew_fuzz[741f]::core::Vectorizer::vectorize).19),
                ),
                value: e22,
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/core.rs:98:9: 98:11 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/core.rs:95:42: 99:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(22),
                lint_level: Explicit(
                    HirId(DefId(0:160 ~ andrew_fuzz[741f]::core::Vectorizer::vectorize).22),
                ),
                value: e24,
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/core.rs:95:42: 99:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(22),
                lint_level: Inherited,
                value: e25,
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/core.rs:95:42: 99:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 21, first_statement_index: 0},
                init_scope: Node(3),
                pattern: Pat {
                    ty: core::feature_vector::FeatureVector,
                    span: src/core.rs:96:13: 96:19 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "fv",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:160 ~ andrew_fuzz[741f]::core::Vectorizer::vectorize).9),
                        ),
                        ty: core::feature_vector::FeatureVector,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e6,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:160 ~ andrew_fuzz[741f]::core::Vectorizer::vectorize).8),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(3),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(18),
                expr: e21,
            },
            opt_destruction_scope: Some(
                Destruction(18),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &Self,
                    span: src/core.rs:95:18: 95:23 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:160 ~ andrew_fuzz[741f]::core::Vectorizer::vectorize).2),
                        ),
                        ty: &Self,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &Self,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:160 ~ andrew_fuzz[741f]::core::Vectorizer::vectorize).1),
            ),
        },
    ],
}

DefId(0:163 ~ andrew_fuzz[741f]::core::Serializer::serialize):
Thir {
    body_type: Fn(
        ([&Self]; c_variadic: false)->core::bit_array::BitArray,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(21),
            opt_destruction_scope: None,
            span: src/core.rs:103:37: 107:6 (#0),
            stmts: [
                s0,
                s1,
            ],
            expr: Some(
                e18,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn() -> core::bit_array::BitArray {core::bit_array::BitArray::fresh},
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core.rs:104:22: 104:37 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:163 ~ andrew_fuzz[741f]::core::Serializer::serialize).5),
                ),
                value: e0,
            },
            ty: fn() -> core::bit_array::BitArray {core::bit_array::BitArray::fresh},
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core.rs:104:22: 104:37 (#0),
        },
        Expr {
            kind: Call {
                ty: fn() -> core::bit_array::BitArray {core::bit_array::BitArray::fresh},
                fun: e1,
                args: [],
                from_hir_call: true,
                fn_span: src/core.rs:104:22: 104:39 (#0),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core.rs:104:22: 104:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:163 ~ andrew_fuzz[741f]::core::Serializer::serialize).4),
                ),
                value: e2,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/core.rs:104:22: 104:39 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:163 ~ andrew_fuzz[741f]::core::Serializer::serialize).2),
                ),
            },
            ty: &Self,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:105:9: 105:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e4,
            },
            ty: Self,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:105:9: 105:39 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e5,
            },
            ty: &Self,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:105:9: 105:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:163 ~ andrew_fuzz[741f]::core::Serializer::serialize).13),
                ),
                value: e6,
            },
            ty: &Self,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:105:9: 105:13 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:163 ~ andrew_fuzz[741f]::core::Serializer::serialize).10),
                ),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:105:36: 105:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(16),
                lint_level: Explicit(
                    HirId(DefId(0:163 ~ andrew_fuzz[741f]::core::Serializer::serialize).16),
                ),
                value: e8,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:105:36: 105:38 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: false,
                },
                arg: e9,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:105:31: 105:38 (#0),
        },
        Expr {
            kind: Deref {
                arg: e10,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:105:31: 105:38 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e11,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:105:31: 105:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:163 ~ andrew_fuzz[741f]::core::Serializer::serialize).15),
                ),
                value: e12,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:105:31: 105:38 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b> fn(&'a Self, &'b mut core::bit_array::BitArray) {<Self as core::Serializer>::do_serialization},
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:105:14: 105:30 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b> fn(&'a Self, &'b mut core::bit_array::BitArray) {<Self as core::Serializer>::do_serialization},
                fun: e14,
                args: [
                    e7,
                    e13,
                ],
                from_hir_call: true,
                fn_span: src/core.rs:105:14: 105:39 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:105:9: 105:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:163 ~ andrew_fuzz[741f]::core::Serializer::serialize).11),
                ),
                value: e15,
            },
            ty: (),
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/core.rs:105:9: 105:39 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:163 ~ andrew_fuzz[741f]::core::Serializer::serialize).10),
                ),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/core.rs:106:9: 106:11 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:163 ~ andrew_fuzz[741f]::core::Serializer::serialize).19),
                ),
                value: e17,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/core.rs:106:9: 106:11 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/core.rs:103:37: 107:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(22),
                lint_level: Explicit(
                    HirId(DefId(0:163 ~ andrew_fuzz[741f]::core::Serializer::serialize).22),
                ),
                value: e19,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/core.rs:103:37: 107:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(22),
                lint_level: Inherited,
                value: e20,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/core.rs:103:37: 107:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 21, first_statement_index: 0},
                init_scope: Node(3),
                pattern: Pat {
                    ty: core::bit_array::BitArray,
                    span: src/core.rs:104:13: 104:19 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "ba",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:163 ~ andrew_fuzz[741f]::core::Serializer::serialize).10),
                        ),
                        ty: core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e3,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:163 ~ andrew_fuzz[741f]::core::Serializer::serialize).9),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(3),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(18),
                expr: e16,
            },
            opt_destruction_scope: Some(
                Destruction(18),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &Self,
                    span: src/core.rs:103:18: 103:23 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:163 ~ andrew_fuzz[741f]::core::Serializer::serialize).2),
                        ),
                        ty: &Self,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &Self,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:163 ~ andrew_fuzz[741f]::core::Serializer::serialize).1),
            ),
        },
    ],
}

DefId(0:193 ~ andrew_fuzz[741f]::library::sequence::{impl#0}::new):
Thir {
    body_type: Fn(
        ([core::bolts::ChildMap]; c_variadic: false)->library::sequence::Sequence,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(22),
            opt_destruction_scope: None,
            span: src/library/sequence.rs:13:44: 18:6 (#0),
            stmts: [],
            expr: Some(
                e18,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:15:19: 15:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:193 ~ andrew_fuzz[741f]::library::sequence::{impl#0}::new).7),
                ),
                value: e0,
            },
            ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:15:19: 15:26 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:15:27: 15:45 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(12),
                lint_level: Explicit(
                    HirId(DefId(0:193 ~ andrew_fuzz[741f]::library::sequence::{impl#0}::new).12),
                ),
                value: e2,
            },
            ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:15:27: 15:45 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "Sequence",
                        Cooked,
                    ),
                    span: src/library/sequence.rs:15:46: 15:56 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:15:46: 15:56 (#0),
        },
        Expr {
            kind: Deref {
                arg: e4,
            },
            ty: str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:15:46: 15:68 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e5,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:15:46: 15:68 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(18),
                lint_level: Explicit(
                    HirId(DefId(0:193 ~ andrew_fuzz[741f]::library::sequence::{impl#0}::new).18),
                ),
                value: e6,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:15:46: 15:56 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:15:57: 15:66 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
                fun: e8,
                args: [
                    e7,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:15:57: 15:68 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:15:46: 15:68 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(16),
                lint_level: Explicit(
                    HirId(DefId(0:193 ~ andrew_fuzz[741f]::library::sequence::{impl#0}::new).16),
                ),
                value: e9,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:15:46: 15:68 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
                fun: e3,
                args: [
                    e10,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:15:27: 15:69 (#0),
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:15:27: 15:69 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:193 ~ andrew_fuzz[741f]::library::sequence::{impl#0}::new).11),
                ),
                value: e11,
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:15:27: 15:69 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
                fun: e1,
                args: [
                    e12,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:15:19: 15:70 (#0),
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:15:19: 15:70 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:193 ~ andrew_fuzz[741f]::library::sequence::{impl#0}::new).6),
                ),
                value: e13,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:15:19: 15:70 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:193 ~ andrew_fuzz[741f]::library::sequence::{impl#0}::new).2),
                ),
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:16:13: 16:21 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(20),
                lint_level: Explicit(
                    HirId(DefId(0:193 ~ andrew_fuzz[741f]::library::sequence::{impl#0}::new).20),
                ),
                value: e15,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:16:13: 16:21 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: library::sequence::Sequence,
                    variant_index: 0,
                    substs: [],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e14,
                        },
                        FieldExpr {
                            name: field[1],
                            expr: e16,
                        },
                    ],
                    base: None,
                },
            ),
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:14:9: 17:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:193 ~ andrew_fuzz[741f]::library::sequence::{impl#0}::new).3),
                ),
                value: e17,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:14:9: 17:10 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:13:44: 18:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(23),
                lint_level: Explicit(
                    HirId(DefId(0:193 ~ andrew_fuzz[741f]::library::sequence::{impl#0}::new).23),
                ),
                value: e19,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:13:44: 18:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(23),
                lint_level: Inherited,
                value: e20,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:13:44: 18:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: core::bolts::ChildMap,
                    span: src/library/sequence.rs:13:16: 13:24 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "children",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:193 ~ andrew_fuzz[741f]::library::sequence::{impl#0}::new).2),
                        ),
                        ty: core::bolts::ChildMap,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: core::bolts::ChildMap,
            ty_span: Some(
                src/library/sequence.rs:13:26: 13:34 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:193 ~ andrew_fuzz[741f]::library::sequence::{impl#0}::new).1),
            ),
        },
    ],
}

DefId(0:196 ~ andrew_fuzz[741f]::library::sequence::{impl#2}::map):
Thir {
    body_type: Fn(
        ([&library::sequence::Sequence]; c_variadic: false)->&core::bolts::ChildMap,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(8),
            opt_destruction_scope: None,
            span: src/library/sequence.rs:26:32: 28:6 (#0),
            stmts: [],
            expr: Some(
                e11,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:196 ~ andrew_fuzz[741f]::library::sequence::{impl#2}::map).2),
                ),
            },
            ty: &library::sequence::Sequence,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:27:11: 27:15 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:27:11: 27:15 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:196 ~ andrew_fuzz[741f]::library::sequence::{impl#2}::map).6),
                ),
                value: e1,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:27:11: 27:15 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[1],
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:27:11: 27:24 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:196 ~ andrew_fuzz[741f]::library::sequence::{impl#2}::map).5),
                ),
                value: e3,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:27:11: 27:24 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e4,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:27:10: 27:24 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:196 ~ andrew_fuzz[741f]::library::sequence::{impl#2}::map).4),
                ),
                value: e5,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:27:10: 27:24 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e6,
            },
            ty: &&core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:27:9: 27:24 (#0),
        },
        Expr {
            kind: Deref {
                arg: e7,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:27:9: 27:24 (#0),
        },
        Expr {
            kind: Deref {
                arg: e8,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:27:9: 27:24 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e9,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:27:9: 27:24 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:196 ~ andrew_fuzz[741f]::library::sequence::{impl#2}::map).3),
                ),
                value: e10,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:27:9: 27:24 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:26:32: 28:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:196 ~ andrew_fuzz[741f]::library::sequence::{impl#2}::map).9),
                ),
                value: e12,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:26:32: 28:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(9),
                lint_level: Inherited,
                value: e13,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:26:32: 28:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::sequence::Sequence,
                    span: src/library/sequence.rs:26:12: 26:17 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:196 ~ andrew_fuzz[741f]::library::sequence::{impl#2}::map).2),
                        ),
                        ty: &library::sequence::Sequence,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::sequence::Sequence,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:196 ~ andrew_fuzz[741f]::library::sequence::{impl#2}::map).1),
            ),
        },
    ],
}

DefId(0:198 ~ andrew_fuzz[741f]::library::sequence::{impl#3}::clone):
Thir {
    body_type: Fn(
        ([&library::sequence::Sequence]; c_variadic: false)->std::boxed::Box<dyn core::DataModel>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(22),
            opt_destruction_scope: None,
            span: src/library/sequence.rs:32:43: 37:6 (#0),
            stmts: [],
            expr: Some(
                e24,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:296 ~ alloc[42dc]::boxed::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:294 ~ alloc[42dc]::boxed::{impl#0}),
                                        self_ty: std::boxed::Box<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::sequence::Sequence) -> std::boxed::Box<library::sequence::Sequence> {std::boxed::Box::<library::sequence::Sequence>::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:33:9: 33:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:198 ~ andrew_fuzz[741f]::library::sequence::{impl#3}::clone).4),
                ),
                value: e0,
            },
            ty: fn(library::sequence::Sequence) -> std::boxed::Box<library::sequence::Sequence> {std::boxed::Box::<library::sequence::Sequence>::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:33:9: 33:17 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:198 ~ andrew_fuzz[741f]::library::sequence::{impl#3}::clone).2),
                ),
            },
            ty: &library::sequence::Sequence,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:34:19: 34:23 (#0),
        },
        Expr {
            kind: Deref {
                arg: e2,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:34:19: 34:23 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:198 ~ andrew_fuzz[741f]::library::sequence::{impl#3}::clone).14),
                ),
                value: e3,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:34:19: 34:23 (#0),
        },
        Expr {
            kind: Field {
                lhs: e4,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:34:19: 34:28 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e5,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:34:19: 34:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:198 ~ andrew_fuzz[741f]::library::sequence::{impl#3}::clone).13),
                ),
                value: e6,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:34:19: 34:28 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> std::rc::Rc<core::DataModelBase> {<std::rc::Rc<core::DataModelBase> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:34:29: 34:34 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> std::rc::Rc<core::DataModelBase> {<std::rc::Rc<core::DataModelBase> as std::clone::Clone>::clone},
                fun: e8,
                args: [
                    e7,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:34:29: 34:36 (#0),
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:34:19: 34:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:198 ~ andrew_fuzz[741f]::library::sequence::{impl#3}::clone).11),
                ),
                value: e9,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:34:19: 34:36 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:198 ~ andrew_fuzz[741f]::library::sequence::{impl#3}::clone).2),
                ),
            },
            ty: &library::sequence::Sequence,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:35:23: 35:27 (#0),
        },
        Expr {
            kind: Deref {
                arg: e11,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:35:23: 35:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(20),
                lint_level: Explicit(
                    HirId(DefId(0:198 ~ andrew_fuzz[741f]::library::sequence::{impl#3}::clone).20),
                ),
                value: e12,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:35:23: 35:27 (#0),
        },
        Expr {
            kind: Field {
                lhs: e13,
                variant_index: 0,
                name: field[1],
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:35:23: 35:36 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e14,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:35:23: 35:44 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:198 ~ andrew_fuzz[741f]::library::sequence::{impl#3}::clone).19),
                ),
                value: e15,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:35:23: 35:36 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bolts::ChildMap) -> core::bolts::ChildMap {core::bolts::ChildMap::clone},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:35:37: 35:42 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bolts::ChildMap) -> core::bolts::ChildMap {core::bolts::ChildMap::clone},
                fun: e17,
                args: [
                    e16,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:35:37: 35:44 (#0),
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:35:23: 35:44 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:198 ~ andrew_fuzz[741f]::library::sequence::{impl#3}::clone).17),
                ),
                value: e18,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:35:23: 35:44 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: library::sequence::Sequence,
                    variant_index: 0,
                    substs: [],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e10,
                        },
                        FieldExpr {
                            name: field[1],
                            expr: e19,
                        },
                    ],
                    base: None,
                },
            ),
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:33:18: 36:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:198 ~ andrew_fuzz[741f]::library::sequence::{impl#3}::clone).8),
                ),
                value: e20,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:33:18: 36:10 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::sequence::Sequence) -> std::boxed::Box<library::sequence::Sequence> {std::boxed::Box::<library::sequence::Sequence>::new},
                fun: e1,
                args: [
                    e21,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:33:9: 36:11 (#0),
            },
            ty: std::boxed::Box<library::sequence::Sequence>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:33:9: 36:11 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e22,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:33:9: 36:11 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:198 ~ andrew_fuzz[741f]::library::sequence::{impl#3}::clone).3),
                ),
                value: e23,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:33:9: 36:11 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:33:9: 36:11 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e25,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:33:9: 36:11 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(23),
                lint_level: Explicit(
                    HirId(DefId(0:198 ~ andrew_fuzz[741f]::library::sequence::{impl#3}::clone).23),
                ),
                value: e26,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:32:43: 37:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(23),
                lint_level: Inherited,
                value: e27,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:32:43: 37:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::sequence::Sequence,
                    span: src/library/sequence.rs:32:14: 32:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:198 ~ andrew_fuzz[741f]::library::sequence::{impl#3}::clone).2),
                        ),
                        ty: &library::sequence::Sequence,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::sequence::Sequence,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:198 ~ andrew_fuzz[741f]::library::sequence::{impl#3}::clone).1),
            ),
        },
    ],
}

DefId(0:200 ~ andrew_fuzz[741f]::library::sequence::{impl#4}::breed):
Thir {
    body_type: Fn(
        ([&library::sequence::Sequence, std::boxed::Box<dyn core::DataModel>]; c_variadic: false)->std::boxed::Box<dyn core::DataModel>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(12),
            opt_destruction_scope: None,
            span: src/library/sequence.rs:41:70: 43:6 (#0),
            stmts: [
                s0,
            ],
            expr: None,
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(11),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:9: 773:33 (#61),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:200 ~ andrew_fuzz[741f]::library::sequence::{impl#4}::breed).6),
                ),
                value: e0,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(11),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:9: 773:33 (#61),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "not yet implemented",
                        Cooked,
                    ),
                    span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:34: 773:55 (#61),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(11),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:34: 773:55 (#61),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:200 ~ andrew_fuzz[741f]::library::sequence::{impl#4}::breed).10),
                ),
                value: e2,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(11),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:34: 773:55 (#61),
        },
        Expr {
            kind: Call {
                ty: fn(&'static str) -> ! {core::panicking::panic},
                fun: e1,
                args: [
                    e3,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:9: 773:56 (#61),
            },
            ty: !,
            temp_lifetime: Some(
                Node(11),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:9: 773:56 (#61),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:200 ~ andrew_fuzz[741f]::library::sequence::{impl#4}::breed).5),
                ),
                value: e4,
            },
            ty: !,
            temp_lifetime: Some(
                Node(11),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:9: 773:56 (#61),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: !,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/sequence.rs:41:70: 43:6 (#0),
        },
        Expr {
            kind: NeverToAny {
                source: e6,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/sequence.rs:41:70: 43:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:200 ~ andrew_fuzz[741f]::library::sequence::{impl#4}::breed).13),
                ),
                value: e7,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/sequence.rs:41:70: 43:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(13),
                lint_level: Inherited,
                value: e8,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/sequence.rs:41:70: 43:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(11),
                expr: e5,
            },
            opt_destruction_scope: Some(
                Destruction(11),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::sequence::Sequence,
                    span: src/library/sequence.rs:41:14: 41:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:200 ~ andrew_fuzz[741f]::library::sequence::{impl#4}::breed).2),
                        ),
                        ty: &library::sequence::Sequence,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::sequence::Sequence,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:200 ~ andrew_fuzz[741f]::library::sequence::{impl#4}::breed).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: std::boxed::Box<dyn core::DataModel>,
                    span: src/library/sequence.rs:41:21: 41:26 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "other",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:200 ~ andrew_fuzz[741f]::library::sequence::{impl#4}::breed).4),
                        ),
                        ty: std::boxed::Box<dyn core::DataModel>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::boxed::Box<dyn core::DataModel>,
            ty_span: Some(
                src/library/sequence.rs:41:28: 41:46 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:200 ~ andrew_fuzz[741f]::library::sequence::{impl#4}::breed).3),
            ),
        },
    ],
}

DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse):
Thir {
    body_type: Fn(
        ([&library::sequence::Sequence, &mut core::bit_array::BitArray, &std::rc::Rc<core::context::Context<'_>>]; c_variadic: false)->std::option::Option<std::boxed::Box<dyn core::DataModel>>,
    ),
    arms: [
        Arm {
            pattern: Pat {
                ty: std::option::Option<&std::rc::Rc<dyn core::DataModel>>,
                span: src/library/sequence.rs:49:9: 56:10 (#127),
                kind: Variant {
                    adt_def: std::option::Option,
                    substs: [
                        &std::rc::Rc<dyn core::DataModel>,
                    ],
                    variant_index: 0,
                    subpatterns: [],
                },
            },
            guard: None,
            body: e35,
            lint_level: Explicit(
                HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).24),
            ),
            scope: Node(24),
            span: src/library/sequence.rs:49:9: 56:10 (#127),
        },
        Arm {
            pattern: Pat {
                ty: std::option::Option<&std::rc::Rc<dyn core::DataModel>>,
                span: src/library/sequence.rs:49:13: 49:14 (#129),
                kind: Variant {
                    adt_def: std::option::Option,
                    substs: [
                        &std::rc::Rc<dyn core::DataModel>,
                    ],
                    variant_index: 1,
                    subpatterns: [
                        FieldPat {
                            field: field[0],
                            pattern: Pat {
                                ty: &std::rc::Rc<dyn core::DataModel>,
                                span: src/library/sequence.rs:49:13: 49:14 (#0),
                                kind: Binding {
                                    mutability: Not,
                                    name: "c",
                                    mode: ByValue,
                                    var: LocalVarId(
                                        HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).20),
                                    ),
                                    ty: &std::rc::Rc<dyn core::DataModel>,
                                    subpattern: None,
                                    is_primary: true,
                                },
                            },
                        },
                    ],
                },
            },
            guard: None,
            body: e110,
            lint_level: Explicit(
                HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).92),
            ),
            scope: Node(92),
            span: src/library/sequence.rs:49:39: 56:10 (#0),
        },
        Arm {
            pattern: Pat {
                ty: std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
                span: src/library/sequence.rs:49:18: 49:38 (#128),
                kind: Binding {
                    mutability: Mut,
                    name: "iter",
                    mode: ByValue,
                    var: LocalVarId(
                        HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).93),
                    ),
                    ty: std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
                    subpattern: None,
                    is_primary: true,
                },
            },
            guard: None,
            body: e116,
            lint_level: Explicit(
                HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).102),
            ),
            scope: Node(102),
            span: src/library/sequence.rs:49:9: 56:10 (#127),
        },
    ],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(82),
            opt_destruction_scope: None,
            span: src/library/sequence.rs:51:74: 53:14 (#0),
            stmts: [
                s2,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(89),
            opt_destruction_scope: None,
            span: src/library/sequence.rs:53:20: 55:14 (#0),
            stmts: [
                s3,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(90),
            opt_destruction_scope: None,
            span: src/library/sequence.rs:49:39: 56:10 (#0),
            stmts: [
                s1,
            ],
            expr: Some(
                e107,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(101),
            opt_destruction_scope: Some(
                Destruction(101),
            ),
            span: src/library/sequence.rs:49:9: 56:10 (#127),
            stmts: [
                s4,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(127),
            opt_destruction_scope: None,
            span: src/library/sequence.rs:47:92: 61:6 (#0),
            stmts: [
                s0,
                s5,
            ],
            expr: Some(
                e141,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).2),
                ),
            },
            ty: &library::sequence::Sequence,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/sequence.rs:48:32: 48:36 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/sequence.rs:48:32: 48:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).11),
                ),
                value: e1,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/sequence.rs:48:32: 48:36 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[1],
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/sequence.rs:48:32: 48:45 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e3,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/sequence.rs:48:32: 48:53 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).10),
                ),
                value: e4,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/sequence.rs:48:32: 48:45 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bolts::ChildMap) -> core::bolts::ChildMap {core::bolts::ChildMap::empty},
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/sequence.rs:48:46: 48:51 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bolts::ChildMap) -> core::bolts::ChildMap {core::bolts::ChildMap::empty},
                fun: e6,
                args: [
                    e5,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:48:46: 48:53 (#0),
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/sequence.rs:48:32: 48:53 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).8),
                ),
                value: e7,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/sequence.rs:48:32: 48:53 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(&std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> <&std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::IntoIter {<&std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::into_iter},
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/library/sequence.rs:49:18: 49:38 (#128),
        },
        Expr {
            kind: Scope {
                region_scope: Node(103),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).103),
                ),
                value: e9,
            },
            ty: fn(&std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> <&std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::IntoIter {<&std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::into_iter},
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/library/sequence.rs:49:18: 49:38 (#128),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).2),
                ),
            },
            ty: &library::sequence::Sequence,
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/library/sequence.rs:49:18: 49:22 (#0),
        },
        Expr {
            kind: Deref {
                arg: e11,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/library/sequence.rs:49:18: 49:22 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(18),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).18),
                ),
                value: e12,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/library/sequence.rs:49:18: 49:22 (#0),
        },
        Expr {
            kind: Field {
                lhs: e13,
                variant_index: 0,
                name: field[1],
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/library/sequence.rs:49:18: 49:31 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e14,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/library/sequence.rs:49:18: 49:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).17),
                ),
                value: e15,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/library/sequence.rs:49:18: 49:31 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bolts::ChildMap) -> &'a std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>> {core::bolts::ChildMap::vals},
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/library/sequence.rs:49:32: 49:36 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bolts::ChildMap) -> &'a std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>> {core::bolts::ChildMap::vals},
                fun: e17,
                args: [
                    e16,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:49:32: 49:38 (#0),
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/library/sequence.rs:49:18: 49:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).15),
                ),
                value: e18,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/library/sequence.rs:49:18: 49:38 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(&std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> <&std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::IntoIter {<&std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::into_iter},
                fun: e10,
                args: [
                    e19,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:49:18: 49:38 (#128),
            },
            ty: std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/library/sequence.rs:49:18: 49:38 (#128),
        },
        Expr {
            kind: Scope {
                region_scope: Node(104),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).104),
                ),
                value: e20,
            },
            ty: std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/library/sequence.rs:49:18: 49:38 (#128),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>) -> std::option::Option<<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::Item> {<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::next},
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/sequence.rs:49:18: 49:38 (#128),
        },
        Expr {
            kind: Scope {
                region_scope: Node(97),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).97),
                ),
                value: e22,
            },
            ty: for<'a> fn(&'a mut std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>) -> std::option::Option<<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::Item> {<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::next},
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/sequence.rs:49:18: 49:38 (#128),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).93),
                ),
            },
            ty: std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/sequence.rs:49:18: 49:38 (#128),
        },
        Expr {
            kind: Scope {
                region_scope: Node(95),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).95),
                ),
                value: e24,
            },
            ty: std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/sequence.rs:49:18: 49:38 (#128),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: false,
                },
                arg: e25,
            },
            ty: &mut std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/sequence.rs:49:18: 49:38 (#128),
        },
        Expr {
            kind: Deref {
                arg: e26,
            },
            ty: std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/sequence.rs:49:18: 49:38 (#128),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e27,
            },
            ty: &mut std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/sequence.rs:49:18: 49:38 (#128),
        },
        Expr {
            kind: Scope {
                region_scope: Node(96),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).96),
                ),
                value: e28,
            },
            ty: &mut std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/sequence.rs:49:18: 49:38 (#128),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>) -> std::option::Option<<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::Item> {<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::next},
                fun: e23,
                args: [
                    e29,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:49:18: 49:38 (#128),
            },
            ty: std::option::Option<&std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/sequence.rs:49:18: 49:38 (#128),
        },
        Expr {
            kind: Scope {
                region_scope: Node(98),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).98),
                ),
                value: e30,
            },
            ty: std::option::Option<&std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/sequence.rs:49:18: 49:38 (#128),
        },
        Expr {
            kind: Break {
                label: Node(21),
                value: None,
            },
            ty: !,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/sequence.rs:49:9: 56:10 (#127),
        },
        Expr {
            kind: NeverToAny {
                source: e32,
            },
            ty: (),
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/sequence.rs:49:9: 56:10 (#127),
        },
        Expr {
            kind: Scope {
                region_scope: Node(22),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).22),
                ),
                value: e33,
            },
            ty: (),
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/sequence.rs:49:9: 56:10 (#127),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(22),
                lint_level: Inherited,
                value: e34,
            },
            ty: (),
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/sequence.rs:49:9: 56:10 (#127),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(0:98 ~ andrew_fuzz[741f]::core::context::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon(0, None) }),
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(0:96 ~ andrew_fuzz[741f]::core::context::{impl#0}),
                                        self_ty: core::context::Context<'_>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(std::rc::Weak<core::context::Context<'_>>, core::context::Children<'_>) -> core::context::Context<'_> {core::context::Context::<'_>::new},
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/library/sequence.rs:50:29: 50:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(29),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).29),
                ),
                value: e36,
            },
            ty: fn(std::rc::Weak<core::context::Context<'_>>, core::context::Children<'_>) -> core::context::Context<'_> {core::context::Context::<'_>::new},
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/library/sequence.rs:50:29: 50:41 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4783 ~ alloc[42dc]::rc::{impl#11}::downgrade),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4778 ~ alloc[42dc]::rc::{impl#11}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> std::rc::Weak<core::context::Context<'_>> {std::rc::Rc::<core::context::Context<'_>>::downgrade},
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/library/sequence.rs:50:42: 50:55 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(35),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).35),
                ),
                value: e38,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> std::rc::Weak<core::context::Context<'_>> {std::rc::Rc::<core::context::Context<'_>>::downgrade},
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/library/sequence.rs:50:42: 50:55 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).6),
                ),
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/library/sequence.rs:50:56: 50:59 (#0),
        },
        Expr {
            kind: Deref {
                arg: e40,
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/library/sequence.rs:50:56: 50:59 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e41,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/library/sequence.rs:50:56: 50:59 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(39),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).39),
                ),
                value: e42,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/library/sequence.rs:50:56: 50:59 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> std::rc::Weak<core::context::Context<'_>> {std::rc::Rc::<core::context::Context<'_>>::downgrade},
                fun: e39,
                args: [
                    e43,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:50:42: 50:60 (#0),
            },
            ty: std::rc::Weak<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/library/sequence.rs:50:42: 50:60 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(34),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).34),
                ),
                value: e44,
            },
            ty: std::rc::Weak<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/library/sequence.rs:50:42: 50:60 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).14),
                ),
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/library/sequence.rs:50:82: 50:94 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(46),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).46),
                ),
                value: e46,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/library/sequence.rs:50:82: 50:94 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e47,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/library/sequence.rs:50:81: 50:94 (#0),
        },
        Expr {
            kind: Deref {
                arg: e48,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/library/sequence.rs:50:81: 50:94 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e49,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/library/sequence.rs:50:81: 50:94 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(45),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).45),
                ),
                value: e50,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/library/sequence.rs:50:81: 50:94 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: core::context::Children,
                    variant_index: 3,
                    substs: [
                        ReErased,
                    ],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e51,
                        },
                    ],
                    base: None,
                },
            ),
            ty: core::context::Children<'_>,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/library/sequence.rs:50:62: 50:95 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(41),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).41),
                ),
                value: e52,
            },
            ty: core::context::Children<'_>,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/library/sequence.rs:50:62: 50:95 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::rc::Weak<core::context::Context<'_>>, core::context::Children<'_>) -> core::context::Context<'_> {core::context::Context::<'_>::new},
                fun: e37,
                args: [
                    e45,
                    e53,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:50:29: 50:96 (#0),
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/library/sequence.rs:50:29: 50:96 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(28),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).28),
                ),
                value: e54,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/library/sequence.rs:50:29: 50:96 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).20),
                ),
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/library/sequence.rs:51:38: 51:39 (#0),
        },
        Expr {
            kind: Deref {
                arg: e56,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/library/sequence.rs:51:38: 51:73 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e57,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/library/sequence.rs:51:38: 51:73 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/library/sequence.rs:51:38: 51:73 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
                fun: e59,
                args: [
                    e58,
                ],
                from_hir_call: false,
                fn_span: src/library/sequence.rs:51:38: 51:73 (#0),
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/library/sequence.rs:51:38: 51:73 (#0),
        },
        Expr {
            kind: Deref {
                arg: e60,
            },
            ty: dyn core::DataModel,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/library/sequence.rs:51:38: 51:73 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e61,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/library/sequence.rs:51:38: 51:73 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(58),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).58),
                ),
                value: e62,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/library/sequence.rs:51:38: 51:39 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).4),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/library/sequence.rs:51:46: 51:51 (#0),
        },
        Expr {
            kind: Deref {
                arg: e64,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/library/sequence.rs:51:46: 51:51 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e65,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/library/sequence.rs:51:46: 51:51 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(60),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).60),
                ),
                value: e66,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/library/sequence.rs:51:46: 51:51 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(core::context::Context<'_>) -> std::rc::Rc<core::context::Context<'_>> {std::rc::Rc::<core::context::Context<'_>>::new},
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/library/sequence.rs:51:54: 51:61 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(64),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).64),
                ),
                value: e68,
            },
            ty: fn(core::context::Context<'_>) -> std::rc::Rc<core::context::Context<'_>> {std::rc::Rc::<core::context::Context<'_>>::new},
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/library/sequence.rs:51:54: 51:61 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).49),
                ),
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/library/sequence.rs:51:62: 51:71 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(68),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).68),
                ),
                value: e70,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/library/sequence.rs:51:62: 51:71 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(core::context::Context<'_>) -> std::rc::Rc<core::context::Context<'_>> {std::rc::Rc::<core::context::Context<'_>>::new},
                fun: e69,
                args: [
                    e71,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:51:54: 51:72 (#0),
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/library/sequence.rs:51:54: 51:72 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(63),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).63),
                ),
                value: e72,
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/library/sequence.rs:51:54: 51:72 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e73,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/library/sequence.rs:51:53: 51:72 (#0),
        },
        Expr {
            kind: Deref {
                arg: e74,
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/library/sequence.rs:51:53: 51:72 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e75,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/library/sequence.rs:51:53: 51:72 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(62),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).62),
                ),
                value: e76,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/library/sequence.rs:51:53: 51:72 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b, 'c, 'd> fn(&'a dyn core::DataModel, &'b mut core::bit_array::BitArray, &'c std::rc::Rc<core::context::Context<'d>>) -> std::option::Option<std::boxed::Box<(dyn core::DataModel + 'static)>> {<dyn core::DataModel as core::Parser>::parse},
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/library/sequence.rs:51:40: 51:45 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b, 'c, 'd> fn(&'a dyn core::DataModel, &'b mut core::bit_array::BitArray, &'c std::rc::Rc<core::context::Context<'d>>) -> std::option::Option<std::boxed::Box<(dyn core::DataModel + 'static)>> {<dyn core::DataModel as core::Parser>::parse},
                fun: e78,
                args: [
                    e63,
                    e67,
                    e77,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:51:40: 51:73 (#0),
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/library/sequence.rs:51:38: 51:73 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(56),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).56),
                ),
                value: e79,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/library/sequence.rs:51:38: 51:73 (#0),
        },
        Expr {
            kind: Let {
                expr: e80,
                pat: Pat {
                    ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
                    span: src/library/sequence.rs:51:20: 51:35 (#0),
                    kind: Variant {
                        adt_def: std::option::Option,
                        substs: [
                            std::boxed::Box<dyn core::DataModel>,
                        ],
                        variant_index: 1,
                        subpatterns: [
                            FieldPat {
                                field: field[0],
                                pattern: Pat {
                                    ty: std::boxed::Box<dyn core::DataModel>,
                                    span: src/library/sequence.rs:51:25: 51:34 (#0),
                                    kind: Binding {
                                        mutability: Not,
                                        name: "new_child",
                                        mode: ByValue,
                                        var: LocalVarId(
                                            HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).54),
                                        ),
                                        ty: std::boxed::Box<dyn core::DataModel>,
                                        subpattern: None,
                                        is_primary: true,
                                    },
                                },
                            },
                        ],
                    },
                },
            },
            ty: bool,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/library/sequence.rs:51:16: 51:73 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(51),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).51),
                ),
                value: e81,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/library/sequence.rs:51:16: 51:73 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).14),
                ),
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(81),
            ),
            span: src/library/sequence.rs:52:17: 52:29 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e83,
            },
            ty: &mut core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(81),
            ),
            span: src/library/sequence.rs:52:17: 52:55 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(72),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).72),
                ),
                value: e84,
            },
            ty: &mut core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(81),
            ),
            span: src/library/sequence.rs:52:17: 52:29 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(2:2508 ~ core[102f]::convert::From::from),
                            UserSubsts {
                                substs: [
                                    std::rc::Rc<^0>,
                                    ^1,
                                ],
                                user_self_ty: None,
                            },
                        ),
                    },
                ),
            },
            ty: fn(std::boxed::Box<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::convert::From<std::boxed::Box<dyn core::DataModel>>>::from},
            temp_lifetime: Some(
                Node(81),
            ),
            span: src/library/sequence.rs:52:35: 52:43 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(75),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).75),
                ),
                value: e86,
            },
            ty: fn(std::boxed::Box<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::convert::From<std::boxed::Box<dyn core::DataModel>>>::from},
            temp_lifetime: Some(
                Node(81),
            ),
            span: src/library/sequence.rs:52:35: 52:43 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).54),
                ),
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(81),
            ),
            span: src/library/sequence.rs:52:44: 52:53 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(79),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).79),
                ),
                value: e88,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(81),
            ),
            span: src/library/sequence.rs:52:44: 52:53 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::boxed::Box<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::convert::From<std::boxed::Box<dyn core::DataModel>>>::from},
                fun: e87,
                args: [
                    e89,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:52:35: 52:54 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(81),
            ),
            span: src/library/sequence.rs:52:35: 52:54 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(74),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).74),
                ),
                value: e90,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(81),
            ),
            span: src/library/sequence.rs:52:35: 52:54 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut core::bolts::ChildMap, std::rc::Rc<(dyn core::DataModel + 'static)>) {core::bolts::ChildMap::push},
            temp_lifetime: Some(
                Node(81),
            ),
            span: src/library/sequence.rs:52:30: 52:34 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut core::bolts::ChildMap, std::rc::Rc<(dyn core::DataModel + 'static)>) {core::bolts::ChildMap::push},
                fun: e92,
                args: [
                    e85,
                    e91,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:52:30: 52:55 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(81),
            ),
            span: src/library/sequence.rs:52:17: 52:55 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(70),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).70),
                ),
                value: e93,
            },
            ty: (),
            temp_lifetime: Some(
                Node(81),
            ),
            span: src/library/sequence.rs:52:17: 52:55 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/library/sequence.rs:51:74: 53:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(83),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).83),
                ),
                value: e95,
            },
            ty: (),
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/library/sequence.rs:51:74: 53:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(83),
                lint_level: Inherited,
                value: e96,
            },
            ty: (),
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/library/sequence.rs:51:74: 53:14 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: std::option::Option,
                    variant_index: 0,
                    substs: [
                        std::boxed::Box<dyn core::DataModel>,
                    ],
                    user_ty: None,
                    fields: [],
                    base: None,
                },
            ),
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/library/sequence.rs:54:24: 54:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(86),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).86),
                ),
                value: e98,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/library/sequence.rs:54:24: 54:28 (#0),
        },
        Expr {
            kind: Return {
                value: Some(
                    e99,
                ),
            },
            ty: !,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/library/sequence.rs:54:17: 54:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(85),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).85),
                ),
                value: e100,
            },
            ty: !,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/library/sequence.rs:54:17: 54:28 (#0),
        },
        Expr {
            kind: Block {
                block: b1,
            },
            ty: !,
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/library/sequence.rs:53:20: 55:14 (#0),
        },
        Expr {
            kind: NeverToAny {
                source: e102,
            },
            ty: (),
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/library/sequence.rs:53:20: 55:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(84),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).84),
                ),
                value: e103,
            },
            ty: (),
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/library/sequence.rs:53:20: 55:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(84),
                lint_level: Inherited,
                value: e104,
            },
            ty: (),
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/library/sequence.rs:53:20: 55:14 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(83),
                cond: e82,
                then: e97,
                else_opt: Some(
                    e105,
                ),
            },
            ty: (),
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/library/sequence.rs:51:13: 55:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(50),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).50),
                ),
                value: e106,
            },
            ty: (),
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/library/sequence.rs:51:13: 55:14 (#0),
        },
        Expr {
            kind: Block {
                block: b2,
            },
            ty: (),
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/library/sequence.rs:49:39: 56:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(91),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).91),
                ),
                value: e108,
            },
            ty: (),
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/library/sequence.rs:49:39: 56:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(91),
                lint_level: Inherited,
                value: e109,
            },
            ty: (),
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/library/sequence.rs:49:39: 56:10 (#0),
        },
        Expr {
            kind: Match {
                scrutinee: e31,
                arms: [
                    a0,
                    a1,
                ],
            },
            ty: (),
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/sequence.rs:49:18: 49:38 (#128),
        },
        Expr {
            kind: Scope {
                region_scope: Node(99),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).99),
                ),
                value: e111,
            },
            ty: (),
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/sequence.rs:49:18: 49:38 (#128),
        },
        Expr {
            kind: Block {
                block: b3,
            },
            ty: (),
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/sequence.rs:49:9: 56:10 (#127),
        },
        Expr {
            kind: Loop {
                body: e113,
            },
            ty: (),
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/library/sequence.rs:49:9: 56:10 (#127),
        },
        Expr {
            kind: Scope {
                region_scope: Node(21),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).21),
                ),
                value: e114,
            },
            ty: (),
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/library/sequence.rs:49:9: 56:10 (#127),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(21),
                lint_level: Inherited,
                value: e115,
            },
            ty: (),
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/library/sequence.rs:49:9: 56:10 (#127),
        },
        Expr {
            kind: Match {
                scrutinee: e21,
                arms: [
                    a2,
                ],
            },
            ty: (),
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/library/sequence.rs:49:9: 56:10 (#127),
        },
        Expr {
            kind: Scope {
                region_scope: Node(105),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).105),
                ),
                value: e117,
            },
            ty: (),
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/library/sequence.rs:49:9: 56:10 (#127),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(105),
                lint_level: Inherited,
                value: e118,
            },
            ty: (),
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/library/sequence.rs:49:9: 56:10 (#127),
        },
        Expr {
            kind: Use {
                source: e119,
            },
            ty: (),
            temp_lifetime: Some(
                Node(107),
            ),
            span: src/library/sequence.rs:49:9: 56:10 (#127),
        },
        Expr {
            kind: Scope {
                region_scope: Node(106),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).106),
                ),
                value: e120,
            },
            ty: (),
            temp_lifetime: Some(
                Node(107),
            ),
            span: src/library/sequence.rs:49:9: 56:10 (#127),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:296 ~ alloc[42dc]::boxed::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:294 ~ alloc[42dc]::boxed::{impl#0}),
                                        self_ty: std::boxed::Box<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::sequence::Sequence) -> std::boxed::Box<library::sequence::Sequence> {std::boxed::Box::<library::sequence::Sequence>::new},
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/sequence.rs:57:14: 57:22 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(112),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).112),
                ),
                value: e122,
            },
            ty: fn(library::sequence::Sequence) -> std::boxed::Box<library::sequence::Sequence> {std::boxed::Box::<library::sequence::Sequence>::new},
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/sequence.rs:57:14: 57:22 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).2),
                ),
            },
            ty: &library::sequence::Sequence,
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/sequence.rs:58:19: 58:23 (#0),
        },
        Expr {
            kind: Deref {
                arg: e124,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/sequence.rs:58:19: 58:23 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(122),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).122),
                ),
                value: e125,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/sequence.rs:58:19: 58:23 (#0),
        },
        Expr {
            kind: Field {
                lhs: e126,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/sequence.rs:58:19: 58:28 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e127,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/sequence.rs:58:19: 58:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(121),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).121),
                ),
                value: e128,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/sequence.rs:58:19: 58:28 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> std::rc::Rc<core::DataModelBase> {<std::rc::Rc<core::DataModelBase> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/sequence.rs:58:29: 58:34 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> std::rc::Rc<core::DataModelBase> {<std::rc::Rc<core::DataModelBase> as std::clone::Clone>::clone},
                fun: e130,
                args: [
                    e129,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:58:29: 58:36 (#0),
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/sequence.rs:58:19: 58:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(119),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).119),
                ),
                value: e131,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/sequence.rs:58:19: 58:36 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).14),
                ),
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/sequence.rs:59:23: 59:35 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(125),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).125),
                ),
                value: e133,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/sequence.rs:59:23: 59:35 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: library::sequence::Sequence,
                    variant_index: 0,
                    substs: [],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e132,
                        },
                        FieldExpr {
                            name: field[1],
                            expr: e134,
                        },
                    ],
                    base: None,
                },
            ),
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/sequence.rs:57:23: 60:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(116),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).116),
                ),
                value: e135,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/sequence.rs:57:23: 60:10 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::sequence::Sequence) -> std::boxed::Box<library::sequence::Sequence> {std::boxed::Box::<library::sequence::Sequence>::new},
                fun: e123,
                args: [
                    e136,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:57:14: 60:11 (#0),
            },
            ty: std::boxed::Box<library::sequence::Sequence>,
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/sequence.rs:57:14: 60:11 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e137,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/sequence.rs:57:14: 60:11 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(111),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).111),
                ),
                value: e138,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/sequence.rs:57:14: 60:11 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: std::option::Option,
                    variant_index: 1,
                    substs: [
                        std::boxed::Box<dyn core::DataModel>,
                    ],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e139,
                        },
                    ],
                    base: None,
                },
            ),
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/sequence.rs:57:9: 60:12 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(108),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).108),
                ),
                value: e140,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/sequence.rs:57:9: 60:12 (#0),
        },
        Expr {
            kind: Block {
                block: b4,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/sequence.rs:47:92: 61:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(128),
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).128),
                ),
                value: e142,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/sequence.rs:47:92: 61:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(128),
                lint_level: Inherited,
                value: e143,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/sequence.rs:47:92: 61:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 127, first_statement_index: 0},
                init_scope: Node(7),
                pattern: Pat {
                    ty: core::bolts::ChildMap,
                    span: src/library/sequence.rs:48:13: 48:29 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "new_children",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).14),
                        ),
                        ty: core::bolts::ChildMap,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e8,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).13),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(7),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 90, first_statement_index: 0},
                init_scope: Node(27),
                pattern: Pat {
                    ty: core::context::Context<'_>,
                    span: src/library/sequence.rs:50:17: 50:26 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "child_ctx",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).49),
                        ),
                        ty: core::context::Context<'_>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e55,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).48),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(27),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(81),
                expr: e94,
            },
            opt_destruction_scope: Some(
                Destruction(81),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(88),
                expr: e101,
            },
            opt_destruction_scope: Some(
                Destruction(88),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(100),
                expr: e112,
            },
            opt_destruction_scope: Some(
                Destruction(100),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(107),
                expr: e121,
            },
            opt_destruction_scope: Some(
                Destruction(107),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::sequence::Sequence,
                    span: src/library/sequence.rs:47:14: 47:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).2),
                        ),
                        ty: &library::sequence::Sequence,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::sequence::Sequence,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &mut core::bit_array::BitArray,
                    span: src/library/sequence.rs:47:21: 47:26 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "input",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).4),
                        ),
                        ty: &mut core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut core::bit_array::BitArray,
            ty_span: Some(
                src/library/sequence.rs:47:28: 47:41 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).3),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &std::rc::Rc<core::context::Context<'_>>,
                    span: src/library/sequence.rs:47:43: 47:46 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "ctx",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).6),
                        ),
                        ty: &std::rc::Rc<core::context::Context<'_>>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &std::rc::Rc<core::context::Context<'_>>,
            ty_span: Some(
                src/library/sequence.rs:47:48: 47:60 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:202 ~ andrew_fuzz[741f]::library::sequence::{impl#5}::parse).5),
            ),
        },
    ],
}

DefId(0:204 ~ andrew_fuzz[741f]::library::sequence::{impl#6}::debug):
Thir {
    body_type: Fn(
        ([&library::sequence::Sequence]; c_variadic: false)->std::string::String,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(6),
            opt_destruction_scope: None,
            span: src/library/sequence.rs:65:31: 67:6 (#0),
            stmts: [],
            expr: Some(
                e6,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "",
                        Cooked,
                    ),
                    span: src/library/sequence.rs:66:9: 66:11 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/sequence.rs:66:9: 66:11 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: str,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/sequence.rs:66:9: 66:23 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e1,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/sequence.rs:66:9: 66:23 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:204 ~ andrew_fuzz[741f]::library::sequence::{impl#6}::debug).5),
                ),
                value: e2,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/sequence.rs:66:9: 66:11 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/sequence.rs:66:12: 66:21 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
                fun: e4,
                args: [
                    e3,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:66:12: 66:23 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/sequence.rs:66:9: 66:23 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:204 ~ andrew_fuzz[741f]::library::sequence::{impl#6}::debug).3),
                ),
                value: e5,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/sequence.rs:66:9: 66:23 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/sequence.rs:65:31: 67:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:204 ~ andrew_fuzz[741f]::library::sequence::{impl#6}::debug).7),
                ),
                value: e7,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/sequence.rs:65:31: 67:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(7),
                lint_level: Inherited,
                value: e8,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/sequence.rs:65:31: 67:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::sequence::Sequence,
                    span: src/library/sequence.rs:65:14: 65:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:204 ~ andrew_fuzz[741f]::library::sequence::{impl#6}::debug).2),
                        ),
                        ty: &library::sequence::Sequence,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::sequence::Sequence,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:204 ~ andrew_fuzz[741f]::library::sequence::{impl#6}::debug).1),
            ),
        },
    ],
}

DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz):
Thir {
    body_type: Fn(
        ([&library::sequence::Sequence]; c_variadic: false)->std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
    ),
    arms: [
        Arm {
            pattern: Pat {
                ty: std::option::Option<&std::rc::Rc<dyn core::DataModel>>,
                span: src/library/sequence.rs:73:9: 82:10 (#130),
                kind: Variant {
                    adt_def: std::option::Option,
                    substs: [
                        &std::rc::Rc<dyn core::DataModel>,
                    ],
                    variant_index: 0,
                    subpatterns: [],
                },
            },
            guard: None,
            body: e30,
            lint_level: Explicit(
                HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).28),
            ),
            scope: Node(28),
            span: src/library/sequence.rs:73:9: 82:10 (#130),
        },
        Arm {
            pattern: Pat {
                ty: std::option::Option<std::rc::Rc<dyn core::DataModel>>,
                span: src/library/sequence.rs:74:13: 81:14 (#133),
                kind: Variant {
                    adt_def: std::option::Option,
                    substs: [
                        std::rc::Rc<dyn core::DataModel>,
                    ],
                    variant_index: 0,
                    subpatterns: [],
                },
            },
            guard: None,
            body: e59,
            lint_level: Explicit(
                HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).39),
            ),
            scope: Node(39),
            span: src/library/sequence.rs:74:13: 81:14 (#133),
        },
        Arm {
            pattern: Pat {
                ty: std::option::Option<std::rc::Rc<dyn core::DataModel>>,
                span: src/library/sequence.rs:74:17: 74:30 (#135),
                kind: Variant {
                    adt_def: std::option::Option,
                    substs: [
                        std::rc::Rc<dyn core::DataModel>,
                    ],
                    variant_index: 1,
                    subpatterns: [
                        FieldPat {
                            field: field[0],
                            pattern: Pat {
                                ty: std::rc::Rc<dyn core::DataModel>,
                                span: src/library/sequence.rs:74:17: 74:30 (#0),
                                kind: Binding {
                                    mutability: Not,
                                    name: "mutated_child",
                                    mode: ByValue,
                                    var: LocalVarId(
                                        HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).35),
                                    ),
                                    ty: std::rc::Rc<dyn core::DataModel>,
                                    subpattern: None,
                                    is_primary: true,
                                },
                            },
                        },
                    ],
                },
            },
            guard: None,
            body: e107,
            lint_level: Explicit(
                HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).85),
            ),
            scope: Node(85),
            span: src/library/sequence.rs:74:43: 81:14 (#0),
        },
        Arm {
            pattern: Pat {
                ty: std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>,
                span: src/library/sequence.rs:74:34: 74:42 (#134),
                kind: Binding {
                    mutability: Mut,
                    name: "iter",
                    mode: ByValue,
                    var: LocalVarId(
                        HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).86),
                    ),
                    ty: std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>,
                    subpattern: None,
                    is_primary: true,
                },
            },
            guard: None,
            body: e113,
            lint_level: Explicit(
                HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).95),
            ),
            scope: Node(95),
            span: src/library/sequence.rs:74:13: 81:14 (#133),
        },
        Arm {
            pattern: Pat {
                ty: std::option::Option<&std::rc::Rc<dyn core::DataModel>>,
                span: src/library/sequence.rs:73:13: 73:14 (#132),
                kind: Variant {
                    adt_def: std::option::Option,
                    substs: [
                        &std::rc::Rc<dyn core::DataModel>,
                    ],
                    variant_index: 1,
                    subpatterns: [
                        FieldPat {
                            field: field[0],
                            pattern: Pat {
                                ty: &std::rc::Rc<dyn core::DataModel>,
                                span: src/library/sequence.rs:73:13: 73:14 (#0),
                                kind: Binding {
                                    mutability: Not,
                                    name: "c",
                                    mode: ByValue,
                                    var: LocalVarId(
                                        HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).24),
                                    ),
                                    ty: &std::rc::Rc<dyn core::DataModel>,
                                    subpattern: None,
                                    is_primary: true,
                                },
                            },
                        },
                    ],
                },
            },
            guard: None,
            body: e121,
            lint_level: Explicit(
                HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).102),
            ),
            scope: Node(102),
            span: src/library/sequence.rs:73:39: 82:10 (#0),
        },
        Arm {
            pattern: Pat {
                ty: std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
                span: src/library/sequence.rs:73:18: 73:38 (#131),
                kind: Binding {
                    mutability: Mut,
                    name: "iter",
                    mode: ByValue,
                    var: LocalVarId(
                        HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).103),
                    ),
                    ty: std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
                    subpattern: None,
                    is_primary: true,
                },
            },
            guard: None,
            body: e127,
            lint_level: Explicit(
                HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).112),
            ),
            scope: Node(112),
            span: src/library/sequence.rs:73:9: 82:10 (#130),
        },
    ],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(83),
            opt_destruction_scope: None,
            span: src/library/sequence.rs:74:43: 81:14 (#0),
            stmts: [
                s1,
                s2,
                s3,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(94),
            opt_destruction_scope: Some(
                Destruction(94),
            ),
            span: src/library/sequence.rs:74:13: 81:14 (#133),
            stmts: [
                s4,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(100),
            opt_destruction_scope: None,
            span: src/library/sequence.rs:73:39: 82:10 (#0),
            stmts: [],
            expr: Some(
                e118,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(111),
            opt_destruction_scope: Some(
                Destruction(111),
            ),
            span: src/library/sequence.rs:73:9: 82:10 (#130),
            stmts: [
                s5,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(120),
            opt_destruction_scope: None,
            span: src/library/sequence.rs:71:46: 84:6 (#0),
            stmts: [
                s0,
                s6,
            ],
            expr: Some(
                e134,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:6607 ~ alloc[42dc]::vec::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:6605 ~ alloc[42dc]::vec::{impl#0}),
                                        self_ty: std::vec::Vec<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/sequence.rs:72:50: 72:58 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).13),
                ),
                value: e0,
            },
            ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/sequence.rs:72:50: 72:58 (#0),
        },
        Expr {
            kind: Call {
                ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
                fun: e1,
                args: [],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:72:50: 72:60 (#0),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/sequence.rs:72:50: 72:60 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(12),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).12),
                ),
                value: e2,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/sequence.rs:72:50: 72:60 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(&std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> <&std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::IntoIter {<&std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::into_iter},
            temp_lifetime: Some(
                Node(115),
            ),
            span: src/library/sequence.rs:73:18: 73:38 (#131),
        },
        Expr {
            kind: Scope {
                region_scope: Node(113),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).113),
                ),
                value: e4,
            },
            ty: fn(&std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> <&std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::IntoIter {<&std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::into_iter},
            temp_lifetime: Some(
                Node(115),
            ),
            span: src/library/sequence.rs:73:18: 73:38 (#131),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).2),
                ),
            },
            ty: &library::sequence::Sequence,
            temp_lifetime: Some(
                Node(115),
            ),
            span: src/library/sequence.rs:73:18: 73:22 (#0),
        },
        Expr {
            kind: Deref {
                arg: e6,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(115),
            ),
            span: src/library/sequence.rs:73:18: 73:22 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(22),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).22),
                ),
                value: e7,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(115),
            ),
            span: src/library/sequence.rs:73:18: 73:22 (#0),
        },
        Expr {
            kind: Field {
                lhs: e8,
                variant_index: 0,
                name: field[1],
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(115),
            ),
            span: src/library/sequence.rs:73:18: 73:31 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e9,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(115),
            ),
            span: src/library/sequence.rs:73:18: 73:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(21),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).21),
                ),
                value: e10,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(115),
            ),
            span: src/library/sequence.rs:73:18: 73:31 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bolts::ChildMap) -> &'a std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>> {core::bolts::ChildMap::vals},
            temp_lifetime: Some(
                Node(115),
            ),
            span: src/library/sequence.rs:73:32: 73:36 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bolts::ChildMap) -> &'a std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>> {core::bolts::ChildMap::vals},
                fun: e12,
                args: [
                    e11,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:73:32: 73:38 (#0),
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(115),
            ),
            span: src/library/sequence.rs:73:18: 73:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).19),
                ),
                value: e13,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(115),
            ),
            span: src/library/sequence.rs:73:18: 73:38 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(&std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> <&std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::IntoIter {<&std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::into_iter},
                fun: e5,
                args: [
                    e14,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:73:18: 73:38 (#131),
            },
            ty: std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(115),
            ),
            span: src/library/sequence.rs:73:18: 73:38 (#131),
        },
        Expr {
            kind: Scope {
                region_scope: Node(114),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).114),
                ),
                value: e15,
            },
            ty: std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(115),
            ),
            span: src/library/sequence.rs:73:18: 73:38 (#131),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>) -> std::option::Option<<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::Item> {<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::next},
            temp_lifetime: Some(
                Node(110),
            ),
            span: src/library/sequence.rs:73:18: 73:38 (#131),
        },
        Expr {
            kind: Scope {
                region_scope: Node(107),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).107),
                ),
                value: e17,
            },
            ty: for<'a> fn(&'a mut std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>) -> std::option::Option<<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::Item> {<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::next},
            temp_lifetime: Some(
                Node(110),
            ),
            span: src/library/sequence.rs:73:18: 73:38 (#131),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).103),
                ),
            },
            ty: std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(110),
            ),
            span: src/library/sequence.rs:73:18: 73:38 (#131),
        },
        Expr {
            kind: Scope {
                region_scope: Node(105),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).105),
                ),
                value: e19,
            },
            ty: std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(110),
            ),
            span: src/library/sequence.rs:73:18: 73:38 (#131),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: false,
                },
                arg: e20,
            },
            ty: &mut std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(110),
            ),
            span: src/library/sequence.rs:73:18: 73:38 (#131),
        },
        Expr {
            kind: Deref {
                arg: e21,
            },
            ty: std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(110),
            ),
            span: src/library/sequence.rs:73:18: 73:38 (#131),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e22,
            },
            ty: &mut std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(110),
            ),
            span: src/library/sequence.rs:73:18: 73:38 (#131),
        },
        Expr {
            kind: Scope {
                region_scope: Node(106),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).106),
                ),
                value: e23,
            },
            ty: &mut std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(110),
            ),
            span: src/library/sequence.rs:73:18: 73:38 (#131),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>) -> std::option::Option<<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::Item> {<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::next},
                fun: e18,
                args: [
                    e24,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:73:18: 73:38 (#131),
            },
            ty: std::option::Option<&std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(110),
            ),
            span: src/library/sequence.rs:73:18: 73:38 (#131),
        },
        Expr {
            kind: Scope {
                region_scope: Node(108),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).108),
                ),
                value: e25,
            },
            ty: std::option::Option<&std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(110),
            ),
            span: src/library/sequence.rs:73:18: 73:38 (#131),
        },
        Expr {
            kind: Break {
                label: Node(25),
                value: None,
            },
            ty: !,
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/library/sequence.rs:73:9: 82:10 (#130),
        },
        Expr {
            kind: NeverToAny {
                source: e27,
            },
            ty: (),
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/library/sequence.rs:73:9: 82:10 (#130),
        },
        Expr {
            kind: Scope {
                region_scope: Node(26),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).26),
                ),
                value: e28,
            },
            ty: (),
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/library/sequence.rs:73:9: 82:10 (#130),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(26),
                lint_level: Inherited,
                value: e29,
            },
            ty: (),
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/library/sequence.rs:73:9: 82:10 (#130),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> <std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::IntoIter {<std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::into_iter},
            temp_lifetime: Some(
                Node(98),
            ),
            span: src/library/sequence.rs:74:34: 74:42 (#134),
        },
        Expr {
            kind: Scope {
                region_scope: Node(96),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).96),
                ),
                value: e31,
            },
            ty: fn(std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> <std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::IntoIter {<std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::into_iter},
            temp_lifetime: Some(
                Node(98),
            ),
            span: src/library/sequence.rs:74:34: 74:42 (#134),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).24),
                ),
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(98),
            ),
            span: src/library/sequence.rs:74:34: 74:35 (#0),
        },
        Expr {
            kind: Deref {
                arg: e33,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(98),
            ),
            span: src/library/sequence.rs:74:34: 74:42 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e34,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(98),
            ),
            span: src/library/sequence.rs:74:34: 74:42 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(98),
            ),
            span: src/library/sequence.rs:74:34: 74:42 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
                fun: e36,
                args: [
                    e35,
                ],
                from_hir_call: false,
                fn_span: src/library/sequence.rs:74:34: 74:42 (#0),
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(98),
            ),
            span: src/library/sequence.rs:74:34: 74:42 (#0),
        },
        Expr {
            kind: Deref {
                arg: e37,
            },
            ty: dyn core::DataModel,
            temp_lifetime: Some(
                Node(98),
            ),
            span: src/library/sequence.rs:74:34: 74:42 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e38,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(98),
            ),
            span: src/library/sequence.rs:74:34: 74:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(33),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).33),
                ),
                value: e39,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(98),
            ),
            span: src/library/sequence.rs:74:34: 74:35 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a dyn core::DataModel) -> std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>> {<dyn core::DataModel as core::Fuzzer>::fuzz},
            temp_lifetime: Some(
                Node(98),
            ),
            span: src/library/sequence.rs:74:36: 74:40 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a dyn core::DataModel) -> std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>> {<dyn core::DataModel as core::Fuzzer>::fuzz},
                fun: e41,
                args: [
                    e40,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:74:36: 74:42 (#0),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(98),
            ),
            span: src/library/sequence.rs:74:34: 74:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(31),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).31),
                ),
                value: e42,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(98),
            ),
            span: src/library/sequence.rs:74:34: 74:42 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> <std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::IntoIter {<std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::into_iter},
                fun: e32,
                args: [
                    e43,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:74:34: 74:42 (#134),
            },
            ty: std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(98),
            ),
            span: src/library/sequence.rs:74:34: 74:42 (#134),
        },
        Expr {
            kind: Scope {
                region_scope: Node(97),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).97),
                ),
                value: e44,
            },
            ty: std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(98),
            ),
            span: src/library/sequence.rs:74:34: 74:42 (#134),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>) -> std::option::Option<<std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::Item> {<std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::next},
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/library/sequence.rs:74:34: 74:42 (#134),
        },
        Expr {
            kind: Scope {
                region_scope: Node(90),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).90),
                ),
                value: e46,
            },
            ty: for<'a> fn(&'a mut std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>) -> std::option::Option<<std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::Item> {<std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::next},
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/library/sequence.rs:74:34: 74:42 (#134),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).86),
                ),
            },
            ty: std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/library/sequence.rs:74:34: 74:42 (#134),
        },
        Expr {
            kind: Scope {
                region_scope: Node(88),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).88),
                ),
                value: e48,
            },
            ty: std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/library/sequence.rs:74:34: 74:42 (#134),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: false,
                },
                arg: e49,
            },
            ty: &mut std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/library/sequence.rs:74:34: 74:42 (#134),
        },
        Expr {
            kind: Deref {
                arg: e50,
            },
            ty: std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/library/sequence.rs:74:34: 74:42 (#134),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e51,
            },
            ty: &mut std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/library/sequence.rs:74:34: 74:42 (#134),
        },
        Expr {
            kind: Scope {
                region_scope: Node(89),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).89),
                ),
                value: e52,
            },
            ty: &mut std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/library/sequence.rs:74:34: 74:42 (#134),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>) -> std::option::Option<<std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::Item> {<std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::next},
                fun: e47,
                args: [
                    e53,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:74:34: 74:42 (#134),
            },
            ty: std::option::Option<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/library/sequence.rs:74:34: 74:42 (#134),
        },
        Expr {
            kind: Scope {
                region_scope: Node(91),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).91),
                ),
                value: e54,
            },
            ty: std::option::Option<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/library/sequence.rs:74:34: 74:42 (#134),
        },
        Expr {
            kind: Break {
                label: Node(36),
                value: None,
            },
            ty: !,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/library/sequence.rs:74:13: 81:14 (#133),
        },
        Expr {
            kind: NeverToAny {
                source: e56,
            },
            ty: (),
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/library/sequence.rs:74:13: 81:14 (#133),
        },
        Expr {
            kind: Scope {
                region_scope: Node(37),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).37),
                ),
                value: e57,
            },
            ty: (),
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/library/sequence.rs:74:13: 81:14 (#133),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(37),
                lint_level: Inherited,
                value: e58,
            },
            ty: (),
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/library/sequence.rs:74:13: 81:14 (#133),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).2),
                ),
            },
            ty: &library::sequence::Sequence,
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/library/sequence.rs:75:44: 75:48 (#0),
        },
        Expr {
            kind: Deref {
                arg: e60,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/library/sequence.rs:75:44: 75:48 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(46),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).46),
                ),
                value: e61,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/library/sequence.rs:75:44: 75:48 (#0),
        },
        Expr {
            kind: Field {
                lhs: e62,
                variant_index: 0,
                name: field[1],
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/library/sequence.rs:75:44: 75:57 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e63,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/library/sequence.rs:75:44: 75:65 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(45),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).45),
                ),
                value: e64,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/library/sequence.rs:75:44: 75:57 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bolts::ChildMap) -> core::bolts::ChildMap {core::bolts::ChildMap::clone},
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/library/sequence.rs:75:58: 75:63 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bolts::ChildMap) -> core::bolts::ChildMap {core::bolts::ChildMap::clone},
                fun: e66,
                args: [
                    e65,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:75:58: 75:65 (#0),
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/library/sequence.rs:75:44: 75:65 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(43),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).43),
                ),
                value: e67,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/library/sequence.rs:75:44: 75:65 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).49),
                ),
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(61),
            ),
            span: src/library/sequence.rs:76:17: 76:33 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e69,
            },
            ty: &mut core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(61),
            ),
            span: src/library/sequence.rs:76:17: 76:63 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(52),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).52),
                ),
                value: e70,
            },
            ty: &mut core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(61),
            ),
            span: src/library/sequence.rs:76:17: 76:33 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(2:2508 ~ core[102f]::convert::From::from),
                            UserSubsts {
                                substs: [
                                    std::rc::Rc<^0>,
                                    ^1,
                                ],
                                user_self_ty: None,
                            },
                        ),
                    },
                ),
            },
            ty: fn(std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::convert::From<std::rc::Rc<dyn core::DataModel>>>::from},
            temp_lifetime: Some(
                Node(61),
            ),
            span: src/library/sequence.rs:76:39: 76:47 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(55),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).55),
                ),
                value: e72,
            },
            ty: fn(std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::convert::From<std::rc::Rc<dyn core::DataModel>>>::from},
            temp_lifetime: Some(
                Node(61),
            ),
            span: src/library/sequence.rs:76:39: 76:47 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).35),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(61),
            ),
            span: src/library/sequence.rs:76:48: 76:61 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(59),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).59),
                ),
                value: e74,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(61),
            ),
            span: src/library/sequence.rs:76:48: 76:61 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::convert::From<std::rc::Rc<dyn core::DataModel>>>::from},
                fun: e73,
                args: [
                    e75,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:76:39: 76:62 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(61),
            ),
            span: src/library/sequence.rs:76:39: 76:62 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(54),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).54),
                ),
                value: e76,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(61),
            ),
            span: src/library/sequence.rs:76:39: 76:62 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut core::bolts::ChildMap, std::rc::Rc<(dyn core::DataModel + 'static)>) {core::bolts::ChildMap::push},
            temp_lifetime: Some(
                Node(61),
            ),
            span: src/library/sequence.rs:76:34: 76:38 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut core::bolts::ChildMap, std::rc::Rc<(dyn core::DataModel + 'static)>) {core::bolts::ChildMap::push},
                fun: e78,
                args: [
                    e71,
                    e77,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:76:34: 76:63 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(61),
            ),
            span: src/library/sequence.rs:76:17: 76:63 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(50),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).50),
                ),
                value: e79,
            },
            ty: (),
            temp_lifetime: Some(
                Node(61),
            ),
            span: src/library/sequence.rs:76:17: 76:63 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).18),
                ),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/library/sequence.rs:77:17: 77:23 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e81,
            },
            ty: &mut std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/library/sequence.rs:77:17: 80:20 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(64),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).64),
                ),
                value: e82,
            },
            ty: &mut std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/library/sequence.rs:77:17: 77:23 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::sequence::Sequence) -> std::rc::Rc<library::sequence::Sequence> {std::rc::Rc::<library::sequence::Sequence>::new},
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/library/sequence.rs:77:29: 77:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(67),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).67),
                ),
                value: e84,
            },
            ty: fn(library::sequence::Sequence) -> std::rc::Rc<library::sequence::Sequence> {std::rc::Rc::<library::sequence::Sequence>::new},
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/library/sequence.rs:77:29: 77:36 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).2),
                ),
            },
            ty: &library::sequence::Sequence,
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/library/sequence.rs:78:27: 78:31 (#0),
        },
        Expr {
            kind: Deref {
                arg: e86,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/library/sequence.rs:78:27: 78:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(77),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).77),
                ),
                value: e87,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/library/sequence.rs:78:27: 78:31 (#0),
        },
        Expr {
            kind: Field {
                lhs: e88,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/library/sequence.rs:78:27: 78:36 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e89,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/library/sequence.rs:78:27: 78:44 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(76),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).76),
                ),
                value: e90,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/library/sequence.rs:78:27: 78:36 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> std::rc::Rc<core::DataModelBase> {<std::rc::Rc<core::DataModelBase> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/library/sequence.rs:78:37: 78:42 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> std::rc::Rc<core::DataModelBase> {<std::rc::Rc<core::DataModelBase> as std::clone::Clone>::clone},
                fun: e92,
                args: [
                    e91,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:78:37: 78:44 (#0),
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/library/sequence.rs:78:27: 78:44 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(74),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).74),
                ),
                value: e93,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/library/sequence.rs:78:27: 78:44 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).49),
                ),
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/library/sequence.rs:79:31: 79:47 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(80),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).80),
                ),
                value: e95,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/library/sequence.rs:79:31: 79:47 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: library::sequence::Sequence,
                    variant_index: 0,
                    substs: [],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e94,
                        },
                        FieldExpr {
                            name: field[1],
                            expr: e96,
                        },
                    ],
                    base: None,
                },
            ),
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/library/sequence.rs:77:37: 80:18 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(71),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).71),
                ),
                value: e97,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/library/sequence.rs:77:37: 80:18 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::sequence::Sequence) -> std::rc::Rc<library::sequence::Sequence> {std::rc::Rc::<library::sequence::Sequence>::new},
                fun: e85,
                args: [
                    e98,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:77:29: 80:19 (#0),
            },
            ty: std::rc::Rc<library::sequence::Sequence>,
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/library/sequence.rs:77:29: 80:19 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e99,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/library/sequence.rs:77:29: 80:19 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(66),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).66),
                ),
                value: e100,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/library/sequence.rs:77:29: 80:19 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::vec::Vec<std::rc::Rc<dyn core::DataModel>>, std::rc::Rc<dyn core::DataModel>) {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::push},
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/library/sequence.rs:77:24: 77:28 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::vec::Vec<std::rc::Rc<dyn core::DataModel>>, std::rc::Rc<dyn core::DataModel>) {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::push},
                fun: e102,
                args: [
                    e83,
                    e101,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:77:24: 80:20 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/library/sequence.rs:77:17: 80:20 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(62),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).62),
                ),
                value: e103,
            },
            ty: (),
            temp_lifetime: Some(
                Node(82),
            ),
            span: src/library/sequence.rs:77:17: 80:20 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/library/sequence.rs:74:43: 81:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(84),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).84),
                ),
                value: e105,
            },
            ty: (),
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/library/sequence.rs:74:43: 81:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(84),
                lint_level: Inherited,
                value: e106,
            },
            ty: (),
            temp_lifetime: Some(
                Node(84),
            ),
            span: src/library/sequence.rs:74:43: 81:14 (#0),
        },
        Expr {
            kind: Match {
                scrutinee: e55,
                arms: [
                    a1,
                    a2,
                ],
            },
            ty: (),
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/library/sequence.rs:74:34: 74:42 (#134),
        },
        Expr {
            kind: Scope {
                region_scope: Node(92),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).92),
                ),
                value: e108,
            },
            ty: (),
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/library/sequence.rs:74:34: 74:42 (#134),
        },
        Expr {
            kind: Block {
                block: b1,
            },
            ty: (),
            temp_lifetime: Some(
                Node(94),
            ),
            span: src/library/sequence.rs:74:13: 81:14 (#133),
        },
        Expr {
            kind: Loop {
                body: e110,
            },
            ty: (),
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/library/sequence.rs:74:13: 81:14 (#133),
        },
        Expr {
            kind: Scope {
                region_scope: Node(36),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).36),
                ),
                value: e111,
            },
            ty: (),
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/library/sequence.rs:74:13: 81:14 (#133),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(36),
                lint_level: Inherited,
                value: e112,
            },
            ty: (),
            temp_lifetime: Some(
                Node(36),
            ),
            span: src/library/sequence.rs:74:13: 81:14 (#133),
        },
        Expr {
            kind: Match {
                scrutinee: e45,
                arms: [
                    a3,
                ],
            },
            ty: (),
            temp_lifetime: Some(
                Node(98),
            ),
            span: src/library/sequence.rs:74:13: 81:14 (#133),
        },
        Expr {
            kind: Scope {
                region_scope: Node(98),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).98),
                ),
                value: e114,
            },
            ty: (),
            temp_lifetime: Some(
                Node(98),
            ),
            span: src/library/sequence.rs:74:13: 81:14 (#133),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(98),
                lint_level: Inherited,
                value: e115,
            },
            ty: (),
            temp_lifetime: Some(
                Node(98),
            ),
            span: src/library/sequence.rs:74:13: 81:14 (#133),
        },
        Expr {
            kind: Use {
                source: e116,
            },
            ty: (),
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/sequence.rs:74:13: 81:14 (#133),
        },
        Expr {
            kind: Scope {
                region_scope: Node(99),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).99),
                ),
                value: e117,
            },
            ty: (),
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/sequence.rs:74:13: 81:14 (#133),
        },
        Expr {
            kind: Block {
                block: b2,
            },
            ty: (),
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/sequence.rs:73:39: 82:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(101),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).101),
                ),
                value: e119,
            },
            ty: (),
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/sequence.rs:73:39: 82:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(101),
                lint_level: Inherited,
                value: e120,
            },
            ty: (),
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/sequence.rs:73:39: 82:10 (#0),
        },
        Expr {
            kind: Match {
                scrutinee: e26,
                arms: [
                    a0,
                    a4,
                ],
            },
            ty: (),
            temp_lifetime: Some(
                Node(110),
            ),
            span: src/library/sequence.rs:73:18: 73:38 (#131),
        },
        Expr {
            kind: Scope {
                region_scope: Node(109),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).109),
                ),
                value: e122,
            },
            ty: (),
            temp_lifetime: Some(
                Node(110),
            ),
            span: src/library/sequence.rs:73:18: 73:38 (#131),
        },
        Expr {
            kind: Block {
                block: b3,
            },
            ty: (),
            temp_lifetime: Some(
                Node(111),
            ),
            span: src/library/sequence.rs:73:9: 82:10 (#130),
        },
        Expr {
            kind: Loop {
                body: e124,
            },
            ty: (),
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/sequence.rs:73:9: 82:10 (#130),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).25),
                ),
                value: e125,
            },
            ty: (),
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/sequence.rs:73:9: 82:10 (#130),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(25),
                lint_level: Inherited,
                value: e126,
            },
            ty: (),
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/sequence.rs:73:9: 82:10 (#130),
        },
        Expr {
            kind: Match {
                scrutinee: e16,
                arms: [
                    a5,
                ],
            },
            ty: (),
            temp_lifetime: Some(
                Node(115),
            ),
            span: src/library/sequence.rs:73:9: 82:10 (#130),
        },
        Expr {
            kind: Scope {
                region_scope: Node(115),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).115),
                ),
                value: e128,
            },
            ty: (),
            temp_lifetime: Some(
                Node(115),
            ),
            span: src/library/sequence.rs:73:9: 82:10 (#130),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(115),
                lint_level: Inherited,
                value: e129,
            },
            ty: (),
            temp_lifetime: Some(
                Node(115),
            ),
            span: src/library/sequence.rs:73:9: 82:10 (#130),
        },
        Expr {
            kind: Use {
                source: e130,
            },
            ty: (),
            temp_lifetime: Some(
                Node(117),
            ),
            span: src/library/sequence.rs:73:9: 82:10 (#130),
        },
        Expr {
            kind: Scope {
                region_scope: Node(116),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).116),
                ),
                value: e131,
            },
            ty: (),
            temp_lifetime: Some(
                Node(117),
            ),
            span: src/library/sequence.rs:73:9: 82:10 (#130),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).18),
                ),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(121),
            ),
            span: src/library/sequence.rs:83:9: 83:15 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(118),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).118),
                ),
                value: e133,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(121),
            ),
            span: src/library/sequence.rs:83:9: 83:15 (#0),
        },
        Expr {
            kind: Block {
                block: b4,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(121),
            ),
            span: src/library/sequence.rs:71:46: 84:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(121),
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).121),
                ),
                value: e135,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(121),
            ),
            span: src/library/sequence.rs:71:46: 84:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(121),
                lint_level: Inherited,
                value: e136,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(121),
            ),
            span: src/library/sequence.rs:71:46: 84:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 120, first_statement_index: 0},
                init_scope: Node(3),
                pattern: Pat {
                    ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
                    span: src/library/sequence.rs:72:13: 72:23 (#0),
                    kind: AscribeUserType {
                        ascription: Ascription {
                            annotation: CanonicalUserTypeAnnotation {
                                user_ty: Canonical {
                                    max_universe: U0,
                                    variables: [
                                        CanonicalVarInfo {
                                            kind: Region(
                                                U0,
                                            ),
                                        },
                                    ],
                                    value: Ty(
                                        std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
                                    ),
                                },
                                span: src/library/sequence.rs:72:25: 72:47 (#0),
                                inferred_ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
                            },
                            variance: +,
                        },
                        subpattern: Pat {
                            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
                            span: src/library/sequence.rs:72:13: 72:23 (#0),
                            kind: Binding {
                                mutability: Mut,
                                name: "result",
                                mode: ByValue,
                                var: LocalVarId(
                                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).18),
                                ),
                                ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
                                subpattern: None,
                                is_primary: true,
                            },
                        },
                    },
                },
                initializer: Some(
                    e3,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).17),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(3),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 83, first_statement_index: 0},
                init_scope: Node(42),
                pattern: Pat {
                    ty: core::bolts::ChildMap,
                    span: src/library/sequence.rs:75:21: 75:41 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "mutated_children",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).49),
                        ),
                        ty: core::bolts::ChildMap,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e68,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).48),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(42),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(61),
                expr: e80,
            },
            opt_destruction_scope: Some(
                Destruction(61),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(82),
                expr: e104,
            },
            opt_destruction_scope: Some(
                Destruction(82),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(93),
                expr: e109,
            },
            opt_destruction_scope: Some(
                Destruction(93),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(110),
                expr: e123,
            },
            opt_destruction_scope: Some(
                Destruction(110),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(117),
                expr: e132,
            },
            opt_destruction_scope: Some(
                Destruction(117),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::sequence::Sequence,
                    span: src/library/sequence.rs:71:13: 71:18 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).2),
                        ),
                        ty: &library::sequence::Sequence,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::sequence::Sequence,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:206 ~ andrew_fuzz[741f]::library::sequence::{impl#7}::fuzz).1),
            ),
        },
    ],
}

DefId(0:208 ~ andrew_fuzz[741f]::library::sequence::{impl#8}::name):
Thir {
    body_type: Fn(
        ([&library::sequence::Sequence]; c_variadic: false)->&std::string::String,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(8),
            opt_destruction_scope: None,
            span: src/library/sequence.rs:88:31: 90:6 (#0),
            stmts: [],
            expr: Some(
                e14,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:208 ~ andrew_fuzz[741f]::library::sequence::{impl#8}::name).2),
                ),
            },
            ty: &library::sequence::Sequence,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:89:9: 89:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:89:9: 89:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:208 ~ andrew_fuzz[741f]::library::sequence::{impl#8}::name).6),
                ),
                value: e1,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:89:9: 89:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:89:9: 89:18 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e3,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:89:9: 89:25 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> &'a <std::rc::Rc<core::DataModelBase> as std::ops::Deref>::Target {<std::rc::Rc<core::DataModelBase> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:89:9: 89:25 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> &'a <std::rc::Rc<core::DataModelBase> as std::ops::Deref>::Target {<std::rc::Rc<core::DataModelBase> as std::ops::Deref>::deref},
                fun: e5,
                args: [
                    e4,
                ],
                from_hir_call: false,
                fn_span: src/library/sequence.rs:89:9: 89:25 (#0),
            },
            ty: &core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:89:9: 89:25 (#0),
        },
        Expr {
            kind: Deref {
                arg: e6,
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:89:9: 89:25 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e7,
            },
            ty: &core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:89:9: 89:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:208 ~ andrew_fuzz[741f]::library::sequence::{impl#8}::name).5),
                ),
                value: e8,
            },
            ty: &core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:89:9: 89:18 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::DataModelBase) -> &'a std::string::String {core::DataModelBase::name},
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:89:19: 89:23 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::DataModelBase) -> &'a std::string::String {core::DataModelBase::name},
                fun: e10,
                args: [
                    e9,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:89:19: 89:25 (#0),
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:89:9: 89:25 (#0),
        },
        Expr {
            kind: Deref {
                arg: e11,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:89:9: 89:25 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e12,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:89:9: 89:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:208 ~ andrew_fuzz[741f]::library::sequence::{impl#8}::name).3),
                ),
                value: e13,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:89:9: 89:25 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:88:31: 90:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:208 ~ andrew_fuzz[741f]::library::sequence::{impl#8}::name).9),
                ),
                value: e15,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:88:31: 90:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(9),
                lint_level: Inherited,
                value: e16,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/sequence.rs:88:31: 90:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::sequence::Sequence,
                    span: src/library/sequence.rs:88:13: 88:18 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:208 ~ andrew_fuzz[741f]::library::sequence::{impl#8}::name).2),
                        ),
                        ty: &library::sequence::Sequence,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::sequence::Sequence,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:208 ~ andrew_fuzz[741f]::library::sequence::{impl#8}::name).1),
            ),
        },
    ],
}

DefId(0:209 ~ andrew_fuzz[741f]::library::sequence::{impl#8}::set_name):
Thir {
    body_type: Fn(
        ([&mut library::sequence::Sequence, &str]; c_variadic: false)->(),
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(24),
            opt_destruction_scope: None,
            span: src/library/sequence.rs:91:40: 93:6 (#0),
            stmts: [
                s0,
            ],
            expr: None,
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:209 ~ andrew_fuzz[741f]::library::sequence::{impl#8}::set_name).2),
                ),
            },
            ty: &mut library::sequence::Sequence,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:92:9: 92:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:92:9: 92:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:209 ~ andrew_fuzz[741f]::library::sequence::{impl#8}::set_name).7),
                ),
                value: e1,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:92:9: 92:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:92:9: 92:18 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:209 ~ andrew_fuzz[741f]::library::sequence::{impl#8}::set_name).6),
                ),
                value: e3,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:92:9: 92:18 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:92:21: 92:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:209 ~ andrew_fuzz[741f]::library::sequence::{impl#8}::set_name).10),
                ),
                value: e5,
            },
            ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:92:21: 92:28 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:92:29: 92:47 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:209 ~ andrew_fuzz[741f]::library::sequence::{impl#8}::set_name).15),
                ),
                value: e7,
            },
            ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:92:29: 92:47 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:209 ~ andrew_fuzz[741f]::library::sequence::{impl#8}::set_name).4),
                ),
            },
            ty: &str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:92:48: 92:52 (#0),
        },
        Expr {
            kind: Deref {
                arg: e9,
            },
            ty: str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:92:48: 92:64 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e10,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:92:48: 92:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(21),
                lint_level: Explicit(
                    HirId(DefId(0:209 ~ andrew_fuzz[741f]::library::sequence::{impl#8}::set_name).21),
                ),
                value: e11,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:92:48: 92:52 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:92:53: 92:62 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
                fun: e13,
                args: [
                    e12,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:92:53: 92:64 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:92:48: 92:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:209 ~ andrew_fuzz[741f]::library::sequence::{impl#8}::set_name).19),
                ),
                value: e14,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:92:48: 92:64 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
                fun: e8,
                args: [
                    e15,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:92:29: 92:65 (#0),
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:92:29: 92:65 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:209 ~ andrew_fuzz[741f]::library::sequence::{impl#8}::set_name).14),
                ),
                value: e16,
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:92:29: 92:65 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
                fun: e6,
                args: [
                    e17,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:92:21: 92:66 (#0),
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:92:21: 92:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:209 ~ andrew_fuzz[741f]::library::sequence::{impl#8}::set_name).9),
                ),
                value: e18,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:92:21: 92:66 (#0),
        },
        Expr {
            kind: Assign {
                lhs: e4,
                rhs: e19,
            },
            ty: (),
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:92:9: 92:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:209 ~ andrew_fuzz[741f]::library::sequence::{impl#8}::set_name).5),
                ),
                value: e20,
            },
            ty: (),
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:92:9: 92:66 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/sequence.rs:91:40: 93:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:209 ~ andrew_fuzz[741f]::library::sequence::{impl#8}::set_name).25),
                ),
                value: e22,
            },
            ty: (),
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/sequence.rs:91:40: 93:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(25),
                lint_level: Inherited,
                value: e23,
            },
            ty: (),
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/sequence.rs:91:40: 93:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(23),
                expr: e21,
            },
            opt_destruction_scope: Some(
                Destruction(23),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &mut library::sequence::Sequence,
                    span: src/library/sequence.rs:91:17: 91:26 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:209 ~ andrew_fuzz[741f]::library::sequence::{impl#8}::set_name).2),
                        ),
                        ty: &mut library::sequence::Sequence,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut library::sequence::Sequence,
            ty_span: None,
            self_kind: Some(
                MutRef,
            ),
            hir_id: Some(
                HirId(DefId(0:209 ~ andrew_fuzz[741f]::library::sequence::{impl#8}::set_name).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &str,
                    span: src/library/sequence.rs:91:28: 91:32 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "name",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:209 ~ andrew_fuzz[741f]::library::sequence::{impl#8}::set_name).4),
                        ),
                        ty: &str,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &str,
            ty_span: Some(
                src/library/sequence.rs:91:34: 91:38 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:209 ~ andrew_fuzz[741f]::library::sequence::{impl#8}::set_name).3),
            ),
        },
    ],
}

DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization):
Thir {
    body_type: Fn(
        ([&library::sequence::Sequence, &mut core::bit_array::BitArray]; c_variadic: false)->(),
    ),
    arms: [
        Arm {
            pattern: Pat {
                ty: std::option::Option<&std::rc::Rc<dyn core::DataModel>>,
                span: src/library/sequence.rs:100:9: 102:10 (#136),
                kind: Variant {
                    adt_def: std::option::Option,
                    substs: [
                        &std::rc::Rc<dyn core::DataModel>,
                    ],
                    variant_index: 0,
                    subpatterns: [],
                },
            },
            guard: None,
            body: e26,
            lint_level: Explicit(
                HirId(DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization).14),
            ),
            scope: Node(14),
            span: src/library/sequence.rs:100:9: 102:10 (#136),
        },
        Arm {
            pattern: Pat {
                ty: std::option::Option<&std::rc::Rc<dyn core::DataModel>>,
                span: src/library/sequence.rs:100:13: 100:14 (#138),
                kind: Variant {
                    adt_def: std::option::Option,
                    substs: [
                        &std::rc::Rc<dyn core::DataModel>,
                    ],
                    variant_index: 1,
                    subpatterns: [
                        FieldPat {
                            field: field[0],
                            pattern: Pat {
                                ty: &std::rc::Rc<dyn core::DataModel>,
                                span: src/library/sequence.rs:100:13: 100:14 (#0),
                                kind: Binding {
                                    mutability: Not,
                                    name: "c",
                                    mode: ByValue,
                                    var: LocalVarId(
                                        HirId(DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization).10),
                                    ),
                                    ty: &std::rc::Rc<dyn core::DataModel>,
                                    subpattern: None,
                                    is_primary: true,
                                },
                            },
                        },
                    ],
                },
            },
            guard: None,
            body: e44,
            lint_level: Explicit(
                HirId(DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization).26),
            ),
            scope: Node(26),
            span: src/library/sequence.rs:100:39: 102:10 (#0),
        },
        Arm {
            pattern: Pat {
                ty: std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
                span: src/library/sequence.rs:100:18: 100:38 (#137),
                kind: Binding {
                    mutability: Mut,
                    name: "iter",
                    mode: ByValue,
                    var: LocalVarId(
                        HirId(DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization).27),
                    ),
                    ty: std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
                    subpattern: None,
                    is_primary: true,
                },
            },
            guard: None,
            body: e50,
            lint_level: Explicit(
                HirId(DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization).36),
            ),
            scope: Node(36),
            span: src/library/sequence.rs:100:9: 102:10 (#136),
        },
    ],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(24),
            opt_destruction_scope: None,
            span: src/library/sequence.rs:100:39: 102:10 (#0),
            stmts: [
                s0,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(35),
            opt_destruction_scope: Some(
                Destruction(35),
            ),
            span: src/library/sequence.rs:100:9: 102:10 (#136),
            stmts: [
                s1,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(41),
            opt_destruction_scope: None,
            span: src/library/sequence.rs:99:51: 103:6 (#0),
            stmts: [],
            expr: Some(
                e55,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(&std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> <&std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::IntoIter {<&std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::into_iter},
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/sequence.rs:100:18: 100:38 (#137),
        },
        Expr {
            kind: Scope {
                region_scope: Node(37),
                lint_level: Explicit(
                    HirId(DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization).37),
                ),
                value: e0,
            },
            ty: fn(&std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> <&std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::IntoIter {<&std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::into_iter},
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/sequence.rs:100:18: 100:38 (#137),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization).2),
                ),
            },
            ty: &library::sequence::Sequence,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/sequence.rs:100:18: 100:22 (#0),
        },
        Expr {
            kind: Deref {
                arg: e2,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/sequence.rs:100:18: 100:22 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization).8),
                ),
                value: e3,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/sequence.rs:100:18: 100:22 (#0),
        },
        Expr {
            kind: Field {
                lhs: e4,
                variant_index: 0,
                name: field[1],
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/sequence.rs:100:18: 100:31 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e5,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/sequence.rs:100:18: 100:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization).7),
                ),
                value: e6,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/sequence.rs:100:18: 100:31 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bolts::ChildMap) -> &'a std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>> {core::bolts::ChildMap::vals},
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/sequence.rs:100:32: 100:36 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bolts::ChildMap) -> &'a std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>> {core::bolts::ChildMap::vals},
                fun: e8,
                args: [
                    e7,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:100:32: 100:38 (#0),
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/sequence.rs:100:18: 100:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization).5),
                ),
                value: e9,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/sequence.rs:100:18: 100:38 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(&std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> <&std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::IntoIter {<&std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::into_iter},
                fun: e1,
                args: [
                    e10,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:100:18: 100:38 (#137),
            },
            ty: std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/sequence.rs:100:18: 100:38 (#137),
        },
        Expr {
            kind: Scope {
                region_scope: Node(38),
                lint_level: Explicit(
                    HirId(DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization).38),
                ),
                value: e11,
            },
            ty: std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/sequence.rs:100:18: 100:38 (#137),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>) -> std::option::Option<<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::Item> {<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::next},
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/library/sequence.rs:100:18: 100:38 (#137),
        },
        Expr {
            kind: Scope {
                region_scope: Node(31),
                lint_level: Explicit(
                    HirId(DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization).31),
                ),
                value: e13,
            },
            ty: for<'a> fn(&'a mut std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>) -> std::option::Option<<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::Item> {<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::next},
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/library/sequence.rs:100:18: 100:38 (#137),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization).27),
                ),
            },
            ty: std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/library/sequence.rs:100:18: 100:38 (#137),
        },
        Expr {
            kind: Scope {
                region_scope: Node(29),
                lint_level: Explicit(
                    HirId(DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization).29),
                ),
                value: e15,
            },
            ty: std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/library/sequence.rs:100:18: 100:38 (#137),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: false,
                },
                arg: e16,
            },
            ty: &mut std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/library/sequence.rs:100:18: 100:38 (#137),
        },
        Expr {
            kind: Deref {
                arg: e17,
            },
            ty: std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/library/sequence.rs:100:18: 100:38 (#137),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e18,
            },
            ty: &mut std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/library/sequence.rs:100:18: 100:38 (#137),
        },
        Expr {
            kind: Scope {
                region_scope: Node(30),
                lint_level: Explicit(
                    HirId(DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization).30),
                ),
                value: e19,
            },
            ty: &mut std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/library/sequence.rs:100:18: 100:38 (#137),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>) -> std::option::Option<<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::Item> {<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::next},
                fun: e14,
                args: [
                    e20,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:100:18: 100:38 (#137),
            },
            ty: std::option::Option<&std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/library/sequence.rs:100:18: 100:38 (#137),
        },
        Expr {
            kind: Scope {
                region_scope: Node(32),
                lint_level: Explicit(
                    HirId(DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization).32),
                ),
                value: e21,
            },
            ty: std::option::Option<&std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/library/sequence.rs:100:18: 100:38 (#137),
        },
        Expr {
            kind: Break {
                label: Node(11),
                value: None,
            },
            ty: !,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/sequence.rs:100:9: 102:10 (#136),
        },
        Expr {
            kind: NeverToAny {
                source: e23,
            },
            ty: (),
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/sequence.rs:100:9: 102:10 (#136),
        },
        Expr {
            kind: Scope {
                region_scope: Node(12),
                lint_level: Explicit(
                    HirId(DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization).12),
                ),
                value: e24,
            },
            ty: (),
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/sequence.rs:100:9: 102:10 (#136),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(12),
                lint_level: Inherited,
                value: e25,
            },
            ty: (),
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/sequence.rs:100:9: 102:10 (#136),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization).10),
                ),
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:101:13: 101:14 (#0),
        },
        Expr {
            kind: Deref {
                arg: e27,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:101:13: 101:35 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e28,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:101:13: 101:35 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:101:13: 101:35 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
                fun: e30,
                args: [
                    e29,
                ],
                from_hir_call: false,
                fn_span: src/library/sequence.rs:101:13: 101:35 (#0),
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:101:13: 101:35 (#0),
        },
        Expr {
            kind: Deref {
                arg: e31,
            },
            ty: dyn core::DataModel,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:101:13: 101:35 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e32,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:101:13: 101:35 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization).19),
                ),
                value: e33,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:101:13: 101:14 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization).4),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:101:32: 101:34 (#0),
        },
        Expr {
            kind: Deref {
                arg: e35,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:101:32: 101:34 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e36,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:101:32: 101:34 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(21),
                lint_level: Explicit(
                    HirId(DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization).21),
                ),
                value: e37,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:101:32: 101:34 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b> fn(&'a dyn core::DataModel, &'b mut core::bit_array::BitArray) {<dyn core::DataModel as core::Serializer>::do_serialization},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:101:15: 101:31 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b> fn(&'a dyn core::DataModel, &'b mut core::bit_array::BitArray) {<dyn core::DataModel as core::Serializer>::do_serialization},
                fun: e39,
                args: [
                    e34,
                    e38,
                ],
                from_hir_call: true,
                fn_span: src/library/sequence.rs:101:15: 101:35 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:101:13: 101:35 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization).17),
                ),
                value: e40,
            },
            ty: (),
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/sequence.rs:101:13: 101:35 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/sequence.rs:100:39: 102:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization).25),
                ),
                value: e42,
            },
            ty: (),
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/sequence.rs:100:39: 102:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(25),
                lint_level: Inherited,
                value: e43,
            },
            ty: (),
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/sequence.rs:100:39: 102:10 (#0),
        },
        Expr {
            kind: Match {
                scrutinee: e22,
                arms: [
                    a0,
                    a1,
                ],
            },
            ty: (),
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/library/sequence.rs:100:18: 100:38 (#137),
        },
        Expr {
            kind: Scope {
                region_scope: Node(33),
                lint_level: Explicit(
                    HirId(DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization).33),
                ),
                value: e45,
            },
            ty: (),
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/library/sequence.rs:100:18: 100:38 (#137),
        },
        Expr {
            kind: Block {
                block: b1,
            },
            ty: (),
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/sequence.rs:100:9: 102:10 (#136),
        },
        Expr {
            kind: Loop {
                body: e47,
            },
            ty: (),
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/library/sequence.rs:100:9: 102:10 (#136),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization).11),
                ),
                value: e48,
            },
            ty: (),
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/library/sequence.rs:100:9: 102:10 (#136),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(11),
                lint_level: Inherited,
                value: e49,
            },
            ty: (),
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/library/sequence.rs:100:9: 102:10 (#136),
        },
        Expr {
            kind: Match {
                scrutinee: e12,
                arms: [
                    a2,
                ],
            },
            ty: (),
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/sequence.rs:100:9: 102:10 (#136),
        },
        Expr {
            kind: Scope {
                region_scope: Node(39),
                lint_level: Explicit(
                    HirId(DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization).39),
                ),
                value: e51,
            },
            ty: (),
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/sequence.rs:100:9: 102:10 (#136),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(39),
                lint_level: Inherited,
                value: e52,
            },
            ty: (),
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/sequence.rs:100:9: 102:10 (#136),
        },
        Expr {
            kind: Use {
                source: e53,
            },
            ty: (),
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/library/sequence.rs:100:9: 102:10 (#136),
        },
        Expr {
            kind: Scope {
                region_scope: Node(40),
                lint_level: Explicit(
                    HirId(DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization).40),
                ),
                value: e54,
            },
            ty: (),
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/library/sequence.rs:100:9: 102:10 (#136),
        },
        Expr {
            kind: Block {
                block: b2,
            },
            ty: (),
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/library/sequence.rs:99:51: 103:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(42),
                lint_level: Explicit(
                    HirId(DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization).42),
                ),
                value: e56,
            },
            ty: (),
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/library/sequence.rs:99:51: 103:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(42),
                lint_level: Inherited,
                value: e57,
            },
            ty: (),
            temp_lifetime: Some(
                Node(42),
            ),
            span: src/library/sequence.rs:99:51: 103:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(23),
                expr: e41,
            },
            opt_destruction_scope: Some(
                Destruction(23),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(34),
                expr: e46,
            },
            opt_destruction_scope: Some(
                Destruction(34),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::sequence::Sequence,
                    span: src/library/sequence.rs:99:25: 99:30 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization).2),
                        ),
                        ty: &library::sequence::Sequence,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::sequence::Sequence,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &mut core::bit_array::BitArray,
                    span: src/library/sequence.rs:99:32: 99:34 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "ba",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization).4),
                        ),
                        ty: &mut core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut core::bit_array::BitArray,
            ty_span: Some(
                src/library/sequence.rs:99:36: 99:49 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:212 ~ andrew_fuzz[741f]::library::sequence::{impl#10}::do_serialization).3),
            ),
        },
    ],
}

DefId(0:241 ~ andrew_fuzz[741f]::library::union::{impl#0}::new):
Thir {
    body_type: Fn(
        ([std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>, std::rc::Rc<dyn core::DataModel>]; c_variadic: false)->library::union::Union,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(27),
            opt_destruction_scope: None,
            span: src/library/union.rs:13:99: 19:6 (#0),
            stmts: [],
            expr: Some(
                e21,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/union.rs:15:19: 15:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:241 ~ andrew_fuzz[741f]::library::union::{impl#0}::new).9),
                ),
                value: e0,
            },
            ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/union.rs:15:19: 15:26 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/union.rs:15:27: 15:45 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:241 ~ andrew_fuzz[741f]::library::union::{impl#0}::new).14),
                ),
                value: e2,
            },
            ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/union.rs:15:27: 15:45 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "Union",
                        Cooked,
                    ),
                    span: src/library/union.rs:15:46: 15:53 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/union.rs:15:46: 15:53 (#0),
        },
        Expr {
            kind: Deref {
                arg: e4,
            },
            ty: str,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/union.rs:15:46: 15:65 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e5,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/union.rs:15:46: 15:65 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(20),
                lint_level: Explicit(
                    HirId(DefId(0:241 ~ andrew_fuzz[741f]::library::union::{impl#0}::new).20),
                ),
                value: e6,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/union.rs:15:46: 15:53 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/union.rs:15:54: 15:63 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
                fun: e8,
                args: [
                    e7,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:15:54: 15:65 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/union.rs:15:46: 15:65 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(18),
                lint_level: Explicit(
                    HirId(DefId(0:241 ~ andrew_fuzz[741f]::library::union::{impl#0}::new).18),
                ),
                value: e9,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/union.rs:15:46: 15:65 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
                fun: e3,
                args: [
                    e10,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:15:27: 15:66 (#0),
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/union.rs:15:27: 15:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:241 ~ andrew_fuzz[741f]::library::union::{impl#0}::new).13),
                ),
                value: e11,
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/union.rs:15:27: 15:66 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
                fun: e1,
                args: [
                    e12,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:15:19: 15:67 (#0),
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/union.rs:15:19: 15:67 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:241 ~ andrew_fuzz[741f]::library::union::{impl#0}::new).8),
                ),
                value: e13,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/union.rs:15:19: 15:67 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:241 ~ andrew_fuzz[741f]::library::union::{impl#0}::new).2),
                ),
            },
            ty: std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/union.rs:16:13: 16:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(22),
                lint_level: Explicit(
                    HirId(DefId(0:241 ~ andrew_fuzz[741f]::library::union::{impl#0}::new).22),
                ),
                value: e15,
            },
            ty: std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/union.rs:16:13: 16:31 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:241 ~ andrew_fuzz[741f]::library::union::{impl#0}::new).4),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/union.rs:17:13: 17:18 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e17,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/union.rs:17:13: 17:18 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:241 ~ andrew_fuzz[741f]::library::union::{impl#0}::new).25),
                ),
                value: e18,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/union.rs:17:13: 17:18 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: library::union::Union,
                    variant_index: 0,
                    substs: [],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e14,
                        },
                        FieldExpr {
                            name: field[1],
                            expr: e16,
                        },
                        FieldExpr {
                            name: field[2],
                            expr: e19,
                        },
                    ],
                    base: None,
                },
            ),
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/union.rs:14:9: 18:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:241 ~ andrew_fuzz[741f]::library::union::{impl#0}::new).5),
                ),
                value: e20,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/union.rs:14:9: 18:10 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/union.rs:13:99: 19:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(28),
                lint_level: Explicit(
                    HirId(DefId(0:241 ~ andrew_fuzz[741f]::library::union::{impl#0}::new).28),
                ),
                value: e22,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/union.rs:13:99: 19:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(28),
                lint_level: Inherited,
                value: e23,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/union.rs:13:99: 19:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>,
                    span: src/library/union.rs:13:16: 13:34 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "potential_children",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:241 ~ andrew_fuzz[741f]::library::union::{impl#0}::new).2),
                        ),
                        ty: std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>,
            ty_span: Some(
                src/library/union.rs:13:36: 13:63 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:241 ~ andrew_fuzz[741f]::library::union::{impl#0}::new).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: std::rc::Rc<dyn core::DataModel>,
                    span: src/library/union.rs:13:65: 13:70 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "child",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:241 ~ andrew_fuzz[741f]::library::union::{impl#0}::new).4),
                        ),
                        ty: std::rc::Rc<dyn core::DataModel>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::rc::Rc<dyn core::DataModel>,
            ty_span: Some(
                src/library/union.rs:13:72: 13:89 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:241 ~ andrew_fuzz[741f]::library::union::{impl#0}::new).3),
            ),
        },
    ],
}

DefId(0:242 ~ andrew_fuzz[741f]::library::union::{impl#0}::name):
Thir {
    body_type: Fn(
        ([&library::union::Union]; c_variadic: false)->&std::string::String,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(8),
            opt_destruction_scope: None,
            span: src/library/union.rs:22:35: 24:6 (#0),
            stmts: [],
            expr: Some(
                e14,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:242 ~ andrew_fuzz[741f]::library::union::{impl#0}::name).2),
                ),
            },
            ty: &library::union::Union,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:23:9: 23:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:23:9: 23:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:242 ~ andrew_fuzz[741f]::library::union::{impl#0}::name).6),
                ),
                value: e1,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:23:9: 23:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:23:9: 23:18 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e3,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:23:9: 23:25 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> &'a <std::rc::Rc<core::DataModelBase> as std::ops::Deref>::Target {<std::rc::Rc<core::DataModelBase> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:23:9: 23:25 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> &'a <std::rc::Rc<core::DataModelBase> as std::ops::Deref>::Target {<std::rc::Rc<core::DataModelBase> as std::ops::Deref>::deref},
                fun: e5,
                args: [
                    e4,
                ],
                from_hir_call: false,
                fn_span: src/library/union.rs:23:9: 23:25 (#0),
            },
            ty: &core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:23:9: 23:25 (#0),
        },
        Expr {
            kind: Deref {
                arg: e6,
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:23:9: 23:25 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e7,
            },
            ty: &core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:23:9: 23:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:242 ~ andrew_fuzz[741f]::library::union::{impl#0}::name).5),
                ),
                value: e8,
            },
            ty: &core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:23:9: 23:18 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::DataModelBase) -> &'a std::string::String {core::DataModelBase::name},
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:23:19: 23:23 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::DataModelBase) -> &'a std::string::String {core::DataModelBase::name},
                fun: e10,
                args: [
                    e9,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:23:19: 23:25 (#0),
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:23:9: 23:25 (#0),
        },
        Expr {
            kind: Deref {
                arg: e11,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:23:9: 23:25 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e12,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:23:9: 23:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:242 ~ andrew_fuzz[741f]::library::union::{impl#0}::name).3),
                ),
                value: e13,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:23:9: 23:25 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:22:35: 24:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:242 ~ andrew_fuzz[741f]::library::union::{impl#0}::name).9),
                ),
                value: e15,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:22:35: 24:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(9),
                lint_level: Inherited,
                value: e16,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:22:35: 24:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::union::Union,
                    span: src/library/union.rs:22:17: 22:22 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:242 ~ andrew_fuzz[741f]::library::union::{impl#0}::name).2),
                        ),
                        ty: &library::union::Union,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::union::Union,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:242 ~ andrew_fuzz[741f]::library::union::{impl#0}::name).1),
            ),
        },
    ],
}

DefId(0:245 ~ andrew_fuzz[741f]::library::union::{impl#2}::child):
Thir {
    body_type: Fn(
        ([&library::union::Union]; c_variadic: false)->std::rc::Rc<dyn core::DataModel>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(8),
            opt_destruction_scope: None,
            span: src/library/union.rs:30:42: 32:6 (#0),
            stmts: [],
            expr: Some(
                e9,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:245 ~ andrew_fuzz[741f]::library::union::{impl#2}::child).2),
                ),
            },
            ty: &library::union::Union,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:31:9: 31:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:31:9: 31:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:245 ~ andrew_fuzz[741f]::library::union::{impl#2}::child).6),
                ),
                value: e1,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:31:9: 31:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[2],
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:31:9: 31:19 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e3,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:31:9: 31:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:245 ~ andrew_fuzz[741f]::library::union::{impl#2}::child).5),
                ),
                value: e4,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:31:9: 31:19 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:31:20: 31:25 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e6,
                args: [
                    e5,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:31:20: 31:27 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:31:9: 31:27 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e7,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:31:9: 31:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:245 ~ andrew_fuzz[741f]::library::union::{impl#2}::child).3),
                ),
                value: e8,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:31:9: 31:27 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:31:9: 31:27 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e10,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:31:9: 31:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:245 ~ andrew_fuzz[741f]::library::union::{impl#2}::child).9),
                ),
                value: e11,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:30:42: 32:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(9),
                lint_level: Inherited,
                value: e12,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:30:42: 32:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::union::Union,
                    span: src/library/union.rs:30:14: 30:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:245 ~ andrew_fuzz[741f]::library::union::{impl#2}::child).2),
                        ),
                        ty: &library::union::Union,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::union::Union,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:245 ~ andrew_fuzz[741f]::library::union::{impl#2}::child).1),
            ),
        },
    ],
}

DefId(0:247 ~ andrew_fuzz[741f]::library::union::{impl#3}::clone):
Thir {
    body_type: Fn(
        ([&library::union::Union]; c_variadic: false)->std::boxed::Box<dyn core::DataModel>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(28),
            opt_destruction_scope: None,
            span: src/library/union.rs:36:43: 42:6 (#0),
            stmts: [],
            expr: Some(
                e34,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:296 ~ alloc[42dc]::boxed::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:294 ~ alloc[42dc]::boxed::{impl#0}),
                                        self_ty: std::boxed::Box<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::union::Union) -> std::boxed::Box<library::union::Union> {std::boxed::Box::<library::union::Union>::new},
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:37:9: 37:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:247 ~ andrew_fuzz[741f]::library::union::{impl#3}::clone).4),
                ),
                value: e0,
            },
            ty: fn(library::union::Union) -> std::boxed::Box<library::union::Union> {std::boxed::Box::<library::union::Union>::new},
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:37:9: 37:17 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:247 ~ andrew_fuzz[741f]::library::union::{impl#3}::clone).2),
                ),
            },
            ty: &library::union::Union,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:38:19: 38:23 (#0),
        },
        Expr {
            kind: Deref {
                arg: e2,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:38:19: 38:23 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:247 ~ andrew_fuzz[741f]::library::union::{impl#3}::clone).14),
                ),
                value: e3,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:38:19: 38:23 (#0),
        },
        Expr {
            kind: Field {
                lhs: e4,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:38:19: 38:28 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e5,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:38:19: 38:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:247 ~ andrew_fuzz[741f]::library::union::{impl#3}::clone).13),
                ),
                value: e6,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:38:19: 38:28 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> std::rc::Rc<core::DataModelBase> {<std::rc::Rc<core::DataModelBase> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:38:29: 38:34 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> std::rc::Rc<core::DataModelBase> {<std::rc::Rc<core::DataModelBase> as std::clone::Clone>::clone},
                fun: e8,
                args: [
                    e7,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:38:29: 38:36 (#0),
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:38:19: 38:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:247 ~ andrew_fuzz[741f]::library::union::{impl#3}::clone).11),
                ),
                value: e9,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:38:19: 38:36 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:247 ~ andrew_fuzz[741f]::library::union::{impl#3}::clone).2),
                ),
            },
            ty: &library::union::Union,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:39:33: 39:37 (#0),
        },
        Expr {
            kind: Deref {
                arg: e11,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:39:33: 39:37 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(20),
                lint_level: Explicit(
                    HirId(DefId(0:247 ~ andrew_fuzz[741f]::library::union::{impl#3}::clone).20),
                ),
                value: e12,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:39:33: 39:37 (#0),
        },
        Expr {
            kind: Field {
                lhs: e13,
                variant_index: 0,
                name: field[1],
            },
            ty: std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:39:33: 39:56 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e14,
            },
            ty: &std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:39:33: 39:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:247 ~ andrew_fuzz[741f]::library::union::{impl#3}::clone).19),
                ),
                value: e15,
            },
            ty: &std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:39:33: 39:56 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>) -> std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>> {<std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:39:57: 39:62 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>) -> std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>> {<std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>> as std::clone::Clone>::clone},
                fun: e17,
                args: [
                    e16,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:39:57: 39:64 (#0),
            },
            ty: std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:39:33: 39:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:247 ~ andrew_fuzz[741f]::library::union::{impl#3}::clone).17),
                ),
                value: e18,
            },
            ty: std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:39:33: 39:64 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:247 ~ andrew_fuzz[741f]::library::union::{impl#3}::clone).2),
                ),
            },
            ty: &library::union::Union,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:40:20: 40:24 (#0),
        },
        Expr {
            kind: Deref {
                arg: e20,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:40:20: 40:24 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(26),
                lint_level: Explicit(
                    HirId(DefId(0:247 ~ andrew_fuzz[741f]::library::union::{impl#3}::clone).26),
                ),
                value: e21,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:40:20: 40:24 (#0),
        },
        Expr {
            kind: Field {
                lhs: e22,
                variant_index: 0,
                name: field[2],
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:40:20: 40:30 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e23,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:40:20: 40:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:247 ~ andrew_fuzz[741f]::library::union::{impl#3}::clone).25),
                ),
                value: e24,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:40:20: 40:30 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:40:31: 40:36 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e26,
                args: [
                    e25,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:40:31: 40:38 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:40:20: 40:38 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e27,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:40:20: 40:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(23),
                lint_level: Explicit(
                    HirId(DefId(0:247 ~ andrew_fuzz[741f]::library::union::{impl#3}::clone).23),
                ),
                value: e28,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:40:20: 40:38 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: library::union::Union,
                    variant_index: 0,
                    substs: [],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e10,
                        },
                        FieldExpr {
                            name: field[1],
                            expr: e19,
                        },
                        FieldExpr {
                            name: field[2],
                            expr: e29,
                        },
                    ],
                    base: None,
                },
            ),
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:37:18: 41:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:247 ~ andrew_fuzz[741f]::library::union::{impl#3}::clone).8),
                ),
                value: e30,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:37:18: 41:10 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::union::Union) -> std::boxed::Box<library::union::Union> {std::boxed::Box::<library::union::Union>::new},
                fun: e1,
                args: [
                    e31,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:37:9: 41:11 (#0),
            },
            ty: std::boxed::Box<library::union::Union>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:37:9: 41:11 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e32,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:37:9: 41:11 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:247 ~ andrew_fuzz[741f]::library::union::{impl#3}::clone).3),
                ),
                value: e33,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:37:9: 41:11 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:37:9: 41:11 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e35,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:37:9: 41:11 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(29),
                lint_level: Explicit(
                    HirId(DefId(0:247 ~ andrew_fuzz[741f]::library::union::{impl#3}::clone).29),
                ),
                value: e36,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:36:43: 42:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(29),
                lint_level: Inherited,
                value: e37,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/union.rs:36:43: 42:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::union::Union,
                    span: src/library/union.rs:36:14: 36:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:247 ~ andrew_fuzz[741f]::library::union::{impl#3}::clone).2),
                        ),
                        ty: &library::union::Union,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::union::Union,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:247 ~ andrew_fuzz[741f]::library::union::{impl#3}::clone).1),
            ),
        },
    ],
}

DefId(0:249 ~ andrew_fuzz[741f]::library::union::{impl#4}::breed):
Thir {
    body_type: Fn(
        ([&library::union::Union, std::boxed::Box<dyn core::DataModel>]; c_variadic: false)->std::boxed::Box<dyn core::DataModel>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(12),
            opt_destruction_scope: None,
            span: src/library/union.rs:46:70: 48:6 (#0),
            stmts: [
                s0,
            ],
            expr: None,
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(11),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:9: 773:33 (#62),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:249 ~ andrew_fuzz[741f]::library::union::{impl#4}::breed).6),
                ),
                value: e0,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(11),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:9: 773:33 (#62),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "not yet implemented",
                        Cooked,
                    ),
                    span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:34: 773:55 (#62),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(11),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:34: 773:55 (#62),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:249 ~ andrew_fuzz[741f]::library::union::{impl#4}::breed).10),
                ),
                value: e2,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(11),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:34: 773:55 (#62),
        },
        Expr {
            kind: Call {
                ty: fn(&'static str) -> ! {core::panicking::panic},
                fun: e1,
                args: [
                    e3,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:9: 773:56 (#62),
            },
            ty: !,
            temp_lifetime: Some(
                Node(11),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:9: 773:56 (#62),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:249 ~ andrew_fuzz[741f]::library::union::{impl#4}::breed).5),
                ),
                value: e4,
            },
            ty: !,
            temp_lifetime: Some(
                Node(11),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:9: 773:56 (#62),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: !,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/union.rs:46:70: 48:6 (#0),
        },
        Expr {
            kind: NeverToAny {
                source: e6,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/union.rs:46:70: 48:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:249 ~ andrew_fuzz[741f]::library::union::{impl#4}::breed).13),
                ),
                value: e7,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/union.rs:46:70: 48:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(13),
                lint_level: Inherited,
                value: e8,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/union.rs:46:70: 48:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(11),
                expr: e5,
            },
            opt_destruction_scope: Some(
                Destruction(11),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::union::Union,
                    span: src/library/union.rs:46:14: 46:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:249 ~ andrew_fuzz[741f]::library::union::{impl#4}::breed).2),
                        ),
                        ty: &library::union::Union,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::union::Union,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:249 ~ andrew_fuzz[741f]::library::union::{impl#4}::breed).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: std::boxed::Box<dyn core::DataModel>,
                    span: src/library/union.rs:46:21: 46:26 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "other",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:249 ~ andrew_fuzz[741f]::library::union::{impl#4}::breed).4),
                        ),
                        ty: std::boxed::Box<dyn core::DataModel>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::boxed::Box<dyn core::DataModel>,
            ty_span: Some(
                src/library/union.rs:46:28: 46:46 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:249 ~ andrew_fuzz[741f]::library::union::{impl#4}::breed).3),
            ),
        },
    ],
}

DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse):
Thir {
    body_type: Fn(
        ([&library::union::Union, &mut core::bit_array::BitArray, &std::rc::Rc<core::context::Context<'_>>]; c_variadic: false)->std::option::Option<std::boxed::Box<dyn core::DataModel>>,
    ),
    arms: [
        Arm {
            pattern: Pat {
                ty: std::option::Option<&std::boxed::Box<dyn core::DataModel>>,
                span: src/library/union.rs:54:9: 60:10 (#139),
                kind: Variant {
                    adt_def: std::option::Option,
                    substs: [
                        &std::boxed::Box<dyn core::DataModel>,
                    ],
                    variant_index: 0,
                    subpatterns: [],
                },
            },
            guard: None,
            body: e33,
            lint_level: Explicit(
                HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).24),
            ),
            scope: Node(24),
            span: src/library/union.rs:54:9: 60:10 (#139),
        },
        Arm {
            pattern: Pat {
                ty: std::option::Option<&std::boxed::Box<dyn core::DataModel>>,
                span: src/library/union.rs:54:13: 54:14 (#141),
                kind: Variant {
                    adt_def: std::option::Option,
                    substs: [
                        &std::boxed::Box<dyn core::DataModel>,
                    ],
                    variant_index: 1,
                    subpatterns: [
                        FieldPat {
                            field: field[0],
                            pattern: Pat {
                                ty: &std::boxed::Box<dyn core::DataModel>,
                                span: src/library/union.rs:54:13: 54:14 (#0),
                                kind: Binding {
                                    mutability: Not,
                                    name: "c",
                                    mode: ByValue,
                                    var: LocalVarId(
                                        HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).20),
                                    ),
                                    ty: &std::boxed::Box<dyn core::DataModel>,
                                    subpattern: None,
                                    is_primary: true,
                                },
                            },
                        },
                    ],
                },
            },
            guard: None,
            body: e100,
            lint_level: Explicit(
                HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).88),
            ),
            scope: Node(88),
            span: src/library/union.rs:54:44: 60:10 (#0),
        },
        Arm {
            pattern: Pat {
                ty: std::slice::Iter<'_, std::boxed::Box<dyn core::DataModel>>,
                span: src/library/union.rs:54:18: 54:43 (#140),
                kind: Binding {
                    mutability: Mut,
                    name: "iter",
                    mode: ByValue,
                    var: LocalVarId(
                        HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).89),
                    ),
                    ty: std::slice::Iter<'_, std::boxed::Box<dyn core::DataModel>>,
                    subpattern: None,
                    is_primary: true,
                },
            },
            guard: None,
            body: e106,
            lint_level: Explicit(
                HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).98),
            ),
            scope: Node(98),
            span: src/library/union.rs:54:9: 60:10 (#139),
        },
    ],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(84),
            opt_destruction_scope: None,
            span: src/library/union.rs:57:89: 59:14 (#0),
            stmts: [
                s3,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(86),
            opt_destruction_scope: None,
            span: src/library/union.rs:54:44: 60:10 (#0),
            stmts: [
                s1,
                s2,
            ],
            expr: Some(
                e97,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(97),
            opt_destruction_scope: Some(
                Destruction(97),
            ),
            span: src/library/union.rs:54:9: 60:10 (#139),
            stmts: [
                s4,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(126),
            opt_destruction_scope: None,
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:136:23: 138:6 (#63),
            stmts: [
                s6,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(128),
            opt_destruction_scope: None,
            span: src/library/union.rs:61:42: 64:10 (#0),
            stmts: [
                s7,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(144),
            opt_destruction_scope: None,
            span: src/library/union.rs:65:45: 67:10 (#0),
            stmts: [
                s9,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(148),
            opt_destruction_scope: None,
            span: src/library/union.rs:65:9: 67:10 (#143),
            stmts: [
                s10,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(151),
            opt_destruction_scope: Some(
                Destruction(151),
            ),
            span: src/library/union.rs:65:9: 67:10 (#143),
            stmts: [],
            expr: Some(
                e179,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(202),
            opt_destruction_scope: None,
            span: src/library/union.rs:68:76: 76:10 (#0),
            stmts: [
                s12,
            ],
            expr: Some(
                e232,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(207),
            opt_destruction_scope: None,
            span: src/library/union.rs:76:16: 78:10 (#0),
            stmts: [],
            expr: Some(
                e237,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(208),
            opt_destruction_scope: None,
            span: src/library/union.rs:52:96: 79:6 (#0),
            stmts: [
                s0,
                s5,
                s8,
                s11,
            ],
            expr: Some(
                e242,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:6607 ~ alloc[42dc]::vec::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:6605 ~ alloc[42dc]::vec::{impl#0}),
                                        self_ty: std::vec::Vec<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn() -> std::vec::Vec<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)> {std::vec::Vec::<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>::new},
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/union.rs:53:39: 53:47 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).9),
                ),
                value: e0,
            },
            ty: fn() -> std::vec::Vec<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)> {std::vec::Vec::<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>::new},
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/union.rs:53:39: 53:47 (#0),
        },
        Expr {
            kind: Call {
                ty: fn() -> std::vec::Vec<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)> {std::vec::Vec::<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>::new},
                fun: e1,
                args: [],
                from_hir_call: true,
                fn_span: src/library/union.rs:53:39: 53:49 (#0),
            },
            ty: std::vec::Vec<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/union.rs:53:39: 53:49 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).8),
                ),
                value: e2,
            },
            ty: std::vec::Vec<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/union.rs:53:39: 53:49 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(&std::vec::Vec<std::boxed::Box<dyn core::DataModel>>) -> <&std::vec::Vec<std::boxed::Box<dyn core::DataModel>> as std::iter::IntoIterator>::IntoIter {<&std::vec::Vec<std::boxed::Box<dyn core::DataModel>> as std::iter::IntoIterator>::into_iter},
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/union.rs:54:18: 54:43 (#140),
        },
        Expr {
            kind: Scope {
                region_scope: Node(99),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).99),
                ),
                value: e4,
            },
            ty: fn(&std::vec::Vec<std::boxed::Box<dyn core::DataModel>>) -> <&std::vec::Vec<std::boxed::Box<dyn core::DataModel>> as std::iter::IntoIterator>::IntoIter {<&std::vec::Vec<std::boxed::Box<dyn core::DataModel>> as std::iter::IntoIterator>::into_iter},
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/union.rs:54:18: 54:43 (#140),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).2),
                ),
            },
            ty: &library::union::Union,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/union.rs:54:20: 54:24 (#0),
        },
        Expr {
            kind: Deref {
                arg: e6,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/union.rs:54:20: 54:24 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(18),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).18),
                ),
                value: e7,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/union.rs:54:20: 54:24 (#0),
        },
        Expr {
            kind: Field {
                lhs: e8,
                variant_index: 0,
                name: field[1],
            },
            ty: std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/union.rs:54:20: 54:43 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e9,
            },
            ty: &std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/union.rs:54:20: 54:43 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).17),
                ),
                value: e10,
            },
            ty: &std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/union.rs:54:20: 54:43 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>) -> &'a <std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>> as std::ops::Deref>::Target {<std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/union.rs:54:19: 54:43 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>) -> &'a <std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>> as std::ops::Deref>::Target {<std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>> as std::ops::Deref>::deref},
                fun: e12,
                args: [
                    e11,
                ],
                from_hir_call: false,
                fn_span: src/library/union.rs:54:19: 54:43 (#0),
            },
            ty: &std::vec::Vec<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/union.rs:54:19: 54:43 (#0),
        },
        Expr {
            kind: Deref {
                arg: e13,
            },
            ty: std::vec::Vec<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/union.rs:54:19: 54:43 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(16),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).16),
                ),
                value: e14,
            },
            ty: std::vec::Vec<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/union.rs:54:19: 54:43 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e15,
            },
            ty: &std::vec::Vec<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/union.rs:54:18: 54:43 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).15),
                ),
                value: e16,
            },
            ty: &std::vec::Vec<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/union.rs:54:18: 54:43 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(&std::vec::Vec<std::boxed::Box<dyn core::DataModel>>) -> <&std::vec::Vec<std::boxed::Box<dyn core::DataModel>> as std::iter::IntoIterator>::IntoIter {<&std::vec::Vec<std::boxed::Box<dyn core::DataModel>> as std::iter::IntoIterator>::into_iter},
                fun: e5,
                args: [
                    e17,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:54:18: 54:43 (#140),
            },
            ty: std::slice::Iter<'_, std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/union.rs:54:18: 54:43 (#140),
        },
        Expr {
            kind: Scope {
                region_scope: Node(100),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).100),
                ),
                value: e18,
            },
            ty: std::slice::Iter<'_, std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/union.rs:54:18: 54:43 (#140),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::slice::Iter<'_, std::boxed::Box<dyn core::DataModel>>) -> std::option::Option<<std::slice::Iter<'_, std::boxed::Box<dyn core::DataModel>> as std::iter::Iterator>::Item> {<std::slice::Iter<'_, std::boxed::Box<dyn core::DataModel>> as std::iter::Iterator>::next},
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/library/union.rs:54:18: 54:43 (#140),
        },
        Expr {
            kind: Scope {
                region_scope: Node(93),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).93),
                ),
                value: e20,
            },
            ty: for<'a> fn(&'a mut std::slice::Iter<'_, std::boxed::Box<dyn core::DataModel>>) -> std::option::Option<<std::slice::Iter<'_, std::boxed::Box<dyn core::DataModel>> as std::iter::Iterator>::Item> {<std::slice::Iter<'_, std::boxed::Box<dyn core::DataModel>> as std::iter::Iterator>::next},
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/library/union.rs:54:18: 54:43 (#140),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).89),
                ),
            },
            ty: std::slice::Iter<'_, std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/library/union.rs:54:18: 54:43 (#140),
        },
        Expr {
            kind: Scope {
                region_scope: Node(91),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).91),
                ),
                value: e22,
            },
            ty: std::slice::Iter<'_, std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/library/union.rs:54:18: 54:43 (#140),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: false,
                },
                arg: e23,
            },
            ty: &mut std::slice::Iter<'_, std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/library/union.rs:54:18: 54:43 (#140),
        },
        Expr {
            kind: Deref {
                arg: e24,
            },
            ty: std::slice::Iter<'_, std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/library/union.rs:54:18: 54:43 (#140),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e25,
            },
            ty: &mut std::slice::Iter<'_, std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/library/union.rs:54:18: 54:43 (#140),
        },
        Expr {
            kind: Scope {
                region_scope: Node(92),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).92),
                ),
                value: e26,
            },
            ty: &mut std::slice::Iter<'_, std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/library/union.rs:54:18: 54:43 (#140),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::slice::Iter<'_, std::boxed::Box<dyn core::DataModel>>) -> std::option::Option<<std::slice::Iter<'_, std::boxed::Box<dyn core::DataModel>> as std::iter::Iterator>::Item> {<std::slice::Iter<'_, std::boxed::Box<dyn core::DataModel>> as std::iter::Iterator>::next},
                fun: e21,
                args: [
                    e27,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:54:18: 54:43 (#140),
            },
            ty: std::option::Option<&std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/library/union.rs:54:18: 54:43 (#140),
        },
        Expr {
            kind: Scope {
                region_scope: Node(94),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).94),
                ),
                value: e28,
            },
            ty: std::option::Option<&std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/library/union.rs:54:18: 54:43 (#140),
        },
        Expr {
            kind: Break {
                label: Node(21),
                value: None,
            },
            ty: !,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/union.rs:54:9: 60:10 (#139),
        },
        Expr {
            kind: NeverToAny {
                source: e30,
            },
            ty: (),
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/union.rs:54:9: 60:10 (#139),
        },
        Expr {
            kind: Scope {
                region_scope: Node(22),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).22),
                ),
                value: e31,
            },
            ty: (),
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/union.rs:54:9: 60:10 (#139),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(22),
                lint_level: Inherited,
                value: e32,
            },
            ty: (),
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/union.rs:54:9: 60:10 (#139),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).4),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/library/union.rs:55:39: 55:44 (#0),
        },
        Expr {
            kind: Deref {
                arg: e34,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/library/union.rs:55:39: 55:52 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e35,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/library/union.rs:55:39: 55:52 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(30),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).30),
                ),
                value: e36,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/library/union.rs:55:39: 55:44 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bit_array::BitArray) -> core::bit_array::BitArray {core::bit_array::BitArray::clone},
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/library/union.rs:55:45: 55:50 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bit_array::BitArray) -> core::bit_array::BitArray {core::bit_array::BitArray::clone},
                fun: e38,
                args: [
                    e37,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:55:45: 55:52 (#0),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/library/union.rs:55:39: 55:52 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(28),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).28),
                ),
                value: e39,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(27),
            ),
            span: src/library/union.rs:55:39: 55:52 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(0:98 ~ andrew_fuzz[741f]::core::context::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon(0, None) }),
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(0:96 ~ andrew_fuzz[741f]::core::context::{impl#0}),
                                        self_ty: core::context::Context<'_>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(std::rc::Weak<core::context::Context<'_>>, core::context::Children<'_>) -> core::context::Context<'_> {core::context::Context::<'_>::new},
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/library/union.rs:56:29: 56:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(36),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).36),
                ),
                value: e41,
            },
            ty: fn(std::rc::Weak<core::context::Context<'_>>, core::context::Children<'_>) -> core::context::Context<'_> {core::context::Context::<'_>::new},
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/library/union.rs:56:29: 56:41 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4783 ~ alloc[42dc]::rc::{impl#11}::downgrade),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4778 ~ alloc[42dc]::rc::{impl#11}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> std::rc::Weak<core::context::Context<'_>> {std::rc::Rc::<core::context::Context<'_>>::downgrade},
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/library/union.rs:56:42: 56:55 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(42),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).42),
                ),
                value: e43,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> std::rc::Weak<core::context::Context<'_>> {std::rc::Rc::<core::context::Context<'_>>::downgrade},
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/library/union.rs:56:42: 56:55 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).6),
                ),
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/library/union.rs:56:56: 56:59 (#0),
        },
        Expr {
            kind: Deref {
                arg: e45,
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/library/union.rs:56:56: 56:59 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e46,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/library/union.rs:56:56: 56:59 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(46),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).46),
                ),
                value: e47,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/library/union.rs:56:56: 56:59 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> std::rc::Weak<core::context::Context<'_>> {std::rc::Rc::<core::context::Context<'_>>::downgrade},
                fun: e44,
                args: [
                    e48,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:56:42: 56:60 (#0),
            },
            ty: std::rc::Weak<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/library/union.rs:56:42: 56:60 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(41),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).41),
                ),
                value: e49,
            },
            ty: std::rc::Weak<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/library/union.rs:56:42: 56:60 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: core::context::Children,
                    variant_index: 0,
                    substs: [
                        ReErased,
                    ],
                    user_ty: None,
                    fields: [],
                    base: None,
                },
            ),
            ty: core::context::Children<'_>,
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/library/union.rs:56:62: 56:77 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(48),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).48),
                ),
                value: e51,
            },
            ty: core::context::Children<'_>,
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/library/union.rs:56:62: 56:77 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::rc::Weak<core::context::Context<'_>>, core::context::Children<'_>) -> core::context::Context<'_> {core::context::Context::<'_>::new},
                fun: e42,
                args: [
                    e50,
                    e52,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:56:29: 56:78 (#0),
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/library/union.rs:56:29: 56:78 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(35),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).35),
                ),
                value: e53,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/library/union.rs:56:29: 56:78 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).20),
                ),
            },
            ty: &std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(87),
            ),
            span: src/library/union.rs:57:38: 57:39 (#0),
        },
        Expr {
            kind: Deref {
                arg: e55,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(87),
            ),
            span: src/library/union.rs:57:38: 57:88 (#0),
        },
        Expr {
            kind: Deref {
                arg: e56,
            },
            ty: dyn core::DataModel,
            temp_lifetime: Some(
                Node(87),
            ),
            span: src/library/union.rs:57:38: 57:88 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e57,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(87),
            ),
            span: src/library/union.rs:57:38: 57:88 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(61),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).61),
                ),
                value: e58,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(87),
            ),
            span: src/library/union.rs:57:38: 57:39 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).33),
                ),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(87),
            ),
            span: src/library/union.rs:57:51: 57:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(64),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).64),
                ),
                value: e60,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(87),
            ),
            span: src/library/union.rs:57:51: 57:66 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: false,
                },
                arg: e61,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(87),
            ),
            span: src/library/union.rs:57:46: 57:66 (#0),
        },
        Expr {
            kind: Deref {
                arg: e62,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(87),
            ),
            span: src/library/union.rs:57:46: 57:66 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e63,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(87),
            ),
            span: src/library/union.rs:57:46: 57:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(63),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).63),
                ),
                value: e64,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(87),
            ),
            span: src/library/union.rs:57:46: 57:66 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(core::context::Context<'_>) -> std::rc::Rc<core::context::Context<'_>> {std::rc::Rc::<core::context::Context<'_>>::new},
            temp_lifetime: Some(
                Node(87),
            ),
            span: src/library/union.rs:57:69: 57:76 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(68),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).68),
                ),
                value: e66,
            },
            ty: fn(core::context::Context<'_>) -> std::rc::Rc<core::context::Context<'_>> {std::rc::Rc::<core::context::Context<'_>>::new},
            temp_lifetime: Some(
                Node(87),
            ),
            span: src/library/union.rs:57:69: 57:76 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).52),
                ),
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(87),
            ),
            span: src/library/union.rs:57:77: 57:86 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(72),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).72),
                ),
                value: e68,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(87),
            ),
            span: src/library/union.rs:57:77: 57:86 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(core::context::Context<'_>) -> std::rc::Rc<core::context::Context<'_>> {std::rc::Rc::<core::context::Context<'_>>::new},
                fun: e67,
                args: [
                    e69,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:57:69: 57:87 (#0),
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(87),
            ),
            span: src/library/union.rs:57:69: 57:87 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(67),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).67),
                ),
                value: e70,
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(87),
            ),
            span: src/library/union.rs:57:69: 57:87 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e71,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(87),
            ),
            span: src/library/union.rs:57:68: 57:87 (#0),
        },
        Expr {
            kind: Deref {
                arg: e72,
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(87),
            ),
            span: src/library/union.rs:57:68: 57:87 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e73,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(87),
            ),
            span: src/library/union.rs:57:68: 57:87 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(66),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).66),
                ),
                value: e74,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(87),
            ),
            span: src/library/union.rs:57:68: 57:87 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b, 'c, 'd> fn(&'a dyn core::DataModel, &'b mut core::bit_array::BitArray, &'c std::rc::Rc<core::context::Context<'d>>) -> std::option::Option<std::boxed::Box<(dyn core::DataModel + 'static)>> {<dyn core::DataModel as core::Parser>::parse},
            temp_lifetime: Some(
                Node(87),
            ),
            span: src/library/union.rs:57:40: 57:45 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b, 'c, 'd> fn(&'a dyn core::DataModel, &'b mut core::bit_array::BitArray, &'c std::rc::Rc<core::context::Context<'d>>) -> std::option::Option<std::boxed::Box<(dyn core::DataModel + 'static)>> {<dyn core::DataModel as core::Parser>::parse},
                fun: e76,
                args: [
                    e59,
                    e65,
                    e75,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:57:40: 57:88 (#0),
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(87),
            ),
            span: src/library/union.rs:57:38: 57:88 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(59),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).59),
                ),
                value: e77,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(87),
            ),
            span: src/library/union.rs:57:38: 57:88 (#0),
        },
        Expr {
            kind: Let {
                expr: e78,
                pat: Pat {
                    ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
                    span: src/library/union.rs:57:20: 57:35 (#0),
                    kind: Variant {
                        adt_def: std::option::Option,
                        substs: [
                            std::boxed::Box<dyn core::DataModel>,
                        ],
                        variant_index: 1,
                        subpatterns: [
                            FieldPat {
                                field: field[0],
                                pattern: Pat {
                                    ty: std::boxed::Box<dyn core::DataModel>,
                                    span: src/library/union.rs:57:25: 57:34 (#0),
                                    kind: Binding {
                                        mutability: Not,
                                        name: "new_child",
                                        mode: ByValue,
                                        var: LocalVarId(
                                            HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).57),
                                        ),
                                        ty: std::boxed::Box<dyn core::DataModel>,
                                        subpattern: None,
                                        is_primary: true,
                                    },
                                },
                            },
                        ],
                    },
                },
            },
            ty: bool,
            temp_lifetime: Some(
                Node(87),
            ),
            span: src/library/union.rs:57:16: 57:88 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(54),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).54),
                ),
                value: e79,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(87),
            ),
            span: src/library/union.rs:57:16: 57:88 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).14),
                ),
            },
            ty: std::vec::Vec<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/library/union.rs:58:17: 58:36 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e81,
            },
            ty: &mut std::vec::Vec<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/library/union.rs:58:17: 58:71 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(76),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).76),
                ),
                value: e82,
            },
            ty: &mut std::vec::Vec<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/library/union.rs:58:17: 58:36 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).57),
                ),
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/library/union.rs:58:43: 58:52 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(79),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).79),
                ),
                value: e84,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/library/union.rs:58:43: 58:52 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).33),
                ),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/library/union.rs:58:54: 58:69 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(81),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).81),
                ),
                value: e86,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/library/union.rs:58:54: 58:69 (#0),
        },
        Expr {
            kind: Tuple {
                fields: [
                    e85,
                    e87,
                ],
            },
            ty: (std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray),
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/library/union.rs:58:42: 58:70 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(78),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).78),
                ),
                value: e88,
            },
            ty: (std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray),
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/library/union.rs:58:42: 58:70 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::vec::Vec<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>, (std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)) {std::vec::Vec::<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>::push},
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/library/union.rs:58:37: 58:41 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::vec::Vec<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>, (std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)) {std::vec::Vec::<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>::push},
                fun: e90,
                args: [
                    e83,
                    e89,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:58:37: 58:71 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/library/union.rs:58:17: 58:71 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(74),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).74),
                ),
                value: e91,
            },
            ty: (),
            temp_lifetime: Some(
                Node(83),
            ),
            span: src/library/union.rs:58:17: 58:71 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(85),
            ),
            span: src/library/union.rs:57:89: 59:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(85),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).85),
                ),
                value: e93,
            },
            ty: (),
            temp_lifetime: Some(
                Node(85),
            ),
            span: src/library/union.rs:57:89: 59:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(85),
                lint_level: Inherited,
                value: e94,
            },
            ty: (),
            temp_lifetime: Some(
                Node(85),
            ),
            span: src/library/union.rs:57:89: 59:14 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(85),
                cond: e80,
                then: e95,
                else_opt: None,
            },
            ty: (),
            temp_lifetime: Some(
                Node(87),
            ),
            span: src/library/union.rs:57:13: 59:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(53),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).53),
                ),
                value: e96,
            },
            ty: (),
            temp_lifetime: Some(
                Node(87),
            ),
            span: src/library/union.rs:57:13: 59:14 (#0),
        },
        Expr {
            kind: Block {
                block: b1,
            },
            ty: (),
            temp_lifetime: Some(
                Node(87),
            ),
            span: src/library/union.rs:54:44: 60:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(87),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).87),
                ),
                value: e98,
            },
            ty: (),
            temp_lifetime: Some(
                Node(87),
            ),
            span: src/library/union.rs:54:44: 60:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(87),
                lint_level: Inherited,
                value: e99,
            },
            ty: (),
            temp_lifetime: Some(
                Node(87),
            ),
            span: src/library/union.rs:54:44: 60:10 (#0),
        },
        Expr {
            kind: Match {
                scrutinee: e29,
                arms: [
                    a0,
                    a1,
                ],
            },
            ty: (),
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/library/union.rs:54:18: 54:43 (#140),
        },
        Expr {
            kind: Scope {
                region_scope: Node(95),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).95),
                ),
                value: e101,
            },
            ty: (),
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/library/union.rs:54:18: 54:43 (#140),
        },
        Expr {
            kind: Block {
                block: b2,
            },
            ty: (),
            temp_lifetime: Some(
                Node(97),
            ),
            span: src/library/union.rs:54:9: 60:10 (#139),
        },
        Expr {
            kind: Loop {
                body: e103,
            },
            ty: (),
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/library/union.rs:54:9: 60:10 (#139),
        },
        Expr {
            kind: Scope {
                region_scope: Node(21),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).21),
                ),
                value: e104,
            },
            ty: (),
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/library/union.rs:54:9: 60:10 (#139),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(21),
                lint_level: Inherited,
                value: e105,
            },
            ty: (),
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/library/union.rs:54:9: 60:10 (#139),
        },
        Expr {
            kind: Match {
                scrutinee: e19,
                arms: [
                    a2,
                ],
            },
            ty: (),
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/union.rs:54:9: 60:10 (#139),
        },
        Expr {
            kind: Scope {
                region_scope: Node(101),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).101),
                ),
                value: e107,
            },
            ty: (),
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/union.rs:54:9: 60:10 (#139),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(101),
                lint_level: Inherited,
                value: e108,
            },
            ty: (),
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/union.rs:54:9: 60:10 (#139),
        },
        Expr {
            kind: Use {
                source: e109,
            },
            ty: (),
            temp_lifetime: Some(
                Node(103),
            ),
            span: src/library/union.rs:54:9: 60:10 (#139),
        },
        Expr {
            kind: Scope {
                region_scope: Node(102),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).102),
                ),
                value: e110,
            },
            ty: (),
            temp_lifetime: Some(
                Node(103),
            ),
            span: src/library/union.rs:54:9: 60:10 (#139),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).14),
                ),
            },
            ty: std::vec::Vec<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>,
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/library/union.rs:61:12: 61:31 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e112,
            },
            ty: &std::vec::Vec<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>,
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/library/union.rs:61:12: 61:37 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(108),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).108),
                ),
                value: e113,
            },
            ty: &std::vec::Vec<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>,
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/library/union.rs:61:12: 61:31 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::vec::Vec<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>) -> usize {std::vec::Vec::<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>::len},
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/library/union.rs:61:32: 61:35 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::vec::Vec<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>) -> usize {std::vec::Vec::<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>::len},
                fun: e115,
                args: [
                    e114,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:61:32: 61:37 (#0),
            },
            ty: usize,
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/library/union.rs:61:12: 61:37 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(106),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).106),
                ),
                value: e116,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/library/union.rs:61:12: 61:37 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        1,
                        Unsuffixed,
                    ),
                    span: src/library/union.rs:61:40: 61:41 (#0),
                },
                neg: false,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/library/union.rs:61:40: 61:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(110),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).110),
                ),
                value: e118,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/library/union.rs:61:40: 61:41 (#0),
        },
        Expr {
            kind: Binary {
                op: Gt,
                lhs: e117,
                rhs: e119,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/library/union.rs:61:12: 61:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(105),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).105),
                ),
                value: e120,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/library/union.rs:61:12: 61:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(105),
                lint_level: Inherited,
                value: e121,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/library/union.rs:61:12: 61:41 (#0),
        },
        Expr {
            kind: Use {
                source: e122,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(130),
            ),
            span: src/library/union.rs:61:12: 61:41 (#142),
        },
        Expr {
            kind: Scope {
                region_scope: Node(111),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).111),
                ),
                value: e123,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(130),
            ),
            span: src/library/union.rs:61:12: 61:41 (#142),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(std::fmt::Arguments<'a>) {std::io::_print},
            temp_lifetime: Some(
                Node(125),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:9: 137:27 (#63),
        },
        Expr {
            kind: Scope {
                region_scope: Node(114),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).114),
                ),
                value: e125,
            },
            ty: for<'a> fn(std::fmt::Arguments<'a>) {std::io::_print},
            temp_lifetime: Some(
                Node(125),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:9: 137:27 (#63),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(2:8999 ~ core[102f]::fmt::{impl#4}::new_const),
                            UserSubsts {
                                substs: [
                                    ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon(0, None) }),
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(2:8997 ~ core[102f]::fmt::{impl#4}),
                                        self_ty: std::fmt::Arguments<'_>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(&[&'static str]) -> std::fmt::Arguments<'_> {std::fmt::Arguments::<'_>::new_const},
            temp_lifetime: Some(
                Node(125),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#64),
        },
        Expr {
            kind: Scope {
                region_scope: Node(124),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).124),
                ),
                value: e127,
            },
            ty: fn(&[&'static str]) -> std::fmt::Arguments<'_> {std::fmt::Arguments::<'_>::new_const},
            temp_lifetime: Some(
                Node(125),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#64),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "Warning: found ambiguity!\n",
                        Cooked,
                    ),
                    span: src/library/union.rs:63:22: 63:49 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(125),
            ),
            span: src/library/union.rs:63:22: 63:49 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(119),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).119),
                ),
                value: e129,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(125),
            ),
            span: src/library/union.rs:63:22: 63:49 (#0),
        },
        Expr {
            kind: Array {
                fields: [
                    e130,
                ],
            },
            ty: [&str; 1],
            temp_lifetime: Some(
                Node(125),
            ),
            span: src/library/union.rs:63:22: 63:49 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(120),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).120),
                ),
                value: e131,
            },
            ty: [&str; 1],
            temp_lifetime: Some(
                Node(125),
            ),
            span: src/library/union.rs:63:22: 63:49 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e132,
            },
            ty: &[&str; 1],
            temp_lifetime: Some(
                Node(125),
            ),
            span: src/library/union.rs:63:22: 63:49 (#0),
        },
        Expr {
            kind: Deref {
                arg: e133,
            },
            ty: [&str; 1],
            temp_lifetime: Some(
                Node(125),
            ),
            span: src/library/union.rs:63:22: 63:49 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e134,
            },
            ty: &[&str; 1],
            temp_lifetime: Some(
                Node(125),
            ),
            span: src/library/union.rs:63:22: 63:49 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e135,
            },
            ty: &[&str],
            temp_lifetime: Some(
                Node(125),
            ),
            span: src/library/union.rs:63:22: 63:49 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(121),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).121),
                ),
                value: e136,
            },
            ty: &[&str],
            temp_lifetime: Some(
                Node(125),
            ),
            span: src/library/union.rs:63:22: 63:49 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(&[&'static str]) -> std::fmt::Arguments<'_> {std::fmt::Arguments::<'_>::new_const},
                fun: e128,
                args: [
                    e137,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#64),
            },
            ty: std::fmt::Arguments<'_>,
            temp_lifetime: Some(
                Node(125),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#64),
        },
        Expr {
            kind: Scope {
                region_scope: Node(118),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).118),
                ),
                value: e138,
            },
            ty: std::fmt::Arguments<'_>,
            temp_lifetime: Some(
                Node(125),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#64),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(std::fmt::Arguments<'a>) {std::io::_print},
                fun: e126,
                args: [
                    e139,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:9: 137:62 (#63),
            },
            ty: (),
            temp_lifetime: Some(
                Node(125),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:9: 137:62 (#63),
        },
        Expr {
            kind: Scope {
                region_scope: Node(113),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).113),
                ),
                value: e140,
            },
            ty: (),
            temp_lifetime: Some(
                Node(125),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:9: 137:62 (#63),
        },
        Expr {
            kind: Block {
                block: b3,
            },
            ty: (),
            temp_lifetime: Some(
                Node(127),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:136:23: 138:6 (#63),
        },
        Expr {
            kind: Scope {
                region_scope: Node(112),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).112),
                ),
                value: e142,
            },
            ty: (),
            temp_lifetime: Some(
                Node(127),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:136:23: 138:6 (#63),
        },
        Expr {
            kind: Block {
                block: b4,
            },
            ty: (),
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/union.rs:61:42: 64:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(129),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).129),
                ),
                value: e144,
            },
            ty: (),
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/union.rs:61:42: 64:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(129),
                lint_level: Inherited,
                value: e145,
            },
            ty: (),
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/union.rs:61:42: 64:10 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(129),
                cond: e124,
                then: e146,
                else_opt: None,
            },
            ty: (),
            temp_lifetime: Some(
                Node(130),
            ),
            span: src/library/union.rs:61:9: 64:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(104),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).104),
                ),
                value: e147,
            },
            ty: (),
            temp_lifetime: Some(
                Node(130),
            ),
            span: src/library/union.rs:61:9: 64:10 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).14),
                ),
            },
            ty: std::vec::Vec<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>,
            temp_lifetime: Some(
                Node(132),
            ),
            span: src/library/union.rs:65:15: 65:34 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e149,
            },
            ty: &std::vec::Vec<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>,
            temp_lifetime: Some(
                Node(132),
            ),
            span: src/library/union.rs:65:15: 65:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(135),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).135),
                ),
                value: e150,
            },
            ty: &std::vec::Vec<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>,
            temp_lifetime: Some(
                Node(132),
            ),
            span: src/library/union.rs:65:15: 65:34 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::vec::Vec<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>) -> usize {std::vec::Vec::<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>::len},
            temp_lifetime: Some(
                Node(132),
            ),
            span: src/library/union.rs:65:35: 65:38 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::vec::Vec<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>) -> usize {std::vec::Vec::<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>::len},
                fun: e152,
                args: [
                    e151,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:65:35: 65:40 (#0),
            },
            ty: usize,
            temp_lifetime: Some(
                Node(132),
            ),
            span: src/library/union.rs:65:15: 65:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(133),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).133),
                ),
                value: e153,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(132),
            ),
            span: src/library/union.rs:65:15: 65:40 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        1,
                        Unsuffixed,
                    ),
                    span: src/library/union.rs:65:43: 65:44 (#0),
                },
                neg: false,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(132),
            ),
            span: src/library/union.rs:65:43: 65:44 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(137),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).137),
                ),
                value: e155,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(132),
            ),
            span: src/library/union.rs:65:43: 65:44 (#0),
        },
        Expr {
            kind: Binary {
                op: Gt,
                lhs: e154,
                rhs: e156,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(132),
            ),
            span: src/library/union.rs:65:15: 65:44 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(132),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).132),
                ),
                value: e157,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(132),
            ),
            span: src/library/union.rs:65:15: 65:44 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(132),
                lint_level: Inherited,
                value: e158,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(132),
            ),
            span: src/library/union.rs:65:15: 65:44 (#0),
        },
        Expr {
            kind: Use {
                source: e159,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(151),
            ),
            span: src/library/union.rs:65:15: 65:44 (#144),
        },
        Expr {
            kind: Scope {
                region_scope: Node(138),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).138),
                ),
                value: e160,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(151),
            ),
            span: src/library/union.rs:65:15: 65:44 (#144),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).14),
                ),
            },
            ty: std::vec::Vec<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>,
            temp_lifetime: Some(
                Node(143),
            ),
            span: src/library/union.rs:66:13: 66:32 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e162,
            },
            ty: &mut std::vec::Vec<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>,
            temp_lifetime: Some(
                Node(143),
            ),
            span: src/library/union.rs:66:13: 66:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(141),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).141),
                ),
                value: e163,
            },
            ty: &mut std::vec::Vec<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>,
            temp_lifetime: Some(
                Node(143),
            ),
            span: src/library/union.rs:66:13: 66:32 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::vec::Vec<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>) -> std::option::Option<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)> {std::vec::Vec::<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>::pop},
            temp_lifetime: Some(
                Node(143),
            ),
            span: src/library/union.rs:66:33: 66:36 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::vec::Vec<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>) -> std::option::Option<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)> {std::vec::Vec::<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>::pop},
                fun: e165,
                args: [
                    e164,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:66:33: 66:38 (#0),
            },
            ty: std::option::Option<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>,
            temp_lifetime: Some(
                Node(143),
            ),
            span: src/library/union.rs:66:13: 66:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(139),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).139),
                ),
                value: e166,
            },
            ty: std::option::Option<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>,
            temp_lifetime: Some(
                Node(143),
            ),
            span: src/library/union.rs:66:13: 66:38 (#0),
        },
        Expr {
            kind: Block {
                block: b5,
            },
            ty: (),
            temp_lifetime: Some(
                Node(145),
            ),
            span: src/library/union.rs:65:45: 67:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(145),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).145),
                ),
                value: e168,
            },
            ty: (),
            temp_lifetime: Some(
                Node(145),
            ),
            span: src/library/union.rs:65:45: 67:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(145),
                lint_level: Inherited,
                value: e169,
            },
            ty: (),
            temp_lifetime: Some(
                Node(145),
            ),
            span: src/library/union.rs:65:45: 67:10 (#0),
        },
        Expr {
            kind: Break {
                label: Node(131),
                value: None,
            },
            ty: !,
            temp_lifetime: Some(
                Node(147),
            ),
            span: src/library/union.rs:65:9: 67:10 (#143),
        },
        Expr {
            kind: NeverToAny {
                source: e171,
            },
            ty: (),
            temp_lifetime: Some(
                Node(147),
            ),
            span: src/library/union.rs:65:9: 67:10 (#143),
        },
        Expr {
            kind: Scope {
                region_scope: Node(146),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).146),
                ),
                value: e172,
            },
            ty: (),
            temp_lifetime: Some(
                Node(147),
            ),
            span: src/library/union.rs:65:9: 67:10 (#143),
        },
        Expr {
            kind: Block {
                block: b6,
            },
            ty: !,
            temp_lifetime: Some(
                Node(149),
            ),
            span: src/library/union.rs:65:9: 67:10 (#143),
        },
        Expr {
            kind: NeverToAny {
                source: e174,
            },
            ty: (),
            temp_lifetime: Some(
                Node(149),
            ),
            span: src/library/union.rs:65:9: 67:10 (#143),
        },
        Expr {
            kind: Scope {
                region_scope: Node(149),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).149),
                ),
                value: e175,
            },
            ty: (),
            temp_lifetime: Some(
                Node(149),
            ),
            span: src/library/union.rs:65:9: 67:10 (#143),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(149),
                lint_level: Inherited,
                value: e176,
            },
            ty: (),
            temp_lifetime: Some(
                Node(149),
            ),
            span: src/library/union.rs:65:9: 67:10 (#143),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(145),
                cond: e161,
                then: e170,
                else_opt: Some(
                    e177,
                ),
            },
            ty: (),
            temp_lifetime: Some(
                Node(151),
            ),
            span: src/library/union.rs:65:9: 67:10 (#143),
        },
        Expr {
            kind: Scope {
                region_scope: Node(150),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).150),
                ),
                value: e178,
            },
            ty: (),
            temp_lifetime: Some(
                Node(151),
            ),
            span: src/library/union.rs:65:9: 67:10 (#143),
        },
        Expr {
            kind: Block {
                block: b7,
            },
            ty: (),
            temp_lifetime: Some(
                Node(151),
            ),
            span: src/library/union.rs:65:9: 67:10 (#143),
        },
        Expr {
            kind: Loop {
                body: e180,
            },
            ty: (),
            temp_lifetime: Some(
                Node(152),
            ),
            span: src/library/union.rs:65:9: 67:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(131),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).131),
                ),
                value: e181,
            },
            ty: (),
            temp_lifetime: Some(
                Node(152),
            ),
            span: src/library/union.rs:65:9: 67:10 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).14),
                ),
            },
            ty: std::vec::Vec<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>,
            temp_lifetime: Some(
                Node(209),
            ),
            span: src/library/union.rs:68:50: 68:69 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e183,
            },
            ty: &mut std::vec::Vec<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>,
            temp_lifetime: Some(
                Node(209),
            ),
            span: src/library/union.rs:68:50: 68:75 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(163),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).163),
                ),
                value: e184,
            },
            ty: &mut std::vec::Vec<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>,
            temp_lifetime: Some(
                Node(209),
            ),
            span: src/library/union.rs:68:50: 68:69 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::vec::Vec<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>) -> std::option::Option<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)> {std::vec::Vec::<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>::pop},
            temp_lifetime: Some(
                Node(209),
            ),
            span: src/library/union.rs:68:70: 68:73 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::vec::Vec<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>) -> std::option::Option<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)> {std::vec::Vec::<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>::pop},
                fun: e186,
                args: [
                    e185,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:68:70: 68:75 (#0),
            },
            ty: std::option::Option<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>,
            temp_lifetime: Some(
                Node(209),
            ),
            span: src/library/union.rs:68:50: 68:75 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(161),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).161),
                ),
                value: e187,
            },
            ty: std::option::Option<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>,
            temp_lifetime: Some(
                Node(209),
            ),
            span: src/library/union.rs:68:50: 68:75 (#0),
        },
        Expr {
            kind: Let {
                expr: e188,
                pat: Pat {
                    ty: std::option::Option<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>,
                    span: src/library/union.rs:68:16: 68:47 (#0),
                    kind: Variant {
                        adt_def: std::option::Option,
                        substs: [
                            (std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray),
                        ],
                        variant_index: 1,
                        subpatterns: [
                            FieldPat {
                                field: field[0],
                                pattern: Pat {
                                    ty: (std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray),
                                    span: src/library/union.rs:68:21: 68:46 (#0),
                                    kind: Leaf {
                                        subpatterns: [
                                            FieldPat {
                                                field: field[0],
                                                pattern: Pat {
                                                    ty: std::boxed::Box<dyn core::DataModel>,
                                                    span: src/library/union.rs:68:22: 68:27 (#0),
                                                    kind: Binding {
                                                        mutability: Not,
                                                        name: "child",
                                                        mode: ByValue,
                                                        var: LocalVarId(
                                                            HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).157),
                                                        ),
                                                        ty: std::boxed::Box<dyn core::DataModel>,
                                                        subpattern: None,
                                                        is_primary: true,
                                                    },
                                                },
                                            },
                                            FieldPat {
                                                field: field[1],
                                                pattern: Pat {
                                                    ty: core::bit_array::BitArray,
                                                    span: src/library/union.rs:68:29: 68:45 (#0),
                                                    kind: Binding {
                                                        mutability: Not,
                                                        name: "input_from_child",
                                                        mode: ByValue,
                                                        var: LocalVarId(
                                                            HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).158),
                                                        ),
                                                        ty: core::bit_array::BitArray,
                                                        subpattern: None,
                                                        is_primary: true,
                                                    },
                                                },
                                            },
                                        ],
                                    },
                                },
                            },
                        ],
                    },
                },
            },
            ty: bool,
            temp_lifetime: Some(
                Node(209),
            ),
            span: src/library/union.rs:68:12: 68:75 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(154),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).154),
                ),
                value: e189,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(209),
            ),
            span: src/library/union.rs:68:12: 68:75 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).4),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(171),
            ),
            span: src/library/union.rs:70:13: 70:18 (#0),
        },
        Expr {
            kind: Deref {
                arg: e191,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(171),
            ),
            span: src/library/union.rs:70:13: 70:53 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e192,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(171),
            ),
            span: src/library/union.rs:70:13: 70:53 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(167),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).167),
                ),
                value: e193,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(171),
            ),
            span: src/library/union.rs:70:13: 70:18 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).158),
                ),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(171),
            ),
            span: src/library/union.rs:70:36: 70:52 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(169),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).169),
                ),
                value: e195,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(171),
            ),
            span: src/library/union.rs:70:36: 70:52 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut core::bit_array::BitArray, core::bit_array::BitArray) {core::bit_array::BitArray::advance_to_match},
            temp_lifetime: Some(
                Node(171),
            ),
            span: src/library/union.rs:70:19: 70:35 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut core::bit_array::BitArray, core::bit_array::BitArray) {core::bit_array::BitArray::advance_to_match},
                fun: e197,
                args: [
                    e194,
                    e196,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:70:19: 70:53 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(171),
            ),
            span: src/library/union.rs:70:13: 70:53 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(165),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).165),
                ),
                value: e198,
            },
            ty: (),
            temp_lifetime: Some(
                Node(171),
            ),
            span: src/library/union.rs:70:13: 70:53 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:296 ~ alloc[42dc]::boxed::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:294 ~ alloc[42dc]::boxed::{impl#0}),
                                        self_ty: std::boxed::Box<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::union::Union) -> std::boxed::Box<library::union::Union> {std::boxed::Box::<library::union::Union>::new},
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:71:18: 71:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(176),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).176),
                ),
                value: e200,
            },
            ty: fn(library::union::Union) -> std::boxed::Box<library::union::Union> {std::boxed::Box::<library::union::Union>::new},
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:71:18: 71:26 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).2),
                ),
            },
            ty: &library::union::Union,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:72:23: 72:27 (#0),
        },
        Expr {
            kind: Deref {
                arg: e202,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:72:23: 72:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(186),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).186),
                ),
                value: e203,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:72:23: 72:27 (#0),
        },
        Expr {
            kind: Field {
                lhs: e204,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:72:23: 72:32 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e205,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:72:23: 72:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(185),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).185),
                ),
                value: e206,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:72:23: 72:32 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> std::rc::Rc<core::DataModelBase> {<std::rc::Rc<core::DataModelBase> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:72:33: 72:38 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> std::rc::Rc<core::DataModelBase> {<std::rc::Rc<core::DataModelBase> as std::clone::Clone>::clone},
                fun: e208,
                args: [
                    e207,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:72:33: 72:40 (#0),
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:72:23: 72:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(183),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).183),
                ),
                value: e209,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:72:23: 72:40 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).2),
                ),
            },
            ty: &library::union::Union,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:73:37: 73:41 (#0),
        },
        Expr {
            kind: Deref {
                arg: e211,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:73:37: 73:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(192),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).192),
                ),
                value: e212,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:73:37: 73:41 (#0),
        },
        Expr {
            kind: Field {
                lhs: e213,
                variant_index: 0,
                name: field[1],
            },
            ty: std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:73:37: 73:60 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e214,
            },
            ty: &std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:73:37: 73:68 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(191),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).191),
                ),
                value: e215,
            },
            ty: &std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:73:37: 73:60 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>) -> std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>> {<std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:73:61: 73:66 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>) -> std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>> {<std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>> as std::clone::Clone>::clone},
                fun: e217,
                args: [
                    e216,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:73:61: 73:68 (#0),
            },
            ty: std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:73:37: 73:68 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(189),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).189),
                ),
                value: e218,
            },
            ty: std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:73:37: 73:68 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(2:2508 ~ core[102f]::convert::From::from),
                            UserSubsts {
                                substs: [
                                    std::rc::Rc<^0>,
                                    ^1,
                                ],
                                user_self_ty: None,
                            },
                        ),
                    },
                ),
            },
            ty: fn(std::boxed::Box<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::convert::From<std::boxed::Box<dyn core::DataModel>>>::from},
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:74:24: 74:32 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(196),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).196),
                ),
                value: e220,
            },
            ty: fn(std::boxed::Box<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::convert::From<std::boxed::Box<dyn core::DataModel>>>::from},
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:74:24: 74:32 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).157),
                ),
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:74:33: 74:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(200),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).200),
                ),
                value: e222,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:74:33: 74:38 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::boxed::Box<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::convert::From<std::boxed::Box<dyn core::DataModel>>>::from},
                fun: e221,
                args: [
                    e223,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:74:24: 74:39 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:74:24: 74:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(195),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).195),
                ),
                value: e224,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:74:24: 74:39 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: library::union::Union,
                    variant_index: 0,
                    substs: [],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e210,
                        },
                        FieldExpr {
                            name: field[1],
                            expr: e219,
                        },
                        FieldExpr {
                            name: field[2],
                            expr: e225,
                        },
                    ],
                    base: None,
                },
            ),
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:71:27: 75:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(180),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).180),
                ),
                value: e226,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:71:27: 75:14 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::union::Union) -> std::boxed::Box<library::union::Union> {std::boxed::Box::<library::union::Union>::new},
                fun: e201,
                args: [
                    e227,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:71:18: 75:15 (#0),
            },
            ty: std::boxed::Box<library::union::Union>,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:71:18: 75:15 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e228,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:71:18: 75:15 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(175),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).175),
                ),
                value: e229,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:71:18: 75:15 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: std::option::Option,
                    variant_index: 1,
                    substs: [
                        std::boxed::Box<dyn core::DataModel>,
                    ],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e230,
                        },
                    ],
                    base: None,
                },
            ),
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:71:13: 75:16 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(172),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).172),
                ),
                value: e231,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:71:13: 75:16 (#0),
        },
        Expr {
            kind: Block {
                block: b8,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:68:76: 76:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(203),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).203),
                ),
                value: e233,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:68:76: 76:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(203),
                lint_level: Inherited,
                value: e234,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(203),
            ),
            span: src/library/union.rs:68:76: 76:10 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: std::option::Option,
                    variant_index: 0,
                    substs: [
                        std::boxed::Box<dyn core::DataModel>,
                    ],
                    user_ty: None,
                    fields: [],
                    base: None,
                },
            ),
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(204),
            ),
            span: src/library/union.rs:77:13: 77:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(205),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).205),
                ),
                value: e236,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(204),
            ),
            span: src/library/union.rs:77:13: 77:17 (#0),
        },
        Expr {
            kind: Block {
                block: b9,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(204),
            ),
            span: src/library/union.rs:76:16: 78:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(204),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).204),
                ),
                value: e238,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(204),
            ),
            span: src/library/union.rs:76:16: 78:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(204),
                lint_level: Inherited,
                value: e239,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(204),
            ),
            span: src/library/union.rs:76:16: 78:10 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(203),
                cond: e190,
                then: e235,
                else_opt: Some(
                    e240,
                ),
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(209),
            ),
            span: src/library/union.rs:68:9: 78:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(153),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).153),
                ),
                value: e241,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(209),
            ),
            span: src/library/union.rs:68:9: 78:10 (#0),
        },
        Expr {
            kind: Block {
                block: b10,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(209),
            ),
            span: src/library/union.rs:52:96: 79:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(209),
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).209),
                ),
                value: e243,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(209),
            ),
            span: src/library/union.rs:52:96: 79:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(209),
                lint_level: Inherited,
                value: e244,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(209),
            ),
            span: src/library/union.rs:52:96: 79:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 208, first_statement_index: 0},
                init_scope: Node(7),
                pattern: Pat {
                    ty: std::vec::Vec<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>,
                    span: src/library/union.rs:53:13: 53:36 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "successful_children",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).14),
                        ),
                        ty: std::vec::Vec<(std::boxed::Box<dyn core::DataModel>, core::bit_array::BitArray)>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e3,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).13),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(7),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 86, first_statement_index: 0},
                init_scope: Node(27),
                pattern: Pat {
                    ty: core::bit_array::BitArray,
                    span: src/library/union.rs:55:17: 55:36 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "input_for_child",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).33),
                        ),
                        ty: core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e40,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).32),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(27),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 86, first_statement_index: 1},
                init_scope: Node(34),
                pattern: Pat {
                    ty: core::context::Context<'_>,
                    span: src/library/union.rs:56:17: 56:26 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "child_ctx",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).52),
                        ),
                        ty: core::context::Context<'_>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e54,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).51),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(34),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(83),
                expr: e92,
            },
            opt_destruction_scope: Some(
                Destruction(83),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(96),
                expr: e102,
            },
            opt_destruction_scope: Some(
                Destruction(96),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(103),
                expr: e111,
            },
            opt_destruction_scope: Some(
                Destruction(103),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(125),
                expr: e141,
            },
            opt_destruction_scope: Some(
                Destruction(125),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(127),
                expr: e143,
            },
            opt_destruction_scope: Some(
                Destruction(127),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(130),
                expr: e148,
            },
            opt_destruction_scope: Some(
                Destruction(130),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(143),
                expr: e167,
            },
            opt_destruction_scope: Some(
                Destruction(143),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(147),
                expr: e173,
            },
            opt_destruction_scope: Some(
                Destruction(147),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(152),
                expr: e182,
            },
            opt_destruction_scope: Some(
                Destruction(152),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(171),
                expr: e199,
            },
            opt_destruction_scope: Some(
                Destruction(171),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::union::Union,
                    span: src/library/union.rs:52:14: 52:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).2),
                        ),
                        ty: &library::union::Union,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::union::Union,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &mut core::bit_array::BitArray,
                    span: src/library/union.rs:52:21: 52:26 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "input",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).4),
                        ),
                        ty: &mut core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut core::bit_array::BitArray,
            ty_span: Some(
                src/library/union.rs:52:28: 52:41 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).3),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &std::rc::Rc<core::context::Context<'_>>,
                    span: src/library/union.rs:52:43: 52:46 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "ctx",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).6),
                        ),
                        ty: &std::rc::Rc<core::context::Context<'_>>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &std::rc::Rc<core::context::Context<'_>>,
            ty_span: Some(
                src/library/union.rs:52:48: 52:64 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:251 ~ andrew_fuzz[741f]::library::union::{impl#5}::parse).5),
            ),
        },
    ],
}

DefId(0:253 ~ andrew_fuzz[741f]::library::union::{impl#6}::debug):
Thir {
    body_type: Fn(
        ([&library::union::Union]; c_variadic: false)->std::string::String,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(6),
            opt_destruction_scope: None,
            span: src/library/union.rs:83:31: 85:6 (#0),
            stmts: [],
            expr: Some(
                e6,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "",
                        Cooked,
                    ),
                    span: src/library/union.rs:84:9: 84:11 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/union.rs:84:9: 84:11 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: str,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/union.rs:84:9: 84:23 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e1,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/union.rs:84:9: 84:23 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:253 ~ andrew_fuzz[741f]::library::union::{impl#6}::debug).5),
                ),
                value: e2,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/union.rs:84:9: 84:11 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/union.rs:84:12: 84:21 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
                fun: e4,
                args: [
                    e3,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:84:12: 84:23 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/union.rs:84:9: 84:23 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:253 ~ andrew_fuzz[741f]::library::union::{impl#6}::debug).3),
                ),
                value: e5,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/union.rs:84:9: 84:23 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/union.rs:83:31: 85:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:253 ~ andrew_fuzz[741f]::library::union::{impl#6}::debug).7),
                ),
                value: e7,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/union.rs:83:31: 85:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(7),
                lint_level: Inherited,
                value: e8,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/union.rs:83:31: 85:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::union::Union,
                    span: src/library/union.rs:83:14: 83:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:253 ~ andrew_fuzz[741f]::library::union::{impl#6}::debug).2),
                        ),
                        ty: &library::union::Union,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::union::Union,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:253 ~ andrew_fuzz[741f]::library::union::{impl#6}::debug).1),
            ),
        },
    ],
}

DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz):
Thir {
    body_type: Fn(
        ([&library::union::Union]; c_variadic: false)->std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(55),
            opt_destruction_scope: None,
            span: src/library/union.rs:89:46: 98:6 (#0),
            stmts: [],
            expr: Some(
                e31,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).2),
                ),
            },
            ty: &library::union::Union,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:90:9: 90:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:90:9: 90:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(12),
                lint_level: Explicit(
                    HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).12),
                ),
                value: e1,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:90:9: 90:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[2],
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:90:9: 90:19 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e3,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:90:9: 90:26 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:90:9: 90:26 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
                fun: e5,
                args: [
                    e4,
                ],
                from_hir_call: false,
                fn_span: src/library/union.rs:90:9: 90:26 (#0),
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:90:9: 90:26 (#0),
        },
        Expr {
            kind: Deref {
                arg: e6,
            },
            ty: dyn core::DataModel,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:90:9: 90:26 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e7,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:90:9: 90:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).11),
                ),
                value: e8,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:90:9: 90:19 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a dyn core::DataModel) -> std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>> {<dyn core::DataModel as core::Fuzzer>::fuzz},
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:90:20: 90:24 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a dyn core::DataModel) -> std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>> {<dyn core::DataModel as core::Fuzzer>::fuzz},
                fun: e10,
                args: [
                    e9,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:90:20: 90:26 (#0),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:90:9: 90:26 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e11,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:90:9: 90:33 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> &'a <std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::ops::Deref>::Target {<std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:90:9: 90:33 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> &'a <std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::ops::Deref>::Target {<std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::ops::Deref>::deref},
                fun: e13,
                args: [
                    e12,
                ],
                from_hir_call: false,
                fn_span: src/library/union.rs:90:9: 90:33 (#0),
            },
            ty: &[std::rc::Rc<dyn core::DataModel>],
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:90:9: 90:33 (#0),
        },
        Expr {
            kind: Deref {
                arg: e14,
            },
            ty: [std::rc::Rc<dyn core::DataModel>],
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:90:9: 90:33 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e15,
            },
            ty: &[std::rc::Rc<dyn core::DataModel>],
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:90:9: 90:33 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).9),
                ),
                value: e16,
            },
            ty: &[std::rc::Rc<dyn core::DataModel>],
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:90:9: 90:26 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a [std::rc::Rc<dyn core::DataModel>]) -> std::slice::Iter<'a, std::rc::Rc<dyn core::DataModel>> {core::slice::<impl [std::rc::Rc<dyn core::DataModel>]>::iter},
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:90:27: 90:31 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a [std::rc::Rc<dyn core::DataModel>]) -> std::slice::Iter<'a, std::rc::Rc<dyn core::DataModel>> {core::slice::<impl [std::rc::Rc<dyn core::DataModel>]>::iter},
                fun: e18,
                args: [
                    e17,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:90:27: 90:33 (#0),
            },
            ty: std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:90:9: 90:33 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).7),
                ),
                value: e19,
            },
            ty: std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:90:9: 90:33 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).2),
                ),
            },
            ty: &library::union::Union,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:90:38: 97:10 (#0),
        },
        Expr {
            kind: Deref {
                arg: e21,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:90:38: 97:10 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e22,
            },
            ty: &library::union::Union,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:90:38: 97:10 (#0),
        },
        Expr {
            kind: Closure(
                ClosureExpr {
                    closure_id: DefId(0:256 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz::{closure#0}),
                    substs: Closure(
                        [
                            i16,
                            extern "rust-call" fn((&std::rc::Rc<dyn core::DataModel>,)) -> std::rc::Rc<dyn core::DataModel>,
                            (&library::union::Union,),
                        ],
                    ),
                    upvars: [
                        e23,
                    ],
                    movability: None,
                    fake_reads: [],
                },
            ),
            ty: [closure@src/library/union.rs:90:38: 90:53],
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:90:38: 97:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).14),
                ),
                value: e24,
            },
            ty: [closure@src/library/union.rs:90:38: 90:53],
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:90:38: 97:10 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>, [closure@src/library/union.rs:90:38: 90:53]) -> std::iter::Map<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>, [closure@src/library/union.rs:90:38: 90:53]> {<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::map::<std::rc::Rc<dyn core::DataModel>, [closure@src/library/union.rs:90:38: 90:53]>},
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:90:34: 90:37 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>, [closure@src/library/union.rs:90:38: 90:53]) -> std::iter::Map<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>, [closure@src/library/union.rs:90:38: 90:53]> {<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::map::<std::rc::Rc<dyn core::DataModel>, [closure@src/library/union.rs:90:38: 90:53]>},
                fun: e26,
                args: [
                    e20,
                    e25,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:90:34: 97:11 (#0),
            },
            ty: std::iter::Map<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>, [closure@src/library/union.rs:90:38: 90:53]>,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:90:9: 97:11 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).5),
                ),
                value: e27,
            },
            ty: std::iter::Map<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>, [closure@src/library/union.rs:90:38: 90:53]>,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:90:9: 97:11 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::iter::Map<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>, [closure@src/library/union.rs:90:38: 90:53]>) -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {<std::iter::Map<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>, [closure@src/library/union.rs:90:38: 90:53]> as std::iter::Iterator>::collect::<std::vec::Vec<std::rc::Rc<dyn core::DataModel>>>},
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:97:12: 97:19 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::iter::Map<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>, [closure@src/library/union.rs:90:38: 90:53]>) -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {<std::iter::Map<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>, [closure@src/library/union.rs:90:38: 90:53]> as std::iter::Iterator>::collect::<std::vec::Vec<std::rc::Rc<dyn core::DataModel>>>},
                fun: e29,
                args: [
                    e28,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:97:12: 97:21 (#0),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:90:9: 97:21 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).3),
                ),
                value: e30,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:90:9: 97:21 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:89:46: 98:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(56),
                lint_level: Explicit(
                    HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).56),
                ),
                value: e32,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:89:46: 98:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(56),
                lint_level: Inherited,
                value: e33,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(56),
            ),
            span: src/library/union.rs:89:46: 98:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::union::Union,
                    span: src/library/union.rs:89:13: 89:18 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).2),
                        ),
                        ty: &library::union::Union,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::union::Union,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).1),
            ),
        },
    ],
}

DefId(0:256 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz::{closure#0}):
Thir {
    body_type: Fn(
        ([&std::rc::Rc<dyn core::DataModel>]; c_variadic: false)->std::rc::Rc<dyn core::DataModel>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(53),
            opt_destruction_scope: None,
            span: src/library/union.rs:90:54: 97:10 (#0),
            stmts: [
                s0,
            ],
            expr: Some(
                e34,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::union::Union) -> std::rc::Rc<library::union::Union> {std::rc::Rc::<library::union::Union>::new},
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:91:51: 91:58 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(26),
                lint_level: Explicit(
                    HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).26),
                ),
                value: e0,
            },
            ty: fn(library::union::Union) -> std::rc::Rc<library::union::Union> {std::rc::Rc::<library::union::Union>::new},
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:91:51: 91:58 (#0),
        },
        Expr {
            kind: UpvarRef {
                closure_def_id: DefId(0:256 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz::{closure#0}),
                var_hir_id: LocalVarId(
                    HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).2),
                ),
            },
            ty: &library::union::Union,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:92:23: 92:27 (#0),
        },
        Expr {
            kind: Deref {
                arg: e2,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:92:23: 92:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(36),
                lint_level: Explicit(
                    HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).36),
                ),
                value: e3,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:92:23: 92:27 (#0),
        },
        Expr {
            kind: Field {
                lhs: e4,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:92:23: 92:32 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e5,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:92:23: 92:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(35),
                lint_level: Explicit(
                    HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).35),
                ),
                value: e6,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:92:23: 92:32 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> std::rc::Rc<core::DataModelBase> {<std::rc::Rc<core::DataModelBase> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:92:33: 92:38 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> std::rc::Rc<core::DataModelBase> {<std::rc::Rc<core::DataModelBase> as std::clone::Clone>::clone},
                fun: e8,
                args: [
                    e7,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:92:33: 92:40 (#0),
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:92:23: 92:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(33),
                lint_level: Explicit(
                    HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).33),
                ),
                value: e9,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:92:23: 92:40 (#0),
        },
        Expr {
            kind: UpvarRef {
                closure_def_id: DefId(0:256 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz::{closure#0}),
                var_hir_id: LocalVarId(
                    HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).2),
                ),
            },
            ty: &library::union::Union,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:93:37: 93:41 (#0),
        },
        Expr {
            kind: Deref {
                arg: e11,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:93:37: 93:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(42),
                lint_level: Explicit(
                    HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).42),
                ),
                value: e12,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:93:37: 93:41 (#0),
        },
        Expr {
            kind: Field {
                lhs: e13,
                variant_index: 0,
                name: field[1],
            },
            ty: std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:93:37: 93:60 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e14,
            },
            ty: &std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:93:37: 93:68 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(41),
                lint_level: Explicit(
                    HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).41),
                ),
                value: e15,
            },
            ty: &std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:93:37: 93:60 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>) -> std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>> {<std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:93:61: 93:66 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>) -> std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>> {<std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>> as std::clone::Clone>::clone},
                fun: e17,
                args: [
                    e16,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:93:61: 93:68 (#0),
            },
            ty: std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:93:37: 93:68 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(39),
                lint_level: Explicit(
                    HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).39),
                ),
                value: e18,
            },
            ty: std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:93:37: 93:68 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).16),
                ),
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:94:24: 94:37 (#0),
        },
        Expr {
            kind: Deref {
                arg: e20,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:94:24: 94:45 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e21,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:94:24: 94:45 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(47),
                lint_level: Explicit(
                    HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).47),
                ),
                value: e22,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:94:24: 94:37 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:94:38: 94:43 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e24,
                args: [
                    e23,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:94:38: 94:45 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:94:24: 94:45 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e25,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:94:24: 94:45 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(45),
                lint_level: Explicit(
                    HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).45),
                ),
                value: e26,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:94:24: 94:45 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: library::union::Union,
                    variant_index: 0,
                    substs: [],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e10,
                        },
                        FieldExpr {
                            name: field[1],
                            expr: e19,
                        },
                        FieldExpr {
                            name: field[2],
                            expr: e27,
                        },
                    ],
                    base: None,
                },
            ),
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:91:59: 95:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(30),
                lint_level: Explicit(
                    HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).30),
                ),
                value: e28,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:91:59: 95:14 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::union::Union) -> std::rc::Rc<library::union::Union> {std::rc::Rc::<library::union::Union>::new},
                fun: e1,
                args: [
                    e29,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:91:51: 95:15 (#0),
            },
            ty: std::rc::Rc<library::union::Union>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:91:51: 95:15 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e30,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:91:51: 95:15 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).25),
                ),
                value: e31,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/union.rs:91:51: 95:15 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).50),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/library/union.rs:96:13: 96:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(51),
                lint_level: Explicit(
                    HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).51),
                ),
                value: e33,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/library/union.rs:96:13: 96:25 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/library/union.rs:96:13: 96:25 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e35,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/library/union.rs:96:13: 96:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).17),
                ),
                value: e36,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/library/union.rs:90:54: 97:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(17),
                lint_level: Inherited,
                value: e37,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/library/union.rs:90:54: 97:10 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 53, first_statement_index: 0},
                init_scope: Node(18),
                pattern: Pat {
                    ty: std::rc::Rc<dyn core::DataModel>,
                    span: src/library/union.rs:91:17: 91:29 (#0),
                    kind: AscribeUserType {
                        ascription: Ascription {
                            annotation: CanonicalUserTypeAnnotation {
                                user_ty: Canonical {
                                    max_universe: U0,
                                    variables: [
                                        CanonicalVarInfo {
                                            kind: Region(
                                                U0,
                                            ),
                                        },
                                    ],
                                    value: Ty(
                                        std::rc::Rc<dyn core::DataModel>,
                                    ),
                                },
                                span: src/library/union.rs:91:31: 91:48 (#0),
                                inferred_ty: std::rc::Rc<dyn core::DataModel>,
                            },
                            variance: +,
                        },
                        subpattern: Pat {
                            ty: std::rc::Rc<dyn core::DataModel>,
                            span: src/library/union.rs:91:17: 91:29 (#0),
                            kind: Binding {
                                mutability: Not,
                                name: "mutated_self",
                                mode: ByValue,
                                var: LocalVarId(
                                    HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).50),
                                ),
                                ty: std::rc::Rc<dyn core::DataModel>,
                                subpattern: None,
                                is_primary: true,
                            },
                        },
                    },
                },
                initializer: Some(
                    e32,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).49),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(18),
            ),
        },
    ],
    params: [
        Param {
            pat: None,
            ty: &mut [closure@src/library/union.rs:90:38: 90:53],
            ty_span: None,
            self_kind: None,
            hir_id: None,
        },
        Param {
            pat: Some(
                Pat {
                    ty: &std::rc::Rc<dyn core::DataModel>,
                    span: src/library/union.rs:90:39: 90:52 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "mutated_child",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).16),
                        ),
                        ty: &std::rc::Rc<dyn core::DataModel>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &std::rc::Rc<dyn core::DataModel>,
            ty_span: None,
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:255 ~ andrew_fuzz[741f]::library::union::{impl#7}::fuzz).15),
            ),
        },
    ],
}

DefId(0:258 ~ andrew_fuzz[741f]::library::union::{impl#8}::name):
Thir {
    body_type: Fn(
        ([&library::union::Union]; c_variadic: false)->&std::string::String,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(8),
            opt_destruction_scope: None,
            span: src/library/union.rs:102:31: 104:6 (#0),
            stmts: [],
            expr: Some(
                e14,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:258 ~ andrew_fuzz[741f]::library::union::{impl#8}::name).2),
                ),
            },
            ty: &library::union::Union,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:103:9: 103:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:103:9: 103:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:258 ~ andrew_fuzz[741f]::library::union::{impl#8}::name).6),
                ),
                value: e1,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:103:9: 103:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:103:9: 103:18 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e3,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:103:9: 103:25 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> &'a <std::rc::Rc<core::DataModelBase> as std::ops::Deref>::Target {<std::rc::Rc<core::DataModelBase> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:103:9: 103:25 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> &'a <std::rc::Rc<core::DataModelBase> as std::ops::Deref>::Target {<std::rc::Rc<core::DataModelBase> as std::ops::Deref>::deref},
                fun: e5,
                args: [
                    e4,
                ],
                from_hir_call: false,
                fn_span: src/library/union.rs:103:9: 103:25 (#0),
            },
            ty: &core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:103:9: 103:25 (#0),
        },
        Expr {
            kind: Deref {
                arg: e6,
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:103:9: 103:25 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e7,
            },
            ty: &core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:103:9: 103:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:258 ~ andrew_fuzz[741f]::library::union::{impl#8}::name).5),
                ),
                value: e8,
            },
            ty: &core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:103:9: 103:18 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::DataModelBase) -> &'a std::string::String {core::DataModelBase::name},
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:103:19: 103:23 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::DataModelBase) -> &'a std::string::String {core::DataModelBase::name},
                fun: e10,
                args: [
                    e9,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:103:19: 103:25 (#0),
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:103:9: 103:25 (#0),
        },
        Expr {
            kind: Deref {
                arg: e11,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:103:9: 103:25 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e12,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:103:9: 103:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:258 ~ andrew_fuzz[741f]::library::union::{impl#8}::name).3),
                ),
                value: e13,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:103:9: 103:25 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:102:31: 104:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:258 ~ andrew_fuzz[741f]::library::union::{impl#8}::name).9),
                ),
                value: e15,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:102:31: 104:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(9),
                lint_level: Inherited,
                value: e16,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/union.rs:102:31: 104:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::union::Union,
                    span: src/library/union.rs:102:13: 102:18 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:258 ~ andrew_fuzz[741f]::library::union::{impl#8}::name).2),
                        ),
                        ty: &library::union::Union,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::union::Union,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:258 ~ andrew_fuzz[741f]::library::union::{impl#8}::name).1),
            ),
        },
    ],
}

DefId(0:259 ~ andrew_fuzz[741f]::library::union::{impl#8}::set_name):
Thir {
    body_type: Fn(
        ([&mut library::union::Union, &str]; c_variadic: false)->(),
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(24),
            opt_destruction_scope: None,
            span: src/library/union.rs:105:40: 107:6 (#0),
            stmts: [
                s0,
            ],
            expr: None,
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:259 ~ andrew_fuzz[741f]::library::union::{impl#8}::set_name).2),
                ),
            },
            ty: &mut library::union::Union,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/union.rs:106:9: 106:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/union.rs:106:9: 106:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:259 ~ andrew_fuzz[741f]::library::union::{impl#8}::set_name).7),
                ),
                value: e1,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/union.rs:106:9: 106:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/union.rs:106:9: 106:18 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:259 ~ andrew_fuzz[741f]::library::union::{impl#8}::set_name).6),
                ),
                value: e3,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/union.rs:106:9: 106:18 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/union.rs:106:21: 106:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:259 ~ andrew_fuzz[741f]::library::union::{impl#8}::set_name).10),
                ),
                value: e5,
            },
            ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/union.rs:106:21: 106:28 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/union.rs:106:29: 106:47 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:259 ~ andrew_fuzz[741f]::library::union::{impl#8}::set_name).15),
                ),
                value: e7,
            },
            ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/union.rs:106:29: 106:47 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:259 ~ andrew_fuzz[741f]::library::union::{impl#8}::set_name).4),
                ),
            },
            ty: &str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/union.rs:106:48: 106:52 (#0),
        },
        Expr {
            kind: Deref {
                arg: e9,
            },
            ty: str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/union.rs:106:48: 106:64 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e10,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/union.rs:106:48: 106:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(21),
                lint_level: Explicit(
                    HirId(DefId(0:259 ~ andrew_fuzz[741f]::library::union::{impl#8}::set_name).21),
                ),
                value: e11,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/union.rs:106:48: 106:52 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/union.rs:106:53: 106:62 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
                fun: e13,
                args: [
                    e12,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:106:53: 106:64 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/union.rs:106:48: 106:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:259 ~ andrew_fuzz[741f]::library::union::{impl#8}::set_name).19),
                ),
                value: e14,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/union.rs:106:48: 106:64 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
                fun: e8,
                args: [
                    e15,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:106:29: 106:65 (#0),
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/union.rs:106:29: 106:65 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:259 ~ andrew_fuzz[741f]::library::union::{impl#8}::set_name).14),
                ),
                value: e16,
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/union.rs:106:29: 106:65 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
                fun: e6,
                args: [
                    e17,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:106:21: 106:66 (#0),
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/union.rs:106:21: 106:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:259 ~ andrew_fuzz[741f]::library::union::{impl#8}::set_name).9),
                ),
                value: e18,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/union.rs:106:21: 106:66 (#0),
        },
        Expr {
            kind: Assign {
                lhs: e4,
                rhs: e19,
            },
            ty: (),
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/union.rs:106:9: 106:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:259 ~ andrew_fuzz[741f]::library::union::{impl#8}::set_name).5),
                ),
                value: e20,
            },
            ty: (),
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/union.rs:106:9: 106:66 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/union.rs:105:40: 107:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:259 ~ andrew_fuzz[741f]::library::union::{impl#8}::set_name).25),
                ),
                value: e22,
            },
            ty: (),
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/union.rs:105:40: 107:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(25),
                lint_level: Inherited,
                value: e23,
            },
            ty: (),
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/union.rs:105:40: 107:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(23),
                expr: e21,
            },
            opt_destruction_scope: Some(
                Destruction(23),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &mut library::union::Union,
                    span: src/library/union.rs:105:17: 105:26 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:259 ~ andrew_fuzz[741f]::library::union::{impl#8}::set_name).2),
                        ),
                        ty: &mut library::union::Union,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut library::union::Union,
            ty_span: None,
            self_kind: Some(
                MutRef,
            ),
            hir_id: Some(
                HirId(DefId(0:259 ~ andrew_fuzz[741f]::library::union::{impl#8}::set_name).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &str,
                    span: src/library/union.rs:105:28: 105:32 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "name",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:259 ~ andrew_fuzz[741f]::library::union::{impl#8}::set_name).4),
                        ),
                        ty: &str,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &str,
            ty_span: Some(
                src/library/union.rs:105:34: 105:38 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:259 ~ andrew_fuzz[741f]::library::union::{impl#8}::set_name).3),
            ),
        },
    ],
}

DefId(0:262 ~ andrew_fuzz[741f]::library::union::{impl#10}::do_serialization):
Thir {
    body_type: Fn(
        ([&library::union::Union, &mut core::bit_array::BitArray]; c_variadic: false)->(),
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(13),
            opt_destruction_scope: None,
            span: src/library/union.rs:113:51: 115:6 (#0),
            stmts: [
                s0,
            ],
            expr: None,
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:262 ~ andrew_fuzz[741f]::library::union::{impl#10}::do_serialization).2),
                ),
            },
            ty: &library::union::Union,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/union.rs:114:9: 114:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/union.rs:114:9: 114:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:262 ~ andrew_fuzz[741f]::library::union::{impl#10}::do_serialization).8),
                ),
                value: e1,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/union.rs:114:9: 114:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[2],
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/union.rs:114:9: 114:19 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e3,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/union.rs:114:9: 114:40 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/union.rs:114:9: 114:40 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
                fun: e5,
                args: [
                    e4,
                ],
                from_hir_call: false,
                fn_span: src/library/union.rs:114:9: 114:40 (#0),
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/union.rs:114:9: 114:40 (#0),
        },
        Expr {
            kind: Deref {
                arg: e6,
            },
            ty: dyn core::DataModel,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/union.rs:114:9: 114:40 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e7,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/union.rs:114:9: 114:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:262 ~ andrew_fuzz[741f]::library::union::{impl#10}::do_serialization).7),
                ),
                value: e8,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/union.rs:114:9: 114:19 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:262 ~ andrew_fuzz[741f]::library::union::{impl#10}::do_serialization).4),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/union.rs:114:37: 114:39 (#0),
        },
        Expr {
            kind: Deref {
                arg: e10,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/union.rs:114:37: 114:39 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e11,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/union.rs:114:37: 114:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:262 ~ andrew_fuzz[741f]::library::union::{impl#10}::do_serialization).10),
                ),
                value: e12,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/union.rs:114:37: 114:39 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b> fn(&'a dyn core::DataModel, &'b mut core::bit_array::BitArray) {<dyn core::DataModel as core::Serializer>::do_serialization},
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/union.rs:114:20: 114:36 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b> fn(&'a dyn core::DataModel, &'b mut core::bit_array::BitArray) {<dyn core::DataModel as core::Serializer>::do_serialization},
                fun: e14,
                args: [
                    e9,
                    e13,
                ],
                from_hir_call: true,
                fn_span: src/library/union.rs:114:20: 114:40 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/union.rs:114:9: 114:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:262 ~ andrew_fuzz[741f]::library::union::{impl#10}::do_serialization).5),
                ),
                value: e15,
            },
            ty: (),
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/union.rs:114:9: 114:40 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(14),
            ),
            span: src/library/union.rs:113:51: 115:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:262 ~ andrew_fuzz[741f]::library::union::{impl#10}::do_serialization).14),
                ),
                value: e17,
            },
            ty: (),
            temp_lifetime: Some(
                Node(14),
            ),
            span: src/library/union.rs:113:51: 115:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(14),
                lint_level: Inherited,
                value: e18,
            },
            ty: (),
            temp_lifetime: Some(
                Node(14),
            ),
            span: src/library/union.rs:113:51: 115:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(12),
                expr: e16,
            },
            opt_destruction_scope: Some(
                Destruction(12),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::union::Union,
                    span: src/library/union.rs:113:25: 113:30 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:262 ~ andrew_fuzz[741f]::library::union::{impl#10}::do_serialization).2),
                        ),
                        ty: &library::union::Union,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::union::Union,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:262 ~ andrew_fuzz[741f]::library::union::{impl#10}::do_serialization).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &mut core::bit_array::BitArray,
                    span: src/library/union.rs:113:32: 113:34 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "ba",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:262 ~ andrew_fuzz[741f]::library::union::{impl#10}::do_serialization).4),
                        ),
                        ty: &mut core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut core::bit_array::BitArray,
            ty_span: Some(
                src/library/union.rs:113:36: 113:49 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:262 ~ andrew_fuzz[741f]::library::union::{impl#10}::do_serialization).3),
            ),
        },
    ],
}

DefId(0:289 ~ andrew_fuzz[741f]::library::set::{impl#0}::new):
Thir {
    body_type: Fn(
        ([std::rc::Rc<dyn core::DataModel>, std::vec::Vec<std::rc::Rc<dyn core::DataModel>>, std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>]; c_variadic: false)->library::set::Set,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(32),
            opt_destruction_scope: None,
            span: src/library/set.rs:14:138: 21:6 (#0),
            stmts: [],
            expr: Some(
                e24,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:16:19: 16:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:289 ~ andrew_fuzz[741f]::library::set::{impl#0}::new).11),
                ),
                value: e0,
            },
            ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:16:19: 16:26 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:16:27: 16:45 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(16),
                lint_level: Explicit(
                    HirId(DefId(0:289 ~ andrew_fuzz[741f]::library::set::{impl#0}::new).16),
                ),
                value: e2,
            },
            ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:16:27: 16:45 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "Set",
                        Cooked,
                    ),
                    span: src/library/set.rs:16:46: 16:51 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:16:46: 16:51 (#0),
        },
        Expr {
            kind: Deref {
                arg: e4,
            },
            ty: str,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:16:46: 16:63 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e5,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:16:46: 16:63 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(22),
                lint_level: Explicit(
                    HirId(DefId(0:289 ~ andrew_fuzz[741f]::library::set::{impl#0}::new).22),
                ),
                value: e6,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:16:46: 16:51 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:16:52: 16:61 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
                fun: e8,
                args: [
                    e7,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:16:52: 16:63 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:16:46: 16:63 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(20),
                lint_level: Explicit(
                    HirId(DefId(0:289 ~ andrew_fuzz[741f]::library::set::{impl#0}::new).20),
                ),
                value: e9,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:16:46: 16:63 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
                fun: e3,
                args: [
                    e10,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:16:27: 16:64 (#0),
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:16:27: 16:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:289 ~ andrew_fuzz[741f]::library::set::{impl#0}::new).15),
                ),
                value: e11,
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:16:27: 16:64 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
                fun: e1,
                args: [
                    e12,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:16:19: 16:65 (#0),
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:16:19: 16:65 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:289 ~ andrew_fuzz[741f]::library::set::{impl#0}::new).10),
                ),
                value: e13,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:16:19: 16:65 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:289 ~ andrew_fuzz[741f]::library::set::{impl#0}::new).2),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:17:13: 17:28 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e15,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:17:13: 17:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(24),
                lint_level: Explicit(
                    HirId(DefId(0:289 ~ andrew_fuzz[741f]::library::set::{impl#0}::new).24),
                ),
                value: e16,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:17:13: 17:28 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:289 ~ andrew_fuzz[741f]::library::set::{impl#0}::new).4),
                ),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:18:13: 18:21 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(27),
                lint_level: Explicit(
                    HirId(DefId(0:289 ~ andrew_fuzz[741f]::library::set::{impl#0}::new).27),
                ),
                value: e18,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:18:13: 18:21 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:289 ~ andrew_fuzz[741f]::library::set::{impl#0}::new).6),
                ),
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:19:13: 19:22 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e20,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:19:13: 19:22 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(30),
                lint_level: Explicit(
                    HirId(DefId(0:289 ~ andrew_fuzz[741f]::library::set::{impl#0}::new).30),
                ),
                value: e21,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:19:13: 19:22 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: library::set::Set,
                    variant_index: 0,
                    substs: [],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e14,
                        },
                        FieldExpr {
                            name: field[1],
                            expr: e17,
                        },
                        FieldExpr {
                            name: field[2],
                            expr: e19,
                        },
                        FieldExpr {
                            name: field[3],
                            expr: e22,
                        },
                    ],
                    base: None,
                },
            ),
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:15:9: 20:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:289 ~ andrew_fuzz[741f]::library::set::{impl#0}::new).7),
                ),
                value: e23,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:15:9: 20:10 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:14:138: 21:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(33),
                lint_level: Explicit(
                    HirId(DefId(0:289 ~ andrew_fuzz[741f]::library::set::{impl#0}::new).33),
                ),
                value: e25,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:14:138: 21:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(33),
                lint_level: Inherited,
                value: e26,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:14:138: 21:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: std::rc::Rc<dyn core::DataModel>,
                    span: src/library/set.rs:14:16: 14:31 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "child_prototype",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:289 ~ andrew_fuzz[741f]::library::set::{impl#0}::new).2),
                        ),
                        ty: std::rc::Rc<dyn core::DataModel>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::rc::Rc<dyn core::DataModel>,
            ty_span: Some(
                src/library/set.rs:14:33: 14:50 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:289 ~ andrew_fuzz[741f]::library::set::{impl#0}::new).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
                    span: src/library/set.rs:14:52: 14:60 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "children",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:289 ~ andrew_fuzz[741f]::library::set::{impl#0}::new).4),
                        ),
                        ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            ty_span: Some(
                src/library/set.rs:14:62: 14:84 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:289 ~ andrew_fuzz[741f]::library::set::{impl#0}::new).3),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
                    span: src/library/set.rs:14:86: 14:95 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "predicate",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:289 ~ andrew_fuzz[741f]::library::set::{impl#0}::new).6),
                        ),
                        ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            ty_span: Some(
                src/library/set.rs:14:97: 14:128 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:289 ~ andrew_fuzz[741f]::library::set::{impl#0}::new).5),
            ),
        },
    ],
}

DefId(0:290 ~ andrew_fuzz[741f]::library::set::{impl#0}::set_name):
Thir {
    body_type: Fn(
        ([&mut library::set::Set, &str]; c_variadic: false)->(),
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(24),
            opt_destruction_scope: None,
            span: src/library/set.rs:22:44: 24:6 (#0),
            stmts: [
                s0,
            ],
            expr: None,
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:290 ~ andrew_fuzz[741f]::library::set::{impl#0}::set_name).2),
                ),
            },
            ty: &mut library::set::Set,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:23:9: 23:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:23:9: 23:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:290 ~ andrew_fuzz[741f]::library::set::{impl#0}::set_name).7),
                ),
                value: e1,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:23:9: 23:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:23:9: 23:18 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:290 ~ andrew_fuzz[741f]::library::set::{impl#0}::set_name).6),
                ),
                value: e3,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:23:9: 23:18 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:23:21: 23:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:290 ~ andrew_fuzz[741f]::library::set::{impl#0}::set_name).10),
                ),
                value: e5,
            },
            ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:23:21: 23:28 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:23:29: 23:47 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:290 ~ andrew_fuzz[741f]::library::set::{impl#0}::set_name).15),
                ),
                value: e7,
            },
            ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:23:29: 23:47 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:290 ~ andrew_fuzz[741f]::library::set::{impl#0}::set_name).4),
                ),
            },
            ty: &str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:23:48: 23:52 (#0),
        },
        Expr {
            kind: Deref {
                arg: e9,
            },
            ty: str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:23:48: 23:64 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e10,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:23:48: 23:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(21),
                lint_level: Explicit(
                    HirId(DefId(0:290 ~ andrew_fuzz[741f]::library::set::{impl#0}::set_name).21),
                ),
                value: e11,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:23:48: 23:52 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:23:53: 23:62 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
                fun: e13,
                args: [
                    e12,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:23:53: 23:64 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:23:48: 23:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:290 ~ andrew_fuzz[741f]::library::set::{impl#0}::set_name).19),
                ),
                value: e14,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:23:48: 23:64 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
                fun: e8,
                args: [
                    e15,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:23:29: 23:65 (#0),
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:23:29: 23:65 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:290 ~ andrew_fuzz[741f]::library::set::{impl#0}::set_name).14),
                ),
                value: e16,
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:23:29: 23:65 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
                fun: e6,
                args: [
                    e17,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:23:21: 23:66 (#0),
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:23:21: 23:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:290 ~ andrew_fuzz[741f]::library::set::{impl#0}::set_name).9),
                ),
                value: e18,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:23:21: 23:66 (#0),
        },
        Expr {
            kind: Assign {
                lhs: e4,
                rhs: e19,
            },
            ty: (),
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:23:9: 23:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:290 ~ andrew_fuzz[741f]::library::set::{impl#0}::set_name).5),
                ),
                value: e20,
            },
            ty: (),
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:23:9: 23:66 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/set.rs:22:44: 24:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:290 ~ andrew_fuzz[741f]::library::set::{impl#0}::set_name).25),
                ),
                value: e22,
            },
            ty: (),
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/set.rs:22:44: 24:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(25),
                lint_level: Inherited,
                value: e23,
            },
            ty: (),
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/set.rs:22:44: 24:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(23),
                expr: e21,
            },
            opt_destruction_scope: Some(
                Destruction(23),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &mut library::set::Set,
                    span: src/library/set.rs:22:21: 22:30 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:290 ~ andrew_fuzz[741f]::library::set::{impl#0}::set_name).2),
                        ),
                        ty: &mut library::set::Set,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut library::set::Set,
            ty_span: None,
            self_kind: Some(
                MutRef,
            ),
            hir_id: Some(
                HirId(DefId(0:290 ~ andrew_fuzz[741f]::library::set::{impl#0}::set_name).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &str,
                    span: src/library/set.rs:22:32: 22:36 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "name",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:290 ~ andrew_fuzz[741f]::library::set::{impl#0}::set_name).4),
                        ),
                        ty: &str,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &str,
            ty_span: Some(
                src/library/set.rs:22:38: 22:42 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:290 ~ andrew_fuzz[741f]::library::set::{impl#0}::set_name).3),
            ),
        },
    ],
}

DefId(0:294 ~ andrew_fuzz[741f]::library::set::{impl#3}::clone):
Thir {
    body_type: Fn(
        ([&library::set::Set]; c_variadic: false)->std::boxed::Box<dyn core::DataModel>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(34),
            opt_destruction_scope: None,
            span: src/library/set.rs:34:43: 41:6 (#0),
            stmts: [],
            expr: Some(
                e44,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:296 ~ alloc[42dc]::boxed::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:294 ~ alloc[42dc]::boxed::{impl#0}),
                                        self_ty: std::boxed::Box<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::set::Set) -> std::boxed::Box<library::set::Set> {std::boxed::Box::<library::set::Set>::new},
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:35:9: 35:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:294 ~ andrew_fuzz[741f]::library::set::{impl#3}::clone).4),
                ),
                value: e0,
            },
            ty: fn(library::set::Set) -> std::boxed::Box<library::set::Set> {std::boxed::Box::<library::set::Set>::new},
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:35:9: 35:17 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:294 ~ andrew_fuzz[741f]::library::set::{impl#3}::clone).2),
                ),
            },
            ty: &library::set::Set,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:36:19: 36:23 (#0),
        },
        Expr {
            kind: Deref {
                arg: e2,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:36:19: 36:23 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:294 ~ andrew_fuzz[741f]::library::set::{impl#3}::clone).14),
                ),
                value: e3,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:36:19: 36:23 (#0),
        },
        Expr {
            kind: Field {
                lhs: e4,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:36:19: 36:28 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e5,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:36:19: 36:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:294 ~ andrew_fuzz[741f]::library::set::{impl#3}::clone).13),
                ),
                value: e6,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:36:19: 36:28 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> std::rc::Rc<core::DataModelBase> {<std::rc::Rc<core::DataModelBase> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:36:29: 36:34 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> std::rc::Rc<core::DataModelBase> {<std::rc::Rc<core::DataModelBase> as std::clone::Clone>::clone},
                fun: e8,
                args: [
                    e7,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:36:29: 36:36 (#0),
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:36:19: 36:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:294 ~ andrew_fuzz[741f]::library::set::{impl#3}::clone).11),
                ),
                value: e9,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:36:19: 36:36 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:294 ~ andrew_fuzz[741f]::library::set::{impl#3}::clone).2),
                ),
            },
            ty: &library::set::Set,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:37:30: 37:34 (#0),
        },
        Expr {
            kind: Deref {
                arg: e11,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:37:30: 37:34 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(20),
                lint_level: Explicit(
                    HirId(DefId(0:294 ~ andrew_fuzz[741f]::library::set::{impl#3}::clone).20),
                ),
                value: e12,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:37:30: 37:34 (#0),
        },
        Expr {
            kind: Field {
                lhs: e13,
                variant_index: 0,
                name: field[1],
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:37:30: 37:50 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e14,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:37:30: 37:58 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:294 ~ andrew_fuzz[741f]::library::set::{impl#3}::clone).19),
                ),
                value: e15,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:37:30: 37:50 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:37:51: 37:56 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e17,
                args: [
                    e16,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:37:51: 37:58 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:37:30: 37:58 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e18,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:37:30: 37:58 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:294 ~ andrew_fuzz[741f]::library::set::{impl#3}::clone).17),
                ),
                value: e19,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:37:30: 37:58 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:294 ~ andrew_fuzz[741f]::library::set::{impl#3}::clone).2),
                ),
            },
            ty: &library::set::Set,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:38:23: 38:27 (#0),
        },
        Expr {
            kind: Deref {
                arg: e21,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:38:23: 38:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(26),
                lint_level: Explicit(
                    HirId(DefId(0:294 ~ andrew_fuzz[741f]::library::set::{impl#3}::clone).26),
                ),
                value: e22,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:38:23: 38:27 (#0),
        },
        Expr {
            kind: Field {
                lhs: e23,
                variant_index: 0,
                name: field[2],
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:38:23: 38:36 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e24,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:38:23: 38:44 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:294 ~ andrew_fuzz[741f]::library::set::{impl#3}::clone).25),
                ),
                value: e25,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:38:23: 38:36 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {<std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:38:37: 38:42 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {<std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::clone::Clone>::clone},
                fun: e27,
                args: [
                    e26,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:38:37: 38:44 (#0),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:38:23: 38:44 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(23),
                lint_level: Explicit(
                    HirId(DefId(0:294 ~ andrew_fuzz[741f]::library::set::{impl#3}::clone).23),
                ),
                value: e28,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:38:23: 38:44 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:294 ~ andrew_fuzz[741f]::library::set::{impl#3}::clone).2),
                ),
            },
            ty: &library::set::Set,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:39:24: 39:28 (#0),
        },
        Expr {
            kind: Deref {
                arg: e30,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:39:24: 39:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(32),
                lint_level: Explicit(
                    HirId(DefId(0:294 ~ andrew_fuzz[741f]::library::set::{impl#3}::clone).32),
                ),
                value: e31,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:39:24: 39:28 (#0),
        },
        Expr {
            kind: Field {
                lhs: e32,
                variant_index: 0,
                name: field[3],
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:39:24: 39:38 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e33,
            },
            ty: &std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:39:24: 39:46 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(31),
                lint_level: Explicit(
                    HirId(DefId(0:294 ~ andrew_fuzz[741f]::library::set::{impl#3}::clone).31),
                ),
                value: e34,
            },
            ty: &std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:39:24: 39:38 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>) -> std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool> {<std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:39:39: 39:44 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>) -> std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool> {<std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool> as std::clone::Clone>::clone},
                fun: e36,
                args: [
                    e35,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:39:39: 39:46 (#0),
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:39:24: 39:46 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e37,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:39:24: 39:46 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(29),
                lint_level: Explicit(
                    HirId(DefId(0:294 ~ andrew_fuzz[741f]::library::set::{impl#3}::clone).29),
                ),
                value: e38,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:39:24: 39:46 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: library::set::Set,
                    variant_index: 0,
                    substs: [],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e10,
                        },
                        FieldExpr {
                            name: field[1],
                            expr: e20,
                        },
                        FieldExpr {
                            name: field[2],
                            expr: e29,
                        },
                        FieldExpr {
                            name: field[3],
                            expr: e39,
                        },
                    ],
                    base: None,
                },
            ),
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:35:18: 40:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:294 ~ andrew_fuzz[741f]::library::set::{impl#3}::clone).8),
                ),
                value: e40,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:35:18: 40:10 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::set::Set) -> std::boxed::Box<library::set::Set> {std::boxed::Box::<library::set::Set>::new},
                fun: e1,
                args: [
                    e41,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:35:9: 40:11 (#0),
            },
            ty: std::boxed::Box<library::set::Set>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:35:9: 40:11 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e42,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:35:9: 40:11 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:294 ~ andrew_fuzz[741f]::library::set::{impl#3}::clone).3),
                ),
                value: e43,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:35:9: 40:11 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:35:9: 40:11 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e45,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:35:9: 40:11 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(35),
                lint_level: Explicit(
                    HirId(DefId(0:294 ~ andrew_fuzz[741f]::library::set::{impl#3}::clone).35),
                ),
                value: e46,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:34:43: 41:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(35),
                lint_level: Inherited,
                value: e47,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(35),
            ),
            span: src/library/set.rs:34:43: 41:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::set::Set,
                    span: src/library/set.rs:34:14: 34:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:294 ~ andrew_fuzz[741f]::library::set::{impl#3}::clone).2),
                        ),
                        ty: &library::set::Set,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::set::Set,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:294 ~ andrew_fuzz[741f]::library::set::{impl#3}::clone).1),
            ),
        },
    ],
}

DefId(0:296 ~ andrew_fuzz[741f]::library::set::{impl#4}::breed):
Thir {
    body_type: Fn(
        ([&library::set::Set, std::boxed::Box<dyn core::DataModel>]; c_variadic: false)->std::boxed::Box<dyn core::DataModel>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(12),
            opt_destruction_scope: None,
            span: src/library/set.rs:45:70: 47:6 (#0),
            stmts: [
                s0,
            ],
            expr: None,
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(11),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:9: 773:33 (#65),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:296 ~ andrew_fuzz[741f]::library::set::{impl#4}::breed).6),
                ),
                value: e0,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(11),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:9: 773:33 (#65),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "not yet implemented",
                        Cooked,
                    ),
                    span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:34: 773:55 (#65),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(11),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:34: 773:55 (#65),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:296 ~ andrew_fuzz[741f]::library::set::{impl#4}::breed).10),
                ),
                value: e2,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(11),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:34: 773:55 (#65),
        },
        Expr {
            kind: Call {
                ty: fn(&'static str) -> ! {core::panicking::panic},
                fun: e1,
                args: [
                    e3,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:9: 773:56 (#65),
            },
            ty: !,
            temp_lifetime: Some(
                Node(11),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:9: 773:56 (#65),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:296 ~ andrew_fuzz[741f]::library::set::{impl#4}::breed).5),
                ),
                value: e4,
            },
            ty: !,
            temp_lifetime: Some(
                Node(11),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:9: 773:56 (#65),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: !,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/set.rs:45:70: 47:6 (#0),
        },
        Expr {
            kind: NeverToAny {
                source: e6,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/set.rs:45:70: 47:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:296 ~ andrew_fuzz[741f]::library::set::{impl#4}::breed).13),
                ),
                value: e7,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/set.rs:45:70: 47:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(13),
                lint_level: Inherited,
                value: e8,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/set.rs:45:70: 47:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(11),
                expr: e5,
            },
            opt_destruction_scope: Some(
                Destruction(11),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::set::Set,
                    span: src/library/set.rs:45:14: 45:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:296 ~ andrew_fuzz[741f]::library::set::{impl#4}::breed).2),
                        ),
                        ty: &library::set::Set,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::set::Set,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:296 ~ andrew_fuzz[741f]::library::set::{impl#4}::breed).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: std::boxed::Box<dyn core::DataModel>,
                    span: src/library/set.rs:45:21: 45:26 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "other",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:296 ~ andrew_fuzz[741f]::library::set::{impl#4}::breed).4),
                        ),
                        ty: std::boxed::Box<dyn core::DataModel>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::boxed::Box<dyn core::DataModel>,
            ty_span: Some(
                src/library/set.rs:45:28: 45:46 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:296 ~ andrew_fuzz[741f]::library::set::{impl#4}::breed).3),
            ),
        },
    ],
}

DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse):
Thir {
    body_type: Fn(
        ([&library::set::Set, &mut core::bit_array::BitArray, &std::rc::Rc<core::context::Context<'_>>]; c_variadic: false)->std::option::Option<std::boxed::Box<dyn core::DataModel>>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(56),
            opt_destruction_scope: None,
            span: src/library/set.rs:55:52: 57:14 (#0),
            stmts: [
                s2,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(87),
            opt_destruction_scope: None,
            span: src/library/set.rs:58:84: 60:14 (#0),
            stmts: [
                s4,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(94),
            opt_destruction_scope: None,
            span: src/library/set.rs:60:20: 62:14 (#0),
            stmts: [
                s5,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(95),
            opt_destruction_scope: Some(
                Destruction(95),
            ),
            span: src/library/set.rs:53:14: 63:10 (#0),
            stmts: [
                s1,
                s3,
            ],
            expr: Some(
                e108,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(128),
            opt_destruction_scope: None,
            span: src/library/set.rs:51:96: 70:6 (#0),
            stmts: [
                s0,
                s6,
            ],
            expr: Some(
                e151,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:6607 ~ alloc[42dc]::vec::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:6605 ~ alloc[42dc]::vec::{impl#0}),
                                        self_ty: std::vec::Vec<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/set.rs:52:32: 52:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).9),
                ),
                value: e0,
            },
            ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/set.rs:52:32: 52:40 (#0),
        },
        Expr {
            kind: Call {
                ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
                fun: e1,
                args: [],
                from_hir_call: true,
                fn_span: src/library/set.rs:52:32: 52:42 (#0),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/set.rs:52:32: 52:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).8),
                ),
                value: e2,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/set.rs:52:32: 52:42 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(core::context::Context<'_>) -> std::rc::Rc<core::context::Context<'_>> {std::rc::Rc::<core::context::Context<'_>>::new},
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/set.rs:54:29: 54:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(18),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).18),
                ),
                value: e4,
            },
            ty: fn(core::context::Context<'_>) -> std::rc::Rc<core::context::Context<'_>> {std::rc::Rc::<core::context::Context<'_>>::new},
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/set.rs:54:29: 54:36 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(0:98 ~ andrew_fuzz[741f]::core::context::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon(0, None) }),
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(0:96 ~ andrew_fuzz[741f]::core::context::{impl#0}),
                                        self_ty: core::context::Context<'_>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(std::rc::Weak<core::context::Context<'_>>, core::context::Children<'_>) -> core::context::Context<'_> {core::context::Context::<'_>::new},
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/set.rs:54:37: 54:49 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(23),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).23),
                ),
                value: e6,
            },
            ty: fn(std::rc::Weak<core::context::Context<'_>>, core::context::Children<'_>) -> core::context::Context<'_> {core::context::Context::<'_>::new},
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/set.rs:54:37: 54:49 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4783 ~ alloc[42dc]::rc::{impl#11}::downgrade),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4778 ~ alloc[42dc]::rc::{impl#11}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> std::rc::Weak<core::context::Context<'_>> {std::rc::Rc::<core::context::Context<'_>>::downgrade},
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/set.rs:54:50: 54:63 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(29),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).29),
                ),
                value: e8,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> std::rc::Weak<core::context::Context<'_>> {std::rc::Rc::<core::context::Context<'_>>::downgrade},
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/set.rs:54:50: 54:63 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).6),
                ),
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/set.rs:54:64: 54:67 (#0),
        },
        Expr {
            kind: Deref {
                arg: e10,
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/set.rs:54:64: 54:67 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e11,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/set.rs:54:64: 54:67 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(33),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).33),
                ),
                value: e12,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/set.rs:54:64: 54:67 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> std::rc::Weak<core::context::Context<'_>> {std::rc::Rc::<core::context::Context<'_>>::downgrade},
                fun: e9,
                args: [
                    e13,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:54:50: 54:68 (#0),
            },
            ty: std::rc::Weak<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/set.rs:54:50: 54:68 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(28),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).28),
                ),
                value: e14,
            },
            ty: std::rc::Weak<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/set.rs:54:50: 54:68 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).14),
                ),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/set.rs:54:91: 54:103 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(40),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).40),
                ),
                value: e16,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/set.rs:54:91: 54:103 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e17,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/set.rs:54:90: 54:103 (#0),
        },
        Expr {
            kind: Deref {
                arg: e18,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/set.rs:54:90: 54:103 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e19,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/set.rs:54:90: 54:103 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(39),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).39),
                ),
                value: e20,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/set.rs:54:90: 54:103 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: core::context::Children,
                    variant_index: 2,
                    substs: [
                        ReErased,
                    ],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e21,
                        },
                    ],
                    base: None,
                },
            ),
            ty: core::context::Children<'_>,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/set.rs:54:70: 54:104 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(35),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).35),
                ),
                value: e22,
            },
            ty: core::context::Children<'_>,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/set.rs:54:70: 54:104 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::rc::Weak<core::context::Context<'_>>, core::context::Children<'_>) -> core::context::Context<'_> {core::context::Context::<'_>::new},
                fun: e7,
                args: [
                    e15,
                    e23,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:54:37: 54:105 (#0),
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/set.rs:54:37: 54:105 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(22),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).22),
                ),
                value: e24,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/set.rs:54:37: 54:105 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(core::context::Context<'_>) -> std::rc::Rc<core::context::Context<'_>> {std::rc::Rc::<core::context::Context<'_>>::new},
                fun: e5,
                args: [
                    e25,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:54:29: 54:106 (#0),
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/set.rs:54:29: 54:106 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).17),
                ),
                value: e26,
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/set.rs:54:29: 54:106 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).43),
                ),
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(45),
            ),
            span: src/library/set.rs:55:33: 55:42 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e28,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(45),
            ),
            span: src/library/set.rs:55:33: 55:50 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(51),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).51),
                ),
                value: e29,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(45),
            ),
            span: src/library/set.rs:55:33: 55:42 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> std::rc::Rc<core::context::Context<'_>> {<std::rc::Rc<core::context::Context<'_>> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(45),
            ),
            span: src/library/set.rs:55:43: 55:48 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> std::rc::Rc<core::context::Context<'_>> {<std::rc::Rc<core::context::Context<'_>> as std::clone::Clone>::clone},
                fun: e31,
                args: [
                    e30,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:55:43: 55:50 (#0),
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(45),
            ),
            span: src/library/set.rs:55:33: 55:50 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(49),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).49),
                ),
                value: e32,
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(45),
            ),
            span: src/library/set.rs:55:33: 55:50 (#0),
        },
        Expr {
            kind: Tuple {
                fields: [
                    e33,
                ],
            },
            ty: (std::rc::Rc<core::context::Context<'_>>,),
            temp_lifetime: Some(
                Node(45),
            ),
            span: src/library/set.rs:55:16: 55:51 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> extern "rust-call" fn(&'a dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool, (std::rc::Rc<core::context::Context<'_>>,)) -> <dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool as std::ops::FnOnce<(std::rc::Rc<core::context::Context<'_>>,)>>::Output {<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool as std::ops::Fn<(std::rc::Rc<core::context::Context<'_>>,)>>::call},
            temp_lifetime: Some(
                Node(45),
            ),
            span: src/library/set.rs:55:16: 55:32 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).2),
                ),
            },
            ty: &library::set::Set,
            temp_lifetime: Some(
                Node(45),
            ),
            span: src/library/set.rs:55:17: 55:21 (#0),
        },
        Expr {
            kind: Deref {
                arg: e36,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(45),
            ),
            span: src/library/set.rs:55:17: 55:21 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(47),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).47),
                ),
                value: e37,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(45),
            ),
            span: src/library/set.rs:55:17: 55:21 (#0),
        },
        Expr {
            kind: Field {
                lhs: e38,
                variant_index: 0,
                name: field[3],
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(45),
            ),
            span: src/library/set.rs:55:16: 55:32 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e39,
            },
            ty: &std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(45),
            ),
            span: src/library/set.rs:55:16: 55:32 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>) -> &'a <std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool> as std::ops::Deref>::Target {<std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(45),
            ),
            span: src/library/set.rs:55:16: 55:32 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>) -> &'a <std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool> as std::ops::Deref>::Target {<std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool> as std::ops::Deref>::deref},
                fun: e41,
                args: [
                    e40,
                ],
                from_hir_call: false,
                fn_span: src/library/set.rs:55:16: 55:32 (#0),
            },
            ty: &dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool,
            temp_lifetime: Some(
                Node(45),
            ),
            span: src/library/set.rs:55:16: 55:32 (#0),
        },
        Expr {
            kind: Deref {
                arg: e42,
            },
            ty: dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool,
            temp_lifetime: Some(
                Node(45),
            ),
            span: src/library/set.rs:55:16: 55:32 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e43,
            },
            ty: &dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool,
            temp_lifetime: Some(
                Node(45),
            ),
            span: src/library/set.rs:55:16: 55:32 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(46),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).46),
                ),
                value: e44,
            },
            ty: &dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool,
            temp_lifetime: Some(
                Node(45),
            ),
            span: src/library/set.rs:55:16: 55:32 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> extern "rust-call" fn(&'a dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool, (std::rc::Rc<core::context::Context<'_>>,)) -> <dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool as std::ops::FnOnce<(std::rc::Rc<core::context::Context<'_>>,)>>::Output {<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool as std::ops::Fn<(std::rc::Rc<core::context::Context<'_>>,)>>::call},
                fun: e35,
                args: [
                    e45,
                    e34,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:55:16: 55:51 (#0),
            },
            ty: bool,
            temp_lifetime: Some(
                Node(45),
            ),
            span: src/library/set.rs:55:16: 55:51 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(45),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).45),
                ),
                value: e46,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(45),
            ),
            span: src/library/set.rs:55:16: 55:51 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(45),
                lint_level: Inherited,
                value: e47,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(45),
            ),
            span: src/library/set.rs:55:16: 55:51 (#0),
        },
        Expr {
            kind: Use {
                source: e48,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(58),
            ),
            span: src/library/set.rs:55:16: 55:51 (#145),
        },
        Expr {
            kind: Scope {
                region_scope: Node(53),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).53),
                ),
                value: e49,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(58),
            ),
            span: src/library/set.rs:55:16: 55:51 (#145),
        },
        Expr {
            kind: Break {
                label: Node(15),
                value: None,
            },
            ty: !,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/library/set.rs:56:17: 56:22 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(54),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).54),
                ),
                value: e51,
            },
            ty: !,
            temp_lifetime: Some(
                Node(55),
            ),
            span: src/library/set.rs:56:17: 56:22 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: !,
            temp_lifetime: Some(
                Node(57),
            ),
            span: src/library/set.rs:55:52: 57:14 (#0),
        },
        Expr {
            kind: NeverToAny {
                source: e53,
            },
            ty: (),
            temp_lifetime: Some(
                Node(57),
            ),
            span: src/library/set.rs:55:52: 57:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(57),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).57),
                ),
                value: e54,
            },
            ty: (),
            temp_lifetime: Some(
                Node(57),
            ),
            span: src/library/set.rs:55:52: 57:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(57),
                lint_level: Inherited,
                value: e55,
            },
            ty: (),
            temp_lifetime: Some(
                Node(57),
            ),
            span: src/library/set.rs:55:52: 57:14 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(57),
                cond: e50,
                then: e56,
                else_opt: None,
            },
            ty: (),
            temp_lifetime: Some(
                Node(58),
            ),
            span: src/library/set.rs:55:13: 57:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(44),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).44),
                ),
                value: e57,
            },
            ty: (),
            temp_lifetime: Some(
                Node(58),
            ),
            span: src/library/set.rs:55:13: 57:14 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).2),
                ),
            },
            ty: &library::set::Set,
            temp_lifetime: Some(
                Node(95),
            ),
            span: src/library/set.rs:58:38: 58:42 (#0),
        },
        Expr {
            kind: Deref {
                arg: e59,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(95),
            ),
            span: src/library/set.rs:58:38: 58:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(68),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).68),
                ),
                value: e60,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(95),
            ),
            span: src/library/set.rs:58:38: 58:42 (#0),
        },
        Expr {
            kind: Field {
                lhs: e61,
                variant_index: 0,
                name: field[1],
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(95),
            ),
            span: src/library/set.rs:58:38: 58:58 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e62,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(95),
            ),
            span: src/library/set.rs:58:38: 58:83 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(95),
            ),
            span: src/library/set.rs:58:38: 58:83 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
                fun: e64,
                args: [
                    e63,
                ],
                from_hir_call: false,
                fn_span: src/library/set.rs:58:38: 58:83 (#0),
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(95),
            ),
            span: src/library/set.rs:58:38: 58:83 (#0),
        },
        Expr {
            kind: Deref {
                arg: e65,
            },
            ty: dyn core::DataModel,
            temp_lifetime: Some(
                Node(95),
            ),
            span: src/library/set.rs:58:38: 58:83 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e66,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(95),
            ),
            span: src/library/set.rs:58:38: 58:83 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(67),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).67),
                ),
                value: e67,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(95),
            ),
            span: src/library/set.rs:58:38: 58:58 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).4),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(95),
            ),
            span: src/library/set.rs:58:65: 58:70 (#0),
        },
        Expr {
            kind: Deref {
                arg: e69,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(95),
            ),
            span: src/library/set.rs:58:65: 58:70 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e70,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(95),
            ),
            span: src/library/set.rs:58:65: 58:70 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(70),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).70),
                ),
                value: e71,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(95),
            ),
            span: src/library/set.rs:58:65: 58:70 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).43),
                ),
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(95),
            ),
            span: src/library/set.rs:58:73: 58:82 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(73),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).73),
                ),
                value: e73,
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(95),
            ),
            span: src/library/set.rs:58:73: 58:82 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e74,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(95),
            ),
            span: src/library/set.rs:58:72: 58:82 (#0),
        },
        Expr {
            kind: Deref {
                arg: e75,
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(95),
            ),
            span: src/library/set.rs:58:72: 58:82 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e76,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(95),
            ),
            span: src/library/set.rs:58:72: 58:82 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(72),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).72),
                ),
                value: e77,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(95),
            ),
            span: src/library/set.rs:58:72: 58:82 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b, 'c, 'd> fn(&'a dyn core::DataModel, &'b mut core::bit_array::BitArray, &'c std::rc::Rc<core::context::Context<'d>>) -> std::option::Option<std::boxed::Box<(dyn core::DataModel + 'static)>> {<dyn core::DataModel as core::Parser>::parse},
            temp_lifetime: Some(
                Node(95),
            ),
            span: src/library/set.rs:58:59: 58:64 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b, 'c, 'd> fn(&'a dyn core::DataModel, &'b mut core::bit_array::BitArray, &'c std::rc::Rc<core::context::Context<'d>>) -> std::option::Option<std::boxed::Box<(dyn core::DataModel + 'static)>> {<dyn core::DataModel as core::Parser>::parse},
                fun: e79,
                args: [
                    e68,
                    e72,
                    e78,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:58:59: 58:83 (#0),
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(95),
            ),
            span: src/library/set.rs:58:38: 58:83 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(65),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).65),
                ),
                value: e80,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(95),
            ),
            span: src/library/set.rs:58:38: 58:83 (#0),
        },
        Expr {
            kind: Let {
                expr: e81,
                pat: Pat {
                    ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
                    span: src/library/set.rs:58:20: 58:35 (#0),
                    kind: Variant {
                        adt_def: std::option::Option,
                        substs: [
                            std::boxed::Box<dyn core::DataModel>,
                        ],
                        variant_index: 1,
                        subpatterns: [
                            FieldPat {
                                field: field[0],
                                pattern: Pat {
                                    ty: std::boxed::Box<dyn core::DataModel>,
                                    span: src/library/set.rs:58:25: 58:34 (#0),
                                    kind: Binding {
                                        mutability: Not,
                                        name: "new_child",
                                        mode: ByValue,
                                        var: LocalVarId(
                                            HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).63),
                                        ),
                                        ty: std::boxed::Box<dyn core::DataModel>,
                                        subpattern: None,
                                        is_primary: true,
                                    },
                                },
                            },
                        ],
                    },
                },
            },
            ty: bool,
            temp_lifetime: Some(
                Node(95),
            ),
            span: src/library/set.rs:58:16: 58:83 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(60),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).60),
                ),
                value: e82,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(95),
            ),
            span: src/library/set.rs:58:16: 58:83 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).14),
                ),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(86),
            ),
            span: src/library/set.rs:59:17: 59:29 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e84,
            },
            ty: &mut std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(86),
            ),
            span: src/library/set.rs:59:17: 59:55 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(77),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).77),
                ),
                value: e85,
            },
            ty: &mut std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(86),
            ),
            span: src/library/set.rs:59:17: 59:29 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(2:2508 ~ core[102f]::convert::From::from),
                            UserSubsts {
                                substs: [
                                    std::rc::Rc<^0>,
                                    ^1,
                                ],
                                user_self_ty: None,
                            },
                        ),
                    },
                ),
            },
            ty: fn(std::boxed::Box<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::convert::From<std::boxed::Box<dyn core::DataModel>>>::from},
            temp_lifetime: Some(
                Node(86),
            ),
            span: src/library/set.rs:59:35: 59:43 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(80),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).80),
                ),
                value: e87,
            },
            ty: fn(std::boxed::Box<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::convert::From<std::boxed::Box<dyn core::DataModel>>>::from},
            temp_lifetime: Some(
                Node(86),
            ),
            span: src/library/set.rs:59:35: 59:43 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).63),
                ),
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(86),
            ),
            span: src/library/set.rs:59:44: 59:53 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(84),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).84),
                ),
                value: e89,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(86),
            ),
            span: src/library/set.rs:59:44: 59:53 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::boxed::Box<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::convert::From<std::boxed::Box<dyn core::DataModel>>>::from},
                fun: e88,
                args: [
                    e90,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:59:35: 59:54 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(86),
            ),
            span: src/library/set.rs:59:35: 59:54 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(79),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).79),
                ),
                value: e91,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(86),
            ),
            span: src/library/set.rs:59:35: 59:54 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::vec::Vec<std::rc::Rc<dyn core::DataModel>>, std::rc::Rc<dyn core::DataModel>) {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::push},
            temp_lifetime: Some(
                Node(86),
            ),
            span: src/library/set.rs:59:30: 59:34 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::vec::Vec<std::rc::Rc<dyn core::DataModel>>, std::rc::Rc<dyn core::DataModel>) {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::push},
                fun: e93,
                args: [
                    e86,
                    e92,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:59:30: 59:55 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(86),
            ),
            span: src/library/set.rs:59:17: 59:55 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(75),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).75),
                ),
                value: e94,
            },
            ty: (),
            temp_lifetime: Some(
                Node(86),
            ),
            span: src/library/set.rs:59:17: 59:55 (#0),
        },
        Expr {
            kind: Block {
                block: b1,
            },
            ty: (),
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/library/set.rs:58:84: 60:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(88),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).88),
                ),
                value: e96,
            },
            ty: (),
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/library/set.rs:58:84: 60:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(88),
                lint_level: Inherited,
                value: e97,
            },
            ty: (),
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/library/set.rs:58:84: 60:14 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: std::option::Option,
                    variant_index: 0,
                    substs: [
                        std::boxed::Box<dyn core::DataModel>,
                    ],
                    user_ty: None,
                    fields: [],
                    base: None,
                },
            ),
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/library/set.rs:61:24: 61:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(91),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).91),
                ),
                value: e99,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/library/set.rs:61:24: 61:28 (#0),
        },
        Expr {
            kind: Return {
                value: Some(
                    e100,
                ),
            },
            ty: !,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/library/set.rs:61:17: 61:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(90),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).90),
                ),
                value: e101,
            },
            ty: !,
            temp_lifetime: Some(
                Node(93),
            ),
            span: src/library/set.rs:61:17: 61:28 (#0),
        },
        Expr {
            kind: Block {
                block: b2,
            },
            ty: !,
            temp_lifetime: Some(
                Node(89),
            ),
            span: src/library/set.rs:60:20: 62:14 (#0),
        },
        Expr {
            kind: NeverToAny {
                source: e103,
            },
            ty: (),
            temp_lifetime: Some(
                Node(89),
            ),
            span: src/library/set.rs:60:20: 62:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(89),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).89),
                ),
                value: e104,
            },
            ty: (),
            temp_lifetime: Some(
                Node(89),
            ),
            span: src/library/set.rs:60:20: 62:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(89),
                lint_level: Inherited,
                value: e105,
            },
            ty: (),
            temp_lifetime: Some(
                Node(89),
            ),
            span: src/library/set.rs:60:20: 62:14 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(88),
                cond: e83,
                then: e98,
                else_opt: Some(
                    e106,
                ),
            },
            ty: (),
            temp_lifetime: Some(
                Node(95),
            ),
            span: src/library/set.rs:58:13: 62:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(59),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).59),
                ),
                value: e107,
            },
            ty: (),
            temp_lifetime: Some(
                Node(95),
            ),
            span: src/library/set.rs:58:13: 62:14 (#0),
        },
        Expr {
            kind: Block {
                block: b3,
            },
            ty: (),
            temp_lifetime: Some(
                Node(95),
            ),
            span: src/library/set.rs:53:14: 63:10 (#0),
        },
        Expr {
            kind: Loop {
                body: e109,
            },
            ty: (),
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/library/set.rs:53:9: 63:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).15),
                ),
                value: e110,
            },
            ty: (),
            temp_lifetime: Some(
                Node(96),
            ),
            span: src/library/set.rs:53:9: 63:10 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:296 ~ alloc[42dc]::boxed::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:294 ~ alloc[42dc]::boxed::{impl#0}),
                                        self_ty: std::boxed::Box<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::set::Set) -> std::boxed::Box<library::set::Set> {std::boxed::Box::<library::set::Set>::new},
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:64:14: 64:22 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(101),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).101),
                ),
                value: e112,
            },
            ty: fn(library::set::Set) -> std::boxed::Box<library::set::Set> {std::boxed::Box::<library::set::Set>::new},
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:64:14: 64:22 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).2),
                ),
            },
            ty: &library::set::Set,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:65:19: 65:23 (#0),
        },
        Expr {
            kind: Deref {
                arg: e114,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:65:19: 65:23 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(111),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).111),
                ),
                value: e115,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:65:19: 65:23 (#0),
        },
        Expr {
            kind: Field {
                lhs: e116,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:65:19: 65:28 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e117,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:65:19: 65:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(110),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).110),
                ),
                value: e118,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:65:19: 65:28 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> std::rc::Rc<core::DataModelBase> {<std::rc::Rc<core::DataModelBase> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:65:29: 65:34 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> std::rc::Rc<core::DataModelBase> {<std::rc::Rc<core::DataModelBase> as std::clone::Clone>::clone},
                fun: e120,
                args: [
                    e119,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:65:29: 65:36 (#0),
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:65:19: 65:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(108),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).108),
                ),
                value: e121,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:65:19: 65:36 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).2),
                ),
            },
            ty: &library::set::Set,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:66:30: 66:34 (#0),
        },
        Expr {
            kind: Deref {
                arg: e123,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:66:30: 66:34 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(117),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).117),
                ),
                value: e124,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:66:30: 66:34 (#0),
        },
        Expr {
            kind: Field {
                lhs: e125,
                variant_index: 0,
                name: field[1],
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:66:30: 66:50 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e126,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:66:30: 66:58 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(116),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).116),
                ),
                value: e127,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:66:30: 66:50 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:66:51: 66:56 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e129,
                args: [
                    e128,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:66:51: 66:58 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:66:30: 66:58 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e130,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:66:30: 66:58 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(114),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).114),
                ),
                value: e131,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:66:30: 66:58 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).14),
                ),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:67:23: 67:35 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(120),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).120),
                ),
                value: e133,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:67:23: 67:35 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).2),
                ),
            },
            ty: &library::set::Set,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:68:24: 68:28 (#0),
        },
        Expr {
            kind: Deref {
                arg: e135,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:68:24: 68:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(126),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).126),
                ),
                value: e136,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:68:24: 68:28 (#0),
        },
        Expr {
            kind: Field {
                lhs: e137,
                variant_index: 0,
                name: field[3],
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:68:24: 68:38 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e138,
            },
            ty: &std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:68:24: 68:46 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(125),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).125),
                ),
                value: e139,
            },
            ty: &std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:68:24: 68:38 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>) -> std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool> {<std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:68:39: 68:44 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>) -> std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool> {<std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool> as std::clone::Clone>::clone},
                fun: e141,
                args: [
                    e140,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:68:39: 68:46 (#0),
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:68:24: 68:46 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e142,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:68:24: 68:46 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(123),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).123),
                ),
                value: e143,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:68:24: 68:46 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: library::set::Set,
                    variant_index: 0,
                    substs: [],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e122,
                        },
                        FieldExpr {
                            name: field[1],
                            expr: e132,
                        },
                        FieldExpr {
                            name: field[2],
                            expr: e134,
                        },
                        FieldExpr {
                            name: field[3],
                            expr: e144,
                        },
                    ],
                    base: None,
                },
            ),
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:64:23: 69:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(105),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).105),
                ),
                value: e145,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:64:23: 69:10 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::set::Set) -> std::boxed::Box<library::set::Set> {std::boxed::Box::<library::set::Set>::new},
                fun: e113,
                args: [
                    e146,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:64:14: 69:11 (#0),
            },
            ty: std::boxed::Box<library::set::Set>,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:64:14: 69:11 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e147,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:64:14: 69:11 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(100),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).100),
                ),
                value: e148,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:64:14: 69:11 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: std::option::Option,
                    variant_index: 1,
                    substs: [
                        std::boxed::Box<dyn core::DataModel>,
                    ],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e149,
                        },
                    ],
                    base: None,
                },
            ),
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:64:9: 69:12 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(97),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).97),
                ),
                value: e150,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:64:9: 69:12 (#0),
        },
        Expr {
            kind: Block {
                block: b4,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:51:96: 70:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(129),
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).129),
                ),
                value: e152,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:51:96: 70:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(129),
                lint_level: Inherited,
                value: e153,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:51:96: 70:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 128, first_statement_index: 0},
                init_scope: Node(7),
                pattern: Pat {
                    ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
                    span: src/library/set.rs:52:13: 52:29 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "new_children",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).14),
                        ),
                        ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e3,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).13),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(7),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 95, first_statement_index: 0},
                init_scope: Node(16),
                pattern: Pat {
                    ty: std::rc::Rc<core::context::Context<'_>>,
                    span: src/library/set.rs:54:17: 54:26 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "child_ctx",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).43),
                        ),
                        ty: std::rc::Rc<core::context::Context<'_>>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e27,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).42),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(16),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(55),
                expr: e52,
            },
            opt_destruction_scope: Some(
                Destruction(55),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(58),
                expr: e58,
            },
            opt_destruction_scope: Some(
                Destruction(58),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(86),
                expr: e95,
            },
            opt_destruction_scope: Some(
                Destruction(86),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(93),
                expr: e102,
            },
            opt_destruction_scope: Some(
                Destruction(93),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(96),
                expr: e111,
            },
            opt_destruction_scope: Some(
                Destruction(96),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::set::Set,
                    span: src/library/set.rs:51:14: 51:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).2),
                        ),
                        ty: &library::set::Set,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::set::Set,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &mut core::bit_array::BitArray,
                    span: src/library/set.rs:51:21: 51:26 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "input",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).4),
                        ),
                        ty: &mut core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut core::bit_array::BitArray,
            ty_span: Some(
                src/library/set.rs:51:28: 51:41 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).3),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &std::rc::Rc<core::context::Context<'_>>,
                    span: src/library/set.rs:51:43: 51:46 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "ctx",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).6),
                        ),
                        ty: &std::rc::Rc<core::context::Context<'_>>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &std::rc::Rc<core::context::Context<'_>>,
            ty_span: Some(
                src/library/set.rs:51:48: 51:64 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:298 ~ andrew_fuzz[741f]::library::set::{impl#5}::parse).5),
            ),
        },
    ],
}

DefId(0:300 ~ andrew_fuzz[741f]::library::set::{impl#6}::debug):
Thir {
    body_type: Fn(
        ([&library::set::Set]; c_variadic: false)->std::string::String,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(6),
            opt_destruction_scope: None,
            span: src/library/set.rs:74:31: 76:6 (#0),
            stmts: [],
            expr: Some(
                e6,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "",
                        Cooked,
                    ),
                    span: src/library/set.rs:75:9: 75:11 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/set.rs:75:9: 75:11 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: str,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/set.rs:75:9: 75:23 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e1,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/set.rs:75:9: 75:23 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:300 ~ andrew_fuzz[741f]::library::set::{impl#6}::debug).5),
                ),
                value: e2,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/set.rs:75:9: 75:11 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/set.rs:75:12: 75:21 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
                fun: e4,
                args: [
                    e3,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:75:12: 75:23 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/set.rs:75:9: 75:23 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:300 ~ andrew_fuzz[741f]::library::set::{impl#6}::debug).3),
                ),
                value: e5,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/set.rs:75:9: 75:23 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/set.rs:74:31: 76:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:300 ~ andrew_fuzz[741f]::library::set::{impl#6}::debug).7),
                ),
                value: e7,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/set.rs:74:31: 76:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(7),
                lint_level: Inherited,
                value: e8,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(7),
            ),
            span: src/library/set.rs:74:31: 76:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::set::Set,
                    span: src/library/set.rs:74:14: 74:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:300 ~ andrew_fuzz[741f]::library::set::{impl#6}::debug).2),
                        ),
                        ty: &library::set::Set,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::set::Set,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:300 ~ andrew_fuzz[741f]::library::set::{impl#6}::debug).1),
            ),
        },
    ],
}

DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz):
Thir {
    body_type: Fn(
        ([&library::set::Set]; c_variadic: false)->std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
    ),
    arms: [
        Arm {
            pattern: Pat {
                ty: std::option::Option<(usize, &std::rc::Rc<dyn core::DataModel>)>,
                span: src/library/set.rs:83:9: 94:10 (#146),
                kind: Variant {
                    adt_def: std::option::Option,
                    substs: [
                        (usize, &std::rc::Rc<dyn core::DataModel>),
                    ],
                    variant_index: 0,
                    subpatterns: [],
                },
            },
            guard: None,
            body: e37,
            lint_level: Explicit(
                HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).32),
            ),
            scope: Node(32),
            span: src/library/set.rs:83:9: 94:10 (#146),
        },
        Arm {
            pattern: Pat {
                ty: std::option::Option<std::rc::Rc<dyn core::DataModel>>,
                span: src/library/set.rs:84:13: 93:14 (#149),
                kind: Variant {
                    adt_def: std::option::Option,
                    substs: [
                        std::rc::Rc<dyn core::DataModel>,
                    ],
                    variant_index: 0,
                    subpatterns: [],
                },
            },
            guard: None,
            body: e66,
            lint_level: Explicit(
                HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).43),
            ),
            scope: Node(43),
            span: src/library/set.rs:84:13: 93:14 (#149),
        },
        Arm {
            pattern: Pat {
                ty: std::option::Option<std::rc::Rc<dyn core::DataModel>>,
                span: src/library/set.rs:84:17: 84:30 (#151),
                kind: Variant {
                    adt_def: std::option::Option,
                    substs: [
                        std::rc::Rc<dyn core::DataModel>,
                    ],
                    variant_index: 1,
                    subpatterns: [
                        FieldPat {
                            field: field[0],
                            pattern: Pat {
                                ty: std::rc::Rc<dyn core::DataModel>,
                                span: src/library/set.rs:84:17: 84:30 (#0),
                                kind: Binding {
                                    mutability: Not,
                                    name: "mutated_child",
                                    mode: ByValue,
                                    var: LocalVarId(
                                        HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).39),
                                    ),
                                    ty: std::rc::Rc<dyn core::DataModel>,
                                    subpattern: None,
                                    is_primary: true,
                                },
                            },
                        },
                    ],
                },
            },
            guard: None,
            body: e139,
            lint_level: Explicit(
                HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).103),
            ),
            scope: Node(103),
            span: src/library/set.rs:84:43: 93:14 (#0),
        },
        Arm {
            pattern: Pat {
                ty: std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>,
                span: src/library/set.rs:84:34: 84:42 (#150),
                kind: Binding {
                    mutability: Mut,
                    name: "iter",
                    mode: ByValue,
                    var: LocalVarId(
                        HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).104),
                    ),
                    ty: std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>,
                    subpattern: None,
                    is_primary: true,
                },
            },
            guard: None,
            body: e145,
            lint_level: Explicit(
                HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).113),
            ),
            scope: Node(113),
            span: src/library/set.rs:84:13: 93:14 (#149),
        },
        Arm {
            pattern: Pat {
                ty: std::option::Option<(usize, &std::rc::Rc<dyn core::DataModel>)>,
                span: src/library/set.rs:83:13: 83:19 (#148),
                kind: Variant {
                    adt_def: std::option::Option,
                    substs: [
                        (usize, &std::rc::Rc<dyn core::DataModel>),
                    ],
                    variant_index: 1,
                    subpatterns: [
                        FieldPat {
                            field: field[0],
                            pattern: Pat {
                                ty: (usize, &std::rc::Rc<dyn core::DataModel>),
                                span: src/library/set.rs:83:13: 83:19 (#0),
                                kind: Leaf {
                                    subpatterns: [
                                        FieldPat {
                                            field: field[0],
                                            pattern: Pat {
                                                ty: usize,
                                                span: src/library/set.rs:83:14: 83:15 (#0),
                                                kind: Binding {
                                                    mutability: Not,
                                                    name: "i",
                                                    mode: ByValue,
                                                    var: LocalVarId(
                                                        HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).26),
                                                    ),
                                                    ty: usize,
                                                    subpattern: None,
                                                    is_primary: true,
                                                },
                                            },
                                        },
                                        FieldPat {
                                            field: field[1],
                                            pattern: Pat {
                                                ty: &std::rc::Rc<dyn core::DataModel>,
                                                span: src/library/set.rs:83:17: 83:18 (#0),
                                                kind: Binding {
                                                    mutability: Not,
                                                    name: "c",
                                                    mode: ByValue,
                                                    var: LocalVarId(
                                                        HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).27),
                                                    ),
                                                    ty: &std::rc::Rc<dyn core::DataModel>,
                                                    subpattern: None,
                                                    is_primary: true,
                                                },
                                            },
                                        },
                                    ],
                                },
                            },
                        },
                    ],
                },
            },
            guard: None,
            body: e153,
            lint_level: Explicit(
                HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).120),
            ),
            scope: Node(120),
            span: src/library/set.rs:83:56: 94:10 (#0),
        },
        Arm {
            pattern: Pat {
                ty: std::iter::Enumerate<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>>,
                span: src/library/set.rs:83:23: 83:55 (#147),
                kind: Binding {
                    mutability: Mut,
                    name: "iter",
                    mode: ByValue,
                    var: LocalVarId(
                        HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).121),
                    ),
                    ty: std::iter::Enumerate<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>>,
                    subpattern: None,
                    is_primary: true,
                },
            },
            guard: None,
            body: e159,
            lint_level: Explicit(
                HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).130),
            ),
            scope: Node(130),
            span: src/library/set.rs:83:9: 94:10 (#146),
        },
    ],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(101),
            opt_destruction_scope: None,
            span: src/library/set.rs:84:43: 93:14 (#0),
            stmts: [
                s1,
                s2,
                s3,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(112),
            opt_destruction_scope: Some(
                Destruction(112),
            ),
            span: src/library/set.rs:84:13: 93:14 (#149),
            stmts: [
                s4,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(118),
            opt_destruction_scope: None,
            span: src/library/set.rs:83:56: 94:10 (#0),
            stmts: [],
            expr: Some(
                e150,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(129),
            opt_destruction_scope: Some(
                Destruction(129),
            ),
            span: src/library/set.rs:83:9: 94:10 (#146),
            stmts: [
                s5,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(138),
            opt_destruction_scope: None,
            span: src/library/set.rs:81:46: 96:6 (#0),
            stmts: [
                s0,
                s6,
            ],
            expr: Some(
                e166,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:6607 ~ alloc[42dc]::vec::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:6605 ~ alloc[42dc]::vec::{impl#0}),
                                        self_ty: std::vec::Vec<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/set.rs:82:50: 82:58 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).13),
                ),
                value: e0,
            },
            ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/set.rs:82:50: 82:58 (#0),
        },
        Expr {
            kind: Call {
                ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
                fun: e1,
                args: [],
                from_hir_call: true,
                fn_span: src/library/set.rs:82:50: 82:60 (#0),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/set.rs:82:50: 82:60 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(12),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).12),
                ),
                value: e2,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/set.rs:82:50: 82:60 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::iter::Enumerate<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>>) -> <std::iter::Enumerate<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>> as std::iter::IntoIterator>::IntoIter {<std::iter::Enumerate<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>> as std::iter::IntoIterator>::into_iter},
            temp_lifetime: Some(
                Node(133),
            ),
            span: src/library/set.rs:83:23: 83:55 (#147),
        },
        Expr {
            kind: Scope {
                region_scope: Node(131),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).131),
                ),
                value: e4,
            },
            ty: fn(std::iter::Enumerate<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>>) -> <std::iter::Enumerate<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>> as std::iter::IntoIterator>::IntoIter {<std::iter::Enumerate<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>> as std::iter::IntoIterator>::into_iter},
            temp_lifetime: Some(
                Node(133),
            ),
            span: src/library/set.rs:83:23: 83:55 (#147),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).2),
                ),
            },
            ty: &library::set::Set,
            temp_lifetime: Some(
                Node(133),
            ),
            span: src/library/set.rs:83:23: 83:27 (#0),
        },
        Expr {
            kind: Deref {
                arg: e6,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(133),
            ),
            span: src/library/set.rs:83:23: 83:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(24),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).24),
                ),
                value: e7,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(133),
            ),
            span: src/library/set.rs:83:23: 83:27 (#0),
        },
        Expr {
            kind: Field {
                lhs: e8,
                variant_index: 0,
                name: field[2],
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(133),
            ),
            span: src/library/set.rs:83:23: 83:36 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e9,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(133),
            ),
            span: src/library/set.rs:83:23: 83:43 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> &'a <std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::ops::Deref>::Target {<std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(133),
            ),
            span: src/library/set.rs:83:23: 83:43 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> &'a <std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::ops::Deref>::Target {<std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::ops::Deref>::deref},
                fun: e11,
                args: [
                    e10,
                ],
                from_hir_call: false,
                fn_span: src/library/set.rs:83:23: 83:43 (#0),
            },
            ty: &[std::rc::Rc<dyn core::DataModel>],
            temp_lifetime: Some(
                Node(133),
            ),
            span: src/library/set.rs:83:23: 83:43 (#0),
        },
        Expr {
            kind: Deref {
                arg: e12,
            },
            ty: [std::rc::Rc<dyn core::DataModel>],
            temp_lifetime: Some(
                Node(133),
            ),
            span: src/library/set.rs:83:23: 83:43 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e13,
            },
            ty: &[std::rc::Rc<dyn core::DataModel>],
            temp_lifetime: Some(
                Node(133),
            ),
            span: src/library/set.rs:83:23: 83:43 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(23),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).23),
                ),
                value: e14,
            },
            ty: &[std::rc::Rc<dyn core::DataModel>],
            temp_lifetime: Some(
                Node(133),
            ),
            span: src/library/set.rs:83:23: 83:36 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a [std::rc::Rc<dyn core::DataModel>]) -> std::slice::Iter<'a, std::rc::Rc<dyn core::DataModel>> {core::slice::<impl [std::rc::Rc<dyn core::DataModel>]>::iter},
            temp_lifetime: Some(
                Node(133),
            ),
            span: src/library/set.rs:83:37: 83:41 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a [std::rc::Rc<dyn core::DataModel>]) -> std::slice::Iter<'a, std::rc::Rc<dyn core::DataModel>> {core::slice::<impl [std::rc::Rc<dyn core::DataModel>]>::iter},
                fun: e16,
                args: [
                    e15,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:83:37: 83:43 (#0),
            },
            ty: std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(133),
            ),
            span: src/library/set.rs:83:23: 83:43 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(21),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).21),
                ),
                value: e17,
            },
            ty: std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(133),
            ),
            span: src/library/set.rs:83:23: 83:43 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>) -> std::iter::Enumerate<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>> {<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::enumerate},
            temp_lifetime: Some(
                Node(133),
            ),
            span: src/library/set.rs:83:44: 83:53 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>) -> std::iter::Enumerate<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>> {<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::enumerate},
                fun: e19,
                args: [
                    e18,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:83:44: 83:55 (#0),
            },
            ty: std::iter::Enumerate<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(133),
            ),
            span: src/library/set.rs:83:23: 83:55 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).19),
                ),
                value: e20,
            },
            ty: std::iter::Enumerate<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(133),
            ),
            span: src/library/set.rs:83:23: 83:55 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::iter::Enumerate<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>>) -> <std::iter::Enumerate<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>> as std::iter::IntoIterator>::IntoIter {<std::iter::Enumerate<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>> as std::iter::IntoIterator>::into_iter},
                fun: e5,
                args: [
                    e21,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:83:23: 83:55 (#147),
            },
            ty: std::iter::Enumerate<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(133),
            ),
            span: src/library/set.rs:83:23: 83:55 (#147),
        },
        Expr {
            kind: Scope {
                region_scope: Node(132),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).132),
                ),
                value: e22,
            },
            ty: std::iter::Enumerate<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(133),
            ),
            span: src/library/set.rs:83:23: 83:55 (#147),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::iter::Enumerate<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>>) -> std::option::Option<<std::iter::Enumerate<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>> as std::iter::Iterator>::Item> {<std::iter::Enumerate<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>> as std::iter::Iterator>::next},
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/set.rs:83:23: 83:55 (#147),
        },
        Expr {
            kind: Scope {
                region_scope: Node(125),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).125),
                ),
                value: e24,
            },
            ty: for<'a> fn(&'a mut std::iter::Enumerate<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>>) -> std::option::Option<<std::iter::Enumerate<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>> as std::iter::Iterator>::Item> {<std::iter::Enumerate<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>> as std::iter::Iterator>::next},
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/set.rs:83:23: 83:55 (#147),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).121),
                ),
            },
            ty: std::iter::Enumerate<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/set.rs:83:23: 83:55 (#147),
        },
        Expr {
            kind: Scope {
                region_scope: Node(123),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).123),
                ),
                value: e26,
            },
            ty: std::iter::Enumerate<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/set.rs:83:23: 83:55 (#147),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: false,
                },
                arg: e27,
            },
            ty: &mut std::iter::Enumerate<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/set.rs:83:23: 83:55 (#147),
        },
        Expr {
            kind: Deref {
                arg: e28,
            },
            ty: std::iter::Enumerate<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/set.rs:83:23: 83:55 (#147),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e29,
            },
            ty: &mut std::iter::Enumerate<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/set.rs:83:23: 83:55 (#147),
        },
        Expr {
            kind: Scope {
                region_scope: Node(124),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).124),
                ),
                value: e30,
            },
            ty: &mut std::iter::Enumerate<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/set.rs:83:23: 83:55 (#147),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::iter::Enumerate<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>>) -> std::option::Option<<std::iter::Enumerate<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>> as std::iter::Iterator>::Item> {<std::iter::Enumerate<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>> as std::iter::Iterator>::next},
                fun: e25,
                args: [
                    e31,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:83:23: 83:55 (#147),
            },
            ty: std::option::Option<(usize, &std::rc::Rc<dyn core::DataModel>)>,
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/set.rs:83:23: 83:55 (#147),
        },
        Expr {
            kind: Scope {
                region_scope: Node(126),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).126),
                ),
                value: e32,
            },
            ty: std::option::Option<(usize, &std::rc::Rc<dyn core::DataModel>)>,
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/set.rs:83:23: 83:55 (#147),
        },
        Expr {
            kind: Break {
                label: Node(29),
                value: None,
            },
            ty: !,
            temp_lifetime: Some(
                Node(30),
            ),
            span: src/library/set.rs:83:9: 94:10 (#146),
        },
        Expr {
            kind: NeverToAny {
                source: e34,
            },
            ty: (),
            temp_lifetime: Some(
                Node(30),
            ),
            span: src/library/set.rs:83:9: 94:10 (#146),
        },
        Expr {
            kind: Scope {
                region_scope: Node(30),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).30),
                ),
                value: e35,
            },
            ty: (),
            temp_lifetime: Some(
                Node(30),
            ),
            span: src/library/set.rs:83:9: 94:10 (#146),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(30),
                lint_level: Inherited,
                value: e36,
            },
            ty: (),
            temp_lifetime: Some(
                Node(30),
            ),
            span: src/library/set.rs:83:9: 94:10 (#146),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> <std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::IntoIter {<std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::into_iter},
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/library/set.rs:84:34: 84:42 (#150),
        },
        Expr {
            kind: Scope {
                region_scope: Node(114),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).114),
                ),
                value: e38,
            },
            ty: fn(std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> <std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::IntoIter {<std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::into_iter},
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/library/set.rs:84:34: 84:42 (#150),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).27),
                ),
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/library/set.rs:84:34: 84:35 (#0),
        },
        Expr {
            kind: Deref {
                arg: e40,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/library/set.rs:84:34: 84:42 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e41,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/library/set.rs:84:34: 84:42 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/library/set.rs:84:34: 84:42 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
                fun: e43,
                args: [
                    e42,
                ],
                from_hir_call: false,
                fn_span: src/library/set.rs:84:34: 84:42 (#0),
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/library/set.rs:84:34: 84:42 (#0),
        },
        Expr {
            kind: Deref {
                arg: e44,
            },
            ty: dyn core::DataModel,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/library/set.rs:84:34: 84:42 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e45,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/library/set.rs:84:34: 84:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(37),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).37),
                ),
                value: e46,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/library/set.rs:84:34: 84:35 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a dyn core::DataModel) -> std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>> {<dyn core::DataModel as core::Fuzzer>::fuzz},
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/library/set.rs:84:36: 84:40 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a dyn core::DataModel) -> std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>> {<dyn core::DataModel as core::Fuzzer>::fuzz},
                fun: e48,
                args: [
                    e47,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:84:36: 84:42 (#0),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/library/set.rs:84:34: 84:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(35),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).35),
                ),
                value: e49,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/library/set.rs:84:34: 84:42 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> <std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::IntoIter {<std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::into_iter},
                fun: e39,
                args: [
                    e50,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:84:34: 84:42 (#150),
            },
            ty: std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/library/set.rs:84:34: 84:42 (#150),
        },
        Expr {
            kind: Scope {
                region_scope: Node(115),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).115),
                ),
                value: e51,
            },
            ty: std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/library/set.rs:84:34: 84:42 (#150),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>) -> std::option::Option<<std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::Item> {<std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::next},
            temp_lifetime: Some(
                Node(111),
            ),
            span: src/library/set.rs:84:34: 84:42 (#150),
        },
        Expr {
            kind: Scope {
                region_scope: Node(108),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).108),
                ),
                value: e53,
            },
            ty: for<'a> fn(&'a mut std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>) -> std::option::Option<<std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::Item> {<std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::next},
            temp_lifetime: Some(
                Node(111),
            ),
            span: src/library/set.rs:84:34: 84:42 (#150),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).104),
                ),
            },
            ty: std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(111),
            ),
            span: src/library/set.rs:84:34: 84:42 (#150),
        },
        Expr {
            kind: Scope {
                region_scope: Node(106),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).106),
                ),
                value: e55,
            },
            ty: std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(111),
            ),
            span: src/library/set.rs:84:34: 84:42 (#150),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: false,
                },
                arg: e56,
            },
            ty: &mut std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(111),
            ),
            span: src/library/set.rs:84:34: 84:42 (#150),
        },
        Expr {
            kind: Deref {
                arg: e57,
            },
            ty: std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(111),
            ),
            span: src/library/set.rs:84:34: 84:42 (#150),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e58,
            },
            ty: &mut std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(111),
            ),
            span: src/library/set.rs:84:34: 84:42 (#150),
        },
        Expr {
            kind: Scope {
                region_scope: Node(107),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).107),
                ),
                value: e59,
            },
            ty: &mut std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(111),
            ),
            span: src/library/set.rs:84:34: 84:42 (#150),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>) -> std::option::Option<<std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::Item> {<std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::next},
                fun: e54,
                args: [
                    e60,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:84:34: 84:42 (#150),
            },
            ty: std::option::Option<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(111),
            ),
            span: src/library/set.rs:84:34: 84:42 (#150),
        },
        Expr {
            kind: Scope {
                region_scope: Node(109),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).109),
                ),
                value: e61,
            },
            ty: std::option::Option<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(111),
            ),
            span: src/library/set.rs:84:34: 84:42 (#150),
        },
        Expr {
            kind: Break {
                label: Node(40),
                value: None,
            },
            ty: !,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/set.rs:84:13: 93:14 (#149),
        },
        Expr {
            kind: NeverToAny {
                source: e63,
            },
            ty: (),
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/set.rs:84:13: 93:14 (#149),
        },
        Expr {
            kind: Scope {
                region_scope: Node(41),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).41),
                ),
                value: e64,
            },
            ty: (),
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/set.rs:84:13: 93:14 (#149),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(41),
                lint_level: Inherited,
                value: e65,
            },
            ty: (),
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/set.rs:84:13: 93:14 (#149),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).2),
                ),
            },
            ty: &library::set::Set,
            temp_lifetime: Some(
                Node(46),
            ),
            span: src/library/set.rs:85:44: 85:48 (#0),
        },
        Expr {
            kind: Deref {
                arg: e67,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(46),
            ),
            span: src/library/set.rs:85:44: 85:48 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(50),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).50),
                ),
                value: e68,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(46),
            ),
            span: src/library/set.rs:85:44: 85:48 (#0),
        },
        Expr {
            kind: Field {
                lhs: e69,
                variant_index: 0,
                name: field[2],
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(46),
            ),
            span: src/library/set.rs:85:44: 85:57 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e70,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(46),
            ),
            span: src/library/set.rs:85:44: 85:65 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(49),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).49),
                ),
                value: e71,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(46),
            ),
            span: src/library/set.rs:85:44: 85:57 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {<std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(46),
            ),
            span: src/library/set.rs:85:58: 85:63 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {<std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::clone::Clone>::clone},
                fun: e73,
                args: [
                    e72,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:85:58: 85:65 (#0),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(46),
            ),
            span: src/library/set.rs:85:44: 85:65 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(47),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).47),
                ),
                value: e74,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(46),
            ),
            span: src/library/set.rs:85:44: 85:65 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).53),
                ),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(67),
            ),
            span: src/library/set.rs:86:17: 86:33 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: false,
                },
                arg: e76,
            },
            ty: &mut std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(67),
            ),
            span: src/library/set.rs:86:17: 86:33 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(56),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).56),
                ),
                value: e77,
            },
            ty: &mut std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(67),
            ),
            span: src/library/set.rs:86:17: 86:33 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).26),
                ),
            },
            ty: usize,
            temp_lifetime: Some(
                Node(67),
            ),
            span: src/library/set.rs:86:34: 86:35 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(58),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).58),
                ),
                value: e79,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(67),
            ),
            span: src/library/set.rs:86:34: 86:35 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::vec::Vec<std::rc::Rc<dyn core::DataModel>>, usize) -> &'a mut <std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::ops::Index<usize>>::Output {<std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::ops::IndexMut<usize>>::index_mut},
            temp_lifetime: Some(
                Node(67),
            ),
            span: src/library/set.rs:86:17: 86:36 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::vec::Vec<std::rc::Rc<dyn core::DataModel>>, usize) -> &'a mut <std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::ops::Index<usize>>::Output {<std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::ops::IndexMut<usize>>::index_mut},
                fun: e81,
                args: [
                    e78,
                    e80,
                ],
                from_hir_call: false,
                fn_span: src/library/set.rs:86:17: 86:36 (#0),
            },
            ty: &mut std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(67),
            ),
            span: src/library/set.rs:86:17: 86:36 (#0),
        },
        Expr {
            kind: Deref {
                arg: e82,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(67),
            ),
            span: src/library/set.rs:86:17: 86:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(55),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).55),
                ),
                value: e83,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(67),
            ),
            span: src/library/set.rs:86:17: 86:36 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(2:2508 ~ core[102f]::convert::From::from),
                            UserSubsts {
                                substs: [
                                    std::rc::Rc<^0>,
                                    ^1,
                                ],
                                user_self_ty: None,
                            },
                        ),
                    },
                ),
            },
            ty: fn(std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::convert::From<std::rc::Rc<dyn core::DataModel>>>::from},
            temp_lifetime: Some(
                Node(67),
            ),
            span: src/library/set.rs:86:39: 86:47 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(61),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).61),
                ),
                value: e85,
            },
            ty: fn(std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::convert::From<std::rc::Rc<dyn core::DataModel>>>::from},
            temp_lifetime: Some(
                Node(67),
            ),
            span: src/library/set.rs:86:39: 86:47 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).39),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(67),
            ),
            span: src/library/set.rs:86:48: 86:61 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(65),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).65),
                ),
                value: e87,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(67),
            ),
            span: src/library/set.rs:86:48: 86:61 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::convert::From<std::rc::Rc<dyn core::DataModel>>>::from},
                fun: e86,
                args: [
                    e88,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:86:39: 86:62 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(67),
            ),
            span: src/library/set.rs:86:39: 86:62 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(60),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).60),
                ),
                value: e89,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(67),
            ),
            span: src/library/set.rs:86:39: 86:62 (#0),
        },
        Expr {
            kind: Assign {
                lhs: e84,
                rhs: e90,
            },
            ty: (),
            temp_lifetime: Some(
                Node(67),
            ),
            span: src/library/set.rs:86:17: 86:62 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(54),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).54),
                ),
                value: e91,
            },
            ty: (),
            temp_lifetime: Some(
                Node(67),
            ),
            span: src/library/set.rs:86:17: 86:62 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).18),
                ),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:87:17: 87:23 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e93,
            },
            ty: &mut std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:87:17: 92:20 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(70),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).70),
                ),
                value: e94,
            },
            ty: &mut std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:87:17: 87:23 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::set::Set) -> std::rc::Rc<library::set::Set> {std::rc::Rc::<library::set::Set>::new},
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:87:29: 87:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(73),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).73),
                ),
                value: e96,
            },
            ty: fn(library::set::Set) -> std::rc::Rc<library::set::Set> {std::rc::Rc::<library::set::Set>::new},
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:87:29: 87:36 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).2),
                ),
            },
            ty: &library::set::Set,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:88:27: 88:31 (#0),
        },
        Expr {
            kind: Deref {
                arg: e98,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:88:27: 88:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(83),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).83),
                ),
                value: e99,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:88:27: 88:31 (#0),
        },
        Expr {
            kind: Field {
                lhs: e100,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:88:27: 88:36 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e101,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:88:27: 88:44 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(82),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).82),
                ),
                value: e102,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:88:27: 88:36 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> std::rc::Rc<core::DataModelBase> {<std::rc::Rc<core::DataModelBase> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:88:37: 88:42 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> std::rc::Rc<core::DataModelBase> {<std::rc::Rc<core::DataModelBase> as std::clone::Clone>::clone},
                fun: e104,
                args: [
                    e103,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:88:37: 88:44 (#0),
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:88:27: 88:44 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(80),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).80),
                ),
                value: e105,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:88:27: 88:44 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).2),
                ),
            },
            ty: &library::set::Set,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:89:38: 89:42 (#0),
        },
        Expr {
            kind: Deref {
                arg: e107,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:89:38: 89:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(89),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).89),
                ),
                value: e108,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:89:38: 89:42 (#0),
        },
        Expr {
            kind: Field {
                lhs: e109,
                variant_index: 0,
                name: field[1],
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:89:38: 89:58 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e110,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:89:38: 89:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(88),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).88),
                ),
                value: e111,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:89:38: 89:58 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:89:59: 89:64 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e113,
                args: [
                    e112,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:89:59: 89:66 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:89:38: 89:66 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e114,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:89:38: 89:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(86),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).86),
                ),
                value: e115,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:89:38: 89:66 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).53),
                ),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:90:31: 90:47 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(92),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).92),
                ),
                value: e117,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:90:31: 90:47 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).2),
                ),
            },
            ty: &library::set::Set,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:91:32: 91:36 (#0),
        },
        Expr {
            kind: Deref {
                arg: e119,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:91:32: 91:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(98),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).98),
                ),
                value: e120,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:91:32: 91:36 (#0),
        },
        Expr {
            kind: Field {
                lhs: e121,
                variant_index: 0,
                name: field[3],
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:91:32: 91:46 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e122,
            },
            ty: &std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:91:32: 91:54 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(97),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).97),
                ),
                value: e123,
            },
            ty: &std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:91:32: 91:46 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>) -> std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool> {<std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:91:47: 91:52 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>) -> std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool> {<std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool> as std::clone::Clone>::clone},
                fun: e125,
                args: [
                    e124,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:91:47: 91:54 (#0),
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:91:32: 91:54 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e126,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:91:32: 91:54 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(95),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).95),
                ),
                value: e127,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:91:32: 91:54 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: library::set::Set,
                    variant_index: 0,
                    substs: [],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e106,
                        },
                        FieldExpr {
                            name: field[1],
                            expr: e116,
                        },
                        FieldExpr {
                            name: field[2],
                            expr: e118,
                        },
                        FieldExpr {
                            name: field[3],
                            expr: e128,
                        },
                    ],
                    base: None,
                },
            ),
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:87:37: 92:18 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(77),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).77),
                ),
                value: e129,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:87:37: 92:18 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::set::Set) -> std::rc::Rc<library::set::Set> {std::rc::Rc::<library::set::Set>::new},
                fun: e97,
                args: [
                    e130,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:87:29: 92:19 (#0),
            },
            ty: std::rc::Rc<library::set::Set>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:87:29: 92:19 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e131,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:87:29: 92:19 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(72),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).72),
                ),
                value: e132,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:87:29: 92:19 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::vec::Vec<std::rc::Rc<dyn core::DataModel>>, std::rc::Rc<dyn core::DataModel>) {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::push},
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:87:24: 87:28 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::vec::Vec<std::rc::Rc<dyn core::DataModel>>, std::rc::Rc<dyn core::DataModel>) {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::push},
                fun: e134,
                args: [
                    e95,
                    e133,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:87:24: 92:20 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:87:17: 92:20 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(68),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).68),
                ),
                value: e135,
            },
            ty: (),
            temp_lifetime: Some(
                Node(100),
            ),
            span: src/library/set.rs:87:17: 92:20 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(102),
            ),
            span: src/library/set.rs:84:43: 93:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(102),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).102),
                ),
                value: e137,
            },
            ty: (),
            temp_lifetime: Some(
                Node(102),
            ),
            span: src/library/set.rs:84:43: 93:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(102),
                lint_level: Inherited,
                value: e138,
            },
            ty: (),
            temp_lifetime: Some(
                Node(102),
            ),
            span: src/library/set.rs:84:43: 93:14 (#0),
        },
        Expr {
            kind: Match {
                scrutinee: e62,
                arms: [
                    a1,
                    a2,
                ],
            },
            ty: (),
            temp_lifetime: Some(
                Node(111),
            ),
            span: src/library/set.rs:84:34: 84:42 (#150),
        },
        Expr {
            kind: Scope {
                region_scope: Node(110),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).110),
                ),
                value: e140,
            },
            ty: (),
            temp_lifetime: Some(
                Node(111),
            ),
            span: src/library/set.rs:84:34: 84:42 (#150),
        },
        Expr {
            kind: Block {
                block: b1,
            },
            ty: (),
            temp_lifetime: Some(
                Node(112),
            ),
            span: src/library/set.rs:84:13: 93:14 (#149),
        },
        Expr {
            kind: Loop {
                body: e142,
            },
            ty: (),
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/library/set.rs:84:13: 93:14 (#149),
        },
        Expr {
            kind: Scope {
                region_scope: Node(40),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).40),
                ),
                value: e143,
            },
            ty: (),
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/library/set.rs:84:13: 93:14 (#149),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(40),
                lint_level: Inherited,
                value: e144,
            },
            ty: (),
            temp_lifetime: Some(
                Node(40),
            ),
            span: src/library/set.rs:84:13: 93:14 (#149),
        },
        Expr {
            kind: Match {
                scrutinee: e52,
                arms: [
                    a3,
                ],
            },
            ty: (),
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/library/set.rs:84:13: 93:14 (#149),
        },
        Expr {
            kind: Scope {
                region_scope: Node(116),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).116),
                ),
                value: e146,
            },
            ty: (),
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/library/set.rs:84:13: 93:14 (#149),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(116),
                lint_level: Inherited,
                value: e147,
            },
            ty: (),
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/library/set.rs:84:13: 93:14 (#149),
        },
        Expr {
            kind: Use {
                source: e148,
            },
            ty: (),
            temp_lifetime: Some(
                Node(119),
            ),
            span: src/library/set.rs:84:13: 93:14 (#149),
        },
        Expr {
            kind: Scope {
                region_scope: Node(117),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).117),
                ),
                value: e149,
            },
            ty: (),
            temp_lifetime: Some(
                Node(119),
            ),
            span: src/library/set.rs:84:13: 93:14 (#149),
        },
        Expr {
            kind: Block {
                block: b2,
            },
            ty: (),
            temp_lifetime: Some(
                Node(119),
            ),
            span: src/library/set.rs:83:56: 94:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(119),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).119),
                ),
                value: e151,
            },
            ty: (),
            temp_lifetime: Some(
                Node(119),
            ),
            span: src/library/set.rs:83:56: 94:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(119),
                lint_level: Inherited,
                value: e152,
            },
            ty: (),
            temp_lifetime: Some(
                Node(119),
            ),
            span: src/library/set.rs:83:56: 94:10 (#0),
        },
        Expr {
            kind: Match {
                scrutinee: e33,
                arms: [
                    a0,
                    a4,
                ],
            },
            ty: (),
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/set.rs:83:23: 83:55 (#147),
        },
        Expr {
            kind: Scope {
                region_scope: Node(127),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).127),
                ),
                value: e154,
            },
            ty: (),
            temp_lifetime: Some(
                Node(128),
            ),
            span: src/library/set.rs:83:23: 83:55 (#147),
        },
        Expr {
            kind: Block {
                block: b3,
            },
            ty: (),
            temp_lifetime: Some(
                Node(129),
            ),
            span: src/library/set.rs:83:9: 94:10 (#146),
        },
        Expr {
            kind: Loop {
                body: e156,
            },
            ty: (),
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/set.rs:83:9: 94:10 (#146),
        },
        Expr {
            kind: Scope {
                region_scope: Node(29),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).29),
                ),
                value: e157,
            },
            ty: (),
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/set.rs:83:9: 94:10 (#146),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(29),
                lint_level: Inherited,
                value: e158,
            },
            ty: (),
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/set.rs:83:9: 94:10 (#146),
        },
        Expr {
            kind: Match {
                scrutinee: e23,
                arms: [
                    a5,
                ],
            },
            ty: (),
            temp_lifetime: Some(
                Node(133),
            ),
            span: src/library/set.rs:83:9: 94:10 (#146),
        },
        Expr {
            kind: Scope {
                region_scope: Node(133),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).133),
                ),
                value: e160,
            },
            ty: (),
            temp_lifetime: Some(
                Node(133),
            ),
            span: src/library/set.rs:83:9: 94:10 (#146),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(133),
                lint_level: Inherited,
                value: e161,
            },
            ty: (),
            temp_lifetime: Some(
                Node(133),
            ),
            span: src/library/set.rs:83:9: 94:10 (#146),
        },
        Expr {
            kind: Use {
                source: e162,
            },
            ty: (),
            temp_lifetime: Some(
                Node(135),
            ),
            span: src/library/set.rs:83:9: 94:10 (#146),
        },
        Expr {
            kind: Scope {
                region_scope: Node(134),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).134),
                ),
                value: e163,
            },
            ty: (),
            temp_lifetime: Some(
                Node(135),
            ),
            span: src/library/set.rs:83:9: 94:10 (#146),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).18),
                ),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(139),
            ),
            span: src/library/set.rs:95:9: 95:15 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(136),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).136),
                ),
                value: e165,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(139),
            ),
            span: src/library/set.rs:95:9: 95:15 (#0),
        },
        Expr {
            kind: Block {
                block: b4,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(139),
            ),
            span: src/library/set.rs:81:46: 96:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(139),
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).139),
                ),
                value: e167,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(139),
            ),
            span: src/library/set.rs:81:46: 96:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(139),
                lint_level: Inherited,
                value: e168,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(139),
            ),
            span: src/library/set.rs:81:46: 96:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 138, first_statement_index: 0},
                init_scope: Node(3),
                pattern: Pat {
                    ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
                    span: src/library/set.rs:82:13: 82:23 (#0),
                    kind: AscribeUserType {
                        ascription: Ascription {
                            annotation: CanonicalUserTypeAnnotation {
                                user_ty: Canonical {
                                    max_universe: U0,
                                    variables: [
                                        CanonicalVarInfo {
                                            kind: Region(
                                                U0,
                                            ),
                                        },
                                    ],
                                    value: Ty(
                                        std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
                                    ),
                                },
                                span: src/library/set.rs:82:25: 82:47 (#0),
                                inferred_ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
                            },
                            variance: +,
                        },
                        subpattern: Pat {
                            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
                            span: src/library/set.rs:82:13: 82:23 (#0),
                            kind: Binding {
                                mutability: Mut,
                                name: "result",
                                mode: ByValue,
                                var: LocalVarId(
                                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).18),
                                ),
                                ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
                                subpattern: None,
                                is_primary: true,
                            },
                        },
                    },
                },
                initializer: Some(
                    e3,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).17),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(3),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 101, first_statement_index: 0},
                init_scope: Node(46),
                pattern: Pat {
                    ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
                    span: src/library/set.rs:85:21: 85:41 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "mutated_children",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).53),
                        ),
                        ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e75,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).52),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(46),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(67),
                expr: e92,
            },
            opt_destruction_scope: Some(
                Destruction(67),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(100),
                expr: e136,
            },
            opt_destruction_scope: Some(
                Destruction(100),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(111),
                expr: e141,
            },
            opt_destruction_scope: Some(
                Destruction(111),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(128),
                expr: e155,
            },
            opt_destruction_scope: Some(
                Destruction(128),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(135),
                expr: e164,
            },
            opt_destruction_scope: Some(
                Destruction(135),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::set::Set,
                    span: src/library/set.rs:81:13: 81:18 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).2),
                        ),
                        ty: &library::set::Set,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::set::Set,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:302 ~ andrew_fuzz[741f]::library::set::{impl#7}::fuzz).1),
            ),
        },
    ],
}

DefId(0:304 ~ andrew_fuzz[741f]::library::set::{impl#8}::name):
Thir {
    body_type: Fn(
        ([&library::set::Set]; c_variadic: false)->&std::string::String,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(8),
            opt_destruction_scope: None,
            span: src/library/set.rs:100:31: 102:6 (#0),
            stmts: [],
            expr: Some(
                e14,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:304 ~ andrew_fuzz[741f]::library::set::{impl#8}::name).2),
                ),
            },
            ty: &library::set::Set,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/set.rs:101:9: 101:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/set.rs:101:9: 101:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:304 ~ andrew_fuzz[741f]::library::set::{impl#8}::name).6),
                ),
                value: e1,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/set.rs:101:9: 101:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/set.rs:101:9: 101:18 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e3,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/set.rs:101:9: 101:25 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> &'a <std::rc::Rc<core::DataModelBase> as std::ops::Deref>::Target {<std::rc::Rc<core::DataModelBase> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/set.rs:101:9: 101:25 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> &'a <std::rc::Rc<core::DataModelBase> as std::ops::Deref>::Target {<std::rc::Rc<core::DataModelBase> as std::ops::Deref>::deref},
                fun: e5,
                args: [
                    e4,
                ],
                from_hir_call: false,
                fn_span: src/library/set.rs:101:9: 101:25 (#0),
            },
            ty: &core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/set.rs:101:9: 101:25 (#0),
        },
        Expr {
            kind: Deref {
                arg: e6,
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/set.rs:101:9: 101:25 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e7,
            },
            ty: &core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/set.rs:101:9: 101:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:304 ~ andrew_fuzz[741f]::library::set::{impl#8}::name).5),
                ),
                value: e8,
            },
            ty: &core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/set.rs:101:9: 101:18 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::DataModelBase) -> &'a std::string::String {core::DataModelBase::name},
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/set.rs:101:19: 101:23 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::DataModelBase) -> &'a std::string::String {core::DataModelBase::name},
                fun: e10,
                args: [
                    e9,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:101:19: 101:25 (#0),
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/set.rs:101:9: 101:25 (#0),
        },
        Expr {
            kind: Deref {
                arg: e11,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/set.rs:101:9: 101:25 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e12,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/set.rs:101:9: 101:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:304 ~ andrew_fuzz[741f]::library::set::{impl#8}::name).3),
                ),
                value: e13,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/set.rs:101:9: 101:25 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/set.rs:100:31: 102:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:304 ~ andrew_fuzz[741f]::library::set::{impl#8}::name).9),
                ),
                value: e15,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/set.rs:100:31: 102:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(9),
                lint_level: Inherited,
                value: e16,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/set.rs:100:31: 102:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::set::Set,
                    span: src/library/set.rs:100:13: 100:18 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:304 ~ andrew_fuzz[741f]::library::set::{impl#8}::name).2),
                        ),
                        ty: &library::set::Set,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::set::Set,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:304 ~ andrew_fuzz[741f]::library::set::{impl#8}::name).1),
            ),
        },
    ],
}

DefId(0:305 ~ andrew_fuzz[741f]::library::set::{impl#8}::set_name):
Thir {
    body_type: Fn(
        ([&mut library::set::Set, &str]; c_variadic: false)->(),
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(24),
            opt_destruction_scope: None,
            span: src/library/set.rs:103:40: 105:6 (#0),
            stmts: [
                s0,
            ],
            expr: None,
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:305 ~ andrew_fuzz[741f]::library::set::{impl#8}::set_name).2),
                ),
            },
            ty: &mut library::set::Set,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:104:9: 104:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:104:9: 104:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:305 ~ andrew_fuzz[741f]::library::set::{impl#8}::set_name).7),
                ),
                value: e1,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:104:9: 104:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:104:9: 104:18 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:305 ~ andrew_fuzz[741f]::library::set::{impl#8}::set_name).6),
                ),
                value: e3,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:104:9: 104:18 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:104:21: 104:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:305 ~ andrew_fuzz[741f]::library::set::{impl#8}::set_name).10),
                ),
                value: e5,
            },
            ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:104:21: 104:28 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:104:29: 104:47 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:305 ~ andrew_fuzz[741f]::library::set::{impl#8}::set_name).15),
                ),
                value: e7,
            },
            ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:104:29: 104:47 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:305 ~ andrew_fuzz[741f]::library::set::{impl#8}::set_name).4),
                ),
            },
            ty: &str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:104:48: 104:52 (#0),
        },
        Expr {
            kind: Deref {
                arg: e9,
            },
            ty: str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:104:48: 104:64 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e10,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:104:48: 104:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(21),
                lint_level: Explicit(
                    HirId(DefId(0:305 ~ andrew_fuzz[741f]::library::set::{impl#8}::set_name).21),
                ),
                value: e11,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:104:48: 104:52 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:104:53: 104:62 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
                fun: e13,
                args: [
                    e12,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:104:53: 104:64 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:104:48: 104:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:305 ~ andrew_fuzz[741f]::library::set::{impl#8}::set_name).19),
                ),
                value: e14,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:104:48: 104:64 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
                fun: e8,
                args: [
                    e15,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:104:29: 104:65 (#0),
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:104:29: 104:65 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:305 ~ andrew_fuzz[741f]::library::set::{impl#8}::set_name).14),
                ),
                value: e16,
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:104:29: 104:65 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
                fun: e6,
                args: [
                    e17,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:104:21: 104:66 (#0),
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:104:21: 104:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:305 ~ andrew_fuzz[741f]::library::set::{impl#8}::set_name).9),
                ),
                value: e18,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:104:21: 104:66 (#0),
        },
        Expr {
            kind: Assign {
                lhs: e4,
                rhs: e19,
            },
            ty: (),
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:104:9: 104:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:305 ~ andrew_fuzz[741f]::library::set::{impl#8}::set_name).5),
                ),
                value: e20,
            },
            ty: (),
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/set.rs:104:9: 104:66 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/set.rs:103:40: 105:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:305 ~ andrew_fuzz[741f]::library::set::{impl#8}::set_name).25),
                ),
                value: e22,
            },
            ty: (),
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/set.rs:103:40: 105:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(25),
                lint_level: Inherited,
                value: e23,
            },
            ty: (),
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/set.rs:103:40: 105:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(23),
                expr: e21,
            },
            opt_destruction_scope: Some(
                Destruction(23),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &mut library::set::Set,
                    span: src/library/set.rs:103:17: 103:26 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:305 ~ andrew_fuzz[741f]::library::set::{impl#8}::set_name).2),
                        ),
                        ty: &mut library::set::Set,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut library::set::Set,
            ty_span: None,
            self_kind: Some(
                MutRef,
            ),
            hir_id: Some(
                HirId(DefId(0:305 ~ andrew_fuzz[741f]::library::set::{impl#8}::set_name).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &str,
                    span: src/library/set.rs:103:28: 103:32 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "name",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:305 ~ andrew_fuzz[741f]::library::set::{impl#8}::set_name).4),
                        ),
                        ty: &str,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &str,
            ty_span: Some(
                src/library/set.rs:103:34: 103:38 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:305 ~ andrew_fuzz[741f]::library::set::{impl#8}::set_name).3),
            ),
        },
    ],
}

DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization):
Thir {
    body_type: Fn(
        ([&library::set::Set, &mut core::bit_array::BitArray]; c_variadic: false)->(),
    ),
    arms: [
        Arm {
            pattern: Pat {
                ty: std::option::Option<&std::rc::Rc<dyn core::DataModel>>,
                span: src/library/set.rs:113:9: 115:10 (#152),
                kind: Variant {
                    adt_def: std::option::Option,
                    substs: [
                        &std::rc::Rc<dyn core::DataModel>,
                    ],
                    variant_index: 0,
                    subpatterns: [],
                },
            },
            guard: None,
            body: e24,
            lint_level: Explicit(
                HirId(DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization).13),
            ),
            scope: Node(13),
            span: src/library/set.rs:113:9: 115:10 (#152),
        },
        Arm {
            pattern: Pat {
                ty: std::option::Option<&std::rc::Rc<dyn core::DataModel>>,
                span: src/library/set.rs:113:13: 113:14 (#154),
                kind: Variant {
                    adt_def: std::option::Option,
                    substs: [
                        &std::rc::Rc<dyn core::DataModel>,
                    ],
                    variant_index: 1,
                    subpatterns: [
                        FieldPat {
                            field: field[0],
                            pattern: Pat {
                                ty: &std::rc::Rc<dyn core::DataModel>,
                                span: src/library/set.rs:113:13: 113:14 (#0),
                                kind: Binding {
                                    mutability: Not,
                                    name: "c",
                                    mode: ByValue,
                                    var: LocalVarId(
                                        HirId(DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization).9),
                                    ),
                                    ty: &std::rc::Rc<dyn core::DataModel>,
                                    subpattern: None,
                                    is_primary: true,
                                },
                            },
                        },
                    ],
                },
            },
            guard: None,
            body: e42,
            lint_level: Explicit(
                HirId(DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization).25),
            ),
            scope: Node(25),
            span: src/library/set.rs:113:33: 115:10 (#0),
        },
        Arm {
            pattern: Pat {
                ty: std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
                span: src/library/set.rs:113:18: 113:32 (#153),
                kind: Binding {
                    mutability: Mut,
                    name: "iter",
                    mode: ByValue,
                    var: LocalVarId(
                        HirId(DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization).26),
                    ),
                    ty: std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
                    subpattern: None,
                    is_primary: true,
                },
            },
            guard: None,
            body: e48,
            lint_level: Explicit(
                HirId(DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization).35),
            ),
            scope: Node(35),
            span: src/library/set.rs:113:9: 115:10 (#152),
        },
    ],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(23),
            opt_destruction_scope: None,
            span: src/library/set.rs:113:33: 115:10 (#0),
            stmts: [
                s0,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(34),
            opt_destruction_scope: Some(
                Destruction(34),
            ),
            span: src/library/set.rs:113:9: 115:10 (#152),
            stmts: [
                s1,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(40),
            opt_destruction_scope: None,
            span: src/library/set.rs:112:51: 116:6 (#0),
            stmts: [],
            expr: Some(
                e53,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(&std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> <&std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::IntoIter {<&std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::into_iter},
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/set.rs:113:18: 113:32 (#153),
        },
        Expr {
            kind: Scope {
                region_scope: Node(36),
                lint_level: Explicit(
                    HirId(DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization).36),
                ),
                value: e0,
            },
            ty: fn(&std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> <&std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::IntoIter {<&std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::into_iter},
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/set.rs:113:18: 113:32 (#153),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization).2),
                ),
            },
            ty: &library::set::Set,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/set.rs:113:19: 113:23 (#0),
        },
        Expr {
            kind: Deref {
                arg: e2,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/set.rs:113:19: 113:23 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization).7),
                ),
                value: e3,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/set.rs:113:19: 113:23 (#0),
        },
        Expr {
            kind: Field {
                lhs: e4,
                variant_index: 0,
                name: field[2],
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/set.rs:113:19: 113:32 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization).6),
                ),
                value: e5,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/set.rs:113:19: 113:32 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e6,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/set.rs:113:18: 113:32 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization).5),
                ),
                value: e7,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/set.rs:113:18: 113:32 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(&std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> <&std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::IntoIter {<&std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::into_iter},
                fun: e1,
                args: [
                    e8,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:113:18: 113:32 (#153),
            },
            ty: std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/set.rs:113:18: 113:32 (#153),
        },
        Expr {
            kind: Scope {
                region_scope: Node(37),
                lint_level: Explicit(
                    HirId(DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization).37),
                ),
                value: e9,
            },
            ty: std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/set.rs:113:18: 113:32 (#153),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>) -> std::option::Option<<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::Item> {<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::next},
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:113:18: 113:32 (#153),
        },
        Expr {
            kind: Scope {
                region_scope: Node(30),
                lint_level: Explicit(
                    HirId(DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization).30),
                ),
                value: e11,
            },
            ty: for<'a> fn(&'a mut std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>) -> std::option::Option<<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::Item> {<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::next},
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:113:18: 113:32 (#153),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization).26),
                ),
            },
            ty: std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:113:18: 113:32 (#153),
        },
        Expr {
            kind: Scope {
                region_scope: Node(28),
                lint_level: Explicit(
                    HirId(DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization).28),
                ),
                value: e13,
            },
            ty: std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:113:18: 113:32 (#153),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: false,
                },
                arg: e14,
            },
            ty: &mut std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:113:18: 113:32 (#153),
        },
        Expr {
            kind: Deref {
                arg: e15,
            },
            ty: std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:113:18: 113:32 (#153),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e16,
            },
            ty: &mut std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:113:18: 113:32 (#153),
        },
        Expr {
            kind: Scope {
                region_scope: Node(29),
                lint_level: Explicit(
                    HirId(DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization).29),
                ),
                value: e17,
            },
            ty: &mut std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:113:18: 113:32 (#153),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>>) -> std::option::Option<<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::Item> {<std::slice::Iter<'_, std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::next},
                fun: e12,
                args: [
                    e18,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:113:18: 113:32 (#153),
            },
            ty: std::option::Option<&std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:113:18: 113:32 (#153),
        },
        Expr {
            kind: Scope {
                region_scope: Node(31),
                lint_level: Explicit(
                    HirId(DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization).31),
                ),
                value: e19,
            },
            ty: std::option::Option<&std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:113:18: 113:32 (#153),
        },
        Expr {
            kind: Break {
                label: Node(10),
                value: None,
            },
            ty: !,
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/library/set.rs:113:9: 115:10 (#152),
        },
        Expr {
            kind: NeverToAny {
                source: e21,
            },
            ty: (),
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/library/set.rs:113:9: 115:10 (#152),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization).11),
                ),
                value: e22,
            },
            ty: (),
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/library/set.rs:113:9: 115:10 (#152),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(11),
                lint_level: Inherited,
                value: e23,
            },
            ty: (),
            temp_lifetime: Some(
                Node(11),
            ),
            span: src/library/set.rs:113:9: 115:10 (#152),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization).9),
                ),
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/set.rs:114:13: 114:14 (#0),
        },
        Expr {
            kind: Deref {
                arg: e25,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/set.rs:114:13: 114:35 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e26,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/set.rs:114:13: 114:35 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/set.rs:114:13: 114:35 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
                fun: e28,
                args: [
                    e27,
                ],
                from_hir_call: false,
                fn_span: src/library/set.rs:114:13: 114:35 (#0),
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/set.rs:114:13: 114:35 (#0),
        },
        Expr {
            kind: Deref {
                arg: e29,
            },
            ty: dyn core::DataModel,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/set.rs:114:13: 114:35 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e30,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/set.rs:114:13: 114:35 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(18),
                lint_level: Explicit(
                    HirId(DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization).18),
                ),
                value: e31,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/set.rs:114:13: 114:14 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization).4),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/set.rs:114:32: 114:34 (#0),
        },
        Expr {
            kind: Deref {
                arg: e33,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/set.rs:114:32: 114:34 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e34,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/set.rs:114:32: 114:34 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(20),
                lint_level: Explicit(
                    HirId(DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization).20),
                ),
                value: e35,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/set.rs:114:32: 114:34 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b> fn(&'a dyn core::DataModel, &'b mut core::bit_array::BitArray) {<dyn core::DataModel as core::Serializer>::do_serialization},
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/set.rs:114:15: 114:31 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b> fn(&'a dyn core::DataModel, &'b mut core::bit_array::BitArray) {<dyn core::DataModel as core::Serializer>::do_serialization},
                fun: e37,
                args: [
                    e32,
                    e36,
                ],
                from_hir_call: true,
                fn_span: src/library/set.rs:114:15: 114:35 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/set.rs:114:13: 114:35 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(16),
                lint_level: Explicit(
                    HirId(DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization).16),
                ),
                value: e38,
            },
            ty: (),
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/set.rs:114:13: 114:35 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(24),
            ),
            span: src/library/set.rs:113:33: 115:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(24),
                lint_level: Explicit(
                    HirId(DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization).24),
                ),
                value: e40,
            },
            ty: (),
            temp_lifetime: Some(
                Node(24),
            ),
            span: src/library/set.rs:113:33: 115:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(24),
                lint_level: Inherited,
                value: e41,
            },
            ty: (),
            temp_lifetime: Some(
                Node(24),
            ),
            span: src/library/set.rs:113:33: 115:10 (#0),
        },
        Expr {
            kind: Match {
                scrutinee: e20,
                arms: [
                    a0,
                    a1,
                ],
            },
            ty: (),
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:113:18: 113:32 (#153),
        },
        Expr {
            kind: Scope {
                region_scope: Node(32),
                lint_level: Explicit(
                    HirId(DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization).32),
                ),
                value: e43,
            },
            ty: (),
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/set.rs:113:18: 113:32 (#153),
        },
        Expr {
            kind: Block {
                block: b1,
            },
            ty: (),
            temp_lifetime: Some(
                Node(34),
            ),
            span: src/library/set.rs:113:9: 115:10 (#152),
        },
        Expr {
            kind: Loop {
                body: e45,
            },
            ty: (),
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/library/set.rs:113:9: 115:10 (#152),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization).10),
                ),
                value: e46,
            },
            ty: (),
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/library/set.rs:113:9: 115:10 (#152),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(10),
                lint_level: Inherited,
                value: e47,
            },
            ty: (),
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/library/set.rs:113:9: 115:10 (#152),
        },
        Expr {
            kind: Match {
                scrutinee: e10,
                arms: [
                    a2,
                ],
            },
            ty: (),
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/set.rs:113:9: 115:10 (#152),
        },
        Expr {
            kind: Scope {
                region_scope: Node(38),
                lint_level: Explicit(
                    HirId(DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization).38),
                ),
                value: e49,
            },
            ty: (),
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/set.rs:113:9: 115:10 (#152),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(38),
                lint_level: Inherited,
                value: e50,
            },
            ty: (),
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/set.rs:113:9: 115:10 (#152),
        },
        Expr {
            kind: Use {
                source: e51,
            },
            ty: (),
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/set.rs:113:9: 115:10 (#152),
        },
        Expr {
            kind: Scope {
                region_scope: Node(39),
                lint_level: Explicit(
                    HirId(DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization).39),
                ),
                value: e52,
            },
            ty: (),
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/set.rs:113:9: 115:10 (#152),
        },
        Expr {
            kind: Block {
                block: b2,
            },
            ty: (),
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/set.rs:112:51: 116:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(41),
                lint_level: Explicit(
                    HirId(DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization).41),
                ),
                value: e54,
            },
            ty: (),
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/set.rs:112:51: 116:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(41),
                lint_level: Inherited,
                value: e55,
            },
            ty: (),
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/set.rs:112:51: 116:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(22),
                expr: e39,
            },
            opt_destruction_scope: Some(
                Destruction(22),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(33),
                expr: e44,
            },
            opt_destruction_scope: Some(
                Destruction(33),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::set::Set,
                    span: src/library/set.rs:112:25: 112:30 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization).2),
                        ),
                        ty: &library::set::Set,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::set::Set,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &mut core::bit_array::BitArray,
                    span: src/library/set.rs:112:32: 112:34 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "ba",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization).4),
                        ),
                        ty: &mut core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut core::bit_array::BitArray,
            ty_span: Some(
                src/library/set.rs:112:36: 112:49 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:308 ~ andrew_fuzz[741f]::library::set::{impl#10}::do_serialization).3),
            ),
        },
    ],
}

DefId(0:332 ~ andrew_fuzz[741f]::library::u8::{impl#0}::new):
Thir {
    body_type: Fn(
        ([]; c_variadic: false)->library::u8::U8,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(7),
            opt_destruction_scope: None,
            span: src/library/u8.rs:16:26: 18:6 (#0),
            stmts: [],
            expr: Some(
                e5,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(u8) -> library::u8::U8 {library::u8::U8::from_u8},
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/library/u8.rs:17:9: 17:22 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(2),
                lint_level: Explicit(
                    HirId(DefId(0:332 ~ andrew_fuzz[741f]::library::u8::{impl#0}::new).2),
                ),
                value: e0,
            },
            ty: fn(u8) -> library::u8::U8 {library::u8::U8::from_u8},
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/library/u8.rs:17:9: 17:22 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        0,
                        Unsuffixed,
                    ),
                    span: src/library/u8.rs:17:23: 17:27 (#0),
                },
                neg: false,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/library/u8.rs:17:23: 17:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:332 ~ andrew_fuzz[741f]::library::u8::{impl#0}::new).6),
                ),
                value: e2,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/library/u8.rs:17:23: 17:27 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(u8) -> library::u8::U8 {library::u8::U8::from_u8},
                fun: e1,
                args: [
                    e3,
                ],
                from_hir_call: true,
                fn_span: src/library/u8.rs:17:9: 17:28 (#0),
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/library/u8.rs:17:9: 17:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(1),
                lint_level: Explicit(
                    HirId(DefId(0:332 ~ andrew_fuzz[741f]::library::u8::{impl#0}::new).1),
                ),
                value: e4,
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/library/u8.rs:17:9: 17:28 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/library/u8.rs:16:26: 18:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:332 ~ andrew_fuzz[741f]::library::u8::{impl#0}::new).8),
                ),
                value: e6,
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/library/u8.rs:16:26: 18:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(8),
                lint_level: Inherited,
                value: e7,
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/library/u8.rs:16:26: 18:6 (#0),
        },
    ],
    stmts: [],
    params: [],
}

DefId(0:333 ~ andrew_fuzz[741f]::library::u8::{impl#0}::from_u8):
Thir {
    body_type: Fn(
        ([u8]; c_variadic: false)->library::u8::U8,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(42),
            opt_destruction_scope: None,
            span: src/library/u8.rs:19:38: 25:6 (#0),
            stmts: [],
            expr: Some(
                e33,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:21:19: 21:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:333 ~ andrew_fuzz[741f]::library::u8::{impl#0}::from_u8).7),
                ),
                value: e0,
            },
            ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:21:19: 21:26 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:21:27: 21:45 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(12),
                lint_level: Explicit(
                    HirId(DefId(0:333 ~ andrew_fuzz[741f]::library::u8::{impl#0}::from_u8).12),
                ),
                value: e2,
            },
            ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:21:27: 21:45 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "U8",
                        Cooked,
                    ),
                    span: src/library/u8.rs:21:46: 21:50 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:21:46: 21:50 (#0),
        },
        Expr {
            kind: Deref {
                arg: e4,
            },
            ty: str,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:21:46: 21:62 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e5,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:21:46: 21:62 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(18),
                lint_level: Explicit(
                    HirId(DefId(0:333 ~ andrew_fuzz[741f]::library::u8::{impl#0}::from_u8).18),
                ),
                value: e6,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:21:46: 21:50 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:21:51: 21:60 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
                fun: e8,
                args: [
                    e7,
                ],
                from_hir_call: true,
                fn_span: src/library/u8.rs:21:51: 21:62 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:21:46: 21:62 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(16),
                lint_level: Explicit(
                    HirId(DefId(0:333 ~ andrew_fuzz[741f]::library::u8::{impl#0}::from_u8).16),
                ),
                value: e9,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:21:46: 21:62 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
                fun: e3,
                args: [
                    e10,
                ],
                from_hir_call: true,
                fn_span: src/library/u8.rs:21:27: 21:63 (#0),
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:21:27: 21:63 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:333 ~ andrew_fuzz[741f]::library::u8::{impl#0}::from_u8).11),
                ),
                value: e11,
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:21:27: 21:63 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
                fun: e1,
                args: [
                    e12,
                ],
                from_hir_call: true,
                fn_span: src/library/u8.rs:21:19: 21:64 (#0),
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:21:19: 21:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:333 ~ andrew_fuzz[741f]::library::u8::{impl#0}::from_u8).6),
                ),
                value: e13,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:21:19: 21:64 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::vec::Vec<u8>, std::option::Option<i32>) -> core::bit_array::BitArray {core::bit_array::BitArray::new},
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:22:19: 22:32 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(21),
                lint_level: Explicit(
                    HirId(DefId(0:333 ~ andrew_fuzz[741f]::library::u8::{impl#0}::from_u8).21),
                ),
                value: e15,
            },
            ty: fn(std::vec::Vec<u8>, std::option::Option<i32>) -> core::bit_array::BitArray {core::bit_array::BitArray::new},
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:22:19: 22:32 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:5127 ~ alloc[42dc]::slice::{impl#0}::into_vec),
                            UserSubsts {
                                substs: [
                                    ^0,
                                    ^1,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:5110 ~ alloc[42dc]::slice::{impl#0}),
                                        self_ty: [^2],
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(std::boxed::Box<[u8]>) -> std::vec::Vec<u8> {std::slice::<impl [u8]>::into_vec::<std::alloc::Global>},
            temp_lifetime: Some(
                Node(43),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 50:51 (#66),
        },
        Expr {
            kind: Scope {
                region_scope: Node(26),
                lint_level: Explicit(
                    HirId(DefId(0:333 ~ andrew_fuzz[741f]::library::u8::{impl#0}::from_u8).26),
                ),
                value: e17,
            },
            ty: fn(std::boxed::Box<[u8]>) -> std::vec::Vec<u8> {std::slice::<impl [u8]>::into_vec::<std::alloc::Global>},
            temp_lifetime: Some(
                Node(43),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 50:51 (#66),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:333 ~ andrew_fuzz[741f]::library::u8::{impl#0}::from_u8).2),
                ),
            },
            ty: u8,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:22:38: 22:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(38),
                lint_level: Explicit(
                    HirId(DefId(0:333 ~ andrew_fuzz[741f]::library::u8::{impl#0}::from_u8).38),
                ),
                value: e19,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:22:38: 22:42 (#0),
        },
        Expr {
            kind: Array {
                fields: [
                    e20,
                ],
            },
            ty: [u8; 1],
            temp_lifetime: Some(
                Node(43),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:37: 54:46 (#66),
        },
        Expr {
            kind: Scope {
                region_scope: Node(37),
                lint_level: Explicit(
                    HirId(DefId(0:333 ~ andrew_fuzz[741f]::library::u8::{impl#0}::from_u8).37),
                ),
                value: e21,
            },
            ty: [u8; 1],
            temp_lifetime: Some(
                Node(43),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:37: 54:46 (#66),
        },
        Expr {
            kind: Box {
                value: e22,
            },
            ty: std::boxed::Box<[u8; 1]>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13: 54:47 (#66),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e23,
            },
            ty: std::boxed::Box<[u8]>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13: 54:47 (#66),
        },
        Expr {
            kind: Scope {
                region_scope: Node(30),
                lint_level: Explicit(
                    HirId(DefId(0:333 ~ andrew_fuzz[741f]::library::u8::{impl#0}::from_u8).30),
                ),
                value: e24,
            },
            ty: std::boxed::Box<[u8]>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13: 54:47 (#66),
        },
        Expr {
            kind: Call {
                ty: fn(std::boxed::Box<[u8]>) -> std::vec::Vec<u8> {std::slice::<impl [u8]>::into_vec::<std::alloc::Global>},
                fun: e18,
                args: [
                    e25,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 55:10 (#66),
            },
            ty: std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 55:10 (#66),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:333 ~ andrew_fuzz[741f]::library::u8::{impl#0}::from_u8).25),
                ),
                value: e26,
            },
            ty: std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 55:10 (#66),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: std::option::Option,
                    variant_index: 0,
                    substs: [
                        i32,
                    ],
                    user_ty: None,
                    fields: [],
                    base: None,
                },
            ),
            ty: std::option::Option<i32>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:22:45: 22:49 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(40),
                lint_level: Explicit(
                    HirId(DefId(0:333 ~ andrew_fuzz[741f]::library::u8::{impl#0}::from_u8).40),
                ),
                value: e28,
            },
            ty: std::option::Option<i32>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:22:45: 22:49 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::vec::Vec<u8>, std::option::Option<i32>) -> core::bit_array::BitArray {core::bit_array::BitArray::new},
                fun: e16,
                args: [
                    e27,
                    e29,
                ],
                from_hir_call: true,
                fn_span: src/library/u8.rs:22:19: 22:50 (#0),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:22:19: 22:50 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(20),
                lint_level: Explicit(
                    HirId(DefId(0:333 ~ andrew_fuzz[741f]::library::u8::{impl#0}::from_u8).20),
                ),
                value: e30,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:22:19: 22:50 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: library::u8::U8,
                    variant_index: 0,
                    substs: [],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e14,
                        },
                        FieldExpr {
                            name: field[1],
                            expr: e31,
                        },
                    ],
                    base: None,
                },
            ),
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:20:9: 23:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:333 ~ andrew_fuzz[741f]::library::u8::{impl#0}::from_u8).3),
                ),
                value: e32,
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:20:9: 23:10 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:19:38: 25:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(43),
                lint_level: Explicit(
                    HirId(DefId(0:333 ~ andrew_fuzz[741f]::library::u8::{impl#0}::from_u8).43),
                ),
                value: e34,
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:19:38: 25:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(43),
                lint_level: Inherited,
                value: e35,
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:19:38: 25:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: u8,
                    span: src/library/u8.rs:19:20: 19:24 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "data",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:333 ~ andrew_fuzz[741f]::library::u8::{impl#0}::from_u8).2),
                        ),
                        ty: u8,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: u8,
            ty_span: Some(
                src/library/u8.rs:19:26: 19:28 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:333 ~ andrew_fuzz[741f]::library::u8::{impl#0}::from_u8).1),
            ),
        },
    ],
}

DefId(0:336 ~ andrew_fuzz[741f]::library::u8::{impl#2}::int):
Thir {
    body_type: Fn(
        ([&library::u8::U8]; c_variadic: false)->i32,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(12),
            opt_destruction_scope: None,
            span: src/library/u8.rs:31:26: 33:6 (#0),
            stmts: [],
            expr: Some(
                e12,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:336 ~ andrew_fuzz[741f]::library::u8::{impl#2}::int).2),
                ),
            },
            ty: &library::u8::U8,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:32:9: 32:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:32:9: 32:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:336 ~ andrew_fuzz[741f]::library::u8::{impl#2}::int).7),
                ),
                value: e1,
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:32:9: 32:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[1],
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:32:9: 32:18 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e3,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:32:9: 32:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:336 ~ andrew_fuzz[741f]::library::u8::{impl#2}::int).6),
                ),
                value: e4,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:32:9: 32:18 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/library/u8.rs:32:24: 32:25 (#0),
                },
                neg: false,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:32:24: 32:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:336 ~ andrew_fuzz[741f]::library::u8::{impl#2}::int).9),
                ),
                value: e6,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:32:24: 32:25 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bit_array::BitArray, u8) -> u8 {core::bit_array::BitArray::peek},
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:32:19: 32:23 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bit_array::BitArray, u8) -> u8 {core::bit_array::BitArray::peek},
                fun: e8,
                args: [
                    e5,
                    e7,
                ],
                from_hir_call: true,
                fn_span: src/library/u8.rs:32:19: 32:26 (#0),
            },
            ty: u8,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:32:9: 32:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:336 ~ andrew_fuzz[741f]::library::u8::{impl#2}::int).4),
                ),
                value: e9,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:32:9: 32:26 (#0),
        },
        Expr {
            kind: Cast {
                source: e10,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:32:9: 32:33 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:336 ~ andrew_fuzz[741f]::library::u8::{impl#2}::int).3),
                ),
                value: e11,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:32:9: 32:33 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:31:26: 33:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:336 ~ andrew_fuzz[741f]::library::u8::{impl#2}::int).13),
                ),
                value: e13,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:31:26: 33:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(13),
                lint_level: Inherited,
                value: e14,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:31:26: 33:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::u8::U8,
                    span: src/library/u8.rs:31:12: 31:17 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:336 ~ andrew_fuzz[741f]::library::u8::{impl#2}::int).2),
                        ),
                        ty: &library::u8::U8,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::u8::U8,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:336 ~ andrew_fuzz[741f]::library::u8::{impl#2}::int).1),
            ),
        },
    ],
}

DefId(0:338 ~ andrew_fuzz[741f]::library::u8::{impl#3}::clone):
Thir {
    body_type: Fn(
        ([&library::u8::U8]; c_variadic: false)->std::boxed::Box<dyn core::DataModel>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(22),
            opt_destruction_scope: None,
            span: src/library/u8.rs:37:43: 42:6 (#0),
            stmts: [],
            expr: Some(
                e24,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:296 ~ alloc[42dc]::boxed::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:294 ~ alloc[42dc]::boxed::{impl#0}),
                                        self_ty: std::boxed::Box<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::u8::U8) -> std::boxed::Box<library::u8::U8> {std::boxed::Box::<library::u8::U8>::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:38:9: 38:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:338 ~ andrew_fuzz[741f]::library::u8::{impl#3}::clone).4),
                ),
                value: e0,
            },
            ty: fn(library::u8::U8) -> std::boxed::Box<library::u8::U8> {std::boxed::Box::<library::u8::U8>::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:38:9: 38:17 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:338 ~ andrew_fuzz[741f]::library::u8::{impl#3}::clone).2),
                ),
            },
            ty: &library::u8::U8,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:39:19: 39:23 (#0),
        },
        Expr {
            kind: Deref {
                arg: e2,
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:39:19: 39:23 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:338 ~ andrew_fuzz[741f]::library::u8::{impl#3}::clone).14),
                ),
                value: e3,
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:39:19: 39:23 (#0),
        },
        Expr {
            kind: Field {
                lhs: e4,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:39:19: 39:28 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e5,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:39:19: 39:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:338 ~ andrew_fuzz[741f]::library::u8::{impl#3}::clone).13),
                ),
                value: e6,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:39:19: 39:28 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> std::rc::Rc<core::DataModelBase> {<std::rc::Rc<core::DataModelBase> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:39:29: 39:34 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> std::rc::Rc<core::DataModelBase> {<std::rc::Rc<core::DataModelBase> as std::clone::Clone>::clone},
                fun: e8,
                args: [
                    e7,
                ],
                from_hir_call: true,
                fn_span: src/library/u8.rs:39:29: 39:36 (#0),
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:39:19: 39:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:338 ~ andrew_fuzz[741f]::library::u8::{impl#3}::clone).11),
                ),
                value: e9,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:39:19: 39:36 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:338 ~ andrew_fuzz[741f]::library::u8::{impl#3}::clone).2),
                ),
            },
            ty: &library::u8::U8,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:40:19: 40:23 (#0),
        },
        Expr {
            kind: Deref {
                arg: e11,
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:40:19: 40:23 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(20),
                lint_level: Explicit(
                    HirId(DefId(0:338 ~ andrew_fuzz[741f]::library::u8::{impl#3}::clone).20),
                ),
                value: e12,
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:40:19: 40:23 (#0),
        },
        Expr {
            kind: Field {
                lhs: e13,
                variant_index: 0,
                name: field[1],
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:40:19: 40:28 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e14,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:40:19: 40:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:338 ~ andrew_fuzz[741f]::library::u8::{impl#3}::clone).19),
                ),
                value: e15,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:40:19: 40:28 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bit_array::BitArray) -> core::bit_array::BitArray {core::bit_array::BitArray::clone},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:40:29: 40:34 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bit_array::BitArray) -> core::bit_array::BitArray {core::bit_array::BitArray::clone},
                fun: e17,
                args: [
                    e16,
                ],
                from_hir_call: true,
                fn_span: src/library/u8.rs:40:29: 40:36 (#0),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:40:19: 40:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:338 ~ andrew_fuzz[741f]::library::u8::{impl#3}::clone).17),
                ),
                value: e18,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:40:19: 40:36 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: library::u8::U8,
                    variant_index: 0,
                    substs: [],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e10,
                        },
                        FieldExpr {
                            name: field[1],
                            expr: e19,
                        },
                    ],
                    base: None,
                },
            ),
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:38:18: 41:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:338 ~ andrew_fuzz[741f]::library::u8::{impl#3}::clone).8),
                ),
                value: e20,
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:38:18: 41:10 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::u8::U8) -> std::boxed::Box<library::u8::U8> {std::boxed::Box::<library::u8::U8>::new},
                fun: e1,
                args: [
                    e21,
                ],
                from_hir_call: true,
                fn_span: src/library/u8.rs:38:9: 41:11 (#0),
            },
            ty: std::boxed::Box<library::u8::U8>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:38:9: 41:11 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e22,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:38:9: 41:11 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:338 ~ andrew_fuzz[741f]::library::u8::{impl#3}::clone).3),
                ),
                value: e23,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:38:9: 41:11 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:38:9: 41:11 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e25,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:38:9: 41:11 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(23),
                lint_level: Explicit(
                    HirId(DefId(0:338 ~ andrew_fuzz[741f]::library::u8::{impl#3}::clone).23),
                ),
                value: e26,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:37:43: 42:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(23),
                lint_level: Inherited,
                value: e27,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:37:43: 42:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::u8::U8,
                    span: src/library/u8.rs:37:14: 37:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:338 ~ andrew_fuzz[741f]::library::u8::{impl#3}::clone).2),
                        ),
                        ty: &library::u8::U8,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::u8::U8,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:338 ~ andrew_fuzz[741f]::library::u8::{impl#3}::clone).1),
            ),
        },
    ],
}

DefId(0:340 ~ andrew_fuzz[741f]::library::u8::{impl#4}::breed):
Thir {
    body_type: Fn(
        ([&library::u8::U8, std::boxed::Box<dyn core::DataModel>]; c_variadic: false)->std::boxed::Box<dyn core::DataModel>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(12),
            opt_destruction_scope: None,
            span: src/library/u8.rs:46:70: 48:6 (#0),
            stmts: [
                s0,
            ],
            expr: None,
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(11),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:9: 773:33 (#68),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:340 ~ andrew_fuzz[741f]::library::u8::{impl#4}::breed).6),
                ),
                value: e0,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(11),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:9: 773:33 (#68),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "not yet implemented",
                        Cooked,
                    ),
                    span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:34: 773:55 (#68),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(11),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:34: 773:55 (#68),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:340 ~ andrew_fuzz[741f]::library::u8::{impl#4}::breed).10),
                ),
                value: e2,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(11),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:34: 773:55 (#68),
        },
        Expr {
            kind: Call {
                ty: fn(&'static str) -> ! {core::panicking::panic},
                fun: e1,
                args: [
                    e3,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:9: 773:56 (#68),
            },
            ty: !,
            temp_lifetime: Some(
                Node(11),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:9: 773:56 (#68),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:340 ~ andrew_fuzz[741f]::library::u8::{impl#4}::breed).5),
                ),
                value: e4,
            },
            ty: !,
            temp_lifetime: Some(
                Node(11),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:9: 773:56 (#68),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: !,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:46:70: 48:6 (#0),
        },
        Expr {
            kind: NeverToAny {
                source: e6,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:46:70: 48:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:340 ~ andrew_fuzz[741f]::library::u8::{impl#4}::breed).13),
                ),
                value: e7,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:46:70: 48:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(13),
                lint_level: Inherited,
                value: e8,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:46:70: 48:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(11),
                expr: e5,
            },
            opt_destruction_scope: Some(
                Destruction(11),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::u8::U8,
                    span: src/library/u8.rs:46:14: 46:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:340 ~ andrew_fuzz[741f]::library::u8::{impl#4}::breed).2),
                        ),
                        ty: &library::u8::U8,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::u8::U8,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:340 ~ andrew_fuzz[741f]::library::u8::{impl#4}::breed).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: std::boxed::Box<dyn core::DataModel>,
                    span: src/library/u8.rs:46:21: 46:26 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "other",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:340 ~ andrew_fuzz[741f]::library::u8::{impl#4}::breed).4),
                        ),
                        ty: std::boxed::Box<dyn core::DataModel>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::boxed::Box<dyn core::DataModel>,
            ty_span: Some(
                src/library/u8.rs:46:28: 46:46 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:340 ~ andrew_fuzz[741f]::library::u8::{impl#4}::breed).3),
            ),
        },
    ],
}

DefId(0:342 ~ andrew_fuzz[741f]::library::u8::{impl#5}::parse):
Thir {
    body_type: Fn(
        ([&library::u8::U8, &mut core::bit_array::BitArray, &std::rc::Rc<core::context::Context<'_>>]; c_variadic: false)->std::option::Option<std::boxed::Box<dyn core::DataModel>>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(42),
            opt_destruction_scope: None,
            span: src/library/u8.rs:53:42: 59:10 (#0),
            stmts: [
                s0,
            ],
            expr: Some(
                e32,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(47),
            opt_destruction_scope: None,
            span: src/library/u8.rs:59:16: 61:10 (#0),
            stmts: [],
            expr: Some(
                e37,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(48),
            opt_destruction_scope: None,
            span: src/library/u8.rs:52:96: 62:6 (#0),
            stmts: [],
            expr: Some(
                e42,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:342 ~ andrew_fuzz[741f]::library::u8::{impl#5}::parse).4),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/library/u8.rs:53:29: 53:34 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/library/u8.rs:53:29: 53:41 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e1,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/library/u8.rs:53:29: 53:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:342 ~ andrew_fuzz[741f]::library::u8::{impl#5}::parse).15),
                ),
                value: e2,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/library/u8.rs:53:29: 53:34 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/library/u8.rs:53:39: 53:40 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/library/u8.rs:53:39: 53:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:342 ~ andrew_fuzz[741f]::library::u8::{impl#5}::parse).17),
                ),
                value: e4,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/library/u8.rs:53:39: 53:40 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut core::bit_array::BitArray, i32) -> std::option::Option<core::bit_array::BitArray> {core::bit_array::BitArray::eat},
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/library/u8.rs:53:35: 53:38 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut core::bit_array::BitArray, i32) -> std::option::Option<core::bit_array::BitArray> {core::bit_array::BitArray::eat},
                fun: e6,
                args: [
                    e3,
                    e5,
                ],
                from_hir_call: true,
                fn_span: src/library/u8.rs:53:35: 53:41 (#0),
            },
            ty: std::option::Option<core::bit_array::BitArray>,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/library/u8.rs:53:29: 53:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:342 ~ andrew_fuzz[741f]::library::u8::{impl#5}::parse).13),
                ),
                value: e7,
            },
            ty: std::option::Option<core::bit_array::BitArray>,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/library/u8.rs:53:29: 53:41 (#0),
        },
        Expr {
            kind: Let {
                expr: e8,
                pat: Pat {
                    ty: std::option::Option<core::bit_array::BitArray>,
                    span: src/library/u8.rs:53:16: 53:26 (#0),
                    kind: Variant {
                        adt_def: std::option::Option,
                        substs: [
                            core::bit_array::BitArray,
                        ],
                        variant_index: 1,
                        subpatterns: [
                            FieldPat {
                                field: field[0],
                                pattern: Pat {
                                    ty: core::bit_array::BitArray,
                                    span: src/library/u8.rs:53:21: 53:25 (#0),
                                    kind: Binding {
                                        mutability: Not,
                                        name: "data",
                                        mode: ByValue,
                                        var: LocalVarId(
                                            HirId(DefId(0:342 ~ andrew_fuzz[741f]::library::u8::{impl#5}::parse).11),
                                        ),
                                        ty: core::bit_array::BitArray,
                                        subpattern: None,
                                        is_primary: true,
                                    },
                                },
                            },
                        ],
                    },
                },
            },
            ty: bool,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/library/u8.rs:53:12: 53:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:342 ~ andrew_fuzz[741f]::library::u8::{impl#5}::parse).8),
                ),
                value: e9,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/library/u8.rs:53:12: 53:41 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:342 ~ andrew_fuzz[741f]::library::u8::{impl#5}::parse).2),
                ),
            },
            ty: &library::u8::U8,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/u8.rs:55:23: 55:27 (#0),
        },
        Expr {
            kind: Deref {
                arg: e11,
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/u8.rs:55:23: 55:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:342 ~ andrew_fuzz[741f]::library::u8::{impl#5}::parse).25),
                ),
                value: e12,
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/u8.rs:55:23: 55:27 (#0),
        },
        Expr {
            kind: Field {
                lhs: e13,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/u8.rs:55:23: 55:32 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e14,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/u8.rs:55:23: 55:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(24),
                lint_level: Explicit(
                    HirId(DefId(0:342 ~ andrew_fuzz[741f]::library::u8::{impl#5}::parse).24),
                ),
                value: e15,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/u8.rs:55:23: 55:32 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> std::rc::Rc<core::DataModelBase> {<std::rc::Rc<core::DataModelBase> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/u8.rs:55:33: 55:38 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> std::rc::Rc<core::DataModelBase> {<std::rc::Rc<core::DataModelBase> as std::clone::Clone>::clone},
                fun: e17,
                args: [
                    e16,
                ],
                from_hir_call: true,
                fn_span: src/library/u8.rs:55:33: 55:40 (#0),
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/u8.rs:55:23: 55:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(22),
                lint_level: Explicit(
                    HirId(DefId(0:342 ~ andrew_fuzz[741f]::library::u8::{impl#5}::parse).22),
                ),
                value: e18,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/u8.rs:55:23: 55:40 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:342 ~ andrew_fuzz[741f]::library::u8::{impl#5}::parse).11),
                ),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/u8.rs:56:17: 56:21 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(28),
                lint_level: Explicit(
                    HirId(DefId(0:342 ~ andrew_fuzz[741f]::library::u8::{impl#5}::parse).28),
                ),
                value: e20,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/u8.rs:56:17: 56:21 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: library::u8::U8,
                    variant_index: 0,
                    substs: [],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e19,
                        },
                        FieldExpr {
                            name: field[1],
                            expr: e21,
                        },
                    ],
                    base: None,
                },
            ),
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/u8.rs:54:30: 57:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:342 ~ andrew_fuzz[741f]::library::u8::{impl#5}::parse).19),
                ),
                value: e22,
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/u8.rs:54:30: 57:14 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:296 ~ alloc[42dc]::boxed::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:294 ~ alloc[42dc]::boxed::{impl#0}),
                                        self_ty: std::boxed::Box<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::u8::U8) -> std::boxed::Box<library::u8::U8> {std::boxed::Box::<library::u8::U8>::new},
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:58:18: 58:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(36),
                lint_level: Explicit(
                    HirId(DefId(0:342 ~ andrew_fuzz[741f]::library::u8::{impl#5}::parse).36),
                ),
                value: e24,
            },
            ty: fn(library::u8::U8) -> std::boxed::Box<library::u8::U8> {std::boxed::Box::<library::u8::U8>::new},
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:58:18: 58:26 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:342 ~ andrew_fuzz[741f]::library::u8::{impl#5}::parse).31),
                ),
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:58:27: 58:37 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(40),
                lint_level: Explicit(
                    HirId(DefId(0:342 ~ andrew_fuzz[741f]::library::u8::{impl#5}::parse).40),
                ),
                value: e26,
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:58:27: 58:37 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::u8::U8) -> std::boxed::Box<library::u8::U8> {std::boxed::Box::<library::u8::U8>::new},
                fun: e25,
                args: [
                    e27,
                ],
                from_hir_call: true,
                fn_span: src/library/u8.rs:58:18: 58:38 (#0),
            },
            ty: std::boxed::Box<library::u8::U8>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:58:18: 58:38 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e28,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:58:18: 58:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(35),
                lint_level: Explicit(
                    HirId(DefId(0:342 ~ andrew_fuzz[741f]::library::u8::{impl#5}::parse).35),
                ),
                value: e29,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:58:18: 58:38 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: std::option::Option,
                    variant_index: 1,
                    substs: [
                        std::boxed::Box<dyn core::DataModel>,
                    ],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e30,
                        },
                    ],
                    base: None,
                },
            ),
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:58:13: 58:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(32),
                lint_level: Explicit(
                    HirId(DefId(0:342 ~ andrew_fuzz[741f]::library::u8::{impl#5}::parse).32),
                ),
                value: e31,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:58:13: 58:39 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:53:42: 59:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(43),
                lint_level: Explicit(
                    HirId(DefId(0:342 ~ andrew_fuzz[741f]::library::u8::{impl#5}::parse).43),
                ),
                value: e33,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:53:42: 59:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(43),
                lint_level: Inherited,
                value: e34,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u8.rs:53:42: 59:10 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: std::option::Option,
                    variant_index: 0,
                    substs: [
                        std::boxed::Box<dyn core::DataModel>,
                    ],
                    user_ty: None,
                    fields: [],
                    base: None,
                },
            ),
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(44),
            ),
            span: src/library/u8.rs:60:13: 60:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(45),
                lint_level: Explicit(
                    HirId(DefId(0:342 ~ andrew_fuzz[741f]::library::u8::{impl#5}::parse).45),
                ),
                value: e36,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(44),
            ),
            span: src/library/u8.rs:60:13: 60:17 (#0),
        },
        Expr {
            kind: Block {
                block: b1,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(44),
            ),
            span: src/library/u8.rs:59:16: 61:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(44),
                lint_level: Explicit(
                    HirId(DefId(0:342 ~ andrew_fuzz[741f]::library::u8::{impl#5}::parse).44),
                ),
                value: e38,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(44),
            ),
            span: src/library/u8.rs:59:16: 61:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(44),
                lint_level: Inherited,
                value: e39,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(44),
            ),
            span: src/library/u8.rs:59:16: 61:10 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(43),
                cond: e10,
                then: e35,
                else_opt: Some(
                    e40,
                ),
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/library/u8.rs:53:9: 61:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:342 ~ andrew_fuzz[741f]::library::u8::{impl#5}::parse).7),
                ),
                value: e41,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/library/u8.rs:53:9: 61:10 (#0),
        },
        Expr {
            kind: Block {
                block: b2,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/library/u8.rs:52:96: 62:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(49),
                lint_level: Explicit(
                    HirId(DefId(0:342 ~ andrew_fuzz[741f]::library::u8::{impl#5}::parse).49),
                ),
                value: e43,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/library/u8.rs:52:96: 62:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(49),
                lint_level: Inherited,
                value: e44,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/library/u8.rs:52:96: 62:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 42, first_statement_index: 0},
                init_scope: Node(18),
                pattern: Pat {
                    ty: library::u8::U8,
                    span: src/library/u8.rs:54:17: 54:27 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "data_model",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:342 ~ andrew_fuzz[741f]::library::u8::{impl#5}::parse).31),
                        ),
                        ty: library::u8::U8,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e23,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:342 ~ andrew_fuzz[741f]::library::u8::{impl#5}::parse).30),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(18),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::u8::U8,
                    span: src/library/u8.rs:52:14: 52:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:342 ~ andrew_fuzz[741f]::library::u8::{impl#5}::parse).2),
                        ),
                        ty: &library::u8::U8,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::u8::U8,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:342 ~ andrew_fuzz[741f]::library::u8::{impl#5}::parse).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &mut core::bit_array::BitArray,
                    span: src/library/u8.rs:52:21: 52:26 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "input",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:342 ~ andrew_fuzz[741f]::library::u8::{impl#5}::parse).4),
                        ),
                        ty: &mut core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut core::bit_array::BitArray,
            ty_span: Some(
                src/library/u8.rs:52:28: 52:41 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:342 ~ andrew_fuzz[741f]::library::u8::{impl#5}::parse).3),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &std::rc::Rc<core::context::Context<'_>>,
                    span: src/library/u8.rs:52:43: 52:46 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "ctx",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:342 ~ andrew_fuzz[741f]::library::u8::{impl#5}::parse).6),
                        ),
                        ty: &std::rc::Rc<core::context::Context<'_>>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &std::rc::Rc<core::context::Context<'_>>,
            ty_span: Some(
                src/library/u8.rs:52:48: 52:64 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:342 ~ andrew_fuzz[741f]::library::u8::{impl#5}::parse).5),
            ),
        },
    ],
}

DefId(0:344 ~ andrew_fuzz[741f]::library::u8::{impl#6}::debug):
Thir {
    body_type: Fn(
        ([&library::u8::U8]; c_variadic: false)->std::string::String,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(36),
            opt_destruction_scope: None,
            span: src/library/u8.rs:66:31: 70:6 (#0),
            stmts: [
                s0,
                s1,
            ],
            expr: Some(
                e46,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn() -> std::string::String {std::string::String::new},
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/u8.rs:67:26: 67:37 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:344 ~ andrew_fuzz[741f]::library::u8::{impl#6}::debug).5),
                ),
                value: e0,
            },
            ty: fn() -> std::string::String {std::string::String::new},
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/u8.rs:67:26: 67:37 (#0),
        },
        Expr {
            kind: Call {
                ty: fn() -> std::string::String {std::string::String::new},
                fun: e1,
                args: [],
                from_hir_call: true,
                fn_span: src/library/u8.rs:67:26: 67:39 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/u8.rs:67:26: 67:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:344 ~ andrew_fuzz[741f]::library::u8::{impl#6}::debug).4),
                ),
                value: e2,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/u8.rs:67:26: 67:39 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:344 ~ andrew_fuzz[741f]::library::u8::{impl#6}::debug).10),
                ),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u8.rs:68:16: 68:22 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e4,
            },
            ty: &mut std::string::String,
            temp_lifetime: Some(
                Node(33),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:9: 520:55 (#69),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:344 ~ andrew_fuzz[741f]::library::u8::{impl#6}::debug).13),
                ),
                value: e5,
            },
            ty: &mut std::string::String,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u8.rs:68:16: 68:22 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(2:9000 ~ core[102f]::fmt::{impl#4}::new_v1),
                            UserSubsts {
                                substs: [
                                    ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon(0, None) }),
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(2:8997 ~ core[102f]::fmt::{impl#4}),
                                        self_ty: std::fmt::Arguments<'_>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> std::fmt::Arguments<'_> {std::fmt::Arguments::<'_>::new_v1},
            temp_lifetime: Some(
                Node(33),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#70),
        },
        Expr {
            kind: Scope {
                region_scope: Node(32),
                lint_level: Explicit(
                    HirId(DefId(0:344 ~ andrew_fuzz[741f]::library::u8::{impl#6}::debug).32),
                ),
                value: e7,
            },
            ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> std::fmt::Arguments<'_> {std::fmt::Arguments::<'_>::new_v1},
            temp_lifetime: Some(
                Node(33),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#70),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "",
                        Cooked,
                    ),
                    span: src/library/u8.rs:68:24: 68:30 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u8.rs:68:24: 68:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(16),
                lint_level: Explicit(
                    HirId(DefId(0:344 ~ andrew_fuzz[741f]::library::u8::{impl#6}::debug).16),
                ),
                value: e9,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u8.rs:68:24: 68:30 (#0),
        },
        Expr {
            kind: Array {
                fields: [
                    e10,
                ],
            },
            ty: [&str; 1],
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u8.rs:68:24: 68:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:344 ~ andrew_fuzz[741f]::library::u8::{impl#6}::debug).17),
                ),
                value: e11,
            },
            ty: [&str; 1],
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u8.rs:68:24: 68:30 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e12,
            },
            ty: &[&str; 1],
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u8.rs:68:24: 68:30 (#0),
        },
        Expr {
            kind: Deref {
                arg: e13,
            },
            ty: [&str; 1],
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u8.rs:68:24: 68:30 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e14,
            },
            ty: &[&str; 1],
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u8.rs:68:24: 68:30 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e15,
            },
            ty: &[&str],
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u8.rs:68:24: 68:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(18),
                lint_level: Explicit(
                    HirId(DefId(0:344 ~ andrew_fuzz[741f]::library::u8::{impl#6}::debug).18),
                ),
                value: e16,
            },
            ty: &[&str],
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u8.rs:68:24: 68:30 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(2:49778 ~ core[102f]::fmt::{impl#3}::new_upper_hex),
                            UserSubsts {
                                substs: [
                                    ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon(0, None) }),
                                    ^1,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(2:8990 ~ core[102f]::fmt::{impl#3}),
                                        self_ty: core::fmt::ArgumentV1<'_>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_upper_hex::<i32>},
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u8.rs:68:32: 68:42 (#70),
        },
        Expr {
            kind: Scope {
                region_scope: Node(26),
                lint_level: Explicit(
                    HirId(DefId(0:344 ~ andrew_fuzz[741f]::library::u8::{impl#6}::debug).26),
                ),
                value: e18,
            },
            ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_upper_hex::<i32>},
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u8.rs:68:32: 68:42 (#70),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:344 ~ andrew_fuzz[741f]::library::u8::{impl#6}::debug).2),
                ),
            },
            ty: &library::u8::U8,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u8.rs:68:32: 68:36 (#0),
        },
        Expr {
            kind: Deref {
                arg: e20,
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u8.rs:68:32: 68:42 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e21,
            },
            ty: &library::u8::U8,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u8.rs:68:32: 68:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(21),
                lint_level: Explicit(
                    HirId(DefId(0:344 ~ andrew_fuzz[741f]::library::u8::{impl#6}::debug).21),
                ),
                value: e22,
            },
            ty: &library::u8::U8,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u8.rs:68:32: 68:36 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a library::u8::U8) -> i32 {<library::u8::U8 as core::Contextual>::int},
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u8.rs:68:37: 68:40 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a library::u8::U8) -> i32 {<library::u8::U8 as core::Contextual>::int},
                fun: e24,
                args: [
                    e23,
                ],
                from_hir_call: true,
                fn_span: src/library/u8.rs:68:37: 68:42 (#0),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u8.rs:68:32: 68:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:344 ~ andrew_fuzz[741f]::library::u8::{impl#6}::debug).19),
                ),
                value: e25,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u8.rs:68:32: 68:42 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e26,
            },
            ty: &i32,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u8.rs:68:32: 68:42 (#70),
        },
        Expr {
            kind: Deref {
                arg: e27,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u8.rs:68:32: 68:42 (#70),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e28,
            },
            ty: &i32,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u8.rs:68:32: 68:42 (#70),
        },
        Expr {
            kind: Scope {
                region_scope: Node(23),
                lint_level: Explicit(
                    HirId(DefId(0:344 ~ andrew_fuzz[741f]::library::u8::{impl#6}::debug).23),
                ),
                value: e29,
            },
            ty: &i32,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u8.rs:68:32: 68:42 (#70),
        },
        Expr {
            kind: Call {
                ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_upper_hex::<i32>},
                fun: e19,
                args: [
                    e30,
                ],
                from_hir_call: true,
                fn_span: src/library/u8.rs:68:32: 68:42 (#70),
            },
            ty: core::fmt::ArgumentV1<'_>,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u8.rs:68:32: 68:42 (#70),
        },
        Expr {
            kind: Scope {
                region_scope: Node(27),
                lint_level: Explicit(
                    HirId(DefId(0:344 ~ andrew_fuzz[741f]::library::u8::{impl#6}::debug).27),
                ),
                value: e31,
            },
            ty: core::fmt::ArgumentV1<'_>,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u8.rs:68:32: 68:42 (#70),
        },
        Expr {
            kind: Array {
                fields: [
                    e32,
                ],
            },
            ty: [core::fmt::ArgumentV1<'_>; 1],
            temp_lifetime: Some(
                Node(33),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#70),
        },
        Expr {
            kind: Scope {
                region_scope: Node(28),
                lint_level: Explicit(
                    HirId(DefId(0:344 ~ andrew_fuzz[741f]::library::u8::{impl#6}::debug).28),
                ),
                value: e33,
            },
            ty: [core::fmt::ArgumentV1<'_>; 1],
            temp_lifetime: Some(
                Node(33),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#70),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e34,
            },
            ty: &[core::fmt::ArgumentV1<'_>; 1],
            temp_lifetime: Some(
                Node(33),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#70),
        },
        Expr {
            kind: Deref {
                arg: e35,
            },
            ty: [core::fmt::ArgumentV1<'_>; 1],
            temp_lifetime: Some(
                Node(33),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#70),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e36,
            },
            ty: &[core::fmt::ArgumentV1<'_>; 1],
            temp_lifetime: Some(
                Node(33),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#70),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e37,
            },
            ty: &[core::fmt::ArgumentV1<'_>],
            temp_lifetime: Some(
                Node(33),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#70),
        },
        Expr {
            kind: Scope {
                region_scope: Node(29),
                lint_level: Explicit(
                    HirId(DefId(0:344 ~ andrew_fuzz[741f]::library::u8::{impl#6}::debug).29),
                ),
                value: e38,
            },
            ty: &[core::fmt::ArgumentV1<'_>],
            temp_lifetime: Some(
                Node(33),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#70),
        },
        Expr {
            kind: Call {
                ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> std::fmt::Arguments<'_> {std::fmt::Arguments::<'_>::new_v1},
                fun: e8,
                args: [
                    e17,
                    e39,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#70),
            },
            ty: std::fmt::Arguments<'_>,
            temp_lifetime: Some(
                Node(33),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#70),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:344 ~ andrew_fuzz[741f]::library::u8::{impl#6}::debug).15),
                ),
                value: e40,
            },
            ty: std::fmt::Arguments<'_>,
            temp_lifetime: Some(
                Node(33),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#70),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b> fn(&'a mut std::string::String, std::fmt::Arguments<'b>) -> std::result::Result<(), std::fmt::Error> {<std::string::String as std::fmt::Write>::write_fmt},
            temp_lifetime: Some(
                Node(33),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:14: 520:23 (#69),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b> fn(&'a mut std::string::String, std::fmt::Arguments<'b>) -> std::result::Result<(), std::fmt::Error> {<std::string::String as std::fmt::Write>::write_fmt},
                fun: e42,
                args: [
                    e6,
                    e41,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:14: 520:55 (#69),
            },
            ty: std::result::Result<(), std::fmt::Error>,
            temp_lifetime: Some(
                Node(33),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:9: 520:55 (#69),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:344 ~ andrew_fuzz[741f]::library::u8::{impl#6}::debug).11),
                ),
                value: e43,
            },
            ty: std::result::Result<(), std::fmt::Error>,
            temp_lifetime: Some(
                Node(33),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:9: 520:55 (#69),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:344 ~ andrew_fuzz[741f]::library::u8::{impl#6}::debug).10),
                ),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/library/u8.rs:69:9: 69:15 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(34),
                lint_level: Explicit(
                    HirId(DefId(0:344 ~ andrew_fuzz[741f]::library::u8::{impl#6}::debug).34),
                ),
                value: e45,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/library/u8.rs:69:9: 69:15 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/library/u8.rs:66:31: 70:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(37),
                lint_level: Explicit(
                    HirId(DefId(0:344 ~ andrew_fuzz[741f]::library::u8::{impl#6}::debug).37),
                ),
                value: e47,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/library/u8.rs:66:31: 70:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(37),
                lint_level: Inherited,
                value: e48,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/library/u8.rs:66:31: 70:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 36, first_statement_index: 0},
                init_scope: Node(3),
                pattern: Pat {
                    ty: std::string::String,
                    span: src/library/u8.rs:67:13: 67:23 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "result",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:344 ~ andrew_fuzz[741f]::library::u8::{impl#6}::debug).10),
                        ),
                        ty: std::string::String,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e3,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:344 ~ andrew_fuzz[741f]::library::u8::{impl#6}::debug).9),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(3),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(33),
                expr: e44,
            },
            opt_destruction_scope: Some(
                Destruction(33),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::u8::U8,
                    span: src/library/u8.rs:66:14: 66:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:344 ~ andrew_fuzz[741f]::library::u8::{impl#6}::debug).2),
                        ),
                        ty: &library::u8::U8,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::u8::U8,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:344 ~ andrew_fuzz[741f]::library::u8::{impl#6}::debug).1),
            ),
        },
    ],
}

DefId(0:346 ~ andrew_fuzz[741f]::library::u8::{impl#7}::fuzz):
Thir {
    body_type: Fn(
        ([&library::u8::U8]; c_variadic: false)->std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(38),
            opt_destruction_scope: None,
            span: src/library/u8.rs:74:46: 76:6 (#0),
            stmts: [],
            expr: Some(
                e30,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:5127 ~ alloc[42dc]::slice::{impl#0}::into_vec),
                            UserSubsts {
                                substs: [
                                    ^0,
                                    ^1,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:5110 ~ alloc[42dc]::slice::{impl#0}),
                                        self_ty: [^2],
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(std::boxed::Box<[std::rc::Rc<dyn core::DataModel>]>) -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::slice::<impl [std::rc::Rc<dyn core::DataModel>]>::into_vec::<std::alloc::Global>},
            temp_lifetime: Some(
                Node(39),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 50:51 (#71),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:346 ~ andrew_fuzz[741f]::library::u8::{impl#7}::fuzz).4),
                ),
                value: e0,
            },
            ty: fn(std::boxed::Box<[std::rc::Rc<dyn core::DataModel>]>) -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::slice::<impl [std::rc::Rc<dyn core::DataModel>]>::into_vec::<std::alloc::Global>},
            temp_lifetime: Some(
                Node(39),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 50:51 (#71),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::u8::U8) -> std::rc::Rc<library::u8::U8> {std::rc::Rc::<library::u8::U8>::new},
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u8.rs:75:14: 75:21 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:346 ~ andrew_fuzz[741f]::library::u8::{impl#7}::fuzz).17),
                ),
                value: e2,
            },
            ty: fn(library::u8::U8) -> std::rc::Rc<library::u8::U8> {std::rc::Rc::<library::u8::U8>::new},
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u8.rs:75:14: 75:21 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(u8) -> library::u8::U8 {library::u8::U8::from_u8},
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u8.rs:75:22: 75:33 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(22),
                lint_level: Explicit(
                    HirId(DefId(0:346 ~ andrew_fuzz[741f]::library::u8::{impl#7}::fuzz).22),
                ),
                value: e4,
            },
            ty: fn(u8) -> library::u8::U8 {library::u8::U8::from_u8},
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u8.rs:75:22: 75:33 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        255,
                        Unsuffixed,
                    ),
                    span: src/library/u8.rs:75:34: 75:38 (#0),
                },
                neg: false,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u8.rs:75:34: 75:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(26),
                lint_level: Explicit(
                    HirId(DefId(0:346 ~ andrew_fuzz[741f]::library::u8::{impl#7}::fuzz).26),
                ),
                value: e6,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u8.rs:75:34: 75:38 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(u8) -> library::u8::U8 {library::u8::U8::from_u8},
                fun: e5,
                args: [
                    e7,
                ],
                from_hir_call: true,
                fn_span: src/library/u8.rs:75:22: 75:39 (#0),
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u8.rs:75:22: 75:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(21),
                lint_level: Explicit(
                    HirId(DefId(0:346 ~ andrew_fuzz[741f]::library::u8::{impl#7}::fuzz).21),
                ),
                value: e8,
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u8.rs:75:22: 75:39 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::u8::U8) -> std::rc::Rc<library::u8::U8> {std::rc::Rc::<library::u8::U8>::new},
                fun: e3,
                args: [
                    e9,
                ],
                from_hir_call: true,
                fn_span: src/library/u8.rs:75:14: 75:40 (#0),
            },
            ty: std::rc::Rc<library::u8::U8>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u8.rs:75:14: 75:40 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e10,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u8.rs:75:14: 75:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(16),
                lint_level: Explicit(
                    HirId(DefId(0:346 ~ andrew_fuzz[741f]::library::u8::{impl#7}::fuzz).16),
                ),
                value: e11,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u8.rs:75:14: 75:40 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::u8::U8) -> std::rc::Rc<library::u8::U8> {std::rc::Rc::<library::u8::U8>::new},
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u8.rs:75:42: 75:49 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(28),
                lint_level: Explicit(
                    HirId(DefId(0:346 ~ andrew_fuzz[741f]::library::u8::{impl#7}::fuzz).28),
                ),
                value: e13,
            },
            ty: fn(library::u8::U8) -> std::rc::Rc<library::u8::U8> {std::rc::Rc::<library::u8::U8>::new},
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u8.rs:75:42: 75:49 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(u8) -> library::u8::U8 {library::u8::U8::from_u8},
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u8.rs:75:50: 75:61 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(33),
                lint_level: Explicit(
                    HirId(DefId(0:346 ~ andrew_fuzz[741f]::library::u8::{impl#7}::fuzz).33),
                ),
                value: e15,
            },
            ty: fn(u8) -> library::u8::U8 {library::u8::U8::from_u8},
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u8.rs:75:50: 75:61 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        170,
                        Unsuffixed,
                    ),
                    span: src/library/u8.rs:75:62: 75:66 (#0),
                },
                neg: false,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u8.rs:75:62: 75:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(37),
                lint_level: Explicit(
                    HirId(DefId(0:346 ~ andrew_fuzz[741f]::library::u8::{impl#7}::fuzz).37),
                ),
                value: e17,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u8.rs:75:62: 75:66 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(u8) -> library::u8::U8 {library::u8::U8::from_u8},
                fun: e16,
                args: [
                    e18,
                ],
                from_hir_call: true,
                fn_span: src/library/u8.rs:75:50: 75:67 (#0),
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u8.rs:75:50: 75:67 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(32),
                lint_level: Explicit(
                    HirId(DefId(0:346 ~ andrew_fuzz[741f]::library::u8::{impl#7}::fuzz).32),
                ),
                value: e19,
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u8.rs:75:50: 75:67 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::u8::U8) -> std::rc::Rc<library::u8::U8> {std::rc::Rc::<library::u8::U8>::new},
                fun: e14,
                args: [
                    e20,
                ],
                from_hir_call: true,
                fn_span: src/library/u8.rs:75:42: 75:68 (#0),
            },
            ty: std::rc::Rc<library::u8::U8>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u8.rs:75:42: 75:68 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e21,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u8.rs:75:42: 75:68 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(27),
                lint_level: Explicit(
                    HirId(DefId(0:346 ~ andrew_fuzz[741f]::library::u8::{impl#7}::fuzz).27),
                ),
                value: e22,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u8.rs:75:42: 75:68 (#0),
        },
        Expr {
            kind: Array {
                fields: [
                    e12,
                    e23,
                ],
            },
            ty: [std::rc::Rc<dyn core::DataModel>; 2],
            temp_lifetime: Some(
                Node(39),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:37: 54:46 (#71),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:346 ~ andrew_fuzz[741f]::library::u8::{impl#7}::fuzz).15),
                ),
                value: e24,
            },
            ty: [std::rc::Rc<dyn core::DataModel>; 2],
            temp_lifetime: Some(
                Node(39),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:37: 54:46 (#71),
        },
        Expr {
            kind: Box {
                value: e25,
            },
            ty: std::boxed::Box<[std::rc::Rc<dyn core::DataModel>; 2]>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13: 54:47 (#71),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e26,
            },
            ty: std::boxed::Box<[std::rc::Rc<dyn core::DataModel>]>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13: 54:47 (#71),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:346 ~ andrew_fuzz[741f]::library::u8::{impl#7}::fuzz).8),
                ),
                value: e27,
            },
            ty: std::boxed::Box<[std::rc::Rc<dyn core::DataModel>]>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13: 54:47 (#71),
        },
        Expr {
            kind: Call {
                ty: fn(std::boxed::Box<[std::rc::Rc<dyn core::DataModel>]>) -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::slice::<impl [std::rc::Rc<dyn core::DataModel>]>::into_vec::<std::alloc::Global>},
                fun: e1,
                args: [
                    e28,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 55:10 (#71),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 55:10 (#71),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:346 ~ andrew_fuzz[741f]::library::u8::{impl#7}::fuzz).3),
                ),
                value: e29,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 55:10 (#71),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u8.rs:74:46: 76:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(39),
                lint_level: Explicit(
                    HirId(DefId(0:346 ~ andrew_fuzz[741f]::library::u8::{impl#7}::fuzz).39),
                ),
                value: e31,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u8.rs:74:46: 76:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(39),
                lint_level: Inherited,
                value: e32,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u8.rs:74:46: 76:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::u8::U8,
                    span: src/library/u8.rs:74:13: 74:18 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:346 ~ andrew_fuzz[741f]::library::u8::{impl#7}::fuzz).2),
                        ),
                        ty: &library::u8::U8,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::u8::U8,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:346 ~ andrew_fuzz[741f]::library::u8::{impl#7}::fuzz).1),
            ),
        },
    ],
}

DefId(0:348 ~ andrew_fuzz[741f]::library::u8::{impl#8}::name):
Thir {
    body_type: Fn(
        ([&library::u8::U8]; c_variadic: false)->&std::string::String,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(8),
            opt_destruction_scope: None,
            span: src/library/u8.rs:80:31: 82:6 (#0),
            stmts: [],
            expr: Some(
                e14,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:348 ~ andrew_fuzz[741f]::library::u8::{impl#8}::name).2),
                ),
            },
            ty: &library::u8::U8,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u8.rs:81:9: 81:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u8.rs:81:9: 81:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:348 ~ andrew_fuzz[741f]::library::u8::{impl#8}::name).6),
                ),
                value: e1,
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u8.rs:81:9: 81:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u8.rs:81:9: 81:18 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e3,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u8.rs:81:9: 81:25 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> &'a <std::rc::Rc<core::DataModelBase> as std::ops::Deref>::Target {<std::rc::Rc<core::DataModelBase> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u8.rs:81:9: 81:25 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> &'a <std::rc::Rc<core::DataModelBase> as std::ops::Deref>::Target {<std::rc::Rc<core::DataModelBase> as std::ops::Deref>::deref},
                fun: e5,
                args: [
                    e4,
                ],
                from_hir_call: false,
                fn_span: src/library/u8.rs:81:9: 81:25 (#0),
            },
            ty: &core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u8.rs:81:9: 81:25 (#0),
        },
        Expr {
            kind: Deref {
                arg: e6,
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u8.rs:81:9: 81:25 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e7,
            },
            ty: &core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u8.rs:81:9: 81:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:348 ~ andrew_fuzz[741f]::library::u8::{impl#8}::name).5),
                ),
                value: e8,
            },
            ty: &core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u8.rs:81:9: 81:18 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::DataModelBase) -> &'a std::string::String {core::DataModelBase::name},
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u8.rs:81:19: 81:23 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::DataModelBase) -> &'a std::string::String {core::DataModelBase::name},
                fun: e10,
                args: [
                    e9,
                ],
                from_hir_call: true,
                fn_span: src/library/u8.rs:81:19: 81:25 (#0),
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u8.rs:81:9: 81:25 (#0),
        },
        Expr {
            kind: Deref {
                arg: e11,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u8.rs:81:9: 81:25 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e12,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u8.rs:81:9: 81:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:348 ~ andrew_fuzz[741f]::library::u8::{impl#8}::name).3),
                ),
                value: e13,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u8.rs:81:9: 81:25 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u8.rs:80:31: 82:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:348 ~ andrew_fuzz[741f]::library::u8::{impl#8}::name).9),
                ),
                value: e15,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u8.rs:80:31: 82:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(9),
                lint_level: Inherited,
                value: e16,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u8.rs:80:31: 82:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::u8::U8,
                    span: src/library/u8.rs:80:13: 80:18 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:348 ~ andrew_fuzz[741f]::library::u8::{impl#8}::name).2),
                        ),
                        ty: &library::u8::U8,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::u8::U8,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:348 ~ andrew_fuzz[741f]::library::u8::{impl#8}::name).1),
            ),
        },
    ],
}

DefId(0:349 ~ andrew_fuzz[741f]::library::u8::{impl#8}::set_name):
Thir {
    body_type: Fn(
        ([&mut library::u8::U8, &str]; c_variadic: false)->(),
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(24),
            opt_destruction_scope: None,
            span: src/library/u8.rs:83:40: 85:6 (#0),
            stmts: [
                s0,
            ],
            expr: None,
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:349 ~ andrew_fuzz[741f]::library::u8::{impl#8}::set_name).2),
                ),
            },
            ty: &mut library::u8::U8,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:84:9: 84:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:84:9: 84:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:349 ~ andrew_fuzz[741f]::library::u8::{impl#8}::set_name).7),
                ),
                value: e1,
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:84:9: 84:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:84:9: 84:18 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:349 ~ andrew_fuzz[741f]::library::u8::{impl#8}::set_name).6),
                ),
                value: e3,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:84:9: 84:18 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:84:21: 84:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:349 ~ andrew_fuzz[741f]::library::u8::{impl#8}::set_name).10),
                ),
                value: e5,
            },
            ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:84:21: 84:28 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:84:29: 84:47 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:349 ~ andrew_fuzz[741f]::library::u8::{impl#8}::set_name).15),
                ),
                value: e7,
            },
            ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:84:29: 84:47 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:349 ~ andrew_fuzz[741f]::library::u8::{impl#8}::set_name).4),
                ),
            },
            ty: &str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:84:48: 84:52 (#0),
        },
        Expr {
            kind: Deref {
                arg: e9,
            },
            ty: str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:84:48: 84:64 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e10,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:84:48: 84:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(21),
                lint_level: Explicit(
                    HirId(DefId(0:349 ~ andrew_fuzz[741f]::library::u8::{impl#8}::set_name).21),
                ),
                value: e11,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:84:48: 84:52 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:84:53: 84:62 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
                fun: e13,
                args: [
                    e12,
                ],
                from_hir_call: true,
                fn_span: src/library/u8.rs:84:53: 84:64 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:84:48: 84:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:349 ~ andrew_fuzz[741f]::library::u8::{impl#8}::set_name).19),
                ),
                value: e14,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:84:48: 84:64 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
                fun: e8,
                args: [
                    e15,
                ],
                from_hir_call: true,
                fn_span: src/library/u8.rs:84:29: 84:65 (#0),
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:84:29: 84:65 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:349 ~ andrew_fuzz[741f]::library::u8::{impl#8}::set_name).14),
                ),
                value: e16,
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:84:29: 84:65 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
                fun: e6,
                args: [
                    e17,
                ],
                from_hir_call: true,
                fn_span: src/library/u8.rs:84:21: 84:66 (#0),
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:84:21: 84:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:349 ~ andrew_fuzz[741f]::library::u8::{impl#8}::set_name).9),
                ),
                value: e18,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:84:21: 84:66 (#0),
        },
        Expr {
            kind: Assign {
                lhs: e4,
                rhs: e19,
            },
            ty: (),
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:84:9: 84:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:349 ~ andrew_fuzz[741f]::library::u8::{impl#8}::set_name).5),
                ),
                value: e20,
            },
            ty: (),
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u8.rs:84:9: 84:66 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/u8.rs:83:40: 85:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:349 ~ andrew_fuzz[741f]::library::u8::{impl#8}::set_name).25),
                ),
                value: e22,
            },
            ty: (),
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/u8.rs:83:40: 85:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(25),
                lint_level: Inherited,
                value: e23,
            },
            ty: (),
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/u8.rs:83:40: 85:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(23),
                expr: e21,
            },
            opt_destruction_scope: Some(
                Destruction(23),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &mut library::u8::U8,
                    span: src/library/u8.rs:83:17: 83:26 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:349 ~ andrew_fuzz[741f]::library::u8::{impl#8}::set_name).2),
                        ),
                        ty: &mut library::u8::U8,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut library::u8::U8,
            ty_span: None,
            self_kind: Some(
                MutRef,
            ),
            hir_id: Some(
                HirId(DefId(0:349 ~ andrew_fuzz[741f]::library::u8::{impl#8}::set_name).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &str,
                    span: src/library/u8.rs:83:28: 83:32 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "name",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:349 ~ andrew_fuzz[741f]::library::u8::{impl#8}::set_name).4),
                        ),
                        ty: &str,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &str,
            ty_span: Some(
                src/library/u8.rs:83:34: 83:38 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:349 ~ andrew_fuzz[741f]::library::u8::{impl#8}::set_name).3),
            ),
        },
    ],
}

DefId(0:352 ~ andrew_fuzz[741f]::library::u8::{impl#10}::do_serialization):
Thir {
    body_type: Fn(
        ([&library::u8::U8, &mut core::bit_array::BitArray]; c_variadic: false)->(),
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(14),
            opt_destruction_scope: None,
            span: src/library/u8.rs:91:51: 93:6 (#0),
            stmts: [
                s0,
            ],
            expr: None,
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:352 ~ andrew_fuzz[741f]::library::u8::{impl#10}::do_serialization).4),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:92:9: 92:11 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:92:9: 92:30 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e1,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:92:9: 92:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:352 ~ andrew_fuzz[741f]::library::u8::{impl#10}::do_serialization).7),
                ),
                value: e2,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:92:9: 92:11 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:352 ~ andrew_fuzz[741f]::library::u8::{impl#10}::do_serialization).2),
                ),
            },
            ty: &library::u8::U8,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:92:20: 92:24 (#0),
        },
        Expr {
            kind: Deref {
                arg: e4,
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:92:20: 92:24 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:352 ~ andrew_fuzz[741f]::library::u8::{impl#10}::do_serialization).11),
                ),
                value: e5,
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:92:20: 92:24 (#0),
        },
        Expr {
            kind: Field {
                lhs: e6,
                variant_index: 0,
                name: field[1],
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:92:20: 92:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:352 ~ andrew_fuzz[741f]::library::u8::{impl#10}::do_serialization).10),
                ),
                value: e7,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:92:20: 92:29 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e8,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:92:19: 92:29 (#0),
        },
        Expr {
            kind: Deref {
                arg: e9,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:92:19: 92:29 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e10,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:92:19: 92:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:352 ~ andrew_fuzz[741f]::library::u8::{impl#10}::do_serialization).9),
                ),
                value: e11,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:92:19: 92:29 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b> fn(&'a mut core::bit_array::BitArray, &'b core::bit_array::BitArray) {core::bit_array::BitArray::extend},
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:92:12: 92:18 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b> fn(&'a mut core::bit_array::BitArray, &'b core::bit_array::BitArray) {core::bit_array::BitArray::extend},
                fun: e13,
                args: [
                    e3,
                    e12,
                ],
                from_hir_call: true,
                fn_span: src/library/u8.rs:92:12: 92:30 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:92:9: 92:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:352 ~ andrew_fuzz[741f]::library::u8::{impl#10}::do_serialization).5),
                ),
                value: e14,
            },
            ty: (),
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u8.rs:92:9: 92:30 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/library/u8.rs:91:51: 93:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:352 ~ andrew_fuzz[741f]::library::u8::{impl#10}::do_serialization).15),
                ),
                value: e16,
            },
            ty: (),
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/library/u8.rs:91:51: 93:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(15),
                lint_level: Inherited,
                value: e17,
            },
            ty: (),
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/library/u8.rs:91:51: 93:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(13),
                expr: e15,
            },
            opt_destruction_scope: Some(
                Destruction(13),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::u8::U8,
                    span: src/library/u8.rs:91:25: 91:30 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:352 ~ andrew_fuzz[741f]::library::u8::{impl#10}::do_serialization).2),
                        ),
                        ty: &library::u8::U8,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::u8::U8,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:352 ~ andrew_fuzz[741f]::library::u8::{impl#10}::do_serialization).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &mut core::bit_array::BitArray,
                    span: src/library/u8.rs:91:32: 91:34 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "ba",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:352 ~ andrew_fuzz[741f]::library::u8::{impl#10}::do_serialization).4),
                        ),
                        ty: &mut core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut core::bit_array::BitArray,
            ty_span: Some(
                src/library/u8.rs:91:36: 91:49 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:352 ~ andrew_fuzz[741f]::library::u8::{impl#10}::do_serialization).3),
            ),
        },
    ],
}

DefId(0:376 ~ andrew_fuzz[741f]::library::u16::{impl#0}::new):
Thir {
    body_type: Fn(
        ([]; c_variadic: false)->library::u16::U16,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(7),
            opt_destruction_scope: None,
            span: src/library/u16.rs:15:26: 17:6 (#0),
            stmts: [],
            expr: Some(
                e5,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(u16) -> library::u16::U16 {library::u16::U16::from_u16},
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/library/u16.rs:16:9: 16:23 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(2),
                lint_level: Explicit(
                    HirId(DefId(0:376 ~ andrew_fuzz[741f]::library::u16::{impl#0}::new).2),
                ),
                value: e0,
            },
            ty: fn(u16) -> library::u16::U16 {library::u16::U16::from_u16},
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/library/u16.rs:16:9: 16:23 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        0,
                        Unsuffixed,
                    ),
                    span: src/library/u16.rs:16:24: 16:28 (#0),
                },
                neg: false,
            },
            ty: u16,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/library/u16.rs:16:24: 16:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:376 ~ andrew_fuzz[741f]::library::u16::{impl#0}::new).6),
                ),
                value: e2,
            },
            ty: u16,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/library/u16.rs:16:24: 16:28 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(u16) -> library::u16::U16 {library::u16::U16::from_u16},
                fun: e1,
                args: [
                    e3,
                ],
                from_hir_call: true,
                fn_span: src/library/u16.rs:16:9: 16:29 (#0),
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/library/u16.rs:16:9: 16:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(1),
                lint_level: Explicit(
                    HirId(DefId(0:376 ~ andrew_fuzz[741f]::library::u16::{impl#0}::new).1),
                ),
                value: e4,
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/library/u16.rs:16:9: 16:29 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/library/u16.rs:15:26: 17:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:376 ~ andrew_fuzz[741f]::library::u16::{impl#0}::new).8),
                ),
                value: e6,
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/library/u16.rs:15:26: 17:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(8),
                lint_level: Inherited,
                value: e7,
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/library/u16.rs:15:26: 17:6 (#0),
        },
    ],
    stmts: [],
    params: [],
}

DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16):
Thir {
    body_type: Fn(
        ([u16]; c_variadic: false)->library::u16::U16,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(64),
            opt_destruction_scope: None,
            span: src/library/u16.rs:18:40: 26:6 (#0),
            stmts: [
                s0,
                s1,
            ],
            expr: Some(
                e51,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).2),
                ),
            },
            ty: u16,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/u16.rs:19:19: 19:23 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).6),
                ),
                value: e0,
            },
            ty: u16,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/u16.rs:19:19: 19:23 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/library/u16.rs:19:27: 19:28 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/u16.rs:19:27: 19:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).8),
                ),
                value: e2,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/u16.rs:19:27: 19:28 (#0),
        },
        Expr {
            kind: Binary {
                op: Shr,
                lhs: e1,
                rhs: e3,
            },
            ty: u16,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/u16.rs:19:18: 19:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).5),
                ),
                value: e4,
            },
            ty: u16,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/u16.rs:19:18: 19:29 (#0),
        },
        Expr {
            kind: Cast {
                source: e5,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/u16.rs:19:18: 19:35 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).4),
                ),
                value: e6,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/u16.rs:19:18: 19:35 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).2),
                ),
            },
            ty: u16,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u16.rs:20:19: 20:23 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(16),
                lint_level: Explicit(
                    HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).16),
                ),
                value: e8,
            },
            ty: u16,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u16.rs:20:19: 20:23 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        255,
                        Unsuffixed,
                    ),
                    span: src/library/u16.rs:20:26: 20:32 (#0),
                },
                neg: false,
            },
            ty: u16,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u16.rs:20:26: 20:32 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(18),
                lint_level: Explicit(
                    HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).18),
                ),
                value: e10,
            },
            ty: u16,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u16.rs:20:26: 20:32 (#0),
        },
        Expr {
            kind: Binary {
                op: BitAnd,
                lhs: e9,
                rhs: e11,
            },
            ty: u16,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u16.rs:20:18: 20:33 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).15),
                ),
                value: e12,
            },
            ty: u16,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u16.rs:20:18: 20:33 (#0),
        },
        Expr {
            kind: Cast {
                source: e13,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u16.rs:20:18: 20:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).14),
                ),
                value: e14,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u16.rs:20:18: 20:39 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/library/u16.rs:22:19: 22:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(27),
                lint_level: Explicit(
                    HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).27),
                ),
                value: e16,
            },
            ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/library/u16.rs:22:19: 22:26 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/library/u16.rs:22:27: 22:45 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(32),
                lint_level: Explicit(
                    HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).32),
                ),
                value: e18,
            },
            ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/library/u16.rs:22:27: 22:45 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "U16",
                        Cooked,
                    ),
                    span: src/library/u16.rs:22:46: 22:51 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/library/u16.rs:22:46: 22:51 (#0),
        },
        Expr {
            kind: Deref {
                arg: e20,
            },
            ty: str,
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/library/u16.rs:22:46: 22:63 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e21,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/library/u16.rs:22:46: 22:63 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(38),
                lint_level: Explicit(
                    HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).38),
                ),
                value: e22,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/library/u16.rs:22:46: 22:51 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/library/u16.rs:22:52: 22:61 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
                fun: e24,
                args: [
                    e23,
                ],
                from_hir_call: true,
                fn_span: src/library/u16.rs:22:52: 22:63 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/library/u16.rs:22:46: 22:63 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(36),
                lint_level: Explicit(
                    HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).36),
                ),
                value: e25,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/library/u16.rs:22:46: 22:63 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
                fun: e19,
                args: [
                    e26,
                ],
                from_hir_call: true,
                fn_span: src/library/u16.rs:22:27: 22:64 (#0),
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/library/u16.rs:22:27: 22:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(31),
                lint_level: Explicit(
                    HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).31),
                ),
                value: e27,
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/library/u16.rs:22:27: 22:64 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
                fun: e17,
                args: [
                    e28,
                ],
                from_hir_call: true,
                fn_span: src/library/u16.rs:22:19: 22:65 (#0),
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/library/u16.rs:22:19: 22:65 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(26),
                lint_level: Explicit(
                    HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).26),
                ),
                value: e29,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/library/u16.rs:22:19: 22:65 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::vec::Vec<u8>, std::option::Option<i32>) -> core::bit_array::BitArray {core::bit_array::BitArray::new},
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/library/u16.rs:23:19: 23:32 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(41),
                lint_level: Explicit(
                    HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).41),
                ),
                value: e31,
            },
            ty: fn(std::vec::Vec<u8>, std::option::Option<i32>) -> core::bit_array::BitArray {core::bit_array::BitArray::new},
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/library/u16.rs:23:19: 23:32 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:5127 ~ alloc[42dc]::slice::{impl#0}::into_vec),
                            UserSubsts {
                                substs: [
                                    ^0,
                                    ^1,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:5110 ~ alloc[42dc]::slice::{impl#0}),
                                        self_ty: [^2],
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(std::boxed::Box<[u8]>) -> std::vec::Vec<u8> {std::slice::<impl [u8]>::into_vec::<std::alloc::Global>},
            temp_lifetime: Some(
                Node(65),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 50:51 (#73),
        },
        Expr {
            kind: Scope {
                region_scope: Node(46),
                lint_level: Explicit(
                    HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).46),
                ),
                value: e33,
            },
            ty: fn(std::boxed::Box<[u8]>) -> std::vec::Vec<u8> {std::slice::<impl [u8]>::into_vec::<std::alloc::Global>},
            temp_lifetime: Some(
                Node(65),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 50:51 (#73),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).12),
                ),
            },
            ty: u8,
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/library/u16.rs:23:38: 23:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(58),
                lint_level: Explicit(
                    HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).58),
                ),
                value: e35,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/library/u16.rs:23:38: 23:40 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).22),
                ),
            },
            ty: u8,
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/library/u16.rs:23:42: 23:44 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(60),
                lint_level: Explicit(
                    HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).60),
                ),
                value: e37,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/library/u16.rs:23:42: 23:44 (#0),
        },
        Expr {
            kind: Array {
                fields: [
                    e36,
                    e38,
                ],
            },
            ty: [u8; 2],
            temp_lifetime: Some(
                Node(65),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:37: 54:46 (#73),
        },
        Expr {
            kind: Scope {
                region_scope: Node(57),
                lint_level: Explicit(
                    HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).57),
                ),
                value: e39,
            },
            ty: [u8; 2],
            temp_lifetime: Some(
                Node(65),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:37: 54:46 (#73),
        },
        Expr {
            kind: Box {
                value: e40,
            },
            ty: std::boxed::Box<[u8; 2]>,
            temp_lifetime: Some(
                Node(65),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13: 54:47 (#73),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e41,
            },
            ty: std::boxed::Box<[u8]>,
            temp_lifetime: Some(
                Node(65),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13: 54:47 (#73),
        },
        Expr {
            kind: Scope {
                region_scope: Node(50),
                lint_level: Explicit(
                    HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).50),
                ),
                value: e42,
            },
            ty: std::boxed::Box<[u8]>,
            temp_lifetime: Some(
                Node(65),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13: 54:47 (#73),
        },
        Expr {
            kind: Call {
                ty: fn(std::boxed::Box<[u8]>) -> std::vec::Vec<u8> {std::slice::<impl [u8]>::into_vec::<std::alloc::Global>},
                fun: e34,
                args: [
                    e43,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 55:10 (#73),
            },
            ty: std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(65),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 55:10 (#73),
        },
        Expr {
            kind: Scope {
                region_scope: Node(45),
                lint_level: Explicit(
                    HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).45),
                ),
                value: e44,
            },
            ty: std::vec::Vec<u8>,
            temp_lifetime: Some(
                Node(65),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 55:10 (#73),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: std::option::Option,
                    variant_index: 0,
                    substs: [
                        i32,
                    ],
                    user_ty: None,
                    fields: [],
                    base: None,
                },
            ),
            ty: std::option::Option<i32>,
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/library/u16.rs:23:47: 23:51 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(62),
                lint_level: Explicit(
                    HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).62),
                ),
                value: e46,
            },
            ty: std::option::Option<i32>,
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/library/u16.rs:23:47: 23:51 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::vec::Vec<u8>, std::option::Option<i32>) -> core::bit_array::BitArray {core::bit_array::BitArray::new},
                fun: e32,
                args: [
                    e45,
                    e47,
                ],
                from_hir_call: true,
                fn_span: src/library/u16.rs:23:19: 23:52 (#0),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/library/u16.rs:23:19: 23:52 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(40),
                lint_level: Explicit(
                    HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).40),
                ),
                value: e48,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/library/u16.rs:23:19: 23:52 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: library::u16::U16,
                    variant_index: 0,
                    substs: [],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e30,
                        },
                        FieldExpr {
                            name: field[1],
                            expr: e49,
                        },
                    ],
                    base: None,
                },
            ),
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/library/u16.rs:21:9: 24:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(23),
                lint_level: Explicit(
                    HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).23),
                ),
                value: e50,
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/library/u16.rs:21:9: 24:10 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/library/u16.rs:18:40: 26:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(65),
                lint_level: Explicit(
                    HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).65),
                ),
                value: e52,
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/library/u16.rs:18:40: 26:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(65),
                lint_level: Inherited,
                value: e53,
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/library/u16.rs:18:40: 26:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 64, first_statement_index: 0},
                init_scope: Node(3),
                pattern: Pat {
                    ty: u8,
                    span: src/library/u16.rs:19:13: 19:15 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "b0",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).12),
                        ),
                        ty: u8,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e7,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).11),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(3),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 64, first_statement_index: 1},
                init_scope: Node(13),
                pattern: Pat {
                    ty: u8,
                    span: src/library/u16.rs:20:13: 20:15 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "b1",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).22),
                        ),
                        ty: u8,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e15,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).21),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(13),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: u16,
                    span: src/library/u16.rs:18:21: 18:25 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "data",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).2),
                        ),
                        ty: u16,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: u16,
            ty_span: Some(
                src/library/u16.rs:18:27: 18:30 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:377 ~ andrew_fuzz[741f]::library::u16::{impl#0}::from_u16).1),
            ),
        },
    ],
}

DefId(0:380 ~ andrew_fuzz[741f]::library::u16::{impl#2}::int):
Thir {
    body_type: Fn(
        ([&library::u16::U16]; c_variadic: false)->i32,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(40),
            opt_destruction_scope: None,
            span: src/library/u16.rs:32:26: 35:6 (#0),
            stmts: [
                s0,
            ],
            expr: Some(
                e52,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:380 ~ andrew_fuzz[741f]::library::u16::{impl#2}::int).2),
                ),
            },
            ty: &library::u16::U16,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/u16.rs:33:24: 33:28 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/u16.rs:33:24: 33:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:380 ~ andrew_fuzz[741f]::library::u16::{impl#2}::int).7),
                ),
                value: e1,
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/u16.rs:33:24: 33:28 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[1],
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/u16.rs:33:24: 33:33 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e3,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/u16.rs:33:24: 33:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:380 ~ andrew_fuzz[741f]::library::u16::{impl#2}::int).6),
                ),
                value: e4,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/u16.rs:33:24: 33:33 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bit_array::BitArray) -> core::bit_array::BitArray {core::bit_array::BitArray::clone},
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/u16.rs:33:34: 33:39 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bit_array::BitArray) -> core::bit_array::BitArray {core::bit_array::BitArray::clone},
                fun: e6,
                args: [
                    e5,
                ],
                from_hir_call: true,
                fn_span: src/library/u16.rs:33:34: 33:41 (#0),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/u16.rs:33:24: 33:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:380 ~ andrew_fuzz[741f]::library::u16::{impl#2}::int).4),
                ),
                value: e7,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/u16.rs:33:24: 33:41 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:380 ~ andrew_fuzz[741f]::library::u16::{impl#2}::int).10),
                ),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:11: 34:15 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e9,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:11: 34:22 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(20),
                lint_level: Explicit(
                    HirId(DefId(0:380 ~ andrew_fuzz[741f]::library::u16::{impl#2}::int).20),
                ),
                value: e10,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:11: 34:15 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/library/u16.rs:34:20: 34:21 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:20: 34:21 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(22),
                lint_level: Explicit(
                    HirId(DefId(0:380 ~ andrew_fuzz[741f]::library::u16::{impl#2}::int).22),
                ),
                value: e12,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:20: 34:21 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut core::bit_array::BitArray, i32) -> std::option::Option<core::bit_array::BitArray> {core::bit_array::BitArray::eat},
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:16: 34:19 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut core::bit_array::BitArray, i32) -> std::option::Option<core::bit_array::BitArray> {core::bit_array::BitArray::eat},
                fun: e14,
                args: [
                    e11,
                    e13,
                ],
                from_hir_call: true,
                fn_span: src/library/u16.rs:34:16: 34:22 (#0),
            },
            ty: std::option::Option<core::bit_array::BitArray>,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:11: 34:22 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(18),
                lint_level: Explicit(
                    HirId(DefId(0:380 ~ andrew_fuzz[741f]::library::u16::{impl#2}::int).18),
                ),
                value: e15,
            },
            ty: std::option::Option<core::bit_array::BitArray>,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:11: 34:22 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::option::Option<core::bit_array::BitArray>) -> core::bit_array::BitArray {std::option::Option::<core::bit_array::BitArray>::unwrap},
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:23: 34:29 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::option::Option<core::bit_array::BitArray>) -> core::bit_array::BitArray {std::option::Option::<core::bit_array::BitArray>::unwrap},
                fun: e17,
                args: [
                    e16,
                ],
                from_hir_call: true,
                fn_span: src/library/u16.rs:34:23: 34:31 (#0),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:11: 34:31 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e18,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:11: 34:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(16),
                lint_level: Explicit(
                    HirId(DefId(0:380 ~ andrew_fuzz[741f]::library::u16::{impl#2}::int).16),
                ),
                value: e19,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:11: 34:31 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/library/u16.rs:34:37: 34:38 (#0),
                },
                neg: false,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:37: 34:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(23),
                lint_level: Explicit(
                    HirId(DefId(0:380 ~ andrew_fuzz[741f]::library::u16::{impl#2}::int).23),
                ),
                value: e21,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:37: 34:38 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bit_array::BitArray, u8) -> u8 {core::bit_array::BitArray::peek},
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:32: 34:36 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bit_array::BitArray, u8) -> u8 {core::bit_array::BitArray::peek},
                fun: e23,
                args: [
                    e20,
                    e22,
                ],
                from_hir_call: true,
                fn_span: src/library/u16.rs:34:32: 34:39 (#0),
            },
            ty: u8,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:11: 34:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:380 ~ andrew_fuzz[741f]::library::u16::{impl#2}::int).14),
                ),
                value: e24,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:11: 34:39 (#0),
        },
        Expr {
            kind: Cast {
                source: e25,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:10: 34:47 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:380 ~ andrew_fuzz[741f]::library::u16::{impl#2}::int).13),
                ),
                value: e26,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:10: 34:47 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/library/u16.rs:34:51: 34:52 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:51: 34:52 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(26),
                lint_level: Explicit(
                    HirId(DefId(0:380 ~ andrew_fuzz[741f]::library::u16::{impl#2}::int).26),
                ),
                value: e28,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:51: 34:52 (#0),
        },
        Expr {
            kind: Binary {
                op: Shl,
                lhs: e27,
                rhs: e29,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:9: 34:53 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(12),
                lint_level: Explicit(
                    HirId(DefId(0:380 ~ andrew_fuzz[741f]::library::u16::{impl#2}::int).12),
                ),
                value: e30,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:9: 34:53 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:380 ~ andrew_fuzz[741f]::library::u16::{impl#2}::int).10),
                ),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:56: 34:60 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e32,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:56: 34:67 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(34),
                lint_level: Explicit(
                    HirId(DefId(0:380 ~ andrew_fuzz[741f]::library::u16::{impl#2}::int).34),
                ),
                value: e33,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:56: 34:60 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/library/u16.rs:34:65: 34:66 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:65: 34:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(36),
                lint_level: Explicit(
                    HirId(DefId(0:380 ~ andrew_fuzz[741f]::library::u16::{impl#2}::int).36),
                ),
                value: e35,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:65: 34:66 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut core::bit_array::BitArray, i32) -> std::option::Option<core::bit_array::BitArray> {core::bit_array::BitArray::eat},
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:61: 34:64 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut core::bit_array::BitArray, i32) -> std::option::Option<core::bit_array::BitArray> {core::bit_array::BitArray::eat},
                fun: e37,
                args: [
                    e34,
                    e36,
                ],
                from_hir_call: true,
                fn_span: src/library/u16.rs:34:61: 34:67 (#0),
            },
            ty: std::option::Option<core::bit_array::BitArray>,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:56: 34:67 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(32),
                lint_level: Explicit(
                    HirId(DefId(0:380 ~ andrew_fuzz[741f]::library::u16::{impl#2}::int).32),
                ),
                value: e38,
            },
            ty: std::option::Option<core::bit_array::BitArray>,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:56: 34:67 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::option::Option<core::bit_array::BitArray>) -> core::bit_array::BitArray {std::option::Option::<core::bit_array::BitArray>::unwrap},
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:68: 34:74 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::option::Option<core::bit_array::BitArray>) -> core::bit_array::BitArray {std::option::Option::<core::bit_array::BitArray>::unwrap},
                fun: e40,
                args: [
                    e39,
                ],
                from_hir_call: true,
                fn_span: src/library/u16.rs:34:68: 34:76 (#0),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:56: 34:76 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e41,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:56: 34:84 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(30),
                lint_level: Explicit(
                    HirId(DefId(0:380 ~ andrew_fuzz[741f]::library::u16::{impl#2}::int).30),
                ),
                value: e42,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:56: 34:76 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        8,
                        Unsuffixed,
                    ),
                    span: src/library/u16.rs:34:82: 34:83 (#0),
                },
                neg: false,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:82: 34:83 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(37),
                lint_level: Explicit(
                    HirId(DefId(0:380 ~ andrew_fuzz[741f]::library::u16::{impl#2}::int).37),
                ),
                value: e44,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:82: 34:83 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bit_array::BitArray, u8) -> u8 {core::bit_array::BitArray::peek},
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:77: 34:81 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bit_array::BitArray, u8) -> u8 {core::bit_array::BitArray::peek},
                fun: e46,
                args: [
                    e43,
                    e45,
                ],
                from_hir_call: true,
                fn_span: src/library/u16.rs:34:77: 34:84 (#0),
            },
            ty: u8,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:56: 34:84 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(28),
                lint_level: Explicit(
                    HirId(DefId(0:380 ~ andrew_fuzz[741f]::library::u16::{impl#2}::int).28),
                ),
                value: e47,
            },
            ty: u8,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:56: 34:84 (#0),
        },
        Expr {
            kind: Cast {
                source: e48,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:56: 34:91 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(27),
                lint_level: Explicit(
                    HirId(DefId(0:380 ~ andrew_fuzz[741f]::library::u16::{impl#2}::int).27),
                ),
                value: e49,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:56: 34:91 (#0),
        },
        Expr {
            kind: Binary {
                op: BitOr,
                lhs: e31,
                rhs: e50,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:9: 34:91 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:380 ~ andrew_fuzz[741f]::library::u16::{impl#2}::int).11),
                ),
                value: e51,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:34:9: 34:91 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:32:26: 35:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(41),
                lint_level: Explicit(
                    HirId(DefId(0:380 ~ andrew_fuzz[741f]::library::u16::{impl#2}::int).41),
                ),
                value: e53,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:32:26: 35:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(41),
                lint_level: Inherited,
                value: e54,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(41),
            ),
            span: src/library/u16.rs:32:26: 35:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 40, first_statement_index: 0},
                init_scope: Node(3),
                pattern: Pat {
                    ty: core::bit_array::BitArray,
                    span: src/library/u16.rs:33:13: 33:21 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "data",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:380 ~ andrew_fuzz[741f]::library::u16::{impl#2}::int).10),
                        ),
                        ty: core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e8,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:380 ~ andrew_fuzz[741f]::library::u16::{impl#2}::int).9),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(3),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::u16::U16,
                    span: src/library/u16.rs:32:12: 32:17 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:380 ~ andrew_fuzz[741f]::library::u16::{impl#2}::int).2),
                        ),
                        ty: &library::u16::U16,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::u16::U16,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:380 ~ andrew_fuzz[741f]::library::u16::{impl#2}::int).1),
            ),
        },
    ],
}

DefId(0:382 ~ andrew_fuzz[741f]::library::u16::{impl#3}::clone):
Thir {
    body_type: Fn(
        ([&library::u16::U16]; c_variadic: false)->std::boxed::Box<dyn core::DataModel>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(22),
            opt_destruction_scope: None,
            span: src/library/u16.rs:39:43: 44:6 (#0),
            stmts: [],
            expr: Some(
                e24,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:296 ~ alloc[42dc]::boxed::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:294 ~ alloc[42dc]::boxed::{impl#0}),
                                        self_ty: std::boxed::Box<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::u16::U16) -> std::boxed::Box<library::u16::U16> {std::boxed::Box::<library::u16::U16>::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:40:9: 40:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:382 ~ andrew_fuzz[741f]::library::u16::{impl#3}::clone).4),
                ),
                value: e0,
            },
            ty: fn(library::u16::U16) -> std::boxed::Box<library::u16::U16> {std::boxed::Box::<library::u16::U16>::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:40:9: 40:17 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:382 ~ andrew_fuzz[741f]::library::u16::{impl#3}::clone).2),
                ),
            },
            ty: &library::u16::U16,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:41:19: 41:23 (#0),
        },
        Expr {
            kind: Deref {
                arg: e2,
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:41:19: 41:23 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:382 ~ andrew_fuzz[741f]::library::u16::{impl#3}::clone).14),
                ),
                value: e3,
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:41:19: 41:23 (#0),
        },
        Expr {
            kind: Field {
                lhs: e4,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:41:19: 41:28 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e5,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:41:19: 41:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:382 ~ andrew_fuzz[741f]::library::u16::{impl#3}::clone).13),
                ),
                value: e6,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:41:19: 41:28 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> std::rc::Rc<core::DataModelBase> {<std::rc::Rc<core::DataModelBase> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:41:29: 41:34 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> std::rc::Rc<core::DataModelBase> {<std::rc::Rc<core::DataModelBase> as std::clone::Clone>::clone},
                fun: e8,
                args: [
                    e7,
                ],
                from_hir_call: true,
                fn_span: src/library/u16.rs:41:29: 41:36 (#0),
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:41:19: 41:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:382 ~ andrew_fuzz[741f]::library::u16::{impl#3}::clone).11),
                ),
                value: e9,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:41:19: 41:36 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:382 ~ andrew_fuzz[741f]::library::u16::{impl#3}::clone).2),
                ),
            },
            ty: &library::u16::U16,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:42:19: 42:23 (#0),
        },
        Expr {
            kind: Deref {
                arg: e11,
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:42:19: 42:23 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(20),
                lint_level: Explicit(
                    HirId(DefId(0:382 ~ andrew_fuzz[741f]::library::u16::{impl#3}::clone).20),
                ),
                value: e12,
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:42:19: 42:23 (#0),
        },
        Expr {
            kind: Field {
                lhs: e13,
                variant_index: 0,
                name: field[1],
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:42:19: 42:28 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e14,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:42:19: 42:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:382 ~ andrew_fuzz[741f]::library::u16::{impl#3}::clone).19),
                ),
                value: e15,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:42:19: 42:28 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bit_array::BitArray) -> core::bit_array::BitArray {core::bit_array::BitArray::clone},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:42:29: 42:34 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bit_array::BitArray) -> core::bit_array::BitArray {core::bit_array::BitArray::clone},
                fun: e17,
                args: [
                    e16,
                ],
                from_hir_call: true,
                fn_span: src/library/u16.rs:42:29: 42:36 (#0),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:42:19: 42:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:382 ~ andrew_fuzz[741f]::library::u16::{impl#3}::clone).17),
                ),
                value: e18,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:42:19: 42:36 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: library::u16::U16,
                    variant_index: 0,
                    substs: [],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e10,
                        },
                        FieldExpr {
                            name: field[1],
                            expr: e19,
                        },
                    ],
                    base: None,
                },
            ),
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:40:18: 43:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:382 ~ andrew_fuzz[741f]::library::u16::{impl#3}::clone).8),
                ),
                value: e20,
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:40:18: 43:10 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::u16::U16) -> std::boxed::Box<library::u16::U16> {std::boxed::Box::<library::u16::U16>::new},
                fun: e1,
                args: [
                    e21,
                ],
                from_hir_call: true,
                fn_span: src/library/u16.rs:40:9: 43:11 (#0),
            },
            ty: std::boxed::Box<library::u16::U16>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:40:9: 43:11 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e22,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:40:9: 43:11 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:382 ~ andrew_fuzz[741f]::library::u16::{impl#3}::clone).3),
                ),
                value: e23,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:40:9: 43:11 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:40:9: 43:11 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e25,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:40:9: 43:11 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(23),
                lint_level: Explicit(
                    HirId(DefId(0:382 ~ andrew_fuzz[741f]::library::u16::{impl#3}::clone).23),
                ),
                value: e26,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:39:43: 44:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(23),
                lint_level: Inherited,
                value: e27,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:39:43: 44:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::u16::U16,
                    span: src/library/u16.rs:39:14: 39:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:382 ~ andrew_fuzz[741f]::library::u16::{impl#3}::clone).2),
                        ),
                        ty: &library::u16::U16,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::u16::U16,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:382 ~ andrew_fuzz[741f]::library::u16::{impl#3}::clone).1),
            ),
        },
    ],
}

DefId(0:384 ~ andrew_fuzz[741f]::library::u16::{impl#4}::breed):
Thir {
    body_type: Fn(
        ([&library::u16::U16, std::boxed::Box<dyn core::DataModel>]; c_variadic: false)->std::boxed::Box<dyn core::DataModel>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(12),
            opt_destruction_scope: None,
            span: src/library/u16.rs:48:70: 50:6 (#0),
            stmts: [
                s0,
            ],
            expr: None,
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(11),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:9: 773:33 (#75),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:384 ~ andrew_fuzz[741f]::library::u16::{impl#4}::breed).6),
                ),
                value: e0,
            },
            ty: fn(&'static str) -> ! {core::panicking::panic},
            temp_lifetime: Some(
                Node(11),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:9: 773:33 (#75),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "not yet implemented",
                        Cooked,
                    ),
                    span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:34: 773:55 (#75),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(11),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:34: 773:55 (#75),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:384 ~ andrew_fuzz[741f]::library::u16::{impl#4}::breed).10),
                ),
                value: e2,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(11),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:34: 773:55 (#75),
        },
        Expr {
            kind: Call {
                ty: fn(&'static str) -> ! {core::panicking::panic},
                fun: e1,
                args: [
                    e3,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:9: 773:56 (#75),
            },
            ty: !,
            temp_lifetime: Some(
                Node(11),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:9: 773:56 (#75),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:384 ~ andrew_fuzz[741f]::library::u16::{impl#4}::breed).5),
                ),
                value: e4,
            },
            ty: !,
            temp_lifetime: Some(
                Node(11),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:773:9: 773:56 (#75),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: !,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u16.rs:48:70: 50:6 (#0),
        },
        Expr {
            kind: NeverToAny {
                source: e6,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u16.rs:48:70: 50:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:384 ~ andrew_fuzz[741f]::library::u16::{impl#4}::breed).13),
                ),
                value: e7,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u16.rs:48:70: 50:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(13),
                lint_level: Inherited,
                value: e8,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u16.rs:48:70: 50:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(11),
                expr: e5,
            },
            opt_destruction_scope: Some(
                Destruction(11),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::u16::U16,
                    span: src/library/u16.rs:48:14: 48:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:384 ~ andrew_fuzz[741f]::library::u16::{impl#4}::breed).2),
                        ),
                        ty: &library::u16::U16,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::u16::U16,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:384 ~ andrew_fuzz[741f]::library::u16::{impl#4}::breed).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: std::boxed::Box<dyn core::DataModel>,
                    span: src/library/u16.rs:48:21: 48:26 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "other",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:384 ~ andrew_fuzz[741f]::library::u16::{impl#4}::breed).4),
                        ),
                        ty: std::boxed::Box<dyn core::DataModel>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::boxed::Box<dyn core::DataModel>,
            ty_span: Some(
                src/library/u16.rs:48:28: 48:46 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:384 ~ andrew_fuzz[741f]::library::u16::{impl#4}::breed).3),
            ),
        },
    ],
}

DefId(0:386 ~ andrew_fuzz[741f]::library::u16::{impl#5}::parse):
Thir {
    body_type: Fn(
        ([&library::u16::U16, &mut core::bit_array::BitArray, &std::rc::Rc<core::context::Context<'_>>]; c_variadic: false)->std::option::Option<std::boxed::Box<dyn core::DataModel>>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(42),
            opt_destruction_scope: None,
            span: src/library/u16.rs:55:43: 61:10 (#0),
            stmts: [
                s0,
            ],
            expr: Some(
                e32,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(47),
            opt_destruction_scope: None,
            span: src/library/u16.rs:61:16: 63:10 (#0),
            stmts: [],
            expr: Some(
                e37,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(48),
            opt_destruction_scope: None,
            span: src/library/u16.rs:54:96: 64:6 (#0),
            stmts: [],
            expr: Some(
                e42,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:386 ~ andrew_fuzz[741f]::library::u16::{impl#5}::parse).4),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/library/u16.rs:55:29: 55:34 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/library/u16.rs:55:29: 55:42 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e1,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/library/u16.rs:55:29: 55:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:386 ~ andrew_fuzz[741f]::library::u16::{impl#5}::parse).15),
                ),
                value: e2,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/library/u16.rs:55:29: 55:34 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        16,
                        Unsuffixed,
                    ),
                    span: src/library/u16.rs:55:39: 55:41 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/library/u16.rs:55:39: 55:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:386 ~ andrew_fuzz[741f]::library::u16::{impl#5}::parse).17),
                ),
                value: e4,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/library/u16.rs:55:39: 55:41 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut core::bit_array::BitArray, i32) -> std::option::Option<core::bit_array::BitArray> {core::bit_array::BitArray::eat},
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/library/u16.rs:55:35: 55:38 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut core::bit_array::BitArray, i32) -> std::option::Option<core::bit_array::BitArray> {core::bit_array::BitArray::eat},
                fun: e6,
                args: [
                    e3,
                    e5,
                ],
                from_hir_call: true,
                fn_span: src/library/u16.rs:55:35: 55:42 (#0),
            },
            ty: std::option::Option<core::bit_array::BitArray>,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/library/u16.rs:55:29: 55:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:386 ~ andrew_fuzz[741f]::library::u16::{impl#5}::parse).13),
                ),
                value: e7,
            },
            ty: std::option::Option<core::bit_array::BitArray>,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/library/u16.rs:55:29: 55:42 (#0),
        },
        Expr {
            kind: Let {
                expr: e8,
                pat: Pat {
                    ty: std::option::Option<core::bit_array::BitArray>,
                    span: src/library/u16.rs:55:16: 55:26 (#0),
                    kind: Variant {
                        adt_def: std::option::Option,
                        substs: [
                            core::bit_array::BitArray,
                        ],
                        variant_index: 1,
                        subpatterns: [
                            FieldPat {
                                field: field[0],
                                pattern: Pat {
                                    ty: core::bit_array::BitArray,
                                    span: src/library/u16.rs:55:21: 55:25 (#0),
                                    kind: Binding {
                                        mutability: Not,
                                        name: "data",
                                        mode: ByValue,
                                        var: LocalVarId(
                                            HirId(DefId(0:386 ~ andrew_fuzz[741f]::library::u16::{impl#5}::parse).11),
                                        ),
                                        ty: core::bit_array::BitArray,
                                        subpattern: None,
                                        is_primary: true,
                                    },
                                },
                            },
                        ],
                    },
                },
            },
            ty: bool,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/library/u16.rs:55:12: 55:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:386 ~ andrew_fuzz[741f]::library::u16::{impl#5}::parse).8),
                ),
                value: e9,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/library/u16.rs:55:12: 55:42 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:386 ~ andrew_fuzz[741f]::library::u16::{impl#5}::parse).2),
                ),
            },
            ty: &library::u16::U16,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/u16.rs:57:23: 57:27 (#0),
        },
        Expr {
            kind: Deref {
                arg: e11,
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/u16.rs:57:23: 57:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:386 ~ andrew_fuzz[741f]::library::u16::{impl#5}::parse).25),
                ),
                value: e12,
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/u16.rs:57:23: 57:27 (#0),
        },
        Expr {
            kind: Field {
                lhs: e13,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/u16.rs:57:23: 57:32 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e14,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/u16.rs:57:23: 57:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(24),
                lint_level: Explicit(
                    HirId(DefId(0:386 ~ andrew_fuzz[741f]::library::u16::{impl#5}::parse).24),
                ),
                value: e15,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/u16.rs:57:23: 57:32 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> std::rc::Rc<core::DataModelBase> {<std::rc::Rc<core::DataModelBase> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/u16.rs:57:33: 57:38 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> std::rc::Rc<core::DataModelBase> {<std::rc::Rc<core::DataModelBase> as std::clone::Clone>::clone},
                fun: e17,
                args: [
                    e16,
                ],
                from_hir_call: true,
                fn_span: src/library/u16.rs:57:33: 57:40 (#0),
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/u16.rs:57:23: 57:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(22),
                lint_level: Explicit(
                    HirId(DefId(0:386 ~ andrew_fuzz[741f]::library::u16::{impl#5}::parse).22),
                ),
                value: e18,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/u16.rs:57:23: 57:40 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:386 ~ andrew_fuzz[741f]::library::u16::{impl#5}::parse).11),
                ),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/u16.rs:58:17: 58:21 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(28),
                lint_level: Explicit(
                    HirId(DefId(0:386 ~ andrew_fuzz[741f]::library::u16::{impl#5}::parse).28),
                ),
                value: e20,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/u16.rs:58:17: 58:21 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: library::u16::U16,
                    variant_index: 0,
                    substs: [],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e19,
                        },
                        FieldExpr {
                            name: field[1],
                            expr: e21,
                        },
                    ],
                    base: None,
                },
            ),
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/u16.rs:56:30: 59:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:386 ~ andrew_fuzz[741f]::library::u16::{impl#5}::parse).19),
                ),
                value: e22,
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/u16.rs:56:30: 59:14 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:296 ~ alloc[42dc]::boxed::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:294 ~ alloc[42dc]::boxed::{impl#0}),
                                        self_ty: std::boxed::Box<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::u16::U16) -> std::boxed::Box<library::u16::U16> {std::boxed::Box::<library::u16::U16>::new},
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u16.rs:60:18: 60:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(36),
                lint_level: Explicit(
                    HirId(DefId(0:386 ~ andrew_fuzz[741f]::library::u16::{impl#5}::parse).36),
                ),
                value: e24,
            },
            ty: fn(library::u16::U16) -> std::boxed::Box<library::u16::U16> {std::boxed::Box::<library::u16::U16>::new},
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u16.rs:60:18: 60:26 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:386 ~ andrew_fuzz[741f]::library::u16::{impl#5}::parse).31),
                ),
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u16.rs:60:27: 60:37 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(40),
                lint_level: Explicit(
                    HirId(DefId(0:386 ~ andrew_fuzz[741f]::library::u16::{impl#5}::parse).40),
                ),
                value: e26,
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u16.rs:60:27: 60:37 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::u16::U16) -> std::boxed::Box<library::u16::U16> {std::boxed::Box::<library::u16::U16>::new},
                fun: e25,
                args: [
                    e27,
                ],
                from_hir_call: true,
                fn_span: src/library/u16.rs:60:18: 60:38 (#0),
            },
            ty: std::boxed::Box<library::u16::U16>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u16.rs:60:18: 60:38 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e28,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u16.rs:60:18: 60:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(35),
                lint_level: Explicit(
                    HirId(DefId(0:386 ~ andrew_fuzz[741f]::library::u16::{impl#5}::parse).35),
                ),
                value: e29,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u16.rs:60:18: 60:38 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: std::option::Option,
                    variant_index: 1,
                    substs: [
                        std::boxed::Box<dyn core::DataModel>,
                    ],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e30,
                        },
                    ],
                    base: None,
                },
            ),
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u16.rs:60:13: 60:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(32),
                lint_level: Explicit(
                    HirId(DefId(0:386 ~ andrew_fuzz[741f]::library::u16::{impl#5}::parse).32),
                ),
                value: e31,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u16.rs:60:13: 60:39 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u16.rs:55:43: 61:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(43),
                lint_level: Explicit(
                    HirId(DefId(0:386 ~ andrew_fuzz[741f]::library::u16::{impl#5}::parse).43),
                ),
                value: e33,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u16.rs:55:43: 61:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(43),
                lint_level: Inherited,
                value: e34,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(43),
            ),
            span: src/library/u16.rs:55:43: 61:10 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: std::option::Option,
                    variant_index: 0,
                    substs: [
                        std::boxed::Box<dyn core::DataModel>,
                    ],
                    user_ty: None,
                    fields: [],
                    base: None,
                },
            ),
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(44),
            ),
            span: src/library/u16.rs:62:13: 62:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(45),
                lint_level: Explicit(
                    HirId(DefId(0:386 ~ andrew_fuzz[741f]::library::u16::{impl#5}::parse).45),
                ),
                value: e36,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(44),
            ),
            span: src/library/u16.rs:62:13: 62:17 (#0),
        },
        Expr {
            kind: Block {
                block: b1,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(44),
            ),
            span: src/library/u16.rs:61:16: 63:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(44),
                lint_level: Explicit(
                    HirId(DefId(0:386 ~ andrew_fuzz[741f]::library::u16::{impl#5}::parse).44),
                ),
                value: e38,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(44),
            ),
            span: src/library/u16.rs:61:16: 63:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(44),
                lint_level: Inherited,
                value: e39,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(44),
            ),
            span: src/library/u16.rs:61:16: 63:10 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(43),
                cond: e10,
                then: e35,
                else_opt: Some(
                    e40,
                ),
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/library/u16.rs:55:9: 63:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:386 ~ andrew_fuzz[741f]::library::u16::{impl#5}::parse).7),
                ),
                value: e41,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/library/u16.rs:55:9: 63:10 (#0),
        },
        Expr {
            kind: Block {
                block: b2,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/library/u16.rs:54:96: 64:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(49),
                lint_level: Explicit(
                    HirId(DefId(0:386 ~ andrew_fuzz[741f]::library::u16::{impl#5}::parse).49),
                ),
                value: e43,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/library/u16.rs:54:96: 64:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(49),
                lint_level: Inherited,
                value: e44,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(49),
            ),
            span: src/library/u16.rs:54:96: 64:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 42, first_statement_index: 0},
                init_scope: Node(18),
                pattern: Pat {
                    ty: library::u16::U16,
                    span: src/library/u16.rs:56:17: 56:27 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "data_model",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:386 ~ andrew_fuzz[741f]::library::u16::{impl#5}::parse).31),
                        ),
                        ty: library::u16::U16,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e23,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:386 ~ andrew_fuzz[741f]::library::u16::{impl#5}::parse).30),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(18),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::u16::U16,
                    span: src/library/u16.rs:54:14: 54:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:386 ~ andrew_fuzz[741f]::library::u16::{impl#5}::parse).2),
                        ),
                        ty: &library::u16::U16,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::u16::U16,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:386 ~ andrew_fuzz[741f]::library::u16::{impl#5}::parse).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &mut core::bit_array::BitArray,
                    span: src/library/u16.rs:54:21: 54:26 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "input",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:386 ~ andrew_fuzz[741f]::library::u16::{impl#5}::parse).4),
                        ),
                        ty: &mut core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut core::bit_array::BitArray,
            ty_span: Some(
                src/library/u16.rs:54:28: 54:41 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:386 ~ andrew_fuzz[741f]::library::u16::{impl#5}::parse).3),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &std::rc::Rc<core::context::Context<'_>>,
                    span: src/library/u16.rs:54:43: 54:46 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "ctx",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:386 ~ andrew_fuzz[741f]::library::u16::{impl#5}::parse).6),
                        ),
                        ty: &std::rc::Rc<core::context::Context<'_>>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &std::rc::Rc<core::context::Context<'_>>,
            ty_span: Some(
                src/library/u16.rs:54:48: 54:64 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:386 ~ andrew_fuzz[741f]::library::u16::{impl#5}::parse).5),
            ),
        },
    ],
}

DefId(0:388 ~ andrew_fuzz[741f]::library::u16::{impl#6}::debug):
Thir {
    body_type: Fn(
        ([&library::u16::U16]; c_variadic: false)->std::string::String,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(36),
            opt_destruction_scope: None,
            span: src/library/u16.rs:68:31: 72:6 (#0),
            stmts: [
                s0,
                s1,
            ],
            expr: Some(
                e46,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn() -> std::string::String {std::string::String::new},
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/u16.rs:69:26: 69:37 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:388 ~ andrew_fuzz[741f]::library::u16::{impl#6}::debug).5),
                ),
                value: e0,
            },
            ty: fn() -> std::string::String {std::string::String::new},
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/u16.rs:69:26: 69:37 (#0),
        },
        Expr {
            kind: Call {
                ty: fn() -> std::string::String {std::string::String::new},
                fun: e1,
                args: [],
                from_hir_call: true,
                fn_span: src/library/u16.rs:69:26: 69:39 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/u16.rs:69:26: 69:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:388 ~ andrew_fuzz[741f]::library::u16::{impl#6}::debug).4),
                ),
                value: e2,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/u16.rs:69:26: 69:39 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:388 ~ andrew_fuzz[741f]::library::u16::{impl#6}::debug).10),
                ),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u16.rs:70:16: 70:22 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e4,
            },
            ty: &mut std::string::String,
            temp_lifetime: Some(
                Node(33),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:9: 520:55 (#76),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:388 ~ andrew_fuzz[741f]::library::u16::{impl#6}::debug).13),
                ),
                value: e5,
            },
            ty: &mut std::string::String,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u16.rs:70:16: 70:22 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(2:9000 ~ core[102f]::fmt::{impl#4}::new_v1),
                            UserSubsts {
                                substs: [
                                    ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon(0, None) }),
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(2:8997 ~ core[102f]::fmt::{impl#4}),
                                        self_ty: std::fmt::Arguments<'_>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> std::fmt::Arguments<'_> {std::fmt::Arguments::<'_>::new_v1},
            temp_lifetime: Some(
                Node(33),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#77),
        },
        Expr {
            kind: Scope {
                region_scope: Node(32),
                lint_level: Explicit(
                    HirId(DefId(0:388 ~ andrew_fuzz[741f]::library::u16::{impl#6}::debug).32),
                ),
                value: e7,
            },
            ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> std::fmt::Arguments<'_> {std::fmt::Arguments::<'_>::new_v1},
            temp_lifetime: Some(
                Node(33),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#77),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "",
                        Cooked,
                    ),
                    span: src/library/u16.rs:70:24: 70:30 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u16.rs:70:24: 70:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(16),
                lint_level: Explicit(
                    HirId(DefId(0:388 ~ andrew_fuzz[741f]::library::u16::{impl#6}::debug).16),
                ),
                value: e9,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u16.rs:70:24: 70:30 (#0),
        },
        Expr {
            kind: Array {
                fields: [
                    e10,
                ],
            },
            ty: [&str; 1],
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u16.rs:70:24: 70:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:388 ~ andrew_fuzz[741f]::library::u16::{impl#6}::debug).17),
                ),
                value: e11,
            },
            ty: [&str; 1],
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u16.rs:70:24: 70:30 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e12,
            },
            ty: &[&str; 1],
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u16.rs:70:24: 70:30 (#0),
        },
        Expr {
            kind: Deref {
                arg: e13,
            },
            ty: [&str; 1],
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u16.rs:70:24: 70:30 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e14,
            },
            ty: &[&str; 1],
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u16.rs:70:24: 70:30 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e15,
            },
            ty: &[&str],
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u16.rs:70:24: 70:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(18),
                lint_level: Explicit(
                    HirId(DefId(0:388 ~ andrew_fuzz[741f]::library::u16::{impl#6}::debug).18),
                ),
                value: e16,
            },
            ty: &[&str],
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u16.rs:70:24: 70:30 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(2:49778 ~ core[102f]::fmt::{impl#3}::new_upper_hex),
                            UserSubsts {
                                substs: [
                                    ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon(0, None) }),
                                    ^1,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(2:8990 ~ core[102f]::fmt::{impl#3}),
                                        self_ty: core::fmt::ArgumentV1<'_>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_upper_hex::<i32>},
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u16.rs:70:32: 70:42 (#77),
        },
        Expr {
            kind: Scope {
                region_scope: Node(26),
                lint_level: Explicit(
                    HirId(DefId(0:388 ~ andrew_fuzz[741f]::library::u16::{impl#6}::debug).26),
                ),
                value: e18,
            },
            ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_upper_hex::<i32>},
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u16.rs:70:32: 70:42 (#77),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:388 ~ andrew_fuzz[741f]::library::u16::{impl#6}::debug).2),
                ),
            },
            ty: &library::u16::U16,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u16.rs:70:32: 70:36 (#0),
        },
        Expr {
            kind: Deref {
                arg: e20,
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u16.rs:70:32: 70:42 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e21,
            },
            ty: &library::u16::U16,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u16.rs:70:32: 70:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(21),
                lint_level: Explicit(
                    HirId(DefId(0:388 ~ andrew_fuzz[741f]::library::u16::{impl#6}::debug).21),
                ),
                value: e22,
            },
            ty: &library::u16::U16,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u16.rs:70:32: 70:36 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a library::u16::U16) -> i32 {<library::u16::U16 as core::Contextual>::int},
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u16.rs:70:37: 70:40 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a library::u16::U16) -> i32 {<library::u16::U16 as core::Contextual>::int},
                fun: e24,
                args: [
                    e23,
                ],
                from_hir_call: true,
                fn_span: src/library/u16.rs:70:37: 70:42 (#0),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u16.rs:70:32: 70:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:388 ~ andrew_fuzz[741f]::library::u16::{impl#6}::debug).19),
                ),
                value: e25,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u16.rs:70:32: 70:42 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e26,
            },
            ty: &i32,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u16.rs:70:32: 70:42 (#77),
        },
        Expr {
            kind: Deref {
                arg: e27,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u16.rs:70:32: 70:42 (#77),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e28,
            },
            ty: &i32,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u16.rs:70:32: 70:42 (#77),
        },
        Expr {
            kind: Scope {
                region_scope: Node(23),
                lint_level: Explicit(
                    HirId(DefId(0:388 ~ andrew_fuzz[741f]::library::u16::{impl#6}::debug).23),
                ),
                value: e29,
            },
            ty: &i32,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u16.rs:70:32: 70:42 (#77),
        },
        Expr {
            kind: Call {
                ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_upper_hex::<i32>},
                fun: e19,
                args: [
                    e30,
                ],
                from_hir_call: true,
                fn_span: src/library/u16.rs:70:32: 70:42 (#77),
            },
            ty: core::fmt::ArgumentV1<'_>,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u16.rs:70:32: 70:42 (#77),
        },
        Expr {
            kind: Scope {
                region_scope: Node(27),
                lint_level: Explicit(
                    HirId(DefId(0:388 ~ andrew_fuzz[741f]::library::u16::{impl#6}::debug).27),
                ),
                value: e31,
            },
            ty: core::fmt::ArgumentV1<'_>,
            temp_lifetime: Some(
                Node(33),
            ),
            span: src/library/u16.rs:70:32: 70:42 (#77),
        },
        Expr {
            kind: Array {
                fields: [
                    e32,
                ],
            },
            ty: [core::fmt::ArgumentV1<'_>; 1],
            temp_lifetime: Some(
                Node(33),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#77),
        },
        Expr {
            kind: Scope {
                region_scope: Node(28),
                lint_level: Explicit(
                    HirId(DefId(0:388 ~ andrew_fuzz[741f]::library::u16::{impl#6}::debug).28),
                ),
                value: e33,
            },
            ty: [core::fmt::ArgumentV1<'_>; 1],
            temp_lifetime: Some(
                Node(33),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#77),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e34,
            },
            ty: &[core::fmt::ArgumentV1<'_>; 1],
            temp_lifetime: Some(
                Node(33),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#77),
        },
        Expr {
            kind: Deref {
                arg: e35,
            },
            ty: [core::fmt::ArgumentV1<'_>; 1],
            temp_lifetime: Some(
                Node(33),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#77),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e36,
            },
            ty: &[core::fmt::ArgumentV1<'_>; 1],
            temp_lifetime: Some(
                Node(33),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#77),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e37,
            },
            ty: &[core::fmt::ArgumentV1<'_>],
            temp_lifetime: Some(
                Node(33),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#77),
        },
        Expr {
            kind: Scope {
                region_scope: Node(29),
                lint_level: Explicit(
                    HirId(DefId(0:388 ~ andrew_fuzz[741f]::library::u16::{impl#6}::debug).29),
                ),
                value: e38,
            },
            ty: &[core::fmt::ArgumentV1<'_>],
            temp_lifetime: Some(
                Node(33),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#77),
        },
        Expr {
            kind: Call {
                ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> std::fmt::Arguments<'_> {std::fmt::Arguments::<'_>::new_v1},
                fun: e8,
                args: [
                    e17,
                    e39,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#77),
            },
            ty: std::fmt::Arguments<'_>,
            temp_lifetime: Some(
                Node(33),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#77),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:388 ~ andrew_fuzz[741f]::library::u16::{impl#6}::debug).15),
                ),
                value: e40,
            },
            ty: std::fmt::Arguments<'_>,
            temp_lifetime: Some(
                Node(33),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#77),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b> fn(&'a mut std::string::String, std::fmt::Arguments<'b>) -> std::result::Result<(), std::fmt::Error> {<std::string::String as std::fmt::Write>::write_fmt},
            temp_lifetime: Some(
                Node(33),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:14: 520:23 (#76),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b> fn(&'a mut std::string::String, std::fmt::Arguments<'b>) -> std::result::Result<(), std::fmt::Error> {<std::string::String as std::fmt::Write>::write_fmt},
                fun: e42,
                args: [
                    e6,
                    e41,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:14: 520:55 (#76),
            },
            ty: std::result::Result<(), std::fmt::Error>,
            temp_lifetime: Some(
                Node(33),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:9: 520:55 (#76),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:388 ~ andrew_fuzz[741f]::library::u16::{impl#6}::debug).11),
                ),
                value: e43,
            },
            ty: std::result::Result<(), std::fmt::Error>,
            temp_lifetime: Some(
                Node(33),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:9: 520:55 (#76),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:388 ~ andrew_fuzz[741f]::library::u16::{impl#6}::debug).10),
                ),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/library/u16.rs:71:9: 71:15 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(34),
                lint_level: Explicit(
                    HirId(DefId(0:388 ~ andrew_fuzz[741f]::library::u16::{impl#6}::debug).34),
                ),
                value: e45,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/library/u16.rs:71:9: 71:15 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/library/u16.rs:68:31: 72:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(37),
                lint_level: Explicit(
                    HirId(DefId(0:388 ~ andrew_fuzz[741f]::library::u16::{impl#6}::debug).37),
                ),
                value: e47,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/library/u16.rs:68:31: 72:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(37),
                lint_level: Inherited,
                value: e48,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(37),
            ),
            span: src/library/u16.rs:68:31: 72:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 36, first_statement_index: 0},
                init_scope: Node(3),
                pattern: Pat {
                    ty: std::string::String,
                    span: src/library/u16.rs:69:13: 69:23 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "result",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:388 ~ andrew_fuzz[741f]::library::u16::{impl#6}::debug).10),
                        ),
                        ty: std::string::String,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e3,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:388 ~ andrew_fuzz[741f]::library::u16::{impl#6}::debug).9),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(3),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(33),
                expr: e44,
            },
            opt_destruction_scope: Some(
                Destruction(33),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::u16::U16,
                    span: src/library/u16.rs:68:14: 68:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:388 ~ andrew_fuzz[741f]::library::u16::{impl#6}::debug).2),
                        ),
                        ty: &library::u16::U16,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::u16::U16,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:388 ~ andrew_fuzz[741f]::library::u16::{impl#6}::debug).1),
            ),
        },
    ],
}

DefId(0:390 ~ andrew_fuzz[741f]::library::u16::{impl#7}::fuzz):
Thir {
    body_type: Fn(
        ([&library::u16::U16]; c_variadic: false)->std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(38),
            opt_destruction_scope: None,
            span: src/library/u16.rs:76:46: 78:6 (#0),
            stmts: [],
            expr: Some(
                e30,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:5127 ~ alloc[42dc]::slice::{impl#0}::into_vec),
                            UserSubsts {
                                substs: [
                                    ^0,
                                    ^1,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:5110 ~ alloc[42dc]::slice::{impl#0}),
                                        self_ty: [^2],
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(std::boxed::Box<[std::rc::Rc<dyn core::DataModel>]>) -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::slice::<impl [std::rc::Rc<dyn core::DataModel>]>::into_vec::<std::alloc::Global>},
            temp_lifetime: Some(
                Node(39),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 50:51 (#78),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:390 ~ andrew_fuzz[741f]::library::u16::{impl#7}::fuzz).4),
                ),
                value: e0,
            },
            ty: fn(std::boxed::Box<[std::rc::Rc<dyn core::DataModel>]>) -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::slice::<impl [std::rc::Rc<dyn core::DataModel>]>::into_vec::<std::alloc::Global>},
            temp_lifetime: Some(
                Node(39),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 50:51 (#78),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::u16::U16) -> std::rc::Rc<library::u16::U16> {std::rc::Rc::<library::u16::U16>::new},
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u16.rs:77:14: 77:21 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:390 ~ andrew_fuzz[741f]::library::u16::{impl#7}::fuzz).17),
                ),
                value: e2,
            },
            ty: fn(library::u16::U16) -> std::rc::Rc<library::u16::U16> {std::rc::Rc::<library::u16::U16>::new},
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u16.rs:77:14: 77:21 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(u16) -> library::u16::U16 {library::u16::U16::from_u16},
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u16.rs:77:22: 77:35 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(22),
                lint_level: Explicit(
                    HirId(DefId(0:390 ~ andrew_fuzz[741f]::library::u16::{impl#7}::fuzz).22),
                ),
                value: e4,
            },
            ty: fn(u16) -> library::u16::U16 {library::u16::U16::from_u16},
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u16.rs:77:22: 77:35 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        65535,
                        Unsuffixed,
                    ),
                    span: src/library/u16.rs:77:36: 77:42 (#0),
                },
                neg: false,
            },
            ty: u16,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u16.rs:77:36: 77:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(26),
                lint_level: Explicit(
                    HirId(DefId(0:390 ~ andrew_fuzz[741f]::library::u16::{impl#7}::fuzz).26),
                ),
                value: e6,
            },
            ty: u16,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u16.rs:77:36: 77:42 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(u16) -> library::u16::U16 {library::u16::U16::from_u16},
                fun: e5,
                args: [
                    e7,
                ],
                from_hir_call: true,
                fn_span: src/library/u16.rs:77:22: 77:43 (#0),
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u16.rs:77:22: 77:43 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(21),
                lint_level: Explicit(
                    HirId(DefId(0:390 ~ andrew_fuzz[741f]::library::u16::{impl#7}::fuzz).21),
                ),
                value: e8,
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u16.rs:77:22: 77:43 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::u16::U16) -> std::rc::Rc<library::u16::U16> {std::rc::Rc::<library::u16::U16>::new},
                fun: e3,
                args: [
                    e9,
                ],
                from_hir_call: true,
                fn_span: src/library/u16.rs:77:14: 77:44 (#0),
            },
            ty: std::rc::Rc<library::u16::U16>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u16.rs:77:14: 77:44 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e10,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u16.rs:77:14: 77:44 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(16),
                lint_level: Explicit(
                    HirId(DefId(0:390 ~ andrew_fuzz[741f]::library::u16::{impl#7}::fuzz).16),
                ),
                value: e11,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u16.rs:77:14: 77:44 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::u16::U16) -> std::rc::Rc<library::u16::U16> {std::rc::Rc::<library::u16::U16>::new},
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u16.rs:77:46: 77:53 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(28),
                lint_level: Explicit(
                    HirId(DefId(0:390 ~ andrew_fuzz[741f]::library::u16::{impl#7}::fuzz).28),
                ),
                value: e13,
            },
            ty: fn(library::u16::U16) -> std::rc::Rc<library::u16::U16> {std::rc::Rc::<library::u16::U16>::new},
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u16.rs:77:46: 77:53 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(u16) -> library::u16::U16 {library::u16::U16::from_u16},
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u16.rs:77:54: 77:67 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(33),
                lint_level: Explicit(
                    HirId(DefId(0:390 ~ andrew_fuzz[741f]::library::u16::{impl#7}::fuzz).33),
                ),
                value: e15,
            },
            ty: fn(u16) -> library::u16::U16 {library::u16::U16::from_u16},
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u16.rs:77:54: 77:67 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        43690,
                        Unsuffixed,
                    ),
                    span: src/library/u16.rs:77:68: 77:74 (#0),
                },
                neg: false,
            },
            ty: u16,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u16.rs:77:68: 77:74 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(37),
                lint_level: Explicit(
                    HirId(DefId(0:390 ~ andrew_fuzz[741f]::library::u16::{impl#7}::fuzz).37),
                ),
                value: e17,
            },
            ty: u16,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u16.rs:77:68: 77:74 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(u16) -> library::u16::U16 {library::u16::U16::from_u16},
                fun: e16,
                args: [
                    e18,
                ],
                from_hir_call: true,
                fn_span: src/library/u16.rs:77:54: 77:75 (#0),
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u16.rs:77:54: 77:75 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(32),
                lint_level: Explicit(
                    HirId(DefId(0:390 ~ andrew_fuzz[741f]::library::u16::{impl#7}::fuzz).32),
                ),
                value: e19,
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u16.rs:77:54: 77:75 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::u16::U16) -> std::rc::Rc<library::u16::U16> {std::rc::Rc::<library::u16::U16>::new},
                fun: e14,
                args: [
                    e20,
                ],
                from_hir_call: true,
                fn_span: src/library/u16.rs:77:46: 77:76 (#0),
            },
            ty: std::rc::Rc<library::u16::U16>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u16.rs:77:46: 77:76 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e21,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u16.rs:77:46: 77:76 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(27),
                lint_level: Explicit(
                    HirId(DefId(0:390 ~ andrew_fuzz[741f]::library::u16::{impl#7}::fuzz).27),
                ),
                value: e22,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u16.rs:77:46: 77:76 (#0),
        },
        Expr {
            kind: Array {
                fields: [
                    e12,
                    e23,
                ],
            },
            ty: [std::rc::Rc<dyn core::DataModel>; 2],
            temp_lifetime: Some(
                Node(39),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:37: 54:46 (#78),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:390 ~ andrew_fuzz[741f]::library::u16::{impl#7}::fuzz).15),
                ),
                value: e24,
            },
            ty: [std::rc::Rc<dyn core::DataModel>; 2],
            temp_lifetime: Some(
                Node(39),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:37: 54:46 (#78),
        },
        Expr {
            kind: Box {
                value: e25,
            },
            ty: std::boxed::Box<[std::rc::Rc<dyn core::DataModel>; 2]>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13: 54:47 (#78),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e26,
            },
            ty: std::boxed::Box<[std::rc::Rc<dyn core::DataModel>]>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13: 54:47 (#78),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:390 ~ andrew_fuzz[741f]::library::u16::{impl#7}::fuzz).8),
                ),
                value: e27,
            },
            ty: std::boxed::Box<[std::rc::Rc<dyn core::DataModel>]>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13: 54:47 (#78),
        },
        Expr {
            kind: Call {
                ty: fn(std::boxed::Box<[std::rc::Rc<dyn core::DataModel>]>) -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::slice::<impl [std::rc::Rc<dyn core::DataModel>]>::into_vec::<std::alloc::Global>},
                fun: e1,
                args: [
                    e28,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 55:10 (#78),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 55:10 (#78),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:390 ~ andrew_fuzz[741f]::library::u16::{impl#7}::fuzz).3),
                ),
                value: e29,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 55:10 (#78),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u16.rs:76:46: 78:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(39),
                lint_level: Explicit(
                    HirId(DefId(0:390 ~ andrew_fuzz[741f]::library::u16::{impl#7}::fuzz).39),
                ),
                value: e31,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u16.rs:76:46: 78:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(39),
                lint_level: Inherited,
                value: e32,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/library/u16.rs:76:46: 78:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::u16::U16,
                    span: src/library/u16.rs:76:13: 76:18 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:390 ~ andrew_fuzz[741f]::library::u16::{impl#7}::fuzz).2),
                        ),
                        ty: &library::u16::U16,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::u16::U16,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:390 ~ andrew_fuzz[741f]::library::u16::{impl#7}::fuzz).1),
            ),
        },
    ],
}

DefId(0:392 ~ andrew_fuzz[741f]::library::u16::{impl#8}::name):
Thir {
    body_type: Fn(
        ([&library::u16::U16]; c_variadic: false)->&std::string::String,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(8),
            opt_destruction_scope: None,
            span: src/library/u16.rs:82:31: 84:6 (#0),
            stmts: [],
            expr: Some(
                e14,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:392 ~ andrew_fuzz[741f]::library::u16::{impl#8}::name).2),
                ),
            },
            ty: &library::u16::U16,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u16.rs:83:9: 83:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u16.rs:83:9: 83:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:392 ~ andrew_fuzz[741f]::library::u16::{impl#8}::name).6),
                ),
                value: e1,
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u16.rs:83:9: 83:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u16.rs:83:9: 83:18 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e3,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u16.rs:83:9: 83:25 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> &'a <std::rc::Rc<core::DataModelBase> as std::ops::Deref>::Target {<std::rc::Rc<core::DataModelBase> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u16.rs:83:9: 83:25 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> &'a <std::rc::Rc<core::DataModelBase> as std::ops::Deref>::Target {<std::rc::Rc<core::DataModelBase> as std::ops::Deref>::deref},
                fun: e5,
                args: [
                    e4,
                ],
                from_hir_call: false,
                fn_span: src/library/u16.rs:83:9: 83:25 (#0),
            },
            ty: &core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u16.rs:83:9: 83:25 (#0),
        },
        Expr {
            kind: Deref {
                arg: e6,
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u16.rs:83:9: 83:25 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e7,
            },
            ty: &core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u16.rs:83:9: 83:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:392 ~ andrew_fuzz[741f]::library::u16::{impl#8}::name).5),
                ),
                value: e8,
            },
            ty: &core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u16.rs:83:9: 83:18 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::DataModelBase) -> &'a std::string::String {core::DataModelBase::name},
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u16.rs:83:19: 83:23 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::DataModelBase) -> &'a std::string::String {core::DataModelBase::name},
                fun: e10,
                args: [
                    e9,
                ],
                from_hir_call: true,
                fn_span: src/library/u16.rs:83:19: 83:25 (#0),
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u16.rs:83:9: 83:25 (#0),
        },
        Expr {
            kind: Deref {
                arg: e11,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u16.rs:83:9: 83:25 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e12,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u16.rs:83:9: 83:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:392 ~ andrew_fuzz[741f]::library::u16::{impl#8}::name).3),
                ),
                value: e13,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u16.rs:83:9: 83:25 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u16.rs:82:31: 84:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:392 ~ andrew_fuzz[741f]::library::u16::{impl#8}::name).9),
                ),
                value: e15,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u16.rs:82:31: 84:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(9),
                lint_level: Inherited,
                value: e16,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/u16.rs:82:31: 84:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::u16::U16,
                    span: src/library/u16.rs:82:13: 82:18 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:392 ~ andrew_fuzz[741f]::library::u16::{impl#8}::name).2),
                        ),
                        ty: &library::u16::U16,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::u16::U16,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:392 ~ andrew_fuzz[741f]::library::u16::{impl#8}::name).1),
            ),
        },
    ],
}

DefId(0:393 ~ andrew_fuzz[741f]::library::u16::{impl#8}::set_name):
Thir {
    body_type: Fn(
        ([&mut library::u16::U16, &str]; c_variadic: false)->(),
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(24),
            opt_destruction_scope: None,
            span: src/library/u16.rs:85:40: 87:6 (#0),
            stmts: [
                s0,
            ],
            expr: None,
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:393 ~ andrew_fuzz[741f]::library::u16::{impl#8}::set_name).2),
                ),
            },
            ty: &mut library::u16::U16,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:86:9: 86:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:86:9: 86:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:393 ~ andrew_fuzz[741f]::library::u16::{impl#8}::set_name).7),
                ),
                value: e1,
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:86:9: 86:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:86:9: 86:18 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:393 ~ andrew_fuzz[741f]::library::u16::{impl#8}::set_name).6),
                ),
                value: e3,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:86:9: 86:18 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:86:21: 86:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:393 ~ andrew_fuzz[741f]::library::u16::{impl#8}::set_name).10),
                ),
                value: e5,
            },
            ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:86:21: 86:28 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:86:29: 86:47 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:393 ~ andrew_fuzz[741f]::library::u16::{impl#8}::set_name).15),
                ),
                value: e7,
            },
            ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:86:29: 86:47 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:393 ~ andrew_fuzz[741f]::library::u16::{impl#8}::set_name).4),
                ),
            },
            ty: &str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:86:48: 86:52 (#0),
        },
        Expr {
            kind: Deref {
                arg: e9,
            },
            ty: str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:86:48: 86:64 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e10,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:86:48: 86:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(21),
                lint_level: Explicit(
                    HirId(DefId(0:393 ~ andrew_fuzz[741f]::library::u16::{impl#8}::set_name).21),
                ),
                value: e11,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:86:48: 86:52 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:86:53: 86:62 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
                fun: e13,
                args: [
                    e12,
                ],
                from_hir_call: true,
                fn_span: src/library/u16.rs:86:53: 86:64 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:86:48: 86:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:393 ~ andrew_fuzz[741f]::library::u16::{impl#8}::set_name).19),
                ),
                value: e14,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:86:48: 86:64 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
                fun: e8,
                args: [
                    e15,
                ],
                from_hir_call: true,
                fn_span: src/library/u16.rs:86:29: 86:65 (#0),
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:86:29: 86:65 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:393 ~ andrew_fuzz[741f]::library::u16::{impl#8}::set_name).14),
                ),
                value: e16,
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:86:29: 86:65 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
                fun: e6,
                args: [
                    e17,
                ],
                from_hir_call: true,
                fn_span: src/library/u16.rs:86:21: 86:66 (#0),
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:86:21: 86:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:393 ~ andrew_fuzz[741f]::library::u16::{impl#8}::set_name).9),
                ),
                value: e18,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:86:21: 86:66 (#0),
        },
        Expr {
            kind: Assign {
                lhs: e4,
                rhs: e19,
            },
            ty: (),
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:86:9: 86:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:393 ~ andrew_fuzz[741f]::library::u16::{impl#8}::set_name).5),
                ),
                value: e20,
            },
            ty: (),
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/u16.rs:86:9: 86:66 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/u16.rs:85:40: 87:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:393 ~ andrew_fuzz[741f]::library::u16::{impl#8}::set_name).25),
                ),
                value: e22,
            },
            ty: (),
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/u16.rs:85:40: 87:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(25),
                lint_level: Inherited,
                value: e23,
            },
            ty: (),
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/u16.rs:85:40: 87:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(23),
                expr: e21,
            },
            opt_destruction_scope: Some(
                Destruction(23),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &mut library::u16::U16,
                    span: src/library/u16.rs:85:17: 85:26 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:393 ~ andrew_fuzz[741f]::library::u16::{impl#8}::set_name).2),
                        ),
                        ty: &mut library::u16::U16,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut library::u16::U16,
            ty_span: None,
            self_kind: Some(
                MutRef,
            ),
            hir_id: Some(
                HirId(DefId(0:393 ~ andrew_fuzz[741f]::library::u16::{impl#8}::set_name).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &str,
                    span: src/library/u16.rs:85:28: 85:32 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "name",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:393 ~ andrew_fuzz[741f]::library::u16::{impl#8}::set_name).4),
                        ),
                        ty: &str,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &str,
            ty_span: Some(
                src/library/u16.rs:85:34: 85:38 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:393 ~ andrew_fuzz[741f]::library::u16::{impl#8}::set_name).3),
            ),
        },
    ],
}

DefId(0:396 ~ andrew_fuzz[741f]::library::u16::{impl#10}::do_serialization):
Thir {
    body_type: Fn(
        ([&library::u16::U16, &mut core::bit_array::BitArray]; c_variadic: false)->(),
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(14),
            opt_destruction_scope: None,
            span: src/library/u16.rs:93:51: 95:6 (#0),
            stmts: [
                s0,
            ],
            expr: None,
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:396 ~ andrew_fuzz[741f]::library::u16::{impl#10}::do_serialization).4),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u16.rs:94:9: 94:11 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u16.rs:94:9: 94:30 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e1,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u16.rs:94:9: 94:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:396 ~ andrew_fuzz[741f]::library::u16::{impl#10}::do_serialization).7),
                ),
                value: e2,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u16.rs:94:9: 94:11 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:396 ~ andrew_fuzz[741f]::library::u16::{impl#10}::do_serialization).2),
                ),
            },
            ty: &library::u16::U16,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u16.rs:94:20: 94:24 (#0),
        },
        Expr {
            kind: Deref {
                arg: e4,
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u16.rs:94:20: 94:24 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:396 ~ andrew_fuzz[741f]::library::u16::{impl#10}::do_serialization).11),
                ),
                value: e5,
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u16.rs:94:20: 94:24 (#0),
        },
        Expr {
            kind: Field {
                lhs: e6,
                variant_index: 0,
                name: field[1],
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u16.rs:94:20: 94:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:396 ~ andrew_fuzz[741f]::library::u16::{impl#10}::do_serialization).10),
                ),
                value: e7,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u16.rs:94:20: 94:29 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e8,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u16.rs:94:19: 94:29 (#0),
        },
        Expr {
            kind: Deref {
                arg: e9,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u16.rs:94:19: 94:29 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e10,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u16.rs:94:19: 94:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:396 ~ andrew_fuzz[741f]::library::u16::{impl#10}::do_serialization).9),
                ),
                value: e11,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u16.rs:94:19: 94:29 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b> fn(&'a mut core::bit_array::BitArray, &'b core::bit_array::BitArray) {core::bit_array::BitArray::extend},
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u16.rs:94:12: 94:18 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b> fn(&'a mut core::bit_array::BitArray, &'b core::bit_array::BitArray) {core::bit_array::BitArray::extend},
                fun: e13,
                args: [
                    e3,
                    e12,
                ],
                from_hir_call: true,
                fn_span: src/library/u16.rs:94:12: 94:30 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u16.rs:94:9: 94:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:396 ~ andrew_fuzz[741f]::library::u16::{impl#10}::do_serialization).5),
                ),
                value: e14,
            },
            ty: (),
            temp_lifetime: Some(
                Node(13),
            ),
            span: src/library/u16.rs:94:9: 94:30 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/library/u16.rs:93:51: 95:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:396 ~ andrew_fuzz[741f]::library::u16::{impl#10}::do_serialization).15),
                ),
                value: e16,
            },
            ty: (),
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/library/u16.rs:93:51: 95:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(15),
                lint_level: Inherited,
                value: e17,
            },
            ty: (),
            temp_lifetime: Some(
                Node(15),
            ),
            span: src/library/u16.rs:93:51: 95:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(13),
                expr: e15,
            },
            opt_destruction_scope: Some(
                Destruction(13),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::u16::U16,
                    span: src/library/u16.rs:93:25: 93:30 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:396 ~ andrew_fuzz[741f]::library::u16::{impl#10}::do_serialization).2),
                        ),
                        ty: &library::u16::U16,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::u16::U16,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:396 ~ andrew_fuzz[741f]::library::u16::{impl#10}::do_serialization).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &mut core::bit_array::BitArray,
                    span: src/library/u16.rs:93:32: 93:34 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "ba",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:396 ~ andrew_fuzz[741f]::library::u16::{impl#10}::do_serialization).4),
                        ),
                        ty: &mut core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut core::bit_array::BitArray,
            ty_span: Some(
                src/library/u16.rs:93:36: 93:49 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:396 ~ andrew_fuzz[741f]::library::u16::{impl#10}::do_serialization).3),
            ),
        },
    ],
}

DefId(0:422 ~ andrew_fuzz[741f]::library::constraint::{impl#0}::new):
Thir {
    body_type: Fn(
        ([std::rc::Rc<dyn core::DataModel>, std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>]; c_variadic: false)->library::constraint::Constraint,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(27),
            opt_destruction_scope: None,
            span: src/library/constraint.rs:17:98: 23:6 (#0),
            stmts: [],
            expr: Some(
                e22,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/constraint.rs:19:19: 19:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:422 ~ andrew_fuzz[741f]::library::constraint::{impl#0}::new).9),
                ),
                value: e0,
            },
            ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/constraint.rs:19:19: 19:26 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/constraint.rs:19:27: 19:45 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:422 ~ andrew_fuzz[741f]::library::constraint::{impl#0}::new).14),
                ),
                value: e2,
            },
            ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/constraint.rs:19:27: 19:45 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "Constraint",
                        Cooked,
                    ),
                    span: src/library/constraint.rs:19:46: 19:58 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/constraint.rs:19:46: 19:58 (#0),
        },
        Expr {
            kind: Deref {
                arg: e4,
            },
            ty: str,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/constraint.rs:19:46: 19:70 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e5,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/constraint.rs:19:46: 19:70 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(20),
                lint_level: Explicit(
                    HirId(DefId(0:422 ~ andrew_fuzz[741f]::library::constraint::{impl#0}::new).20),
                ),
                value: e6,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/constraint.rs:19:46: 19:58 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/constraint.rs:19:59: 19:68 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
                fun: e8,
                args: [
                    e7,
                ],
                from_hir_call: true,
                fn_span: src/library/constraint.rs:19:59: 19:70 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/constraint.rs:19:46: 19:70 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(18),
                lint_level: Explicit(
                    HirId(DefId(0:422 ~ andrew_fuzz[741f]::library::constraint::{impl#0}::new).18),
                ),
                value: e9,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/constraint.rs:19:46: 19:70 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
                fun: e3,
                args: [
                    e10,
                ],
                from_hir_call: true,
                fn_span: src/library/constraint.rs:19:27: 19:71 (#0),
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/constraint.rs:19:27: 19:71 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:422 ~ andrew_fuzz[741f]::library::constraint::{impl#0}::new).13),
                ),
                value: e11,
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/constraint.rs:19:27: 19:71 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
                fun: e1,
                args: [
                    e12,
                ],
                from_hir_call: true,
                fn_span: src/library/constraint.rs:19:19: 19:72 (#0),
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/constraint.rs:19:19: 19:72 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:422 ~ andrew_fuzz[741f]::library::constraint::{impl#0}::new).8),
                ),
                value: e13,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/constraint.rs:19:19: 19:72 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:422 ~ andrew_fuzz[741f]::library::constraint::{impl#0}::new).2),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/constraint.rs:20:13: 20:18 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e15,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/constraint.rs:20:13: 20:18 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(22),
                lint_level: Explicit(
                    HirId(DefId(0:422 ~ andrew_fuzz[741f]::library::constraint::{impl#0}::new).22),
                ),
                value: e16,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/constraint.rs:20:13: 20:18 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:422 ~ andrew_fuzz[741f]::library::constraint::{impl#0}::new).4),
                ),
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/constraint.rs:21:13: 21:26 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e18,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/constraint.rs:21:13: 21:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:422 ~ andrew_fuzz[741f]::library::constraint::{impl#0}::new).25),
                ),
                value: e19,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/constraint.rs:21:13: 21:26 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: library::constraint::Constraint,
                    variant_index: 0,
                    substs: [],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e14,
                        },
                        FieldExpr {
                            name: field[1],
                            expr: e17,
                        },
                        FieldExpr {
                            name: field[2],
                            expr: e20,
                        },
                    ],
                    base: None,
                },
            ),
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/constraint.rs:18:9: 22:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:422 ~ andrew_fuzz[741f]::library::constraint::{impl#0}::new).5),
                ),
                value: e21,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/constraint.rs:18:9: 22:10 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/constraint.rs:17:98: 23:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(28),
                lint_level: Explicit(
                    HirId(DefId(0:422 ~ andrew_fuzz[741f]::library::constraint::{impl#0}::new).28),
                ),
                value: e23,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/constraint.rs:17:98: 23:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(28),
                lint_level: Inherited,
                value: e24,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/constraint.rs:17:98: 23:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: std::rc::Rc<dyn core::DataModel>,
                    span: src/library/constraint.rs:17:16: 17:21 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "child",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:422 ~ andrew_fuzz[741f]::library::constraint::{impl#0}::new).2),
                        ),
                        ty: std::rc::Rc<dyn core::DataModel>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::rc::Rc<dyn core::DataModel>,
            ty_span: Some(
                src/library/constraint.rs:17:23: 17:40 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:422 ~ andrew_fuzz[741f]::library::constraint::{impl#0}::new).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
                    span: src/library/constraint.rs:17:42: 17:55 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "constraint_fn",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:422 ~ andrew_fuzz[741f]::library::constraint::{impl#0}::new).4),
                        ),
                        ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            ty_span: Some(
                src/library/constraint.rs:17:57: 17:88 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:422 ~ andrew_fuzz[741f]::library::constraint::{impl#0}::new).3),
            ),
        },
    ],
}

DefId(0:425 ~ andrew_fuzz[741f]::library::constraint::{impl#2}::child):
Thir {
    body_type: Fn(
        ([&library::constraint::Constraint]; c_variadic: false)->std::rc::Rc<dyn core::DataModel>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(8),
            opt_destruction_scope: None,
            span: src/library/constraint.rs:29:42: 31:6 (#0),
            stmts: [],
            expr: Some(
                e9,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:425 ~ andrew_fuzz[741f]::library::constraint::{impl#2}::child).2),
                ),
            },
            ty: &library::constraint::Constraint,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:30:9: 30:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:30:9: 30:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:425 ~ andrew_fuzz[741f]::library::constraint::{impl#2}::child).6),
                ),
                value: e1,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:30:9: 30:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[1],
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:30:9: 30:19 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e3,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:30:9: 30:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:425 ~ andrew_fuzz[741f]::library::constraint::{impl#2}::child).5),
                ),
                value: e4,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:30:9: 30:19 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:30:20: 30:25 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e6,
                args: [
                    e5,
                ],
                from_hir_call: true,
                fn_span: src/library/constraint.rs:30:20: 30:27 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:30:9: 30:27 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e7,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:30:9: 30:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:425 ~ andrew_fuzz[741f]::library::constraint::{impl#2}::child).3),
                ),
                value: e8,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:30:9: 30:27 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:30:9: 30:27 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e10,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:30:9: 30:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:425 ~ andrew_fuzz[741f]::library::constraint::{impl#2}::child).9),
                ),
                value: e11,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:29:42: 31:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(9),
                lint_level: Inherited,
                value: e12,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:29:42: 31:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::constraint::Constraint,
                    span: src/library/constraint.rs:29:14: 29:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:425 ~ andrew_fuzz[741f]::library::constraint::{impl#2}::child).2),
                        ),
                        ty: &library::constraint::Constraint,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::constraint::Constraint,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:425 ~ andrew_fuzz[741f]::library::constraint::{impl#2}::child).1),
            ),
        },
    ],
}

DefId(0:427 ~ andrew_fuzz[741f]::library::constraint::{impl#3}::clone):
Thir {
    body_type: Fn(
        ([&library::constraint::Constraint]; c_variadic: false)->std::boxed::Box<dyn core::DataModel>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(28),
            opt_destruction_scope: None,
            span: src/library/constraint.rs:35:43: 41:6 (#0),
            stmts: [],
            expr: Some(
                e35,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:296 ~ alloc[42dc]::boxed::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:294 ~ alloc[42dc]::boxed::{impl#0}),
                                        self_ty: std::boxed::Box<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::constraint::Constraint) -> std::boxed::Box<library::constraint::Constraint> {std::boxed::Box::<library::constraint::Constraint>::new},
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:36:9: 36:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:427 ~ andrew_fuzz[741f]::library::constraint::{impl#3}::clone).4),
                ),
                value: e0,
            },
            ty: fn(library::constraint::Constraint) -> std::boxed::Box<library::constraint::Constraint> {std::boxed::Box::<library::constraint::Constraint>::new},
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:36:9: 36:17 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:427 ~ andrew_fuzz[741f]::library::constraint::{impl#3}::clone).2),
                ),
            },
            ty: &library::constraint::Constraint,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:37:19: 37:23 (#0),
        },
        Expr {
            kind: Deref {
                arg: e2,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:37:19: 37:23 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:427 ~ andrew_fuzz[741f]::library::constraint::{impl#3}::clone).14),
                ),
                value: e3,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:37:19: 37:23 (#0),
        },
        Expr {
            kind: Field {
                lhs: e4,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:37:19: 37:28 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e5,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:37:19: 37:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:427 ~ andrew_fuzz[741f]::library::constraint::{impl#3}::clone).13),
                ),
                value: e6,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:37:19: 37:28 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> std::rc::Rc<core::DataModelBase> {<std::rc::Rc<core::DataModelBase> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:37:29: 37:34 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> std::rc::Rc<core::DataModelBase> {<std::rc::Rc<core::DataModelBase> as std::clone::Clone>::clone},
                fun: e8,
                args: [
                    e7,
                ],
                from_hir_call: true,
                fn_span: src/library/constraint.rs:37:29: 37:36 (#0),
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:37:19: 37:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:427 ~ andrew_fuzz[741f]::library::constraint::{impl#3}::clone).11),
                ),
                value: e9,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:37:19: 37:36 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:427 ~ andrew_fuzz[741f]::library::constraint::{impl#3}::clone).2),
                ),
            },
            ty: &library::constraint::Constraint,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:38:20: 38:24 (#0),
        },
        Expr {
            kind: Deref {
                arg: e11,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:38:20: 38:24 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(20),
                lint_level: Explicit(
                    HirId(DefId(0:427 ~ andrew_fuzz[741f]::library::constraint::{impl#3}::clone).20),
                ),
                value: e12,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:38:20: 38:24 (#0),
        },
        Expr {
            kind: Field {
                lhs: e13,
                variant_index: 0,
                name: field[1],
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:38:20: 38:30 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e14,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:38:20: 38:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:427 ~ andrew_fuzz[741f]::library::constraint::{impl#3}::clone).19),
                ),
                value: e15,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:38:20: 38:30 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:38:31: 38:36 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e17,
                args: [
                    e16,
                ],
                from_hir_call: true,
                fn_span: src/library/constraint.rs:38:31: 38:38 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:38:20: 38:38 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e18,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:38:20: 38:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:427 ~ andrew_fuzz[741f]::library::constraint::{impl#3}::clone).17),
                ),
                value: e19,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:38:20: 38:38 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:427 ~ andrew_fuzz[741f]::library::constraint::{impl#3}::clone).2),
                ),
            },
            ty: &library::constraint::Constraint,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:39:28: 39:32 (#0),
        },
        Expr {
            kind: Deref {
                arg: e21,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:39:28: 39:32 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(26),
                lint_level: Explicit(
                    HirId(DefId(0:427 ~ andrew_fuzz[741f]::library::constraint::{impl#3}::clone).26),
                ),
                value: e22,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:39:28: 39:32 (#0),
        },
        Expr {
            kind: Field {
                lhs: e23,
                variant_index: 0,
                name: field[2],
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:39:28: 39:46 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e24,
            },
            ty: &std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:39:28: 39:54 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:427 ~ andrew_fuzz[741f]::library::constraint::{impl#3}::clone).25),
                ),
                value: e25,
            },
            ty: &std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:39:28: 39:46 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>) -> std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool> {<std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:39:47: 39:52 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>) -> std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool> {<std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool> as std::clone::Clone>::clone},
                fun: e27,
                args: [
                    e26,
                ],
                from_hir_call: true,
                fn_span: src/library/constraint.rs:39:47: 39:54 (#0),
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:39:28: 39:54 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e28,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:39:28: 39:54 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(23),
                lint_level: Explicit(
                    HirId(DefId(0:427 ~ andrew_fuzz[741f]::library::constraint::{impl#3}::clone).23),
                ),
                value: e29,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:39:28: 39:54 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: library::constraint::Constraint,
                    variant_index: 0,
                    substs: [],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e10,
                        },
                        FieldExpr {
                            name: field[1],
                            expr: e20,
                        },
                        FieldExpr {
                            name: field[2],
                            expr: e30,
                        },
                    ],
                    base: None,
                },
            ),
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:36:18: 40:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:427 ~ andrew_fuzz[741f]::library::constraint::{impl#3}::clone).8),
                ),
                value: e31,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:36:18: 40:10 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::constraint::Constraint) -> std::boxed::Box<library::constraint::Constraint> {std::boxed::Box::<library::constraint::Constraint>::new},
                fun: e1,
                args: [
                    e32,
                ],
                from_hir_call: true,
                fn_span: src/library/constraint.rs:36:9: 40:11 (#0),
            },
            ty: std::boxed::Box<library::constraint::Constraint>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:36:9: 40:11 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e33,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:36:9: 40:11 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:427 ~ andrew_fuzz[741f]::library::constraint::{impl#3}::clone).3),
                ),
                value: e34,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:36:9: 40:11 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:36:9: 40:11 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e36,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:36:9: 40:11 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(29),
                lint_level: Explicit(
                    HirId(DefId(0:427 ~ andrew_fuzz[741f]::library::constraint::{impl#3}::clone).29),
                ),
                value: e37,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:35:43: 41:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(29),
                lint_level: Inherited,
                value: e38,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(29),
            ),
            span: src/library/constraint.rs:35:43: 41:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::constraint::Constraint,
                    span: src/library/constraint.rs:35:14: 35:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:427 ~ andrew_fuzz[741f]::library::constraint::{impl#3}::clone).2),
                        ),
                        ty: &library::constraint::Constraint,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::constraint::Constraint,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:427 ~ andrew_fuzz[741f]::library::constraint::{impl#3}::clone).1),
            ),
        },
    ],
}

DefId(0:429 ~ andrew_fuzz[741f]::library::constraint::{impl#4}::breed):
Thir {
    body_type: Fn(
        ([&library::constraint::Constraint, std::boxed::Box<dyn core::DataModel>]; c_variadic: false)->std::boxed::Box<dyn core::DataModel>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(9),
            opt_destruction_scope: None,
            span: src/library/constraint.rs:45:70: 47:6 (#0),
            stmts: [],
            expr: Some(
                e7,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:429 ~ andrew_fuzz[741f]::library::constraint::{impl#4}::breed).2),
                ),
            },
            ty: &library::constraint::Constraint,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/library/constraint.rs:46:9: 46:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/library/constraint.rs:46:9: 46:21 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e1,
            },
            ty: &library::constraint::Constraint,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/library/constraint.rs:46:9: 46:21 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:429 ~ andrew_fuzz[741f]::library::constraint::{impl#4}::breed).7),
                ),
                value: e2,
            },
            ty: &library::constraint::Constraint,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/library/constraint.rs:46:9: 46:13 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a library::constraint::Constraint) -> std::boxed::Box<(dyn core::DataModel + 'static)> {<library::constraint::Constraint as core::Cloneable>::clone},
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/library/constraint.rs:46:14: 46:19 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a library::constraint::Constraint) -> std::boxed::Box<(dyn core::DataModel + 'static)> {<library::constraint::Constraint as core::Cloneable>::clone},
                fun: e4,
                args: [
                    e3,
                ],
                from_hir_call: true,
                fn_span: src/library/constraint.rs:46:14: 46:21 (#0),
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/library/constraint.rs:46:9: 46:21 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e5,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/library/constraint.rs:46:9: 46:21 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:429 ~ andrew_fuzz[741f]::library::constraint::{impl#4}::breed).5),
                ),
                value: e6,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/library/constraint.rs:46:9: 46:21 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/library/constraint.rs:46:9: 46:21 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e8,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/library/constraint.rs:46:9: 46:21 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:429 ~ andrew_fuzz[741f]::library::constraint::{impl#4}::breed).10),
                ),
                value: e9,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/library/constraint.rs:45:70: 47:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(10),
                lint_level: Inherited,
                value: e10,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/library/constraint.rs:45:70: 47:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::constraint::Constraint,
                    span: src/library/constraint.rs:45:14: 45:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:429 ~ andrew_fuzz[741f]::library::constraint::{impl#4}::breed).2),
                        ),
                        ty: &library::constraint::Constraint,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::constraint::Constraint,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:429 ~ andrew_fuzz[741f]::library::constraint::{impl#4}::breed).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: std::boxed::Box<dyn core::DataModel>,
                    span: src/library/constraint.rs:45:21: 45:26 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "other",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:429 ~ andrew_fuzz[741f]::library::constraint::{impl#4}::breed).4),
                        ),
                        ty: std::boxed::Box<dyn core::DataModel>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::boxed::Box<dyn core::DataModel>,
            ty_span: Some(
                src/library/constraint.rs:45:28: 45:46 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:429 ~ andrew_fuzz[741f]::library::constraint::{impl#4}::breed).3),
            ),
        },
    ],
}

DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse):
Thir {
    body_type: Fn(
        ([&library::constraint::Constraint, &mut core::bit_array::BitArray, &std::rc::Rc<core::context::Context<'_>>]; c_variadic: false)->std::option::Option<std::boxed::Box<dyn core::DataModel>>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(100),
            opt_destruction_scope: None,
            span: src/library/constraint.rs:55:57: 61:14 (#0),
            stmts: [],
            expr: Some(
                e103,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(105),
            opt_destruction_scope: None,
            span: src/library/constraint.rs:61:20: 63:14 (#0),
            stmts: [],
            expr: Some(
                e108,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(106),
            opt_destruction_scope: None,
            span: src/library/constraint.rs:52:66: 64:10 (#0),
            stmts: [
                s0,
                s1,
            ],
            expr: Some(
                e113,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(111),
            opt_destruction_scope: None,
            span: src/library/constraint.rs:64:16: 66:10 (#0),
            stmts: [],
            expr: Some(
                e118,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(112),
            opt_destruction_scope: None,
            span: src/library/constraint.rs:51:96: 67:6 (#0),
            stmts: [],
            expr: Some(
                e123,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).2),
                ),
            },
            ty: &library::constraint::Constraint,
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/library/constraint.rs:52:37: 52:41 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/library/constraint.rs:52:37: 52:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(16),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).16),
                ),
                value: e1,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/library/constraint.rs:52:37: 52:41 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[1],
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/library/constraint.rs:52:37: 52:47 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e3,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/library/constraint.rs:52:37: 52:65 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/library/constraint.rs:52:37: 52:65 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
                fun: e5,
                args: [
                    e4,
                ],
                from_hir_call: false,
                fn_span: src/library/constraint.rs:52:37: 52:65 (#0),
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/library/constraint.rs:52:37: 52:65 (#0),
        },
        Expr {
            kind: Deref {
                arg: e6,
            },
            ty: dyn core::DataModel,
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/library/constraint.rs:52:37: 52:65 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e7,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/library/constraint.rs:52:37: 52:65 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).15),
                ),
                value: e8,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/library/constraint.rs:52:37: 52:47 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).4),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/library/constraint.rs:52:54: 52:59 (#0),
        },
        Expr {
            kind: Deref {
                arg: e10,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/library/constraint.rs:52:54: 52:59 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e11,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/library/constraint.rs:52:54: 52:59 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(18),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).18),
                ),
                value: e12,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/library/constraint.rs:52:54: 52:59 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).6),
                ),
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/library/constraint.rs:52:61: 52:64 (#0),
        },
        Expr {
            kind: Deref {
                arg: e14,
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/library/constraint.rs:52:61: 52:64 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e15,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/library/constraint.rs:52:61: 52:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(20),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).20),
                ),
                value: e16,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/library/constraint.rs:52:61: 52:64 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b, 'c, 'd> fn(&'a dyn core::DataModel, &'b mut core::bit_array::BitArray, &'c std::rc::Rc<core::context::Context<'d>>) -> std::option::Option<std::boxed::Box<(dyn core::DataModel + 'static)>> {<dyn core::DataModel as core::Parser>::parse},
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/library/constraint.rs:52:48: 52:53 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b, 'c, 'd> fn(&'a dyn core::DataModel, &'b mut core::bit_array::BitArray, &'c std::rc::Rc<core::context::Context<'d>>) -> std::option::Option<std::boxed::Box<(dyn core::DataModel + 'static)>> {<dyn core::DataModel as core::Parser>::parse},
                fun: e18,
                args: [
                    e9,
                    e13,
                    e17,
                ],
                from_hir_call: true,
                fn_span: src/library/constraint.rs:52:48: 52:65 (#0),
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/library/constraint.rs:52:37: 52:65 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).13),
                ),
                value: e19,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/library/constraint.rs:52:37: 52:65 (#0),
        },
        Expr {
            kind: Let {
                expr: e20,
                pat: Pat {
                    ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
                    span: src/library/constraint.rs:52:16: 52:34 (#0),
                    kind: Variant {
                        adt_def: std::option::Option,
                        substs: [
                            std::boxed::Box<dyn core::DataModel>,
                        ],
                        variant_index: 1,
                        subpatterns: [
                            FieldPat {
                                field: field[0],
                                pattern: Pat {
                                    ty: std::boxed::Box<dyn core::DataModel>,
                                    span: src/library/constraint.rs:52:21: 52:33 (#0),
                                    kind: Binding {
                                        mutability: Not,
                                        name: "parsed_child",
                                        mode: ByValue,
                                        var: LocalVarId(
                                            HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).11),
                                        ),
                                        ty: std::boxed::Box<dyn core::DataModel>,
                                        subpattern: None,
                                        is_primary: true,
                                    },
                                },
                            },
                        ],
                    },
                },
            },
            ty: bool,
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/library/constraint.rs:52:12: 52:65 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).8),
                ),
                value: e21,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/library/constraint.rs:52:12: 52:65 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(2:2508 ~ core[102f]::convert::From::from),
                            UserSubsts {
                                substs: [
                                    std::rc::Rc<^0>,
                                    ^1,
                                ],
                                user_self_ty: None,
                            },
                        ),
                    },
                ),
            },
            ty: fn(std::boxed::Box<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::convert::From<std::boxed::Box<dyn core::DataModel>>>::from},
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/constraint.rs:53:51: 53:59 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(30),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).30),
                ),
                value: e23,
            },
            ty: fn(std::boxed::Box<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::convert::From<std::boxed::Box<dyn core::DataModel>>>::from},
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/constraint.rs:53:51: 53:59 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).11),
                ),
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/constraint.rs:53:60: 53:72 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(34),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).34),
                ),
                value: e25,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/constraint.rs:53:60: 53:72 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::boxed::Box<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::convert::From<std::boxed::Box<dyn core::DataModel>>>::from},
                fun: e24,
                args: [
                    e26,
                ],
                from_hir_call: true,
                fn_span: src/library/constraint.rs:53:51: 53:73 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/constraint.rs:53:51: 53:73 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(29),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).29),
                ),
                value: e27,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/constraint.rs:53:51: 53:73 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(0:98 ~ andrew_fuzz[741f]::core::context::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon(0, None) }),
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(0:96 ~ andrew_fuzz[741f]::core::context::{impl#0}),
                                        self_ty: core::context::Context<'_>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(std::rc::Weak<core::context::Context<'_>>, core::context::Children<'_>) -> core::context::Context<'_> {core::context::Context::<'_>::new},
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/constraint.rs:54:29: 54:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(40),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).40),
                ),
                value: e29,
            },
            ty: fn(std::rc::Weak<core::context::Context<'_>>, core::context::Children<'_>) -> core::context::Context<'_> {core::context::Context::<'_>::new},
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/constraint.rs:54:29: 54:41 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4783 ~ alloc[42dc]::rc::{impl#11}::downgrade),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4778 ~ alloc[42dc]::rc::{impl#11}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> std::rc::Weak<core::context::Context<'_>> {std::rc::Rc::<core::context::Context<'_>>::downgrade},
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/constraint.rs:54:42: 54:55 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(46),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).46),
                ),
                value: e31,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> std::rc::Weak<core::context::Context<'_>> {std::rc::Rc::<core::context::Context<'_>>::downgrade},
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/constraint.rs:54:42: 54:55 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).6),
                ),
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/constraint.rs:54:56: 54:59 (#0),
        },
        Expr {
            kind: Deref {
                arg: e33,
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/constraint.rs:54:56: 54:59 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e34,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/constraint.rs:54:56: 54:59 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(50),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).50),
                ),
                value: e35,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/constraint.rs:54:56: 54:59 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> std::rc::Weak<core::context::Context<'_>> {std::rc::Rc::<core::context::Context<'_>>::downgrade},
                fun: e32,
                args: [
                    e36,
                ],
                from_hir_call: true,
                fn_span: src/library/constraint.rs:54:42: 54:60 (#0),
            },
            ty: std::rc::Weak<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/constraint.rs:54:42: 54:60 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(45),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).45),
                ),
                value: e37,
            },
            ty: std::rc::Weak<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/constraint.rs:54:42: 54:60 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).37),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/constraint.rs:54:78: 54:90 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e39,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/constraint.rs:54:78: 54:98 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(58),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).58),
                ),
                value: e40,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/constraint.rs:54:78: 54:90 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/constraint.rs:54:91: 54:96 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e42,
                args: [
                    e41,
                ],
                from_hir_call: true,
                fn_span: src/library/constraint.rs:54:91: 54:98 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/constraint.rs:54:78: 54:98 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e43,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/constraint.rs:54:78: 54:98 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(56),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).56),
                ),
                value: e44,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/constraint.rs:54:78: 54:98 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: core::context::Children,
                    variant_index: 1,
                    substs: [
                        ReErased,
                    ],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e45,
                        },
                    ],
                    base: None,
                },
            ),
            ty: core::context::Children<'_>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/constraint.rs:54:62: 54:99 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(52),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).52),
                ),
                value: e46,
            },
            ty: core::context::Children<'_>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/constraint.rs:54:62: 54:99 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::rc::Weak<core::context::Context<'_>>, core::context::Children<'_>) -> core::context::Context<'_> {core::context::Context::<'_>::new},
                fun: e30,
                args: [
                    e38,
                    e47,
                ],
                from_hir_call: true,
                fn_span: src/library/constraint.rs:54:29: 54:100 (#0),
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/constraint.rs:54:29: 54:100 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(39),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).39),
                ),
                value: e48,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/library/constraint.rs:54:29: 54:100 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(core::context::Context<'_>) -> std::rc::Rc<core::context::Context<'_>> {std::rc::Rc::<core::context::Context<'_>>::new},
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/library/constraint.rs:55:37: 55:44 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(68),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).68),
                ),
                value: e50,
            },
            ty: fn(core::context::Context<'_>) -> std::rc::Rc<core::context::Context<'_>> {std::rc::Rc::<core::context::Context<'_>>::new},
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/library/constraint.rs:55:37: 55:44 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).61),
                ),
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/library/constraint.rs:55:45: 55:54 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(72),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).72),
                ),
                value: e52,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/library/constraint.rs:55:45: 55:54 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(core::context::Context<'_>) -> std::rc::Rc<core::context::Context<'_>> {std::rc::Rc::<core::context::Context<'_>>::new},
                fun: e51,
                args: [
                    e53,
                ],
                from_hir_call: true,
                fn_span: src/library/constraint.rs:55:37: 55:55 (#0),
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/library/constraint.rs:55:37: 55:55 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(67),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).67),
                ),
                value: e54,
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/library/constraint.rs:55:37: 55:55 (#0),
        },
        Expr {
            kind: Tuple {
                fields: [
                    e55,
                ],
            },
            ty: (std::rc::Rc<core::context::Context<'_>>,),
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/library/constraint.rs:55:16: 55:56 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> extern "rust-call" fn(&'a dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool, (std::rc::Rc<core::context::Context<'_>>,)) -> <dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool as std::ops::FnOnce<(std::rc::Rc<core::context::Context<'_>>,)>>::Output {<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool as std::ops::Fn<(std::rc::Rc<core::context::Context<'_>>,)>>::call},
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/library/constraint.rs:55:16: 55:36 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).2),
                ),
            },
            ty: &library::constraint::Constraint,
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/library/constraint.rs:55:17: 55:21 (#0),
        },
        Expr {
            kind: Deref {
                arg: e58,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/library/constraint.rs:55:17: 55:21 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(65),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).65),
                ),
                value: e59,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/library/constraint.rs:55:17: 55:21 (#0),
        },
        Expr {
            kind: Field {
                lhs: e60,
                variant_index: 0,
                name: field[2],
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/library/constraint.rs:55:16: 55:36 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e61,
            },
            ty: &std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/library/constraint.rs:55:16: 55:36 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>) -> &'a <std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool> as std::ops::Deref>::Target {<std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/library/constraint.rs:55:16: 55:36 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>) -> &'a <std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool> as std::ops::Deref>::Target {<std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool> as std::ops::Deref>::deref},
                fun: e63,
                args: [
                    e62,
                ],
                from_hir_call: false,
                fn_span: src/library/constraint.rs:55:16: 55:36 (#0),
            },
            ty: &dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool,
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/library/constraint.rs:55:16: 55:36 (#0),
        },
        Expr {
            kind: Deref {
                arg: e64,
            },
            ty: dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool,
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/library/constraint.rs:55:16: 55:36 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e65,
            },
            ty: &dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool,
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/library/constraint.rs:55:16: 55:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(64),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).64),
                ),
                value: e66,
            },
            ty: &dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool,
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/library/constraint.rs:55:16: 55:36 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> extern "rust-call" fn(&'a dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool, (std::rc::Rc<core::context::Context<'_>>,)) -> <dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool as std::ops::FnOnce<(std::rc::Rc<core::context::Context<'_>>,)>>::Output {<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool as std::ops::Fn<(std::rc::Rc<core::context::Context<'_>>,)>>::call},
                fun: e57,
                args: [
                    e67,
                    e56,
                ],
                from_hir_call: true,
                fn_span: src/library/constraint.rs:55:16: 55:56 (#0),
            },
            ty: bool,
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/library/constraint.rs:55:16: 55:56 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(63),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).63),
                ),
                value: e68,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/library/constraint.rs:55:16: 55:56 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(63),
                lint_level: Inherited,
                value: e69,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(63),
            ),
            span: src/library/constraint.rs:55:16: 55:56 (#0),
        },
        Expr {
            kind: Use {
                source: e70,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(107),
            ),
            span: src/library/constraint.rs:55:16: 55:56 (#155),
        },
        Expr {
            kind: Scope {
                region_scope: Node(74),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).74),
                ),
                value: e71,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(107),
            ),
            span: src/library/constraint.rs:55:16: 55:56 (#155),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:296 ~ alloc[42dc]::boxed::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:294 ~ alloc[42dc]::boxed::{impl#0}),
                                        self_ty: std::boxed::Box<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::constraint::Constraint) -> std::boxed::Box<library::constraint::Constraint> {std::boxed::Box::<library::constraint::Constraint>::new},
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:56:22: 56:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(79),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).79),
                ),
                value: e73,
            },
            ty: fn(library::constraint::Constraint) -> std::boxed::Box<library::constraint::Constraint> {std::boxed::Box::<library::constraint::Constraint>::new},
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:56:22: 56:30 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).2),
                ),
            },
            ty: &library::constraint::Constraint,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:57:27: 57:31 (#0),
        },
        Expr {
            kind: Deref {
                arg: e75,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:57:27: 57:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(89),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).89),
                ),
                value: e76,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:57:27: 57:31 (#0),
        },
        Expr {
            kind: Field {
                lhs: e77,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:57:27: 57:36 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e78,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:57:27: 57:44 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(88),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).88),
                ),
                value: e79,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:57:27: 57:36 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> std::rc::Rc<core::DataModelBase> {<std::rc::Rc<core::DataModelBase> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:57:37: 57:42 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> std::rc::Rc<core::DataModelBase> {<std::rc::Rc<core::DataModelBase> as std::clone::Clone>::clone},
                fun: e81,
                args: [
                    e80,
                ],
                from_hir_call: true,
                fn_span: src/library/constraint.rs:57:37: 57:44 (#0),
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:57:27: 57:44 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(86),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).86),
                ),
                value: e82,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:57:27: 57:44 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).37),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:58:28: 58:40 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e84,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:58:28: 58:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(92),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).92),
                ),
                value: e85,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:58:28: 58:40 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).2),
                ),
            },
            ty: &library::constraint::Constraint,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:59:36: 59:40 (#0),
        },
        Expr {
            kind: Deref {
                arg: e87,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:59:36: 59:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(98),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).98),
                ),
                value: e88,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:59:36: 59:40 (#0),
        },
        Expr {
            kind: Field {
                lhs: e89,
                variant_index: 0,
                name: field[2],
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:59:36: 59:54 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e90,
            },
            ty: &std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:59:36: 59:62 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(97),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).97),
                ),
                value: e91,
            },
            ty: &std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:59:36: 59:54 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>) -> std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool> {<std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:59:55: 59:60 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>) -> std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool> {<std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool> as std::clone::Clone>::clone},
                fun: e93,
                args: [
                    e92,
                ],
                from_hir_call: true,
                fn_span: src/library/constraint.rs:59:55: 59:62 (#0),
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:59:36: 59:62 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e94,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:59:36: 59:62 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(95),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).95),
                ),
                value: e95,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:59:36: 59:62 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: library::constraint::Constraint,
                    variant_index: 0,
                    substs: [],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e83,
                        },
                        FieldExpr {
                            name: field[1],
                            expr: e86,
                        },
                        FieldExpr {
                            name: field[2],
                            expr: e96,
                        },
                    ],
                    base: None,
                },
            ),
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:56:31: 60:18 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(83),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).83),
                ),
                value: e97,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:56:31: 60:18 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::constraint::Constraint) -> std::boxed::Box<library::constraint::Constraint> {std::boxed::Box::<library::constraint::Constraint>::new},
                fun: e74,
                args: [
                    e98,
                ],
                from_hir_call: true,
                fn_span: src/library/constraint.rs:56:22: 60:19 (#0),
            },
            ty: std::boxed::Box<library::constraint::Constraint>,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:56:22: 60:19 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e99,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:56:22: 60:19 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(78),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).78),
                ),
                value: e100,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:56:22: 60:19 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: std::option::Option,
                    variant_index: 1,
                    substs: [
                        std::boxed::Box<dyn core::DataModel>,
                    ],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e101,
                        },
                    ],
                    base: None,
                },
            ),
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:56:17: 60:20 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(75),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).75),
                ),
                value: e102,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:56:17: 60:20 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:55:57: 61:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(101),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).101),
                ),
                value: e104,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:55:57: 61:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(101),
                lint_level: Inherited,
                value: e105,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(101),
            ),
            span: src/library/constraint.rs:55:57: 61:14 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: std::option::Option,
                    variant_index: 0,
                    substs: [
                        std::boxed::Box<dyn core::DataModel>,
                    ],
                    user_ty: None,
                    fields: [],
                    base: None,
                },
            ),
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(102),
            ),
            span: src/library/constraint.rs:62:17: 62:21 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(103),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).103),
                ),
                value: e107,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(102),
            ),
            span: src/library/constraint.rs:62:17: 62:21 (#0),
        },
        Expr {
            kind: Block {
                block: b1,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(102),
            ),
            span: src/library/constraint.rs:61:20: 63:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(102),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).102),
                ),
                value: e109,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(102),
            ),
            span: src/library/constraint.rs:61:20: 63:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(102),
                lint_level: Inherited,
                value: e110,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(102),
            ),
            span: src/library/constraint.rs:61:20: 63:14 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(101),
                cond: e72,
                then: e106,
                else_opt: Some(
                    e111,
                ),
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(107),
            ),
            span: src/library/constraint.rs:55:13: 63:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(62),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).62),
                ),
                value: e112,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(107),
            ),
            span: src/library/constraint.rs:55:13: 63:14 (#0),
        },
        Expr {
            kind: Block {
                block: b2,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(107),
            ),
            span: src/library/constraint.rs:52:66: 64:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(107),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).107),
                ),
                value: e114,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(107),
            ),
            span: src/library/constraint.rs:52:66: 64:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(107),
                lint_level: Inherited,
                value: e115,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(107),
            ),
            span: src/library/constraint.rs:52:66: 64:10 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: std::option::Option,
                    variant_index: 0,
                    substs: [
                        std::boxed::Box<dyn core::DataModel>,
                    ],
                    user_ty: None,
                    fields: [],
                    base: None,
                },
            ),
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(108),
            ),
            span: src/library/constraint.rs:65:13: 65:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(109),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).109),
                ),
                value: e117,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(108),
            ),
            span: src/library/constraint.rs:65:13: 65:17 (#0),
        },
        Expr {
            kind: Block {
                block: b3,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(108),
            ),
            span: src/library/constraint.rs:64:16: 66:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(108),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).108),
                ),
                value: e119,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(108),
            ),
            span: src/library/constraint.rs:64:16: 66:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(108),
                lint_level: Inherited,
                value: e120,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(108),
            ),
            span: src/library/constraint.rs:64:16: 66:10 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(107),
                cond: e22,
                then: e116,
                else_opt: Some(
                    e121,
                ),
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/library/constraint.rs:52:9: 66:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).7),
                ),
                value: e122,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/library/constraint.rs:52:9: 66:10 (#0),
        },
        Expr {
            kind: Block {
                block: b4,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/library/constraint.rs:51:96: 67:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(113),
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).113),
                ),
                value: e124,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/library/constraint.rs:51:96: 67:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(113),
                lint_level: Inherited,
                value: e125,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(113),
            ),
            span: src/library/constraint.rs:51:96: 67:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 106, first_statement_index: 0},
                init_scope: Node(22),
                pattern: Pat {
                    ty: std::rc::Rc<dyn core::DataModel>,
                    span: src/library/constraint.rs:53:17: 53:29 (#0),
                    kind: AscribeUserType {
                        ascription: Ascription {
                            annotation: CanonicalUserTypeAnnotation {
                                user_ty: Canonical {
                                    max_universe: U0,
                                    variables: [
                                        CanonicalVarInfo {
                                            kind: Region(
                                                U0,
                                            ),
                                        },
                                    ],
                                    value: Ty(
                                        std::rc::Rc<dyn core::DataModel>,
                                    ),
                                },
                                span: src/library/constraint.rs:53:31: 53:48 (#0),
                                inferred_ty: std::rc::Rc<dyn core::DataModel>,
                            },
                            variance: +,
                        },
                        subpattern: Pat {
                            ty: std::rc::Rc<dyn core::DataModel>,
                            span: src/library/constraint.rs:53:17: 53:29 (#0),
                            kind: Binding {
                                mutability: Not,
                                name: "parsed_child",
                                mode: ByValue,
                                var: LocalVarId(
                                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).37),
                                ),
                                ty: std::rc::Rc<dyn core::DataModel>,
                                subpattern: None,
                                is_primary: true,
                            },
                        },
                    },
                },
                initializer: Some(
                    e28,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).36),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(22),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 106, first_statement_index: 1},
                init_scope: Node(38),
                pattern: Pat {
                    ty: core::context::Context<'_>,
                    span: src/library/constraint.rs:54:17: 54:26 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "child_ctx",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).61),
                        ),
                        ty: core::context::Context<'_>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e49,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).60),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(38),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::constraint::Constraint,
                    span: src/library/constraint.rs:51:14: 51:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).2),
                        ),
                        ty: &library::constraint::Constraint,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::constraint::Constraint,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &mut core::bit_array::BitArray,
                    span: src/library/constraint.rs:51:21: 51:26 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "input",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).4),
                        ),
                        ty: &mut core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut core::bit_array::BitArray,
            ty_span: Some(
                src/library/constraint.rs:51:28: 51:41 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).3),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &std::rc::Rc<core::context::Context<'_>>,
                    span: src/library/constraint.rs:51:43: 51:46 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "ctx",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).6),
                        ),
                        ty: &std::rc::Rc<core::context::Context<'_>>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &std::rc::Rc<core::context::Context<'_>>,
            ty_span: Some(
                src/library/constraint.rs:51:48: 51:64 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:431 ~ andrew_fuzz[741f]::library::constraint::{impl#5}::parse).5),
            ),
        },
    ],
}

DefId(0:433 ~ andrew_fuzz[741f]::library::constraint::{impl#6}::debug):
Thir {
    body_type: Fn(
        ([&library::constraint::Constraint]; c_variadic: false)->std::string::String,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(27),
            opt_destruction_scope: None,
            span: src/library/constraint.rs:71:31: 75:6 (#0),
            stmts: [
                s0,
                s1,
            ],
            expr: Some(
                e27,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn() -> std::string::String {std::string::String::new},
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/constraint.rs:72:26: 72:37 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:433 ~ andrew_fuzz[741f]::library::constraint::{impl#6}::debug).5),
                ),
                value: e0,
            },
            ty: fn() -> std::string::String {std::string::String::new},
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/constraint.rs:72:26: 72:37 (#0),
        },
        Expr {
            kind: Call {
                ty: fn() -> std::string::String {std::string::String::new},
                fun: e1,
                args: [],
                from_hir_call: true,
                fn_span: src/library/constraint.rs:72:26: 72:39 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/constraint.rs:72:26: 72:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:433 ~ andrew_fuzz[741f]::library::constraint::{impl#6}::debug).4),
                ),
                value: e2,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/constraint.rs:72:26: 72:39 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:433 ~ andrew_fuzz[741f]::library::constraint::{impl#6}::debug).10),
                ),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(24),
            ),
            span: src/library/constraint.rs:73:16: 73:22 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e4,
            },
            ty: &mut std::string::String,
            temp_lifetime: Some(
                Node(24),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:9: 520:55 (#80),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:433 ~ andrew_fuzz[741f]::library::constraint::{impl#6}::debug).15),
                ),
                value: e5,
            },
            ty: &mut std::string::String,
            temp_lifetime: Some(
                Node(24),
            ),
            span: src/library/constraint.rs:73:16: 73:22 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(2:8999 ~ core[102f]::fmt::{impl#4}::new_const),
                            UserSubsts {
                                substs: [
                                    ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon(0, None) }),
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(2:8997 ~ core[102f]::fmt::{impl#4}),
                                        self_ty: std::fmt::Arguments<'_>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(&[&'static str]) -> std::fmt::Arguments<'_> {std::fmt::Arguments::<'_>::new_const},
            temp_lifetime: Some(
                Node(24),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#81),
        },
        Expr {
            kind: Scope {
                region_scope: Node(23),
                lint_level: Explicit(
                    HirId(DefId(0:433 ~ andrew_fuzz[741f]::library::constraint::{impl#6}::debug).23),
                ),
                value: e7,
            },
            ty: fn(&[&'static str]) -> std::fmt::Arguments<'_> {std::fmt::Arguments::<'_>::new_const},
            temp_lifetime: Some(
                Node(24),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#81),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "Constraint",
                        Cooked,
                    ),
                    span: src/library/constraint.rs:73:24: 73:36 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(24),
            ),
            span: src/library/constraint.rs:73:24: 73:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(18),
                lint_level: Explicit(
                    HirId(DefId(0:433 ~ andrew_fuzz[741f]::library::constraint::{impl#6}::debug).18),
                ),
                value: e9,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(24),
            ),
            span: src/library/constraint.rs:73:24: 73:36 (#0),
        },
        Expr {
            kind: Array {
                fields: [
                    e10,
                ],
            },
            ty: [&str; 1],
            temp_lifetime: Some(
                Node(24),
            ),
            span: src/library/constraint.rs:73:24: 73:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:433 ~ andrew_fuzz[741f]::library::constraint::{impl#6}::debug).19),
                ),
                value: e11,
            },
            ty: [&str; 1],
            temp_lifetime: Some(
                Node(24),
            ),
            span: src/library/constraint.rs:73:24: 73:36 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e12,
            },
            ty: &[&str; 1],
            temp_lifetime: Some(
                Node(24),
            ),
            span: src/library/constraint.rs:73:24: 73:36 (#0),
        },
        Expr {
            kind: Deref {
                arg: e13,
            },
            ty: [&str; 1],
            temp_lifetime: Some(
                Node(24),
            ),
            span: src/library/constraint.rs:73:24: 73:36 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e14,
            },
            ty: &[&str; 1],
            temp_lifetime: Some(
                Node(24),
            ),
            span: src/library/constraint.rs:73:24: 73:36 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e15,
            },
            ty: &[&str],
            temp_lifetime: Some(
                Node(24),
            ),
            span: src/library/constraint.rs:73:24: 73:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(20),
                lint_level: Explicit(
                    HirId(DefId(0:433 ~ andrew_fuzz[741f]::library::constraint::{impl#6}::debug).20),
                ),
                value: e16,
            },
            ty: &[&str],
            temp_lifetime: Some(
                Node(24),
            ),
            span: src/library/constraint.rs:73:24: 73:36 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(&[&'static str]) -> std::fmt::Arguments<'_> {std::fmt::Arguments::<'_>::new_const},
                fun: e8,
                args: [
                    e17,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#81),
            },
            ty: std::fmt::Arguments<'_>,
            temp_lifetime: Some(
                Node(24),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#81),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:433 ~ andrew_fuzz[741f]::library::constraint::{impl#6}::debug).17),
                ),
                value: e18,
            },
            ty: std::fmt::Arguments<'_>,
            temp_lifetime: Some(
                Node(24),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#81),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b> fn(&'a mut std::string::String, std::fmt::Arguments<'b>) -> std::result::Result<(), std::fmt::Error> {<std::string::String as std::fmt::Write>::write_fmt},
            temp_lifetime: Some(
                Node(24),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:14: 520:23 (#80),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b> fn(&'a mut std::string::String, std::fmt::Arguments<'b>) -> std::result::Result<(), std::fmt::Error> {<std::string::String as std::fmt::Write>::write_fmt},
                fun: e20,
                args: [
                    e6,
                    e19,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:14: 520:55 (#80),
            },
            ty: std::result::Result<(), std::fmt::Error>,
            temp_lifetime: Some(
                Node(24),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:9: 520:55 (#80),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:433 ~ andrew_fuzz[741f]::library::constraint::{impl#6}::debug).13),
                ),
                value: e21,
            },
            ty: std::result::Result<(), std::fmt::Error>,
            temp_lifetime: Some(
                Node(24),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:9: 520:55 (#80),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::result::Result<(), std::fmt::Error>) {std::result::Result::<(), std::fmt::Error>::unwrap},
            temp_lifetime: Some(
                Node(24),
            ),
            span: src/library/constraint.rs:73:38: 73:44 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::result::Result<(), std::fmt::Error>) {std::result::Result::<(), std::fmt::Error>::unwrap},
                fun: e23,
                args: [
                    e22,
                ],
                from_hir_call: true,
                fn_span: src/library/constraint.rs:73:38: 73:46 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(24),
            ),
            span: src/library/constraint.rs:73:9: 73:46 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:433 ~ andrew_fuzz[741f]::library::constraint::{impl#6}::debug).11),
                ),
                value: e24,
            },
            ty: (),
            temp_lifetime: Some(
                Node(24),
            ),
            span: src/library/constraint.rs:73:9: 73:46 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:433 ~ andrew_fuzz[741f]::library::constraint::{impl#6}::debug).10),
                ),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/constraint.rs:74:9: 74:15 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:433 ~ andrew_fuzz[741f]::library::constraint::{impl#6}::debug).25),
                ),
                value: e26,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/constraint.rs:74:9: 74:15 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/constraint.rs:71:31: 75:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(28),
                lint_level: Explicit(
                    HirId(DefId(0:433 ~ andrew_fuzz[741f]::library::constraint::{impl#6}::debug).28),
                ),
                value: e28,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/constraint.rs:71:31: 75:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(28),
                lint_level: Inherited,
                value: e29,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(28),
            ),
            span: src/library/constraint.rs:71:31: 75:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 27, first_statement_index: 0},
                init_scope: Node(3),
                pattern: Pat {
                    ty: std::string::String,
                    span: src/library/constraint.rs:72:13: 72:23 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "result",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:433 ~ andrew_fuzz[741f]::library::constraint::{impl#6}::debug).10),
                        ),
                        ty: std::string::String,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e3,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:433 ~ andrew_fuzz[741f]::library::constraint::{impl#6}::debug).9),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(3),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(24),
                expr: e25,
            },
            opt_destruction_scope: Some(
                Destruction(24),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::constraint::Constraint,
                    span: src/library/constraint.rs:71:14: 71:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:433 ~ andrew_fuzz[741f]::library::constraint::{impl#6}::debug).2),
                        ),
                        ty: &library::constraint::Constraint,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::constraint::Constraint,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:433 ~ andrew_fuzz[741f]::library::constraint::{impl#6}::debug).1),
            ),
        },
    ],
}

DefId(0:435 ~ andrew_fuzz[741f]::library::constraint::{impl#7}::fuzz):
Thir {
    body_type: Fn(
        ([&library::constraint::Constraint]; c_variadic: false)->std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(8),
            opt_destruction_scope: None,
            span: src/library/constraint.rs:79:46: 81:6 (#0),
            stmts: [],
            expr: Some(
                e12,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:435 ~ andrew_fuzz[741f]::library::constraint::{impl#7}::fuzz).2),
                ),
            },
            ty: &library::constraint::Constraint,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:80:9: 80:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:80:9: 80:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:435 ~ andrew_fuzz[741f]::library::constraint::{impl#7}::fuzz).6),
                ),
                value: e1,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:80:9: 80:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[1],
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:80:9: 80:19 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e3,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:80:9: 80:26 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:80:9: 80:26 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
                fun: e5,
                args: [
                    e4,
                ],
                from_hir_call: false,
                fn_span: src/library/constraint.rs:80:9: 80:26 (#0),
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:80:9: 80:26 (#0),
        },
        Expr {
            kind: Deref {
                arg: e6,
            },
            ty: dyn core::DataModel,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:80:9: 80:26 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e7,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:80:9: 80:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:435 ~ andrew_fuzz[741f]::library::constraint::{impl#7}::fuzz).5),
                ),
                value: e8,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:80:9: 80:19 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a dyn core::DataModel) -> std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>> {<dyn core::DataModel as core::Fuzzer>::fuzz},
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:80:20: 80:24 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a dyn core::DataModel) -> std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>> {<dyn core::DataModel as core::Fuzzer>::fuzz},
                fun: e10,
                args: [
                    e9,
                ],
                from_hir_call: true,
                fn_span: src/library/constraint.rs:80:20: 80:26 (#0),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:80:9: 80:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:435 ~ andrew_fuzz[741f]::library::constraint::{impl#7}::fuzz).3),
                ),
                value: e11,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:80:9: 80:26 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:79:46: 81:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:435 ~ andrew_fuzz[741f]::library::constraint::{impl#7}::fuzz).9),
                ),
                value: e13,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:79:46: 81:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(9),
                lint_level: Inherited,
                value: e14,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:79:46: 81:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::constraint::Constraint,
                    span: src/library/constraint.rs:79:13: 79:18 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:435 ~ andrew_fuzz[741f]::library::constraint::{impl#7}::fuzz).2),
                        ),
                        ty: &library::constraint::Constraint,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::constraint::Constraint,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:435 ~ andrew_fuzz[741f]::library::constraint::{impl#7}::fuzz).1),
            ),
        },
    ],
}

DefId(0:437 ~ andrew_fuzz[741f]::library::constraint::{impl#8}::name):
Thir {
    body_type: Fn(
        ([&library::constraint::Constraint]; c_variadic: false)->&std::string::String,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(8),
            opt_destruction_scope: None,
            span: src/library/constraint.rs:85:31: 87:6 (#0),
            stmts: [],
            expr: Some(
                e14,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:437 ~ andrew_fuzz[741f]::library::constraint::{impl#8}::name).2),
                ),
            },
            ty: &library::constraint::Constraint,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:86:9: 86:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:86:9: 86:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:437 ~ andrew_fuzz[741f]::library::constraint::{impl#8}::name).6),
                ),
                value: e1,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:86:9: 86:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:86:9: 86:18 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e3,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:86:9: 86:25 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> &'a <std::rc::Rc<core::DataModelBase> as std::ops::Deref>::Target {<std::rc::Rc<core::DataModelBase> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:86:9: 86:25 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> &'a <std::rc::Rc<core::DataModelBase> as std::ops::Deref>::Target {<std::rc::Rc<core::DataModelBase> as std::ops::Deref>::deref},
                fun: e5,
                args: [
                    e4,
                ],
                from_hir_call: false,
                fn_span: src/library/constraint.rs:86:9: 86:25 (#0),
            },
            ty: &core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:86:9: 86:25 (#0),
        },
        Expr {
            kind: Deref {
                arg: e6,
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:86:9: 86:25 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e7,
            },
            ty: &core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:86:9: 86:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:437 ~ andrew_fuzz[741f]::library::constraint::{impl#8}::name).5),
                ),
                value: e8,
            },
            ty: &core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:86:9: 86:18 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::DataModelBase) -> &'a std::string::String {core::DataModelBase::name},
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:86:19: 86:23 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::DataModelBase) -> &'a std::string::String {core::DataModelBase::name},
                fun: e10,
                args: [
                    e9,
                ],
                from_hir_call: true,
                fn_span: src/library/constraint.rs:86:19: 86:25 (#0),
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:86:9: 86:25 (#0),
        },
        Expr {
            kind: Deref {
                arg: e11,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:86:9: 86:25 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e12,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:86:9: 86:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:437 ~ andrew_fuzz[741f]::library::constraint::{impl#8}::name).3),
                ),
                value: e13,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:86:9: 86:25 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:85:31: 87:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:437 ~ andrew_fuzz[741f]::library::constraint::{impl#8}::name).9),
                ),
                value: e15,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:85:31: 87:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(9),
                lint_level: Inherited,
                value: e16,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/constraint.rs:85:31: 87:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::constraint::Constraint,
                    span: src/library/constraint.rs:85:13: 85:18 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:437 ~ andrew_fuzz[741f]::library::constraint::{impl#8}::name).2),
                        ),
                        ty: &library::constraint::Constraint,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::constraint::Constraint,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:437 ~ andrew_fuzz[741f]::library::constraint::{impl#8}::name).1),
            ),
        },
    ],
}

DefId(0:438 ~ andrew_fuzz[741f]::library::constraint::{impl#8}::set_name):
Thir {
    body_type: Fn(
        ([&mut library::constraint::Constraint, &str]; c_variadic: false)->(),
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(24),
            opt_destruction_scope: None,
            span: src/library/constraint.rs:88:40: 90:6 (#0),
            stmts: [
                s0,
            ],
            expr: None,
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:438 ~ andrew_fuzz[741f]::library::constraint::{impl#8}::set_name).2),
                ),
            },
            ty: &mut library::constraint::Constraint,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/constraint.rs:89:9: 89:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/constraint.rs:89:9: 89:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:438 ~ andrew_fuzz[741f]::library::constraint::{impl#8}::set_name).7),
                ),
                value: e1,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/constraint.rs:89:9: 89:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/constraint.rs:89:9: 89:18 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:438 ~ andrew_fuzz[741f]::library::constraint::{impl#8}::set_name).6),
                ),
                value: e3,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/constraint.rs:89:9: 89:18 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/constraint.rs:89:21: 89:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:438 ~ andrew_fuzz[741f]::library::constraint::{impl#8}::set_name).10),
                ),
                value: e5,
            },
            ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/constraint.rs:89:21: 89:28 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/constraint.rs:89:29: 89:47 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:438 ~ andrew_fuzz[741f]::library::constraint::{impl#8}::set_name).15),
                ),
                value: e7,
            },
            ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/constraint.rs:89:29: 89:47 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:438 ~ andrew_fuzz[741f]::library::constraint::{impl#8}::set_name).4),
                ),
            },
            ty: &str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/constraint.rs:89:48: 89:52 (#0),
        },
        Expr {
            kind: Deref {
                arg: e9,
            },
            ty: str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/constraint.rs:89:48: 89:64 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e10,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/constraint.rs:89:48: 89:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(21),
                lint_level: Explicit(
                    HirId(DefId(0:438 ~ andrew_fuzz[741f]::library::constraint::{impl#8}::set_name).21),
                ),
                value: e11,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/constraint.rs:89:48: 89:52 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/constraint.rs:89:53: 89:62 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
                fun: e13,
                args: [
                    e12,
                ],
                from_hir_call: true,
                fn_span: src/library/constraint.rs:89:53: 89:64 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/constraint.rs:89:48: 89:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:438 ~ andrew_fuzz[741f]::library::constraint::{impl#8}::set_name).19),
                ),
                value: e14,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/constraint.rs:89:48: 89:64 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
                fun: e8,
                args: [
                    e15,
                ],
                from_hir_call: true,
                fn_span: src/library/constraint.rs:89:29: 89:65 (#0),
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/constraint.rs:89:29: 89:65 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:438 ~ andrew_fuzz[741f]::library::constraint::{impl#8}::set_name).14),
                ),
                value: e16,
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/constraint.rs:89:29: 89:65 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
                fun: e6,
                args: [
                    e17,
                ],
                from_hir_call: true,
                fn_span: src/library/constraint.rs:89:21: 89:66 (#0),
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/constraint.rs:89:21: 89:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:438 ~ andrew_fuzz[741f]::library::constraint::{impl#8}::set_name).9),
                ),
                value: e18,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/constraint.rs:89:21: 89:66 (#0),
        },
        Expr {
            kind: Assign {
                lhs: e4,
                rhs: e19,
            },
            ty: (),
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/constraint.rs:89:9: 89:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:438 ~ andrew_fuzz[741f]::library::constraint::{impl#8}::set_name).5),
                ),
                value: e20,
            },
            ty: (),
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/constraint.rs:89:9: 89:66 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/constraint.rs:88:40: 90:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:438 ~ andrew_fuzz[741f]::library::constraint::{impl#8}::set_name).25),
                ),
                value: e22,
            },
            ty: (),
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/constraint.rs:88:40: 90:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(25),
                lint_level: Inherited,
                value: e23,
            },
            ty: (),
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/constraint.rs:88:40: 90:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(23),
                expr: e21,
            },
            opt_destruction_scope: Some(
                Destruction(23),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &mut library::constraint::Constraint,
                    span: src/library/constraint.rs:88:17: 88:26 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:438 ~ andrew_fuzz[741f]::library::constraint::{impl#8}::set_name).2),
                        ),
                        ty: &mut library::constraint::Constraint,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut library::constraint::Constraint,
            ty_span: None,
            self_kind: Some(
                MutRef,
            ),
            hir_id: Some(
                HirId(DefId(0:438 ~ andrew_fuzz[741f]::library::constraint::{impl#8}::set_name).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &str,
                    span: src/library/constraint.rs:88:28: 88:32 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "name",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:438 ~ andrew_fuzz[741f]::library::constraint::{impl#8}::set_name).4),
                        ),
                        ty: &str,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &str,
            ty_span: Some(
                src/library/constraint.rs:88:34: 88:38 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:438 ~ andrew_fuzz[741f]::library::constraint::{impl#8}::set_name).3),
            ),
        },
    ],
}

DefId(0:440 ~ andrew_fuzz[741f]::library::constraint::{impl#9}::do_features):
Thir {
    body_type: Fn(
        ([&library::constraint::Constraint, &mut std::collections::HashSet<std::string::String>]; c_variadic: false)->(),
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(13),
            opt_destruction_scope: None,
            span: src/library/constraint.rs:94:59: 96:6 (#0),
            stmts: [
                s0,
            ],
            expr: None,
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:440 ~ andrew_fuzz[741f]::library::constraint::{impl#9}::do_features).2),
                ),
            },
            ty: &library::constraint::Constraint,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:95:9: 95:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:95:9: 95:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:440 ~ andrew_fuzz[741f]::library::constraint::{impl#9}::do_features).8),
                ),
                value: e1,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:95:9: 95:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[1],
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:95:9: 95:19 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e3,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:95:9: 95:41 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:95:9: 95:41 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
                fun: e5,
                args: [
                    e4,
                ],
                from_hir_call: false,
                fn_span: src/library/constraint.rs:95:9: 95:41 (#0),
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:95:9: 95:41 (#0),
        },
        Expr {
            kind: Deref {
                arg: e6,
            },
            ty: dyn core::DataModel,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:95:9: 95:41 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e7,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:95:9: 95:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:440 ~ andrew_fuzz[741f]::library::constraint::{impl#9}::do_features).7),
                ),
                value: e8,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:95:9: 95:19 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:440 ~ andrew_fuzz[741f]::library::constraint::{impl#9}::do_features).4),
                ),
            },
            ty: &mut std::collections::HashSet<std::string::String>,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:95:32: 95:40 (#0),
        },
        Expr {
            kind: Deref {
                arg: e10,
            },
            ty: std::collections::HashSet<std::string::String>,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:95:32: 95:40 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e11,
            },
            ty: &mut std::collections::HashSet<std::string::String>,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:95:32: 95:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:440 ~ andrew_fuzz[741f]::library::constraint::{impl#9}::do_features).10),
                ),
                value: e12,
            },
            ty: &mut std::collections::HashSet<std::string::String>,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:95:32: 95:40 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b> fn(&'a dyn core::DataModel, &'b mut std::collections::HashSet<std::string::String>) {<dyn core::DataModel as core::Vectorizer>::do_features},
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:95:20: 95:31 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b> fn(&'a dyn core::DataModel, &'b mut std::collections::HashSet<std::string::String>) {<dyn core::DataModel as core::Vectorizer>::do_features},
                fun: e14,
                args: [
                    e9,
                    e13,
                ],
                from_hir_call: true,
                fn_span: src/library/constraint.rs:95:20: 95:41 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:95:9: 95:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:440 ~ andrew_fuzz[741f]::library::constraint::{impl#9}::do_features).5),
                ),
                value: e15,
            },
            ty: (),
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:95:9: 95:41 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(14),
            ),
            span: src/library/constraint.rs:94:59: 96:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:440 ~ andrew_fuzz[741f]::library::constraint::{impl#9}::do_features).14),
                ),
                value: e17,
            },
            ty: (),
            temp_lifetime: Some(
                Node(14),
            ),
            span: src/library/constraint.rs:94:59: 96:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(14),
                lint_level: Inherited,
                value: e18,
            },
            ty: (),
            temp_lifetime: Some(
                Node(14),
            ),
            span: src/library/constraint.rs:94:59: 96:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(12),
                expr: e16,
            },
            opt_destruction_scope: Some(
                Destruction(12),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::constraint::Constraint,
                    span: src/library/constraint.rs:94:20: 94:25 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:440 ~ andrew_fuzz[741f]::library::constraint::{impl#9}::do_features).2),
                        ),
                        ty: &library::constraint::Constraint,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::constraint::Constraint,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:440 ~ andrew_fuzz[741f]::library::constraint::{impl#9}::do_features).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &mut std::collections::HashSet<std::string::String>,
                    span: src/library/constraint.rs:94:27: 94:35 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "features",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:440 ~ andrew_fuzz[741f]::library::constraint::{impl#9}::do_features).4),
                        ),
                        ty: &mut std::collections::HashSet<std::string::String>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut std::collections::HashSet<std::string::String>,
            ty_span: Some(
                src/library/constraint.rs:94:37: 94:57 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:440 ~ andrew_fuzz[741f]::library::constraint::{impl#9}::do_features).3),
            ),
        },
    ],
}

DefId(0:441 ~ andrew_fuzz[741f]::library::constraint::{impl#9}::do_vectorization):
Thir {
    body_type: Fn(
        ([&library::constraint::Constraint, &mut core::feature_vector::FeatureVector, i32]; c_variadic: false)->(),
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(17),
            opt_destruction_scope: None,
            span: src/library/constraint.rs:97:68: 99:6 (#0),
            stmts: [
                s0,
            ],
            expr: None,
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:441 ~ andrew_fuzz[741f]::library::constraint::{impl#9}::do_vectorization).2),
                ),
            },
            ty: &library::constraint::Constraint,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/constraint.rs:98:9: 98:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/constraint.rs:98:9: 98:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:441 ~ andrew_fuzz[741f]::library::constraint::{impl#9}::do_vectorization).10),
                ),
                value: e1,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/constraint.rs:98:9: 98:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[1],
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/constraint.rs:98:9: 98:19 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e3,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/constraint.rs:98:9: 98:47 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/constraint.rs:98:9: 98:47 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
                fun: e5,
                args: [
                    e4,
                ],
                from_hir_call: false,
                fn_span: src/library/constraint.rs:98:9: 98:47 (#0),
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/constraint.rs:98:9: 98:47 (#0),
        },
        Expr {
            kind: Deref {
                arg: e6,
            },
            ty: dyn core::DataModel,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/constraint.rs:98:9: 98:47 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e7,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/constraint.rs:98:9: 98:47 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:441 ~ andrew_fuzz[741f]::library::constraint::{impl#9}::do_vectorization).9),
                ),
                value: e8,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/constraint.rs:98:9: 98:19 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:441 ~ andrew_fuzz[741f]::library::constraint::{impl#9}::do_vectorization).4),
                ),
            },
            ty: &mut core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/constraint.rs:98:37: 98:39 (#0),
        },
        Expr {
            kind: Deref {
                arg: e10,
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/constraint.rs:98:37: 98:39 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e11,
            },
            ty: &mut core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/constraint.rs:98:37: 98:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(12),
                lint_level: Explicit(
                    HirId(DefId(0:441 ~ andrew_fuzz[741f]::library::constraint::{impl#9}::do_vectorization).12),
                ),
                value: e12,
            },
            ty: &mut core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/constraint.rs:98:37: 98:39 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:441 ~ andrew_fuzz[741f]::library::constraint::{impl#9}::do_vectorization).6),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/constraint.rs:98:41: 98:46 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:441 ~ andrew_fuzz[741f]::library::constraint::{impl#9}::do_vectorization).14),
                ),
                value: e14,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/constraint.rs:98:41: 98:46 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b> fn(&'a dyn core::DataModel, &'b mut core::feature_vector::FeatureVector, i32) {<dyn core::DataModel as core::Vectorizer>::do_vectorization},
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/constraint.rs:98:20: 98:36 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b> fn(&'a dyn core::DataModel, &'b mut core::feature_vector::FeatureVector, i32) {<dyn core::DataModel as core::Vectorizer>::do_vectorization},
                fun: e16,
                args: [
                    e9,
                    e13,
                    e15,
                ],
                from_hir_call: true,
                fn_span: src/library/constraint.rs:98:20: 98:47 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/constraint.rs:98:9: 98:47 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:441 ~ andrew_fuzz[741f]::library::constraint::{impl#9}::do_vectorization).7),
                ),
                value: e17,
            },
            ty: (),
            temp_lifetime: Some(
                Node(16),
            ),
            span: src/library/constraint.rs:98:9: 98:47 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/constraint.rs:97:68: 99:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(18),
                lint_level: Explicit(
                    HirId(DefId(0:441 ~ andrew_fuzz[741f]::library::constraint::{impl#9}::do_vectorization).18),
                ),
                value: e19,
            },
            ty: (),
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/constraint.rs:97:68: 99:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(18),
                lint_level: Inherited,
                value: e20,
            },
            ty: (),
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/constraint.rs:97:68: 99:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(16),
                expr: e18,
            },
            opt_destruction_scope: Some(
                Destruction(16),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::constraint::Constraint,
                    span: src/library/constraint.rs:97:25: 97:30 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:441 ~ andrew_fuzz[741f]::library::constraint::{impl#9}::do_vectorization).2),
                        ),
                        ty: &library::constraint::Constraint,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::constraint::Constraint,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:441 ~ andrew_fuzz[741f]::library::constraint::{impl#9}::do_vectorization).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &mut core::feature_vector::FeatureVector,
                    span: src/library/constraint.rs:97:32: 97:34 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "fv",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:441 ~ andrew_fuzz[741f]::library::constraint::{impl#9}::do_vectorization).4),
                        ),
                        ty: &mut core::feature_vector::FeatureVector,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut core::feature_vector::FeatureVector,
            ty_span: Some(
                src/library/constraint.rs:97:36: 97:54 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:441 ~ andrew_fuzz[741f]::library::constraint::{impl#9}::do_vectorization).3),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: i32,
                    span: src/library/constraint.rs:97:56: 97:61 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "depth",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:441 ~ andrew_fuzz[741f]::library::constraint::{impl#9}::do_vectorization).6),
                        ),
                        ty: i32,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: i32,
            ty_span: Some(
                src/library/constraint.rs:97:63: 97:66 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:441 ~ andrew_fuzz[741f]::library::constraint::{impl#9}::do_vectorization).5),
            ),
        },
    ],
}

DefId(0:443 ~ andrew_fuzz[741f]::library::constraint::{impl#10}::do_serialization):
Thir {
    body_type: Fn(
        ([&library::constraint::Constraint, &mut core::bit_array::BitArray]; c_variadic: false)->(),
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(13),
            opt_destruction_scope: None,
            span: src/library/constraint.rs:103:51: 105:6 (#0),
            stmts: [
                s0,
            ],
            expr: None,
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:443 ~ andrew_fuzz[741f]::library::constraint::{impl#10}::do_serialization).2),
                ),
            },
            ty: &library::constraint::Constraint,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:104:9: 104:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:104:9: 104:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:443 ~ andrew_fuzz[741f]::library::constraint::{impl#10}::do_serialization).8),
                ),
                value: e1,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:104:9: 104:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[1],
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:104:9: 104:19 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e3,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:104:9: 104:40 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:104:9: 104:40 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
                fun: e5,
                args: [
                    e4,
                ],
                from_hir_call: false,
                fn_span: src/library/constraint.rs:104:9: 104:40 (#0),
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:104:9: 104:40 (#0),
        },
        Expr {
            kind: Deref {
                arg: e6,
            },
            ty: dyn core::DataModel,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:104:9: 104:40 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e7,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:104:9: 104:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:443 ~ andrew_fuzz[741f]::library::constraint::{impl#10}::do_serialization).7),
                ),
                value: e8,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:104:9: 104:19 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:443 ~ andrew_fuzz[741f]::library::constraint::{impl#10}::do_serialization).4),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:104:37: 104:39 (#0),
        },
        Expr {
            kind: Deref {
                arg: e10,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:104:37: 104:39 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e11,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:104:37: 104:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:443 ~ andrew_fuzz[741f]::library::constraint::{impl#10}::do_serialization).10),
                ),
                value: e12,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:104:37: 104:39 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b> fn(&'a dyn core::DataModel, &'b mut core::bit_array::BitArray) {<dyn core::DataModel as core::Serializer>::do_serialization},
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:104:20: 104:36 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b> fn(&'a dyn core::DataModel, &'b mut core::bit_array::BitArray) {<dyn core::DataModel as core::Serializer>::do_serialization},
                fun: e14,
                args: [
                    e9,
                    e13,
                ],
                from_hir_call: true,
                fn_span: src/library/constraint.rs:104:20: 104:40 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:104:9: 104:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:443 ~ andrew_fuzz[741f]::library::constraint::{impl#10}::do_serialization).5),
                ),
                value: e15,
            },
            ty: (),
            temp_lifetime: Some(
                Node(12),
            ),
            span: src/library/constraint.rs:104:9: 104:40 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(14),
            ),
            span: src/library/constraint.rs:103:51: 105:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:443 ~ andrew_fuzz[741f]::library::constraint::{impl#10}::do_serialization).14),
                ),
                value: e17,
            },
            ty: (),
            temp_lifetime: Some(
                Node(14),
            ),
            span: src/library/constraint.rs:103:51: 105:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(14),
                lint_level: Inherited,
                value: e18,
            },
            ty: (),
            temp_lifetime: Some(
                Node(14),
            ),
            span: src/library/constraint.rs:103:51: 105:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(12),
                expr: e16,
            },
            opt_destruction_scope: Some(
                Destruction(12),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::constraint::Constraint,
                    span: src/library/constraint.rs:103:25: 103:30 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:443 ~ andrew_fuzz[741f]::library::constraint::{impl#10}::do_serialization).2),
                        ),
                        ty: &library::constraint::Constraint,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::constraint::Constraint,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:443 ~ andrew_fuzz[741f]::library::constraint::{impl#10}::do_serialization).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &mut core::bit_array::BitArray,
                    span: src/library/constraint.rs:103:32: 103:34 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "ba",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:443 ~ andrew_fuzz[741f]::library::constraint::{impl#10}::do_serialization).4),
                        ),
                        ty: &mut core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut core::bit_array::BitArray,
            ty_span: Some(
                src/library/constraint.rs:103:36: 103:49 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:443 ~ andrew_fuzz[741f]::library::constraint::{impl#10}::do_serialization).3),
            ),
        },
    ],
}

DefId(0:466 ~ andrew_fuzz[741f]::library::button::{impl#0}::new):
Thir {
    body_type: Fn(
        ([]; c_variadic: false)->library::button::Button,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(17),
            opt_destruction_scope: None,
            span: src/library/button.rs:14:26: 18:6 (#0),
            stmts: [],
            expr: Some(
                e16,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/button.rs:16:19: 16:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:466 ~ andrew_fuzz[741f]::library::button::{impl#0}::new).5),
                ),
                value: e0,
            },
            ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/button.rs:16:19: 16:26 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/button.rs:16:27: 16:45 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:466 ~ andrew_fuzz[741f]::library::button::{impl#0}::new).10),
                ),
                value: e2,
            },
            ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/button.rs:16:27: 16:45 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "Button",
                        Cooked,
                    ),
                    span: src/library/button.rs:16:46: 16:54 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/button.rs:16:46: 16:54 (#0),
        },
        Expr {
            kind: Deref {
                arg: e4,
            },
            ty: str,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/button.rs:16:46: 16:66 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e5,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/button.rs:16:46: 16:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(16),
                lint_level: Explicit(
                    HirId(DefId(0:466 ~ andrew_fuzz[741f]::library::button::{impl#0}::new).16),
                ),
                value: e6,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/button.rs:16:46: 16:54 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/button.rs:16:55: 16:64 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
                fun: e8,
                args: [
                    e7,
                ],
                from_hir_call: true,
                fn_span: src/library/button.rs:16:55: 16:66 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/button.rs:16:46: 16:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:466 ~ andrew_fuzz[741f]::library::button::{impl#0}::new).14),
                ),
                value: e9,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/button.rs:16:46: 16:66 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
                fun: e3,
                args: [
                    e10,
                ],
                from_hir_call: true,
                fn_span: src/library/button.rs:16:27: 16:67 (#0),
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/button.rs:16:27: 16:67 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:466 ~ andrew_fuzz[741f]::library::button::{impl#0}::new).9),
                ),
                value: e11,
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/button.rs:16:27: 16:67 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
                fun: e1,
                args: [
                    e12,
                ],
                from_hir_call: true,
                fn_span: src/library/button.rs:16:19: 16:68 (#0),
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/button.rs:16:19: 16:68 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:466 ~ andrew_fuzz[741f]::library::button::{impl#0}::new).4),
                ),
                value: e13,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/button.rs:16:19: 16:68 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: library::button::Button,
                    variant_index: 0,
                    substs: [],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e14,
                        },
                    ],
                    base: None,
                },
            ),
            ty: library::button::Button,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/button.rs:15:9: 17:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(1),
                lint_level: Explicit(
                    HirId(DefId(0:466 ~ andrew_fuzz[741f]::library::button::{impl#0}::new).1),
                ),
                value: e15,
            },
            ty: library::button::Button,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/button.rs:15:9: 17:10 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: library::button::Button,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/button.rs:14:26: 18:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(18),
                lint_level: Explicit(
                    HirId(DefId(0:466 ~ andrew_fuzz[741f]::library::button::{impl#0}::new).18),
                ),
                value: e17,
            },
            ty: library::button::Button,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/button.rs:14:26: 18:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(18),
                lint_level: Inherited,
                value: e18,
            },
            ty: library::button::Button,
            temp_lifetime: Some(
                Node(18),
            ),
            span: src/library/button.rs:14:26: 18:6 (#0),
        },
    ],
    stmts: [],
    params: [],
}

DefId(0:470 ~ andrew_fuzz[741f]::library::button::{impl#3}::clone):
Thir {
    body_type: Fn(
        ([&library::button::Button]; c_variadic: false)->std::boxed::Box<dyn core::DataModel>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(16),
            opt_destruction_scope: None,
            span: src/library/button.rs:26:43: 30:6 (#0),
            stmts: [],
            expr: Some(
                e15,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:296 ~ alloc[42dc]::boxed::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:294 ~ alloc[42dc]::boxed::{impl#0}),
                                        self_ty: std::boxed::Box<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::button::Button) -> std::boxed::Box<library::button::Button> {std::boxed::Box::<library::button::Button>::new},
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/library/button.rs:27:9: 27:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:470 ~ andrew_fuzz[741f]::library::button::{impl#3}::clone).4),
                ),
                value: e0,
            },
            ty: fn(library::button::Button) -> std::boxed::Box<library::button::Button> {std::boxed::Box::<library::button::Button>::new},
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/library/button.rs:27:9: 27:17 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:470 ~ andrew_fuzz[741f]::library::button::{impl#3}::clone).2),
                ),
            },
            ty: &library::button::Button,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/library/button.rs:28:19: 28:23 (#0),
        },
        Expr {
            kind: Deref {
                arg: e2,
            },
            ty: library::button::Button,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/library/button.rs:28:19: 28:23 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:470 ~ andrew_fuzz[741f]::library::button::{impl#3}::clone).14),
                ),
                value: e3,
            },
            ty: library::button::Button,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/library/button.rs:28:19: 28:23 (#0),
        },
        Expr {
            kind: Field {
                lhs: e4,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/library/button.rs:28:19: 28:28 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e5,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/library/button.rs:28:19: 28:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:470 ~ andrew_fuzz[741f]::library::button::{impl#3}::clone).13),
                ),
                value: e6,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/library/button.rs:28:19: 28:28 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> std::rc::Rc<core::DataModelBase> {<std::rc::Rc<core::DataModelBase> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/library/button.rs:28:29: 28:34 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> std::rc::Rc<core::DataModelBase> {<std::rc::Rc<core::DataModelBase> as std::clone::Clone>::clone},
                fun: e8,
                args: [
                    e7,
                ],
                from_hir_call: true,
                fn_span: src/library/button.rs:28:29: 28:36 (#0),
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/library/button.rs:28:19: 28:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:470 ~ andrew_fuzz[741f]::library::button::{impl#3}::clone).11),
                ),
                value: e9,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/library/button.rs:28:19: 28:36 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: library::button::Button,
                    variant_index: 0,
                    substs: [],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e10,
                        },
                    ],
                    base: None,
                },
            ),
            ty: library::button::Button,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/library/button.rs:27:18: 29:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:470 ~ andrew_fuzz[741f]::library::button::{impl#3}::clone).8),
                ),
                value: e11,
            },
            ty: library::button::Button,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/library/button.rs:27:18: 29:10 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::button::Button) -> std::boxed::Box<library::button::Button> {std::boxed::Box::<library::button::Button>::new},
                fun: e1,
                args: [
                    e12,
                ],
                from_hir_call: true,
                fn_span: src/library/button.rs:27:9: 29:11 (#0),
            },
            ty: std::boxed::Box<library::button::Button>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/library/button.rs:27:9: 29:11 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e13,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/library/button.rs:27:9: 29:11 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:470 ~ andrew_fuzz[741f]::library::button::{impl#3}::clone).3),
                ),
                value: e14,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/library/button.rs:27:9: 29:11 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/library/button.rs:27:9: 29:11 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e16,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/library/button.rs:27:9: 29:11 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:470 ~ andrew_fuzz[741f]::library::button::{impl#3}::clone).17),
                ),
                value: e17,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/library/button.rs:26:43: 30:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(17),
                lint_level: Inherited,
                value: e18,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(17),
            ),
            span: src/library/button.rs:26:43: 30:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::button::Button,
                    span: src/library/button.rs:26:14: 26:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:470 ~ andrew_fuzz[741f]::library::button::{impl#3}::clone).2),
                        ),
                        ty: &library::button::Button,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::button::Button,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:470 ~ andrew_fuzz[741f]::library::button::{impl#3}::clone).1),
            ),
        },
    ],
}

DefId(0:472 ~ andrew_fuzz[741f]::library::button::{impl#4}::breed):
Thir {
    body_type: Fn(
        ([&library::button::Button, std::boxed::Box<dyn core::DataModel>]; c_variadic: false)->std::boxed::Box<dyn core::DataModel>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(9),
            opt_destruction_scope: None,
            span: src/library/button.rs:34:70: 36:6 (#0),
            stmts: [],
            expr: Some(
                e7,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:472 ~ andrew_fuzz[741f]::library::button::{impl#4}::breed).2),
                ),
            },
            ty: &library::button::Button,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/library/button.rs:35:9: 35:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: library::button::Button,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/library/button.rs:35:9: 35:21 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e1,
            },
            ty: &library::button::Button,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/library/button.rs:35:9: 35:21 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:472 ~ andrew_fuzz[741f]::library::button::{impl#4}::breed).7),
                ),
                value: e2,
            },
            ty: &library::button::Button,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/library/button.rs:35:9: 35:13 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a library::button::Button) -> std::boxed::Box<(dyn core::DataModel + 'static)> {<library::button::Button as core::Cloneable>::clone},
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/library/button.rs:35:14: 35:19 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a library::button::Button) -> std::boxed::Box<(dyn core::DataModel + 'static)> {<library::button::Button as core::Cloneable>::clone},
                fun: e4,
                args: [
                    e3,
                ],
                from_hir_call: true,
                fn_span: src/library/button.rs:35:14: 35:21 (#0),
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/library/button.rs:35:9: 35:21 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e5,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/library/button.rs:35:9: 35:21 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:472 ~ andrew_fuzz[741f]::library::button::{impl#4}::breed).5),
                ),
                value: e6,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/library/button.rs:35:9: 35:21 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/library/button.rs:35:9: 35:21 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e8,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/library/button.rs:35:9: 35:21 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:472 ~ andrew_fuzz[741f]::library::button::{impl#4}::breed).10),
                ),
                value: e9,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/library/button.rs:34:70: 36:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(10),
                lint_level: Inherited,
                value: e10,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(10),
            ),
            span: src/library/button.rs:34:70: 36:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::button::Button,
                    span: src/library/button.rs:34:14: 34:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:472 ~ andrew_fuzz[741f]::library::button::{impl#4}::breed).2),
                        ),
                        ty: &library::button::Button,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::button::Button,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:472 ~ andrew_fuzz[741f]::library::button::{impl#4}::breed).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: std::boxed::Box<dyn core::DataModel>,
                    span: src/library/button.rs:34:21: 34:26 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "other",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:472 ~ andrew_fuzz[741f]::library::button::{impl#4}::breed).4),
                        ),
                        ty: std::boxed::Box<dyn core::DataModel>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::boxed::Box<dyn core::DataModel>,
            ty_span: Some(
                src/library/button.rs:34:28: 34:46 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:472 ~ andrew_fuzz[741f]::library::button::{impl#4}::breed).3),
            ),
        },
    ],
}

DefId(0:474 ~ andrew_fuzz[741f]::library::button::{impl#5}::parse):
Thir {
    body_type: Fn(
        ([&library::button::Button, &mut core::bit_array::BitArray, &std::rc::Rc<core::context::Context<'_>>]; c_variadic: false)->std::option::Option<std::boxed::Box<dyn core::DataModel>>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(24),
            opt_destruction_scope: None,
            span: src/library/button.rs:41:36: 43:10 (#0),
            stmts: [],
            expr: Some(
                e20,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(29),
            opt_destruction_scope: None,
            span: src/library/button.rs:43:16: 45:10 (#0),
            stmts: [],
            expr: Some(
                e25,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(30),
            opt_destruction_scope: None,
            span: src/library/button.rs:40:96: 46:6 (#0),
            stmts: [],
            expr: Some(
                e30,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:474 ~ andrew_fuzz[741f]::library::button::{impl#5}::parse).4),
                ),
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/library/button.rs:41:23: 41:28 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/library/button.rs:41:23: 41:35 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e1,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/library/button.rs:41:23: 41:35 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:474 ~ andrew_fuzz[741f]::library::button::{impl#5}::parse).14),
                ),
                value: e2,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/library/button.rs:41:23: 41:28 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        1,
                        Unsuffixed,
                    ),
                    span: src/library/button.rs:41:33: 41:34 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/library/button.rs:41:33: 41:34 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(16),
                lint_level: Explicit(
                    HirId(DefId(0:474 ~ andrew_fuzz[741f]::library::button::{impl#5}::parse).16),
                ),
                value: e4,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/library/button.rs:41:33: 41:34 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut core::bit_array::BitArray, i32) -> std::option::Option<core::bit_array::BitArray> {core::bit_array::BitArray::eat},
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/library/button.rs:41:29: 41:32 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut core::bit_array::BitArray, i32) -> std::option::Option<core::bit_array::BitArray> {core::bit_array::BitArray::eat},
                fun: e6,
                args: [
                    e3,
                    e5,
                ],
                from_hir_call: true,
                fn_span: src/library/button.rs:41:29: 41:35 (#0),
            },
            ty: std::option::Option<core::bit_array::BitArray>,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/library/button.rs:41:23: 41:35 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(12),
                lint_level: Explicit(
                    HirId(DefId(0:474 ~ andrew_fuzz[741f]::library::button::{impl#5}::parse).12),
                ),
                value: e7,
            },
            ty: std::option::Option<core::bit_array::BitArray>,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/library/button.rs:41:23: 41:35 (#0),
        },
        Expr {
            kind: Let {
                expr: e8,
                pat: Pat {
                    ty: std::option::Option<core::bit_array::BitArray>,
                    span: src/library/button.rs:41:16: 41:20 (#0),
                    kind: Variant {
                        adt_def: std::option::Option,
                        substs: [
                            core::bit_array::BitArray,
                        ],
                        variant_index: 0,
                        subpatterns: [],
                    },
                },
            },
            ty: bool,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/library/button.rs:41:12: 41:35 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:474 ~ andrew_fuzz[741f]::library::button::{impl#5}::parse).8),
                ),
                value: e9,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/library/button.rs:41:12: 41:35 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:474 ~ andrew_fuzz[741f]::library::button::{impl#5}::parse).2),
                ),
            },
            ty: &library::button::Button,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/button.rs:42:18: 42:22 (#0),
        },
        Expr {
            kind: Deref {
                arg: e11,
            },
            ty: library::button::Button,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/button.rs:42:18: 42:30 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e12,
            },
            ty: &library::button::Button,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/button.rs:42:18: 42:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(22),
                lint_level: Explicit(
                    HirId(DefId(0:474 ~ andrew_fuzz[741f]::library::button::{impl#5}::parse).22),
                ),
                value: e13,
            },
            ty: &library::button::Button,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/button.rs:42:18: 42:22 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a library::button::Button) -> std::boxed::Box<(dyn core::DataModel + 'static)> {<library::button::Button as core::Cloneable>::clone},
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/button.rs:42:23: 42:28 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a library::button::Button) -> std::boxed::Box<(dyn core::DataModel + 'static)> {<library::button::Button as core::Cloneable>::clone},
                fun: e15,
                args: [
                    e14,
                ],
                from_hir_call: true,
                fn_span: src/library/button.rs:42:23: 42:30 (#0),
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/button.rs:42:18: 42:30 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e16,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/button.rs:42:18: 42:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(20),
                lint_level: Explicit(
                    HirId(DefId(0:474 ~ andrew_fuzz[741f]::library::button::{impl#5}::parse).20),
                ),
                value: e17,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/button.rs:42:18: 42:30 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: std::option::Option,
                    variant_index: 1,
                    substs: [
                        std::boxed::Box<dyn core::DataModel>,
                    ],
                    user_ty: None,
                    fields: [
                        FieldExpr {
                            name: field[0],
                            expr: e18,
                        },
                    ],
                    base: None,
                },
            ),
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/button.rs:42:13: 42:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:474 ~ andrew_fuzz[741f]::library::button::{impl#5}::parse).17),
                ),
                value: e19,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/button.rs:42:13: 42:31 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/button.rs:41:36: 43:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:474 ~ andrew_fuzz[741f]::library::button::{impl#5}::parse).25),
                ),
                value: e21,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/button.rs:41:36: 43:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(25),
                lint_level: Inherited,
                value: e22,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/button.rs:41:36: 43:10 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: std::option::Option,
                    variant_index: 0,
                    substs: [
                        std::boxed::Box<dyn core::DataModel>,
                    ],
                    user_ty: None,
                    fields: [],
                    base: None,
                },
            ),
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/library/button.rs:44:13: 44:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(27),
                lint_level: Explicit(
                    HirId(DefId(0:474 ~ andrew_fuzz[741f]::library::button::{impl#5}::parse).27),
                ),
                value: e24,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/library/button.rs:44:13: 44:17 (#0),
        },
        Expr {
            kind: Block {
                block: b1,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/library/button.rs:43:16: 45:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(26),
                lint_level: Explicit(
                    HirId(DefId(0:474 ~ andrew_fuzz[741f]::library::button::{impl#5}::parse).26),
                ),
                value: e26,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/library/button.rs:43:16: 45:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(26),
                lint_level: Inherited,
                value: e27,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/library/button.rs:43:16: 45:10 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(25),
                cond: e10,
                then: e23,
                else_opt: Some(
                    e28,
                ),
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/library/button.rs:41:9: 45:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:474 ~ andrew_fuzz[741f]::library::button::{impl#5}::parse).7),
                ),
                value: e29,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/library/button.rs:41:9: 45:10 (#0),
        },
        Expr {
            kind: Block {
                block: b2,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/library/button.rs:40:96: 46:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(31),
                lint_level: Explicit(
                    HirId(DefId(0:474 ~ andrew_fuzz[741f]::library::button::{impl#5}::parse).31),
                ),
                value: e31,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/library/button.rs:40:96: 46:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(31),
                lint_level: Inherited,
                value: e32,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(31),
            ),
            span: src/library/button.rs:40:96: 46:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::button::Button,
                    span: src/library/button.rs:40:14: 40:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:474 ~ andrew_fuzz[741f]::library::button::{impl#5}::parse).2),
                        ),
                        ty: &library::button::Button,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::button::Button,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:474 ~ andrew_fuzz[741f]::library::button::{impl#5}::parse).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &mut core::bit_array::BitArray,
                    span: src/library/button.rs:40:21: 40:26 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "input",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:474 ~ andrew_fuzz[741f]::library::button::{impl#5}::parse).4),
                        ),
                        ty: &mut core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut core::bit_array::BitArray,
            ty_span: Some(
                src/library/button.rs:40:28: 40:41 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:474 ~ andrew_fuzz[741f]::library::button::{impl#5}::parse).3),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &std::rc::Rc<core::context::Context<'_>>,
                    span: src/library/button.rs:40:43: 40:46 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "ctx",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:474 ~ andrew_fuzz[741f]::library::button::{impl#5}::parse).6),
                        ),
                        ty: &std::rc::Rc<core::context::Context<'_>>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &std::rc::Rc<core::context::Context<'_>>,
            ty_span: Some(
                src/library/button.rs:40:48: 40:64 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:474 ~ andrew_fuzz[741f]::library::button::{impl#5}::parse).5),
            ),
        },
    ],
}

DefId(0:476 ~ andrew_fuzz[741f]::library::button::{impl#6}::debug):
Thir {
    body_type: Fn(
        ([&library::button::Button]; c_variadic: false)->std::string::String,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(25),
            opt_destruction_scope: None,
            span: src/library/button.rs:50:31: 54:6 (#0),
            stmts: [
                s0,
                s1,
            ],
            expr: Some(
                e24,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn() -> std::string::String {std::string::String::new},
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/button.rs:51:26: 51:37 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:476 ~ andrew_fuzz[741f]::library::button::{impl#6}::debug).5),
                ),
                value: e0,
            },
            ty: fn() -> std::string::String {std::string::String::new},
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/button.rs:51:26: 51:37 (#0),
        },
        Expr {
            kind: Call {
                ty: fn() -> std::string::String {std::string::String::new},
                fun: e1,
                args: [],
                from_hir_call: true,
                fn_span: src/library/button.rs:51:26: 51:39 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/button.rs:51:26: 51:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:476 ~ andrew_fuzz[741f]::library::button::{impl#6}::debug).4),
                ),
                value: e2,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(3),
            ),
            span: src/library/button.rs:51:26: 51:39 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:476 ~ andrew_fuzz[741f]::library::button::{impl#6}::debug).10),
                ),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/button.rs:52:16: 52:22 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e4,
            },
            ty: &mut std::string::String,
            temp_lifetime: Some(
                Node(22),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:9: 520:55 (#82),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:476 ~ andrew_fuzz[741f]::library::button::{impl#6}::debug).13),
                ),
                value: e5,
            },
            ty: &mut std::string::String,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/button.rs:52:16: 52:22 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(2:8999 ~ core[102f]::fmt::{impl#4}::new_const),
                            UserSubsts {
                                substs: [
                                    ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon(0, None) }),
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(2:8997 ~ core[102f]::fmt::{impl#4}),
                                        self_ty: std::fmt::Arguments<'_>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(&[&'static str]) -> std::fmt::Arguments<'_> {std::fmt::Arguments::<'_>::new_const},
            temp_lifetime: Some(
                Node(22),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#83),
        },
        Expr {
            kind: Scope {
                region_scope: Node(21),
                lint_level: Explicit(
                    HirId(DefId(0:476 ~ andrew_fuzz[741f]::library::button::{impl#6}::debug).21),
                ),
                value: e7,
            },
            ty: fn(&[&'static str]) -> std::fmt::Arguments<'_> {std::fmt::Arguments::<'_>::new_const},
            temp_lifetime: Some(
                Node(22),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#83),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "Button",
                        Cooked,
                    ),
                    span: src/library/button.rs:52:24: 52:32 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/button.rs:52:24: 52:32 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(16),
                lint_level: Explicit(
                    HirId(DefId(0:476 ~ andrew_fuzz[741f]::library::button::{impl#6}::debug).16),
                ),
                value: e9,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/button.rs:52:24: 52:32 (#0),
        },
        Expr {
            kind: Array {
                fields: [
                    e10,
                ],
            },
            ty: [&str; 1],
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/button.rs:52:24: 52:32 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(17),
                lint_level: Explicit(
                    HirId(DefId(0:476 ~ andrew_fuzz[741f]::library::button::{impl#6}::debug).17),
                ),
                value: e11,
            },
            ty: [&str; 1],
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/button.rs:52:24: 52:32 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e12,
            },
            ty: &[&str; 1],
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/button.rs:52:24: 52:32 (#0),
        },
        Expr {
            kind: Deref {
                arg: e13,
            },
            ty: [&str; 1],
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/button.rs:52:24: 52:32 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e14,
            },
            ty: &[&str; 1],
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/button.rs:52:24: 52:32 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e15,
            },
            ty: &[&str],
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/button.rs:52:24: 52:32 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(18),
                lint_level: Explicit(
                    HirId(DefId(0:476 ~ andrew_fuzz[741f]::library::button::{impl#6}::debug).18),
                ),
                value: e16,
            },
            ty: &[&str],
            temp_lifetime: Some(
                Node(22),
            ),
            span: src/library/button.rs:52:24: 52:32 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(&[&'static str]) -> std::fmt::Arguments<'_> {std::fmt::Arguments::<'_>::new_const},
                fun: e8,
                args: [
                    e17,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#83),
            },
            ty: std::fmt::Arguments<'_>,
            temp_lifetime: Some(
                Node(22),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#83),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:476 ~ andrew_fuzz[741f]::library::button::{impl#6}::debug).15),
                ),
                value: e18,
            },
            ty: std::fmt::Arguments<'_>,
            temp_lifetime: Some(
                Node(22),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:24: 520:54 (#83),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b> fn(&'a mut std::string::String, std::fmt::Arguments<'b>) -> std::result::Result<(), std::fmt::Error> {<std::string::String as std::fmt::Write>::write_fmt},
            temp_lifetime: Some(
                Node(22),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:14: 520:23 (#82),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b> fn(&'a mut std::string::String, std::fmt::Arguments<'b>) -> std::result::Result<(), std::fmt::Error> {<std::string::String as std::fmt::Write>::write_fmt},
                fun: e20,
                args: [
                    e6,
                    e19,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:14: 520:55 (#82),
            },
            ty: std::result::Result<(), std::fmt::Error>,
            temp_lifetime: Some(
                Node(22),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:9: 520:55 (#82),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:476 ~ andrew_fuzz[741f]::library::button::{impl#6}::debug).11),
                ),
                value: e21,
            },
            ty: std::result::Result<(), std::fmt::Error>,
            temp_lifetime: Some(
                Node(22),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:520:9: 520:55 (#82),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:476 ~ andrew_fuzz[741f]::library::button::{impl#6}::debug).10),
                ),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/library/button.rs:53:9: 53:15 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(23),
                lint_level: Explicit(
                    HirId(DefId(0:476 ~ andrew_fuzz[741f]::library::button::{impl#6}::debug).23),
                ),
                value: e23,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/library/button.rs:53:9: 53:15 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/library/button.rs:50:31: 54:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(26),
                lint_level: Explicit(
                    HirId(DefId(0:476 ~ andrew_fuzz[741f]::library::button::{impl#6}::debug).26),
                ),
                value: e25,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/library/button.rs:50:31: 54:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(26),
                lint_level: Inherited,
                value: e26,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(26),
            ),
            span: src/library/button.rs:50:31: 54:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 25, first_statement_index: 0},
                init_scope: Node(3),
                pattern: Pat {
                    ty: std::string::String,
                    span: src/library/button.rs:51:13: 51:23 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "result",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:476 ~ andrew_fuzz[741f]::library::button::{impl#6}::debug).10),
                        ),
                        ty: std::string::String,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e3,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:476 ~ andrew_fuzz[741f]::library::button::{impl#6}::debug).9),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(3),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(22),
                expr: e22,
            },
            opt_destruction_scope: Some(
                Destruction(22),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::button::Button,
                    span: src/library/button.rs:50:14: 50:19 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:476 ~ andrew_fuzz[741f]::library::button::{impl#6}::debug).2),
                        ),
                        ty: &library::button::Button,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::button::Button,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:476 ~ andrew_fuzz[741f]::library::button::{impl#6}::debug).1),
            ),
        },
    ],
}

DefId(0:478 ~ andrew_fuzz[741f]::library::button::{impl#7}::fuzz):
Thir {
    body_type: Fn(
        ([&library::button::Button]; c_variadic: false)->std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(8),
            opt_destruction_scope: None,
            span: src/library/button.rs:58:46: 60:6 (#0),
            stmts: [],
            expr: Some(
                e3,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:6607 ~ alloc[42dc]::vec::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:6605 ~ alloc[42dc]::vec::{impl#0}),
                                        self_ty: std::vec::Vec<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/button.rs:59:9: 59:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(4),
                lint_level: Explicit(
                    HirId(DefId(0:478 ~ andrew_fuzz[741f]::library::button::{impl#7}::fuzz).4),
                ),
                value: e0,
            },
            ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/button.rs:59:9: 59:17 (#0),
        },
        Expr {
            kind: Call {
                ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
                fun: e1,
                args: [],
                from_hir_call: true,
                fn_span: src/library/button.rs:59:9: 59:19 (#0),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/button.rs:59:9: 59:19 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:478 ~ andrew_fuzz[741f]::library::button::{impl#7}::fuzz).3),
                ),
                value: e2,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/button.rs:59:9: 59:19 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/button.rs:58:46: 60:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:478 ~ andrew_fuzz[741f]::library::button::{impl#7}::fuzz).9),
                ),
                value: e4,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/button.rs:58:46: 60:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(9),
                lint_level: Inherited,
                value: e5,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/button.rs:58:46: 60:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::button::Button,
                    span: src/library/button.rs:58:13: 58:18 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:478 ~ andrew_fuzz[741f]::library::button::{impl#7}::fuzz).2),
                        ),
                        ty: &library::button::Button,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::button::Button,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:478 ~ andrew_fuzz[741f]::library::button::{impl#7}::fuzz).1),
            ),
        },
    ],
}

DefId(0:480 ~ andrew_fuzz[741f]::library::button::{impl#8}::name):
Thir {
    body_type: Fn(
        ([&library::button::Button]; c_variadic: false)->&std::string::String,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(8),
            opt_destruction_scope: None,
            span: src/library/button.rs:64:31: 66:6 (#0),
            stmts: [],
            expr: Some(
                e14,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:480 ~ andrew_fuzz[741f]::library::button::{impl#8}::name).2),
                ),
            },
            ty: &library::button::Button,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/button.rs:65:9: 65:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: library::button::Button,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/button.rs:65:9: 65:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:480 ~ andrew_fuzz[741f]::library::button::{impl#8}::name).6),
                ),
                value: e1,
            },
            ty: library::button::Button,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/button.rs:65:9: 65:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/button.rs:65:9: 65:18 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e3,
            },
            ty: &std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/button.rs:65:9: 65:25 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> &'a <std::rc::Rc<core::DataModelBase> as std::ops::Deref>::Target {<std::rc::Rc<core::DataModelBase> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/button.rs:65:9: 65:25 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::DataModelBase>) -> &'a <std::rc::Rc<core::DataModelBase> as std::ops::Deref>::Target {<std::rc::Rc<core::DataModelBase> as std::ops::Deref>::deref},
                fun: e5,
                args: [
                    e4,
                ],
                from_hir_call: false,
                fn_span: src/library/button.rs:65:9: 65:25 (#0),
            },
            ty: &core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/button.rs:65:9: 65:25 (#0),
        },
        Expr {
            kind: Deref {
                arg: e6,
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/button.rs:65:9: 65:25 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e7,
            },
            ty: &core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/button.rs:65:9: 65:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:480 ~ andrew_fuzz[741f]::library::button::{impl#8}::name).5),
                ),
                value: e8,
            },
            ty: &core::DataModelBase,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/button.rs:65:9: 65:18 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::DataModelBase) -> &'a std::string::String {core::DataModelBase::name},
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/button.rs:65:19: 65:23 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::DataModelBase) -> &'a std::string::String {core::DataModelBase::name},
                fun: e10,
                args: [
                    e9,
                ],
                from_hir_call: true,
                fn_span: src/library/button.rs:65:19: 65:25 (#0),
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/button.rs:65:9: 65:25 (#0),
        },
        Expr {
            kind: Deref {
                arg: e11,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/button.rs:65:9: 65:25 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e12,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/button.rs:65:9: 65:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:480 ~ andrew_fuzz[741f]::library::button::{impl#8}::name).3),
                ),
                value: e13,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/button.rs:65:9: 65:25 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/button.rs:64:31: 66:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:480 ~ andrew_fuzz[741f]::library::button::{impl#8}::name).9),
                ),
                value: e15,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/button.rs:64:31: 66:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(9),
                lint_level: Inherited,
                value: e16,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(9),
            ),
            span: src/library/button.rs:64:31: 66:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::button::Button,
                    span: src/library/button.rs:64:13: 64:18 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:480 ~ andrew_fuzz[741f]::library::button::{impl#8}::name).2),
                        ),
                        ty: &library::button::Button,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::button::Button,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:480 ~ andrew_fuzz[741f]::library::button::{impl#8}::name).1),
            ),
        },
    ],
}

DefId(0:481 ~ andrew_fuzz[741f]::library::button::{impl#8}::set_name):
Thir {
    body_type: Fn(
        ([&mut library::button::Button, &str]; c_variadic: false)->(),
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(24),
            opt_destruction_scope: None,
            span: src/library/button.rs:67:40: 69:6 (#0),
            stmts: [
                s0,
            ],
            expr: None,
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:481 ~ andrew_fuzz[741f]::library::button::{impl#8}::set_name).2),
                ),
            },
            ty: &mut library::button::Button,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/button.rs:68:9: 68:13 (#0),
        },
        Expr {
            kind: Deref {
                arg: e0,
            },
            ty: library::button::Button,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/button.rs:68:9: 68:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(7),
                lint_level: Explicit(
                    HirId(DefId(0:481 ~ andrew_fuzz[741f]::library::button::{impl#8}::set_name).7),
                ),
                value: e1,
            },
            ty: library::button::Button,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/button.rs:68:9: 68:13 (#0),
        },
        Expr {
            kind: Field {
                lhs: e2,
                variant_index: 0,
                name: field[0],
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/button.rs:68:9: 68:18 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:481 ~ andrew_fuzz[741f]::library::button::{impl#8}::set_name).6),
                ),
                value: e3,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/button.rs:68:9: 68:18 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/button.rs:68:21: 68:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(10),
                lint_level: Explicit(
                    HirId(DefId(0:481 ~ andrew_fuzz[741f]::library::button::{impl#8}::set_name).10),
                ),
                value: e5,
            },
            ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/button.rs:68:21: 68:28 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/button.rs:68:29: 68:47 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(15),
                lint_level: Explicit(
                    HirId(DefId(0:481 ~ andrew_fuzz[741f]::library::button::{impl#8}::set_name).15),
                ),
                value: e7,
            },
            ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/button.rs:68:29: 68:47 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:481 ~ andrew_fuzz[741f]::library::button::{impl#8}::set_name).4),
                ),
            },
            ty: &str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/button.rs:68:48: 68:52 (#0),
        },
        Expr {
            kind: Deref {
                arg: e9,
            },
            ty: str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/button.rs:68:48: 68:64 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e10,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/button.rs:68:48: 68:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(21),
                lint_level: Explicit(
                    HirId(DefId(0:481 ~ andrew_fuzz[741f]::library::button::{impl#8}::set_name).21),
                ),
                value: e11,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/button.rs:68:48: 68:52 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/button.rs:68:53: 68:62 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
                fun: e13,
                args: [
                    e12,
                ],
                from_hir_call: true,
                fn_span: src/library/button.rs:68:53: 68:64 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/button.rs:68:48: 68:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(19),
                lint_level: Explicit(
                    HirId(DefId(0:481 ~ andrew_fuzz[741f]::library::button::{impl#8}::set_name).19),
                ),
                value: e14,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/button.rs:68:48: 68:64 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::string::String) -> core::DataModelBase {core::DataModelBase::new},
                fun: e8,
                args: [
                    e15,
                ],
                from_hir_call: true,
                fn_span: src/library/button.rs:68:29: 68:65 (#0),
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/button.rs:68:29: 68:65 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:481 ~ andrew_fuzz[741f]::library::button::{impl#8}::set_name).14),
                ),
                value: e16,
            },
            ty: core::DataModelBase,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/button.rs:68:29: 68:65 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(core::DataModelBase) -> std::rc::Rc<core::DataModelBase> {std::rc::Rc::<core::DataModelBase>::new},
                fun: e6,
                args: [
                    e17,
                ],
                from_hir_call: true,
                fn_span: src/library/button.rs:68:21: 68:66 (#0),
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/button.rs:68:21: 68:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:481 ~ andrew_fuzz[741f]::library::button::{impl#8}::set_name).9),
                ),
                value: e18,
            },
            ty: std::rc::Rc<core::DataModelBase>,
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/button.rs:68:21: 68:66 (#0),
        },
        Expr {
            kind: Assign {
                lhs: e4,
                rhs: e19,
            },
            ty: (),
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/button.rs:68:9: 68:66 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(5),
                lint_level: Explicit(
                    HirId(DefId(0:481 ~ andrew_fuzz[741f]::library::button::{impl#8}::set_name).5),
                ),
                value: e20,
            },
            ty: (),
            temp_lifetime: Some(
                Node(23),
            ),
            span: src/library/button.rs:68:9: 68:66 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/button.rs:67:40: 69:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(25),
                lint_level: Explicit(
                    HirId(DefId(0:481 ~ andrew_fuzz[741f]::library::button::{impl#8}::set_name).25),
                ),
                value: e22,
            },
            ty: (),
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/button.rs:67:40: 69:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(25),
                lint_level: Inherited,
                value: e23,
            },
            ty: (),
            temp_lifetime: Some(
                Node(25),
            ),
            span: src/library/button.rs:67:40: 69:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Expr {
                scope: Node(23),
                expr: e21,
            },
            opt_destruction_scope: Some(
                Destruction(23),
            ),
        },
    ],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &mut library::button::Button,
                    span: src/library/button.rs:67:17: 67:26 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:481 ~ andrew_fuzz[741f]::library::button::{impl#8}::set_name).2),
                        ),
                        ty: &mut library::button::Button,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut library::button::Button,
            ty_span: None,
            self_kind: Some(
                MutRef,
            ),
            hir_id: Some(
                HirId(DefId(0:481 ~ andrew_fuzz[741f]::library::button::{impl#8}::set_name).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &str,
                    span: src/library/button.rs:67:28: 67:32 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "name",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:481 ~ andrew_fuzz[741f]::library::button::{impl#8}::set_name).4),
                        ),
                        ty: &str,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &str,
            ty_span: Some(
                src/library/button.rs:67:34: 67:38 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:481 ~ andrew_fuzz[741f]::library::button::{impl#8}::set_name).3),
            ),
        },
    ],
}

DefId(0:484 ~ andrew_fuzz[741f]::library::button::{impl#10}::do_serialization):
Thir {
    body_type: Fn(
        ([&library::button::Button, &mut core::bit_array::BitArray]; c_variadic: false)->(),
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(5),
            opt_destruction_scope: None,
            span: src/library/button.rs:75:51: 77:6 (#0),
            stmts: [],
            expr: None,
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/library/button.rs:75:51: 77:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(6),
                lint_level: Explicit(
                    HirId(DefId(0:484 ~ andrew_fuzz[741f]::library::button::{impl#10}::do_serialization).6),
                ),
                value: e0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/library/button.rs:75:51: 77:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(6),
                lint_level: Inherited,
                value: e1,
            },
            ty: (),
            temp_lifetime: Some(
                Node(6),
            ),
            span: src/library/button.rs:75:51: 77:6 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: Some(
                Pat {
                    ty: &library::button::Button,
                    span: src/library/button.rs:75:25: 75:30 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "self",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:484 ~ andrew_fuzz[741f]::library::button::{impl#10}::do_serialization).2),
                        ),
                        ty: &library::button::Button,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &library::button::Button,
            ty_span: None,
            self_kind: Some(
                ImmRef,
            ),
            hir_id: Some(
                HirId(DefId(0:484 ~ andrew_fuzz[741f]::library::button::{impl#10}::do_serialization).1),
            ),
        },
        Param {
            pat: Some(
                Pat {
                    ty: &mut core::bit_array::BitArray,
                    span: src/library/button.rs:75:32: 75:34 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "ba",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:484 ~ andrew_fuzz[741f]::library::button::{impl#10}::do_serialization).4),
                        ),
                        ty: &mut core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: &mut core::bit_array::BitArray,
            ty_span: Some(
                src/library/button.rs:75:36: 75:49 (#0),
            ),
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:484 ~ andrew_fuzz[741f]::library::button::{impl#10}::do_serialization).3),
            ),
        },
    ],
}

DefId(0:504 ~ andrew_fuzz[741f]::dns::dns):
Thir {
    body_type: Fn(
        ([]; c_variadic: false)->std::boxed::Box<dyn core::DataModel>,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(932),
            opt_destruction_scope: None,
            span: src/dns.rs:6:36: 71:2 (#0),
            stmts: [
                s0,
                s1,
                s2,
                s3,
                s4,
                s5,
                s6,
                s7,
                s8,
                s9,
                s10,
                s11,
                s12,
                s13,
                s14,
                s15,
            ],
            expr: Some(
                e735,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::u8::U8) -> std::rc::Rc<library::u8::U8> {std::rc::Rc::<library::u8::U8>::new},
            temp_lifetime: Some(
                Node(1),
            ),
            span: src/dns.rs:7:36: 7:43 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).9),
                ),
                value: e0,
            },
            ty: fn(library::u8::U8) -> std::rc::Rc<library::u8::U8> {std::rc::Rc::<library::u8::U8>::new},
            temp_lifetime: Some(
                Node(1),
            ),
            span: src/dns.rs:7:36: 7:43 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn() -> library::u8::U8 {library::u8::U8::new},
            temp_lifetime: Some(
                Node(1),
            ),
            span: src/dns.rs:7:44: 7:51 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(14),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).14),
                ),
                value: e2,
            },
            ty: fn() -> library::u8::U8 {library::u8::U8::new},
            temp_lifetime: Some(
                Node(1),
            ),
            span: src/dns.rs:7:44: 7:51 (#0),
        },
        Expr {
            kind: Call {
                ty: fn() -> library::u8::U8 {library::u8::U8::new},
                fun: e3,
                args: [],
                from_hir_call: true,
                fn_span: src/dns.rs:7:44: 7:53 (#0),
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(1),
            ),
            span: src/dns.rs:7:44: 7:53 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(13),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).13),
                ),
                value: e4,
            },
            ty: library::u8::U8,
            temp_lifetime: Some(
                Node(1),
            ),
            span: src/dns.rs:7:44: 7:53 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::u8::U8) -> std::rc::Rc<library::u8::U8> {std::rc::Rc::<library::u8::U8>::new},
                fun: e1,
                args: [
                    e5,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:7:36: 7:54 (#0),
            },
            ty: std::rc::Rc<library::u8::U8>,
            temp_lifetime: Some(
                Node(1),
            ),
            span: src/dns.rs:7:36: 7:54 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e6,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(1),
            ),
            span: src/dns.rs:7:36: 7:54 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(8),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).8),
                ),
                value: e7,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(1),
            ),
            span: src/dns.rs:7:36: 7:54 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::u16::U16) -> std::rc::Rc<library::u16::U16> {std::rc::Rc::<library::u16::U16>::new},
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/dns.rs:8:37: 8:44 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(28),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).28),
                ),
                value: e9,
            },
            ty: fn(library::u16::U16) -> std::rc::Rc<library::u16::U16> {std::rc::Rc::<library::u16::U16>::new},
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/dns.rs:8:37: 8:44 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn() -> library::u16::U16 {library::u16::U16::new},
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/dns.rs:8:45: 8:53 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(33),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).33),
                ),
                value: e11,
            },
            ty: fn() -> library::u16::U16 {library::u16::U16::new},
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/dns.rs:8:45: 8:53 (#0),
        },
        Expr {
            kind: Call {
                ty: fn() -> library::u16::U16 {library::u16::U16::new},
                fun: e12,
                args: [],
                from_hir_call: true,
                fn_span: src/dns.rs:8:45: 8:55 (#0),
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/dns.rs:8:45: 8:55 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(32),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).32),
                ),
                value: e13,
            },
            ty: library::u16::U16,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/dns.rs:8:45: 8:55 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::u16::U16) -> std::rc::Rc<library::u16::U16> {std::rc::Rc::<library::u16::U16>::new},
                fun: e10,
                args: [
                    e14,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:8:37: 8:56 (#0),
            },
            ty: std::rc::Rc<library::u16::U16>,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/dns.rs:8:37: 8:56 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e15,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/dns.rs:8:37: 8:56 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(27),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).27),
                ),
                value: e16,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(20),
            ),
            span: src/dns.rs:8:37: 8:56 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::sequence::Sequence) -> std::rc::Rc<library::sequence::Sequence> {std::rc::Rc::<library::sequence::Sequence>::new},
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:9:37: 9:44 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(47),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).47),
                ),
                value: e18,
            },
            ty: fn(library::sequence::Sequence) -> std::rc::Rc<library::sequence::Sequence> {std::rc::Rc::<library::sequence::Sequence>::new},
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:9:37: 9:44 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(core::bolts::ChildMap) -> library::sequence::Sequence {library::sequence::Sequence::new},
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:9:45: 9:58 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(52),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).52),
                ),
                value: e20,
            },
            ty: fn(core::bolts::ChildMap) -> library::sequence::Sequence {library::sequence::Sequence::new},
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:9:45: 9:58 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(2:2508 ~ core[102f]::convert::From::from),
                            UserSubsts {
                                substs: [
                                    core::bolts::ChildMap,
                                    ^0,
                                ],
                                user_self_ty: None,
                            },
                        ),
                    },
                ),
            },
            ty: fn([(&str, std::rc::Rc<dyn core::DataModel>); 4]) -> core::bolts::ChildMap {<core::bolts::ChildMap as std::convert::From<[(&str, std::rc::Rc<dyn core::DataModel>); 4]>>::from},
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:9:59: 9:73 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(57),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).57),
                ),
                value: e22,
            },
            ty: fn([(&str, std::rc::Rc<dyn core::DataModel>); 4]) -> core::bolts::ChildMap {<core::bolts::ChildMap as std::convert::From<[(&str, std::rc::Rc<dyn core::DataModel>); 4]>>::from},
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:9:59: 9:73 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "b0",
                        Cooked,
                    ),
                    span: src/dns.rs:10:10: 10:14 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:10:10: 10:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(63),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).63),
                ),
                value: e24,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:10:10: 10:14 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).19),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:10:16: 10:21 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e26,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:10:16: 10:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(66),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).66),
                ),
                value: e27,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:10:16: 10:21 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:10:22: 10:27 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e29,
                args: [
                    e28,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:10:22: 10:29 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:10:16: 10:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(64),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).64),
                ),
                value: e30,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:10:16: 10:29 (#0),
        },
        Expr {
            kind: Tuple {
                fields: [
                    e25,
                    e31,
                ],
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:10:9: 10:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(62),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).62),
                ),
                value: e32,
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:10:9: 10:30 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "b1",
                        Cooked,
                    ),
                    span: src/dns.rs:11:10: 11:14 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:11:10: 11:14 (#0),
        },
        Expr {
            kind: Deref {
                arg: e34,
            },
            ty: str,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:11:10: 11:14 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e35,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:11:10: 11:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(69),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).69),
                ),
                value: e36,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:11:10: 11:14 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).19),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:11:16: 11:21 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e38,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:11:16: 11:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(72),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).72),
                ),
                value: e39,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:11:16: 11:21 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:11:22: 11:27 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e41,
                args: [
                    e40,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:11:22: 11:29 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:11:16: 11:29 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e42,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:11:16: 11:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(70),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).70),
                ),
                value: e43,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:11:16: 11:29 (#0),
        },
        Expr {
            kind: Tuple {
                fields: [
                    e37,
                    e44,
                ],
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:11:9: 11:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(68),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).68),
                ),
                value: e45,
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:11:9: 11:30 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "b2",
                        Cooked,
                    ),
                    span: src/dns.rs:12:10: 12:14 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:12:10: 12:14 (#0),
        },
        Expr {
            kind: Deref {
                arg: e47,
            },
            ty: str,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:12:10: 12:14 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e48,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:12:10: 12:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(75),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).75),
                ),
                value: e49,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:12:10: 12:14 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).19),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:12:16: 12:21 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e51,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:12:16: 12:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(78),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).78),
                ),
                value: e52,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:12:16: 12:21 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:12:22: 12:27 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e54,
                args: [
                    e53,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:12:22: 12:29 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:12:16: 12:29 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e55,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:12:16: 12:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(76),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).76),
                ),
                value: e56,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:12:16: 12:29 (#0),
        },
        Expr {
            kind: Tuple {
                fields: [
                    e50,
                    e57,
                ],
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:12:9: 12:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(74),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).74),
                ),
                value: e58,
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:12:9: 12:30 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "b3",
                        Cooked,
                    ),
                    span: src/dns.rs:13:10: 13:14 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:13:10: 13:14 (#0),
        },
        Expr {
            kind: Deref {
                arg: e60,
            },
            ty: str,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:13:10: 13:14 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e61,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:13:10: 13:14 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(81),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).81),
                ),
                value: e62,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:13:10: 13:14 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).19),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:13:16: 13:21 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e64,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:13:16: 13:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(84),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).84),
                ),
                value: e65,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:13:16: 13:21 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:13:22: 13:27 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e67,
                args: [
                    e66,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:13:22: 13:29 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:13:16: 13:29 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e68,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:13:16: 13:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(82),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).82),
                ),
                value: e69,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:13:16: 13:29 (#0),
        },
        Expr {
            kind: Tuple {
                fields: [
                    e63,
                    e70,
                ],
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:13:9: 13:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(80),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).80),
                ),
                value: e71,
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:13:9: 13:30 (#0),
        },
        Expr {
            kind: Array {
                fields: [
                    e33,
                    e46,
                    e59,
                    e72,
                ],
            },
            ty: [(&str, std::rc::Rc<dyn core::DataModel>); 4],
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:9:74: 14:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(61),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).61),
                ),
                value: e73,
            },
            ty: [(&str, std::rc::Rc<dyn core::DataModel>); 4],
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:9:74: 14:6 (#0),
        },
        Expr {
            kind: Call {
                ty: fn([(&str, std::rc::Rc<dyn core::DataModel>); 4]) -> core::bolts::ChildMap {<core::bolts::ChildMap as std::convert::From<[(&str, std::rc::Rc<dyn core::DataModel>); 4]>>::from},
                fun: e23,
                args: [
                    e74,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:9:59: 14:7 (#0),
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:9:59: 14:7 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(56),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).56),
                ),
                value: e75,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:9:59: 14:7 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(core::bolts::ChildMap) -> library::sequence::Sequence {library::sequence::Sequence::new},
                fun: e21,
                args: [
                    e76,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:9:45: 14:8 (#0),
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:9:45: 14:8 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(51),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).51),
                ),
                value: e77,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:9:45: 14:8 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::sequence::Sequence) -> std::rc::Rc<library::sequence::Sequence> {std::rc::Rc::<library::sequence::Sequence>::new},
                fun: e19,
                args: [
                    e78,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:9:37: 14:9 (#0),
            },
            ty: std::rc::Rc<library::sequence::Sequence>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:9:37: 14:9 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e79,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:9:37: 14:9 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(46),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).46),
                ),
                value: e80,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(39),
            ),
            span: src/dns.rs:9:37: 14:9 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::rc::Rc<std::vec::Vec<std::boxed::Box<(dyn core::DataModel + 'static)>>>, std::rc::Rc<(dyn core::DataModel + 'static)>) -> library::union::Union {library::union::Union::new},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:15:21: 15:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(90),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).90),
                ),
                value: e82,
            },
            ty: fn(std::rc::Rc<std::vec::Vec<std::boxed::Box<(dyn core::DataModel + 'static)>>>, std::rc::Rc<(dyn core::DataModel + 'static)>) -> library::union::Union {library::union::Union::new},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:15:21: 15:31 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(std::vec::Vec<std::boxed::Box<dyn core::DataModel>>) -> std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>> {std::rc::Rc::<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>::new},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:15:32: 15:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(95),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).95),
                ),
                value: e84,
            },
            ty: fn(std::vec::Vec<std::boxed::Box<dyn core::DataModel>>) -> std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>> {std::rc::Rc::<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>::new},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:15:32: 15:39 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:5127 ~ alloc[42dc]::slice::{impl#0}::into_vec),
                            UserSubsts {
                                substs: [
                                    ^0,
                                    ^1,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:5110 ~ alloc[42dc]::slice::{impl#0}),
                                        self_ty: [^2],
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(std::boxed::Box<[std::boxed::Box<dyn core::DataModel>]>) -> std::vec::Vec<std::boxed::Box<dyn core::DataModel>> {std::slice::<impl [std::boxed::Box<dyn core::DataModel>]>::into_vec::<std::alloc::Global>},
            temp_lifetime: Some(
                Node(88),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 50:51 (#84),
        },
        Expr {
            kind: Scope {
                region_scope: Node(100),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).100),
                ),
                value: e86,
            },
            ty: fn(std::boxed::Box<[std::boxed::Box<dyn core::DataModel>]>) -> std::vec::Vec<std::boxed::Box<dyn core::DataModel>> {std::slice::<impl [std::boxed::Box<dyn core::DataModel>]>::into_vec::<std::alloc::Global>},
            temp_lifetime: Some(
                Node(88),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 50:51 (#84),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:296 ~ alloc[42dc]::boxed::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:294 ~ alloc[42dc]::boxed::{impl#0}),
                                        self_ty: std::boxed::Box<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::sequence::Sequence) -> std::boxed::Box<library::sequence::Sequence> {std::boxed::Box::<library::sequence::Sequence>::new},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:16:9: 16:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(113),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).113),
                ),
                value: e88,
            },
            ty: fn(library::sequence::Sequence) -> std::boxed::Box<library::sequence::Sequence> {std::boxed::Box::<library::sequence::Sequence>::new},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:16:9: 16:17 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(core::bolts::ChildMap) -> library::sequence::Sequence {library::sequence::Sequence::new},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:16:18: 16:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(118),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).118),
                ),
                value: e90,
            },
            ty: fn(core::bolts::ChildMap) -> library::sequence::Sequence {library::sequence::Sequence::new},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:16:18: 16:31 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(2:2508 ~ core[102f]::convert::From::from),
                            UserSubsts {
                                substs: [
                                    core::bolts::ChildMap,
                                    ^0,
                                ],
                                user_self_ty: None,
                            },
                        ),
                    },
                ),
            },
            ty: fn([(&str, std::rc::Rc<dyn core::DataModel>); 2]) -> core::bolts::ChildMap {<core::bolts::ChildMap as std::convert::From<[(&str, std::rc::Rc<dyn core::DataModel>); 2]>>::from},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:16:32: 16:46 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(123),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).123),
                ),
                value: e92,
            },
            ty: fn([(&str, std::rc::Rc<dyn core::DataModel>); 2]) -> core::bolts::ChildMap {<core::bolts::ChildMap as std::convert::From<[(&str, std::rc::Rc<dyn core::DataModel>); 2]>>::from},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:16:32: 16:46 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "length",
                        Cooked,
                    ),
                    span: src/dns.rs:17:14: 17:22 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:17:14: 17:22 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(129),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).129),
                ),
                value: e94,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:17:14: 17:22 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::constraint::Constraint) -> std::rc::Rc<library::constraint::Constraint> {std::rc::Rc::<library::constraint::Constraint>::new},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:17:24: 17:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(132),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).132),
                ),
                value: e96,
            },
            ty: fn(library::constraint::Constraint) -> std::rc::Rc<library::constraint::Constraint> {std::rc::Rc::<library::constraint::Constraint>::new},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:17:24: 17:31 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::rc::Rc<(dyn core::DataModel + 'static)>, std::rc::Rc<(dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool + 'static)>) -> library::constraint::Constraint {library::constraint::Constraint::new},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:17:32: 17:47 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(137),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).137),
                ),
                value: e98,
            },
            ty: fn(std::rc::Rc<(dyn core::DataModel + 'static)>, std::rc::Rc<(dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool + 'static)>) -> library::constraint::Constraint {library::constraint::Constraint::new},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:17:32: 17:47 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).19),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:17:48: 17:53 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e100,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:17:48: 17:61 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(143),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).143),
                ),
                value: e101,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:17:48: 17:53 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:17:54: 17:59 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e103,
                args: [
                    e102,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:17:54: 17:61 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:17:48: 17:61 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e104,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:17:48: 17:61 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(141),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).141),
                ),
                value: e105,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:17:48: 17:61 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn([closure@src/dns.rs:17:71: 17:76]) -> std::rc::Rc<[closure@src/dns.rs:17:71: 17:76]> {std::rc::Rc::<[closure@src/dns.rs:17:71: 17:76]>::new},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:17:63: 17:70 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(146),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).146),
                ),
                value: e107,
            },
            ty: fn([closure@src/dns.rs:17:71: 17:76]) -> std::rc::Rc<[closure@src/dns.rs:17:71: 17:76]> {std::rc::Rc::<[closure@src/dns.rs:17:71: 17:76]>::new},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:17:63: 17:70 (#0),
        },
        Expr {
            kind: Closure(
                ClosureExpr {
                    closure_id: DefId(0:512 ~ andrew_fuzz[741f]::dns::dns::{closure#6}),
                    substs: Closure(
                        [
                            i8,
                            for<'a> extern "rust-call" fn((std::rc::Rc<core::context::Context<'a>>,)) -> bool,
                            (),
                        ],
                    ),
                    upvars: [],
                    movability: None,
                    fake_reads: [],
                },
            ),
            ty: [closure@src/dns.rs:17:71: 17:76],
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:17:71: 17:101 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(150),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).150),
                ),
                value: e109,
            },
            ty: [closure@src/dns.rs:17:71: 17:76],
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:17:71: 17:101 (#0),
        },
        Expr {
            kind: Call {
                ty: fn([closure@src/dns.rs:17:71: 17:76]) -> std::rc::Rc<[closure@src/dns.rs:17:71: 17:76]> {std::rc::Rc::<[closure@src/dns.rs:17:71: 17:76]>::new},
                fun: e108,
                args: [
                    e110,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:17:63: 17:102 (#0),
            },
            ty: std::rc::Rc<[closure@src/dns.rs:17:71: 17:76]>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:17:63: 17:102 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e111,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:17:63: 17:102 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(145),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).145),
                ),
                value: e112,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:17:63: 17:102 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::rc::Rc<(dyn core::DataModel + 'static)>, std::rc::Rc<(dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool + 'static)>) -> library::constraint::Constraint {library::constraint::Constraint::new},
                fun: e99,
                args: [
                    e106,
                    e113,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:17:32: 17:103 (#0),
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:17:32: 17:103 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(136),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).136),
                ),
                value: e114,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:17:32: 17:103 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::constraint::Constraint) -> std::rc::Rc<library::constraint::Constraint> {std::rc::Rc::<library::constraint::Constraint>::new},
                fun: e97,
                args: [
                    e115,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:17:24: 17:104 (#0),
            },
            ty: std::rc::Rc<library::constraint::Constraint>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:17:24: 17:104 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e116,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:17:24: 17:104 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(131),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).131),
                ),
                value: e117,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:17:24: 17:104 (#0),
        },
        Expr {
            kind: Use {
                source: e118,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:17:24: 17:125 (#0),
        },
        Expr {
            kind: ValueTypeAscription {
                source: e119,
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                        ],
                        value: Ty(
                            std::rc::Rc<dyn core::DataModel>,
                        ),
                    },
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:17:24: 17:125 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(130),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).130),
                ),
                value: e120,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:17:24: 17:125 (#0),
        },
        Expr {
            kind: Tuple {
                fields: [
                    e95,
                    e121,
                ],
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:17:13: 17:126 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(128),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).128),
                ),
                value: e122,
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:17:13: 17:126 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "letters",
                        Cooked,
                    ),
                    span: src/dns.rs:18:14: 18:23 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:14: 18:23 (#0),
        },
        Expr {
            kind: Deref {
                arg: e124,
            },
            ty: str,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:14: 18:23 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e125,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:14: 18:23 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(169),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).169),
                ),
                value: e126,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:14: 18:23 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::set::Set) -> std::rc::Rc<library::set::Set> {std::rc::Rc::<library::set::Set>::new},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:25: 18:32 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(172),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).172),
                ),
                value: e128,
            },
            ty: fn(library::set::Set) -> std::rc::Rc<library::set::Set> {std::rc::Rc::<library::set::Set>::new},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:25: 18:32 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::rc::Rc<(dyn core::DataModel + 'static)>, std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>>, std::rc::Rc<(dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool + 'static)>) -> library::set::Set {library::set::Set::new},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:33: 18:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(177),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).177),
                ),
                value: e130,
            },
            ty: fn(std::rc::Rc<(dyn core::DataModel + 'static)>, std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>>, std::rc::Rc<(dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool + 'static)>) -> library::set::Set {library::set::Set::new},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:33: 18:41 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).19),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:42: 18:47 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e132,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:42: 18:55 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(183),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).183),
                ),
                value: e133,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:42: 18:47 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:48: 18:53 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e135,
                args: [
                    e134,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:18:48: 18:55 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:42: 18:55 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e136,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:42: 18:55 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(181),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).181),
                ),
                value: e137,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:42: 18:55 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:6607 ~ alloc[42dc]::vec::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:6605 ~ alloc[42dc]::vec::{impl#0}),
                                        self_ty: std::vec::Vec<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:57: 18:65 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(186),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).186),
                ),
                value: e139,
            },
            ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:57: 18:65 (#0),
        },
        Expr {
            kind: Call {
                ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
                fun: e140,
                args: [],
                from_hir_call: true,
                fn_span: src/dns.rs:18:57: 18:67 (#0),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:57: 18:67 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(185),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).185),
                ),
                value: e141,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:57: 18:67 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn([closure@src/dns.rs:18:77: 18:82]) -> std::rc::Rc<[closure@src/dns.rs:18:77: 18:82]> {std::rc::Rc::<[closure@src/dns.rs:18:77: 18:82]>::new},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:69: 18:76 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(191),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).191),
                ),
                value: e143,
            },
            ty: fn([closure@src/dns.rs:18:77: 18:82]) -> std::rc::Rc<[closure@src/dns.rs:18:77: 18:82]> {std::rc::Rc::<[closure@src/dns.rs:18:77: 18:82]>::new},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:69: 18:76 (#0),
        },
        Expr {
            kind: Closure(
                ClosureExpr {
                    closure_id: DefId(0:513 ~ andrew_fuzz[741f]::dns::dns::{closure#7}),
                    substs: Closure(
                        [
                            i8,
                            for<'a> extern "rust-call" fn((std::rc::Rc<core::context::Context<'a>>,)) -> bool,
                            (),
                        ],
                    ),
                    upvars: [],
                    movability: None,
                    fake_reads: [],
                },
            ),
            ty: [closure@src/dns.rs:18:77: 18:82],
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:77: 18:164 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(195),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).195),
                ),
                value: e145,
            },
            ty: [closure@src/dns.rs:18:77: 18:82],
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:77: 18:164 (#0),
        },
        Expr {
            kind: Call {
                ty: fn([closure@src/dns.rs:18:77: 18:82]) -> std::rc::Rc<[closure@src/dns.rs:18:77: 18:82]> {std::rc::Rc::<[closure@src/dns.rs:18:77: 18:82]>::new},
                fun: e144,
                args: [
                    e146,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:18:69: 18:165 (#0),
            },
            ty: std::rc::Rc<[closure@src/dns.rs:18:77: 18:82]>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:69: 18:165 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e147,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:69: 18:165 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(190),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).190),
                ),
                value: e148,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:69: 18:165 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::rc::Rc<(dyn core::DataModel + 'static)>, std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>>, std::rc::Rc<(dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool + 'static)>) -> library::set::Set {library::set::Set::new},
                fun: e131,
                args: [
                    e138,
                    e142,
                    e149,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:18:33: 18:166 (#0),
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:33: 18:166 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(176),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).176),
                ),
                value: e150,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:33: 18:166 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::set::Set) -> std::rc::Rc<library::set::Set> {std::rc::Rc::<library::set::Set>::new},
                fun: e129,
                args: [
                    e151,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:18:25: 18:167 (#0),
            },
            ty: std::rc::Rc<library::set::Set>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:25: 18:167 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e152,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:25: 18:167 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(171),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).171),
                ),
                value: e153,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:25: 18:167 (#0),
        },
        Expr {
            kind: Use {
                source: e154,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:25: 18:188 (#0),
        },
        Expr {
            kind: ValueTypeAscription {
                source: e155,
                user_ty: Some(
                    Canonical {
                        max_universe: U1,
                        variables: [
                            CanonicalVarInfo {
                                kind: Region(
                                    U1,
                                ),
                            },
                        ],
                        value: Ty(
                            std::rc::Rc<dyn core::DataModel>,
                        ),
                    },
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:25: 18:188 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e156,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:25: 18:188 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(170),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).170),
                ),
                value: e157,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:25: 18:188 (#0),
        },
        Expr {
            kind: Tuple {
                fields: [
                    e127,
                    e158,
                ],
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:13: 18:189 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(168),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).168),
                ),
                value: e159,
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:18:13: 18:189 (#0),
        },
        Expr {
            kind: Array {
                fields: [
                    e123,
                    e160,
                ],
            },
            ty: [(&str, std::rc::Rc<dyn core::DataModel>); 2],
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:16:47: 19:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(127),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).127),
                ),
                value: e161,
            },
            ty: [(&str, std::rc::Rc<dyn core::DataModel>); 2],
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:16:47: 19:10 (#0),
        },
        Expr {
            kind: Call {
                ty: fn([(&str, std::rc::Rc<dyn core::DataModel>); 2]) -> core::bolts::ChildMap {<core::bolts::ChildMap as std::convert::From<[(&str, std::rc::Rc<dyn core::DataModel>); 2]>>::from},
                fun: e93,
                args: [
                    e162,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:16:32: 19:11 (#0),
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:16:32: 19:11 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(122),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).122),
                ),
                value: e163,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:16:32: 19:11 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(core::bolts::ChildMap) -> library::sequence::Sequence {library::sequence::Sequence::new},
                fun: e91,
                args: [
                    e164,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:16:18: 19:12 (#0),
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:16:18: 19:12 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(117),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).117),
                ),
                value: e165,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:16:18: 19:12 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::sequence::Sequence) -> std::boxed::Box<library::sequence::Sequence> {std::boxed::Box::<library::sequence::Sequence>::new},
                fun: e89,
                args: [
                    e166,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:16:9: 19:13 (#0),
            },
            ty: std::boxed::Box<library::sequence::Sequence>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:16:9: 19:13 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e167,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:16:9: 19:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(112),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).112),
                ),
                value: e168,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:16:9: 19:13 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:296 ~ alloc[42dc]::boxed::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:294 ~ alloc[42dc]::boxed::{impl#0}),
                                        self_ty: std::boxed::Box<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::sequence::Sequence) -> std::boxed::Box<library::sequence::Sequence> {std::boxed::Box::<library::sequence::Sequence>::new},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:20:9: 20:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(231),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).231),
                ),
                value: e170,
            },
            ty: fn(library::sequence::Sequence) -> std::boxed::Box<library::sequence::Sequence> {std::boxed::Box::<library::sequence::Sequence>::new},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:20:9: 20:17 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(core::bolts::ChildMap) -> library::sequence::Sequence {library::sequence::Sequence::new},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:20:18: 20:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(236),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).236),
                ),
                value: e172,
            },
            ty: fn(core::bolts::ChildMap) -> library::sequence::Sequence {library::sequence::Sequence::new},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:20:18: 20:31 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(2:2508 ~ core[102f]::convert::From::from),
                            UserSubsts {
                                substs: [
                                    core::bolts::ChildMap,
                                    ^0,
                                ],
                                user_self_ty: None,
                            },
                        ),
                    },
                ),
            },
            ty: fn([(&str, std::rc::Rc<dyn core::DataModel>); 2]) -> core::bolts::ChildMap {<core::bolts::ChildMap as std::convert::From<[(&str, std::rc::Rc<dyn core::DataModel>); 2]>>::from},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:20:32: 20:46 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(241),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).241),
                ),
                value: e174,
            },
            ty: fn([(&str, std::rc::Rc<dyn core::DataModel>); 2]) -> core::bolts::ChildMap {<core::bolts::ChildMap as std::convert::From<[(&str, std::rc::Rc<dyn core::DataModel>); 2]>>::from},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:20:32: 20:46 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "marker",
                        Cooked,
                    ),
                    span: src/dns.rs:21:14: 21:22 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:21:14: 21:22 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(247),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).247),
                ),
                value: e176,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:21:14: 21:22 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::constraint::Constraint) -> std::rc::Rc<library::constraint::Constraint> {std::rc::Rc::<library::constraint::Constraint>::new},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:21:24: 21:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(250),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).250),
                ),
                value: e178,
            },
            ty: fn(library::constraint::Constraint) -> std::rc::Rc<library::constraint::Constraint> {std::rc::Rc::<library::constraint::Constraint>::new},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:21:24: 21:31 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::rc::Rc<(dyn core::DataModel + 'static)>, std::rc::Rc<(dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool + 'static)>) -> library::constraint::Constraint {library::constraint::Constraint::new},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:21:32: 21:47 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(255),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).255),
                ),
                value: e180,
            },
            ty: fn(std::rc::Rc<(dyn core::DataModel + 'static)>, std::rc::Rc<(dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool + 'static)>) -> library::constraint::Constraint {library::constraint::Constraint::new},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:21:32: 21:47 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).19),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:21:48: 21:53 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e182,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:21:48: 21:61 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(261),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).261),
                ),
                value: e183,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:21:48: 21:53 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:21:54: 21:59 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e185,
                args: [
                    e184,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:21:54: 21:61 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:21:48: 21:61 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e186,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:21:48: 21:61 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(259),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).259),
                ),
                value: e187,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:21:48: 21:61 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn([closure@src/dns.rs:21:71: 21:76]) -> std::rc::Rc<[closure@src/dns.rs:21:71: 21:76]> {std::rc::Rc::<[closure@src/dns.rs:21:71: 21:76]>::new},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:21:63: 21:70 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(264),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).264),
                ),
                value: e189,
            },
            ty: fn([closure@src/dns.rs:21:71: 21:76]) -> std::rc::Rc<[closure@src/dns.rs:21:71: 21:76]> {std::rc::Rc::<[closure@src/dns.rs:21:71: 21:76]>::new},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:21:63: 21:70 (#0),
        },
        Expr {
            kind: Closure(
                ClosureExpr {
                    closure_id: DefId(0:514 ~ andrew_fuzz[741f]::dns::dns::{closure#8}),
                    substs: Closure(
                        [
                            i8,
                            for<'a> extern "rust-call" fn((std::rc::Rc<core::context::Context<'a>>,)) -> bool,
                            (),
                        ],
                    ),
                    upvars: [],
                    movability: None,
                    fake_reads: [],
                },
            ),
            ty: [closure@src/dns.rs:21:71: 21:76],
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:21:71: 21:102 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(268),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).268),
                ),
                value: e191,
            },
            ty: [closure@src/dns.rs:21:71: 21:76],
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:21:71: 21:102 (#0),
        },
        Expr {
            kind: Call {
                ty: fn([closure@src/dns.rs:21:71: 21:76]) -> std::rc::Rc<[closure@src/dns.rs:21:71: 21:76]> {std::rc::Rc::<[closure@src/dns.rs:21:71: 21:76]>::new},
                fun: e190,
                args: [
                    e192,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:21:63: 21:103 (#0),
            },
            ty: std::rc::Rc<[closure@src/dns.rs:21:71: 21:76]>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:21:63: 21:103 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e193,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:21:63: 21:103 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(263),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).263),
                ),
                value: e194,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:21:63: 21:103 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::rc::Rc<(dyn core::DataModel + 'static)>, std::rc::Rc<(dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool + 'static)>) -> library::constraint::Constraint {library::constraint::Constraint::new},
                fun: e181,
                args: [
                    e188,
                    e195,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:21:32: 21:104 (#0),
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:21:32: 21:104 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(254),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).254),
                ),
                value: e196,
            },
            ty: library::constraint::Constraint,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:21:32: 21:104 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::constraint::Constraint) -> std::rc::Rc<library::constraint::Constraint> {std::rc::Rc::<library::constraint::Constraint>::new},
                fun: e179,
                args: [
                    e197,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:21:24: 21:105 (#0),
            },
            ty: std::rc::Rc<library::constraint::Constraint>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:21:24: 21:105 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e198,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:21:24: 21:105 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(249),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).249),
                ),
                value: e199,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:21:24: 21:105 (#0),
        },
        Expr {
            kind: Use {
                source: e200,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:21:24: 21:126 (#0),
        },
        Expr {
            kind: ValueTypeAscription {
                source: e201,
                user_ty: Some(
                    Canonical {
                        max_universe: U1,
                        variables: [
                            CanonicalVarInfo {
                                kind: Region(
                                    U1,
                                ),
                            },
                        ],
                        value: Ty(
                            std::rc::Rc<dyn core::DataModel>,
                        ),
                    },
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:21:24: 21:126 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(248),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).248),
                ),
                value: e202,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:21:24: 21:126 (#0),
        },
        Expr {
            kind: Tuple {
                fields: [
                    e177,
                    e203,
                ],
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:21:13: 21:127 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(246),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).246),
                ),
                value: e204,
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:21:13: 21:127 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "ref",
                        Cooked,
                    ),
                    span: src/dns.rs:22:14: 22:19 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:22:14: 22:19 (#0),
        },
        Expr {
            kind: Deref {
                arg: e206,
            },
            ty: str,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:22:14: 22:19 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e207,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:22:14: 22:19 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(287),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).287),
                ),
                value: e208,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:22:14: 22:19 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).19),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:22:21: 22:26 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e210,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:22:21: 22:34 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(290),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).290),
                ),
                value: e211,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:22:21: 22:26 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:22:27: 22:32 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e213,
                args: [
                    e212,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:22:27: 22:34 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:22:21: 22:34 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e214,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:22:21: 22:34 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(288),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).288),
                ),
                value: e215,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:22:21: 22:34 (#0),
        },
        Expr {
            kind: Tuple {
                fields: [
                    e209,
                    e216,
                ],
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:22:13: 22:35 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(286),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).286),
                ),
                value: e217,
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:22:13: 22:35 (#0),
        },
        Expr {
            kind: Array {
                fields: [
                    e205,
                    e218,
                ],
            },
            ty: [(&str, std::rc::Rc<dyn core::DataModel>); 2],
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:20:47: 23:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(245),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).245),
                ),
                value: e219,
            },
            ty: [(&str, std::rc::Rc<dyn core::DataModel>); 2],
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:20:47: 23:10 (#0),
        },
        Expr {
            kind: Call {
                ty: fn([(&str, std::rc::Rc<dyn core::DataModel>); 2]) -> core::bolts::ChildMap {<core::bolts::ChildMap as std::convert::From<[(&str, std::rc::Rc<dyn core::DataModel>); 2]>>::from},
                fun: e175,
                args: [
                    e220,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:20:32: 23:11 (#0),
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:20:32: 23:11 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(240),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).240),
                ),
                value: e221,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:20:32: 23:11 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(core::bolts::ChildMap) -> library::sequence::Sequence {library::sequence::Sequence::new},
                fun: e173,
                args: [
                    e222,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:20:18: 23:12 (#0),
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:20:18: 23:12 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(235),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).235),
                ),
                value: e223,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:20:18: 23:12 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::sequence::Sequence) -> std::boxed::Box<library::sequence::Sequence> {std::boxed::Box::<library::sequence::Sequence>::new},
                fun: e171,
                args: [
                    e224,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:20:9: 23:13 (#0),
            },
            ty: std::boxed::Box<library::sequence::Sequence>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:20:9: 23:13 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e225,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:20:9: 23:13 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(230),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).230),
                ),
                value: e226,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:20:9: 23:13 (#0),
        },
        Expr {
            kind: Array {
                fields: [
                    e169,
                    e227,
                ],
            },
            ty: [std::boxed::Box<dyn core::DataModel>; 2],
            temp_lifetime: Some(
                Node(88),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:37: 54:46 (#84),
        },
        Expr {
            kind: Scope {
                region_scope: Node(111),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).111),
                ),
                value: e228,
            },
            ty: [std::boxed::Box<dyn core::DataModel>; 2],
            temp_lifetime: Some(
                Node(88),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:37: 54:46 (#84),
        },
        Expr {
            kind: Box {
                value: e229,
            },
            ty: std::boxed::Box<[std::boxed::Box<dyn core::DataModel>; 2]>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13: 54:47 (#84),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e230,
            },
            ty: std::boxed::Box<[std::boxed::Box<dyn core::DataModel>]>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13: 54:47 (#84),
        },
        Expr {
            kind: Scope {
                region_scope: Node(104),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).104),
                ),
                value: e231,
            },
            ty: std::boxed::Box<[std::boxed::Box<dyn core::DataModel>]>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13: 54:47 (#84),
        },
        Expr {
            kind: Call {
                ty: fn(std::boxed::Box<[std::boxed::Box<dyn core::DataModel>]>) -> std::vec::Vec<std::boxed::Box<dyn core::DataModel>> {std::slice::<impl [std::boxed::Box<dyn core::DataModel>]>::into_vec::<std::alloc::Global>},
                fun: e87,
                args: [
                    e232,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 55:10 (#84),
            },
            ty: std::vec::Vec<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 55:10 (#84),
        },
        Expr {
            kind: Scope {
                region_scope: Node(99),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).99),
                ),
                value: e233,
            },
            ty: std::vec::Vec<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 55:10 (#84),
        },
        Expr {
            kind: Call {
                ty: fn(std::vec::Vec<std::boxed::Box<dyn core::DataModel>>) -> std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>> {std::rc::Rc::<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>::new},
                fun: e85,
                args: [
                    e234,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:15:32: 24:7 (#0),
            },
            ty: std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:15:32: 24:7 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(94),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).94),
                ),
                value: e235,
            },
            ty: std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:15:32: 24:7 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).19),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:24:9: 24:14 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e237,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:24:9: 24:22 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(294),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).294),
                ),
                value: e238,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:24:9: 24:14 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:24:15: 24:20 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e240,
                args: [
                    e239,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:24:15: 24:22 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:24:9: 24:22 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e241,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:24:9: 24:22 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(292),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).292),
                ),
                value: e242,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:24:9: 24:22 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::rc::Rc<std::vec::Vec<std::boxed::Box<(dyn core::DataModel + 'static)>>>, std::rc::Rc<(dyn core::DataModel + 'static)>) -> library::union::Union {library::union::Union::new},
                fun: e83,
                args: [
                    e236,
                    e243,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:15:21: 24:23 (#0),
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:15:21: 24:23 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(89),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).89),
                ),
                value: e244,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(88),
            ),
            span: src/dns.rs:15:21: 24:23 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).297),
                ),
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(304),
            ),
            span: src/dns.rs:25:5: 25:10 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e246,
            },
            ty: &mut library::union::Union,
            temp_lifetime: Some(
                Node(304),
            ),
            span: src/dns.rs:25:5: 25:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(300),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).300),
                ),
                value: e247,
            },
            ty: &mut library::union::Union,
            temp_lifetime: Some(
                Node(304),
            ),
            span: src/dns.rs:25:5: 25:10 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "label",
                        Cooked,
                    ),
                    span: src/dns.rs:25:21: 25:28 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(304),
            ),
            span: src/dns.rs:25:21: 25:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(303),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).303),
                ),
                value: e249,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(304),
            ),
            span: src/dns.rs:25:21: 25:28 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e250,
            },
            ty: &&str,
            temp_lifetime: Some(
                Node(304),
            ),
            span: src/dns.rs:25:20: 25:28 (#0),
        },
        Expr {
            kind: Deref {
                arg: e251,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(304),
            ),
            span: src/dns.rs:25:20: 25:28 (#0),
        },
        Expr {
            kind: Deref {
                arg: e252,
            },
            ty: str,
            temp_lifetime: Some(
                Node(304),
            ),
            span: src/dns.rs:25:20: 25:28 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e253,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(304),
            ),
            span: src/dns.rs:25:20: 25:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(302),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).302),
                ),
                value: e254,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(304),
            ),
            span: src/dns.rs:25:20: 25:28 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b> fn(&'a mut library::union::Union, &'b str) {<library::union::Union as core::Named>::set_name},
            temp_lifetime: Some(
                Node(304),
            ),
            span: src/dns.rs:25:11: 25:19 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b> fn(&'a mut library::union::Union, &'b str) {<library::union::Union as core::Named>::set_name},
                fun: e256,
                args: [
                    e248,
                    e255,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:25:11: 25:29 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(304),
            ),
            span: src/dns.rs:25:5: 25:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(298),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).298),
                ),
                value: e257,
            },
            ty: (),
            temp_lifetime: Some(
                Node(304),
            ),
            span: src/dns.rs:25:5: 25:29 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::union::Union) -> std::rc::Rc<library::union::Union> {std::rc::Rc::<library::union::Union>::new},
            temp_lifetime: Some(
                Node(305),
            ),
            span: src/dns.rs:26:36: 26:43 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(313),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).313),
                ),
                value: e259,
            },
            ty: fn(library::union::Union) -> std::rc::Rc<library::union::Union> {std::rc::Rc::<library::union::Union>::new},
            temp_lifetime: Some(
                Node(305),
            ),
            span: src/dns.rs:26:36: 26:43 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).297),
                ),
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(305),
            ),
            span: src/dns.rs:26:44: 26:49 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(317),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).317),
                ),
                value: e261,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(305),
            ),
            span: src/dns.rs:26:44: 26:49 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::union::Union) -> std::rc::Rc<library::union::Union> {std::rc::Rc::<library::union::Union>::new},
                fun: e260,
                args: [
                    e262,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:26:36: 26:50 (#0),
            },
            ty: std::rc::Rc<library::union::Union>,
            temp_lifetime: Some(
                Node(305),
            ),
            span: src/dns.rs:26:36: 26:50 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e263,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(305),
            ),
            span: src/dns.rs:26:36: 26:50 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(312),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).312),
                ),
                value: e264,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(305),
            ),
            span: src/dns.rs:26:36: 26:50 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn([closure@src/dns.rs:27:69: 27:74]) -> std::rc::Rc<[closure@src/dns.rs:27:69: 27:74]> {std::rc::Rc::<[closure@src/dns.rs:27:69: 27:74]>::new},
            temp_lifetime: Some(
                Node(321),
            ),
            span: src/dns.rs:27:61: 27:68 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(339),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).339),
                ),
                value: e266,
            },
            ty: fn([closure@src/dns.rs:27:69: 27:74]) -> std::rc::Rc<[closure@src/dns.rs:27:69: 27:74]> {std::rc::Rc::<[closure@src/dns.rs:27:69: 27:74]>::new},
            temp_lifetime: Some(
                Node(321),
            ),
            span: src/dns.rs:27:61: 27:68 (#0),
        },
        Expr {
            kind: Closure(
                ClosureExpr {
                    closure_id: DefId(0:505 ~ andrew_fuzz[741f]::dns::dns::{closure#0}),
                    substs: Closure(
                        [
                            i8,
                            for<'a> extern "rust-call" fn((std::rc::Rc<core::context::Context<'a>>,)) -> bool,
                            (),
                        ],
                    ),
                    upvars: [],
                    movability: None,
                    fake_reads: [],
                },
            ),
            ty: [closure@src/dns.rs:27:69: 27:74],
            temp_lifetime: Some(
                Node(321),
            ),
            span: src/dns.rs:27:69: 40:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(343),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).343),
                ),
                value: e268,
            },
            ty: [closure@src/dns.rs:27:69: 27:74],
            temp_lifetime: Some(
                Node(321),
            ),
            span: src/dns.rs:27:69: 40:6 (#0),
        },
        Expr {
            kind: Call {
                ty: fn([closure@src/dns.rs:27:69: 27:74]) -> std::rc::Rc<[closure@src/dns.rs:27:69: 27:74]> {std::rc::Rc::<[closure@src/dns.rs:27:69: 27:74]>::new},
                fun: e267,
                args: [
                    e269,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:27:61: 40:7 (#0),
            },
            ty: std::rc::Rc<[closure@src/dns.rs:27:69: 27:74]>,
            temp_lifetime: Some(
                Node(321),
            ),
            span: src/dns.rs:27:61: 40:7 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e270,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(321),
            ),
            span: src/dns.rs:27:61: 40:7 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(338),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).338),
                ),
                value: e271,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(321),
            ),
            span: src/dns.rs:27:61: 40:7 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::rc::Rc<(dyn core::DataModel + 'static)>, std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>>, std::rc::Rc<(dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool + 'static)>) -> library::set::Set {library::set::Set::new},
            temp_lifetime: Some(
                Node(430),
            ),
            span: src/dns.rs:41:22: 41:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(432),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).432),
                ),
                value: e273,
            },
            ty: fn(std::rc::Rc<(dyn core::DataModel + 'static)>, std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>>, std::rc::Rc<(dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool + 'static)>) -> library::set::Set {library::set::Set::new},
            temp_lifetime: Some(
                Node(430),
            ),
            span: src/dns.rs:41:22: 41:30 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).320),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(430),
            ),
            span: src/dns.rs:41:31: 41:36 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e275,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(430),
            ),
            span: src/dns.rs:41:31: 41:44 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(438),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).438),
                ),
                value: e276,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(430),
            ),
            span: src/dns.rs:41:31: 41:36 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(430),
            ),
            span: src/dns.rs:41:37: 41:42 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e278,
                args: [
                    e277,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:41:37: 41:44 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(430),
            ),
            span: src/dns.rs:41:31: 41:44 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e279,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(430),
            ),
            span: src/dns.rs:41:31: 41:44 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(436),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).436),
                ),
                value: e280,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(430),
            ),
            span: src/dns.rs:41:31: 41:44 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:5127 ~ alloc[42dc]::slice::{impl#0}::into_vec),
                            UserSubsts {
                                substs: [
                                    ^0,
                                    ^1,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:5110 ~ alloc[42dc]::slice::{impl#0}),
                                        self_ty: [^2],
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(std::boxed::Box<[std::rc::Rc<dyn core::DataModel>]>) -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::slice::<impl [std::rc::Rc<dyn core::DataModel>]>::into_vec::<std::alloc::Global>},
            temp_lifetime: Some(
                Node(430),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 50:51 (#86),
        },
        Expr {
            kind: Scope {
                region_scope: Node(441),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).441),
                ),
                value: e282,
            },
            ty: fn(std::boxed::Box<[std::rc::Rc<dyn core::DataModel>]>) -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::slice::<impl [std::rc::Rc<dyn core::DataModel>]>::into_vec::<std::alloc::Global>},
            temp_lifetime: Some(
                Node(430),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 50:51 (#86),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).320),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(430),
            ),
            span: src/dns.rs:41:51: 41:56 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e284,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(430),
            ),
            span: src/dns.rs:41:51: 41:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(455),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).455),
                ),
                value: e285,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(430),
            ),
            span: src/dns.rs:41:51: 41:56 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(430),
            ),
            span: src/dns.rs:41:57: 41:62 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e287,
                args: [
                    e286,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:41:57: 41:64 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(430),
            ),
            span: src/dns.rs:41:51: 41:64 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e288,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(430),
            ),
            span: src/dns.rs:41:51: 41:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(453),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).453),
                ),
                value: e289,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(430),
            ),
            span: src/dns.rs:41:51: 41:64 (#0),
        },
        Expr {
            kind: Array {
                fields: [
                    e290,
                ],
            },
            ty: [std::rc::Rc<dyn core::DataModel>; 1],
            temp_lifetime: Some(
                Node(430),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:37: 54:46 (#86),
        },
        Expr {
            kind: Scope {
                region_scope: Node(452),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).452),
                ),
                value: e291,
            },
            ty: [std::rc::Rc<dyn core::DataModel>; 1],
            temp_lifetime: Some(
                Node(430),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:37: 54:46 (#86),
        },
        Expr {
            kind: Box {
                value: e292,
            },
            ty: std::boxed::Box<[std::rc::Rc<dyn core::DataModel>; 1]>,
            temp_lifetime: Some(
                Node(430),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13: 54:47 (#86),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e293,
            },
            ty: std::boxed::Box<[std::rc::Rc<dyn core::DataModel>]>,
            temp_lifetime: Some(
                Node(430),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13: 54:47 (#86),
        },
        Expr {
            kind: Scope {
                region_scope: Node(445),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).445),
                ),
                value: e294,
            },
            ty: std::boxed::Box<[std::rc::Rc<dyn core::DataModel>]>,
            temp_lifetime: Some(
                Node(430),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13: 54:47 (#86),
        },
        Expr {
            kind: Call {
                ty: fn(std::boxed::Box<[std::rc::Rc<dyn core::DataModel>]>) -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::slice::<impl [std::rc::Rc<dyn core::DataModel>]>::into_vec::<std::alloc::Global>},
                fun: e283,
                args: [
                    e295,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 55:10 (#86),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(430),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 55:10 (#86),
        },
        Expr {
            kind: Scope {
                region_scope: Node(440),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).440),
                ),
                value: e296,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(430),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 55:10 (#86),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).429),
                ),
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(430),
            ),
            span: src/dns.rs:41:67: 41:83 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e298,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(430),
            ),
            span: src/dns.rs:41:67: 41:83 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(457),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).457),
                ),
                value: e299,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(430),
            ),
            span: src/dns.rs:41:67: 41:83 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::rc::Rc<(dyn core::DataModel + 'static)>, std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>>, std::rc::Rc<(dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool + 'static)>) -> library::set::Set {library::set::Set::new},
                fun: e274,
                args: [
                    e281,
                    e297,
                    e300,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:41:22: 41:84 (#0),
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(430),
            ),
            span: src/dns.rs:41:22: 41:84 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(431),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).431),
                ),
                value: e301,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(430),
            ),
            span: src/dns.rs:41:22: 41:84 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).460),
                ),
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(467),
            ),
            span: src/dns.rs:42:5: 42:11 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e303,
            },
            ty: &mut library::set::Set,
            temp_lifetime: Some(
                Node(467),
            ),
            span: src/dns.rs:42:5: 42:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(463),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).463),
                ),
                value: e304,
            },
            ty: &mut library::set::Set,
            temp_lifetime: Some(
                Node(467),
            ),
            span: src/dns.rs:42:5: 42:11 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "domain",
                        Cooked,
                    ),
                    span: src/dns.rs:42:22: 42:30 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(467),
            ),
            span: src/dns.rs:42:22: 42:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(466),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).466),
                ),
                value: e306,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(467),
            ),
            span: src/dns.rs:42:22: 42:30 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e307,
            },
            ty: &&str,
            temp_lifetime: Some(
                Node(467),
            ),
            span: src/dns.rs:42:21: 42:30 (#0),
        },
        Expr {
            kind: Deref {
                arg: e308,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(467),
            ),
            span: src/dns.rs:42:21: 42:30 (#0),
        },
        Expr {
            kind: Deref {
                arg: e309,
            },
            ty: str,
            temp_lifetime: Some(
                Node(467),
            ),
            span: src/dns.rs:42:21: 42:30 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e310,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(467),
            ),
            span: src/dns.rs:42:21: 42:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(465),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).465),
                ),
                value: e311,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(467),
            ),
            span: src/dns.rs:42:21: 42:30 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b> fn(&'a mut library::set::Set, &'b str) {library::set::Set::set_name},
            temp_lifetime: Some(
                Node(467),
            ),
            span: src/dns.rs:42:12: 42:20 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b> fn(&'a mut library::set::Set, &'b str) {library::set::Set::set_name},
                fun: e313,
                args: [
                    e305,
                    e312,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:42:12: 42:31 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(467),
            ),
            span: src/dns.rs:42:5: 42:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(461),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).461),
                ),
                value: e314,
            },
            ty: (),
            temp_lifetime: Some(
                Node(467),
            ),
            span: src/dns.rs:42:5: 42:31 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::set::Set) -> std::rc::Rc<library::set::Set> {std::rc::Rc::<library::set::Set>::new},
            temp_lifetime: Some(
                Node(468),
            ),
            span: src/dns.rs:43:37: 43:44 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(476),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).476),
                ),
                value: e316,
            },
            ty: fn(library::set::Set) -> std::rc::Rc<library::set::Set> {std::rc::Rc::<library::set::Set>::new},
            temp_lifetime: Some(
                Node(468),
            ),
            span: src/dns.rs:43:37: 43:44 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).460),
                ),
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(468),
            ),
            span: src/dns.rs:43:45: 43:51 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(480),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).480),
                ),
                value: e318,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(468),
            ),
            span: src/dns.rs:43:45: 43:51 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::set::Set) -> std::rc::Rc<library::set::Set> {std::rc::Rc::<library::set::Set>::new},
                fun: e317,
                args: [
                    e319,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:43:37: 43:52 (#0),
            },
            ty: std::rc::Rc<library::set::Set>,
            temp_lifetime: Some(
                Node(468),
            ),
            span: src/dns.rs:43:37: 43:52 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e320,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(468),
            ),
            span: src/dns.rs:43:37: 43:52 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(475),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).475),
                ),
                value: e321,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(468),
            ),
            span: src/dns.rs:43:37: 43:52 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:296 ~ alloc[42dc]::boxed::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:294 ~ alloc[42dc]::boxed::{impl#0}),
                                        self_ty: std::boxed::Box<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::sequence::Sequence) -> std::boxed::Box<library::sequence::Sequence> {std::boxed::Box::<library::sequence::Sequence>::new},
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:44:36: 44:44 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(492),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).492),
                ),
                value: e323,
            },
            ty: fn(library::sequence::Sequence) -> std::boxed::Box<library::sequence::Sequence> {std::boxed::Box::<library::sequence::Sequence>::new},
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:44:36: 44:44 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(core::bolts::ChildMap) -> library::sequence::Sequence {library::sequence::Sequence::new},
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:44:45: 44:58 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(497),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).497),
                ),
                value: e325,
            },
            ty: fn(core::bolts::ChildMap) -> library::sequence::Sequence {library::sequence::Sequence::new},
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:44:45: 44:58 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(2:2508 ~ core[102f]::convert::From::from),
                            UserSubsts {
                                substs: [
                                    core::bolts::ChildMap,
                                    ^0,
                                ],
                                user_self_ty: None,
                            },
                        ),
                    },
                ),
            },
            ty: fn([(&str, std::rc::Rc<dyn core::DataModel>); 6]) -> core::bolts::ChildMap {<core::bolts::ChildMap as std::convert::From<[(&str, std::rc::Rc<dyn core::DataModel>); 6]>>::from},
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:44:59: 44:73 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(502),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).502),
                ),
                value: e327,
            },
            ty: fn([(&str, std::rc::Rc<dyn core::DataModel>); 6]) -> core::bolts::ChildMap {<core::bolts::ChildMap as std::convert::From<[(&str, std::rc::Rc<dyn core::DataModel>); 6]>>::from},
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:44:59: 44:73 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "name",
                        Cooked,
                    ),
                    span: src/dns.rs:45:10: 45:16 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:45:10: 45:16 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(508),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).508),
                ),
                value: e329,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:45:10: 45:16 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).483),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:45:18: 45:24 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e331,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:45:18: 45:32 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(511),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).511),
                ),
                value: e332,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:45:18: 45:24 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:45:25: 45:30 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e334,
                args: [
                    e333,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:45:25: 45:32 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:45:18: 45:32 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(509),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).509),
                ),
                value: e335,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:45:18: 45:32 (#0),
        },
        Expr {
            kind: Tuple {
                fields: [
                    e330,
                    e336,
                ],
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:45:9: 45:33 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(507),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).507),
                ),
                value: e337,
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:45:9: 45:33 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "type",
                        Cooked,
                    ),
                    span: src/dns.rs:46:10: 46:16 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:46:10: 46:16 (#0),
        },
        Expr {
            kind: Deref {
                arg: e339,
            },
            ty: str,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:46:10: 46:16 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e340,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:46:10: 46:16 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(514),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).514),
                ),
                value: e341,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:46:10: 46:16 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).38),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:46:18: 46:24 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e343,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:46:18: 46:32 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(517),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).517),
                ),
                value: e344,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:46:18: 46:24 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:46:25: 46:30 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e346,
                args: [
                    e345,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:46:25: 46:32 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:46:18: 46:32 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e347,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:46:18: 46:32 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(515),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).515),
                ),
                value: e348,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:46:18: 46:32 (#0),
        },
        Expr {
            kind: Tuple {
                fields: [
                    e342,
                    e349,
                ],
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:46:9: 46:33 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(513),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).513),
                ),
                value: e350,
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:46:9: 46:33 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "class",
                        Cooked,
                    ),
                    span: src/dns.rs:47:10: 47:17 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:47:10: 47:17 (#0),
        },
        Expr {
            kind: Deref {
                arg: e352,
            },
            ty: str,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:47:10: 47:17 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e353,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:47:10: 47:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(520),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).520),
                ),
                value: e354,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:47:10: 47:17 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).38),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:47:19: 47:25 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e356,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:47:19: 47:33 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(523),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).523),
                ),
                value: e357,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:47:19: 47:25 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:47:26: 47:31 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e359,
                args: [
                    e358,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:47:26: 47:33 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:47:19: 47:33 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e360,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:47:19: 47:33 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(521),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).521),
                ),
                value: e361,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:47:19: 47:33 (#0),
        },
        Expr {
            kind: Tuple {
                fields: [
                    e355,
                    e362,
                ],
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:47:9: 47:34 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(519),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).519),
                ),
                value: e363,
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:47:9: 47:34 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "ttl",
                        Cooked,
                    ),
                    span: src/dns.rs:48:10: 48:15 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:48:10: 48:15 (#0),
        },
        Expr {
            kind: Deref {
                arg: e365,
            },
            ty: str,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:48:10: 48:15 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e366,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:48:10: 48:15 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(526),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).526),
                ),
                value: e367,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:48:10: 48:15 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).87),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:48:17: 48:23 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e369,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:48:17: 48:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(529),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).529),
                ),
                value: e370,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:48:17: 48:23 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:48:24: 48:29 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e372,
                args: [
                    e371,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:48:24: 48:31 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:48:17: 48:31 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e373,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:48:17: 48:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(527),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).527),
                ),
                value: e374,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:48:17: 48:31 (#0),
        },
        Expr {
            kind: Tuple {
                fields: [
                    e368,
                    e375,
                ],
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:48:9: 48:32 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(525),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).525),
                ),
                value: e376,
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:48:9: 48:32 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "dataLength",
                        Cooked,
                    ),
                    span: src/dns.rs:49:10: 49:22 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:49:10: 49:22 (#0),
        },
        Expr {
            kind: Deref {
                arg: e378,
            },
            ty: str,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:49:10: 49:22 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e379,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:49:10: 49:22 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(532),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).532),
                ),
                value: e380,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:49:10: 49:22 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).38),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:49:24: 49:30 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e382,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:49:24: 49:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(535),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).535),
                ),
                value: e383,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:49:24: 49:30 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:49:31: 49:36 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e385,
                args: [
                    e384,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:49:31: 49:38 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:49:24: 49:38 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e386,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:49:24: 49:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(533),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).533),
                ),
                value: e387,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:49:24: 49:38 (#0),
        },
        Expr {
            kind: Tuple {
                fields: [
                    e381,
                    e388,
                ],
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:49:9: 49:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(531),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).531),
                ),
                value: e389,
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:49:9: 49:39 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "data",
                        Cooked,
                    ),
                    span: src/dns.rs:50:10: 50:16 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:10: 50:16 (#0),
        },
        Expr {
            kind: Deref {
                arg: e391,
            },
            ty: str,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:10: 50:16 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e392,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:10: 50:16 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(538),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).538),
                ),
                value: e393,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:10: 50:16 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::set::Set) -> std::rc::Rc<library::set::Set> {std::rc::Rc::<library::set::Set>::new},
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:18: 50:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(540),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).540),
                ),
                value: e395,
            },
            ty: fn(library::set::Set) -> std::rc::Rc<library::set::Set> {std::rc::Rc::<library::set::Set>::new},
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:18: 50:25 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::rc::Rc<(dyn core::DataModel + 'static)>, std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>>, std::rc::Rc<(dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool + 'static)>) -> library::set::Set {library::set::Set::new},
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:26: 50:34 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(545),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).545),
                ),
                value: e397,
            },
            ty: fn(std::rc::Rc<(dyn core::DataModel + 'static)>, std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>>, std::rc::Rc<(dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool + 'static)>) -> library::set::Set {library::set::Set::new},
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:26: 50:34 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).19),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:35: 50:40 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e399,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:35: 50:48 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(551),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).551),
                ),
                value: e400,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:35: 50:40 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:41: 50:46 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e402,
                args: [
                    e401,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:50:41: 50:48 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:35: 50:48 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e403,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:35: 50:48 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(549),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).549),
                ),
                value: e404,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:35: 50:48 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:6607 ~ alloc[42dc]::vec::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:6605 ~ alloc[42dc]::vec::{impl#0}),
                                        self_ty: std::vec::Vec<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:50: 50:58 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(554),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).554),
                ),
                value: e406,
            },
            ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:50: 50:58 (#0),
        },
        Expr {
            kind: Call {
                ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
                fun: e407,
                args: [],
                from_hir_call: true,
                fn_span: src/dns.rs:50:50: 50:60 (#0),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:50: 50:60 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(553),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).553),
                ),
                value: e408,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:50: 50:60 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn([closure@src/dns.rs:50:70: 50:75]) -> std::rc::Rc<[closure@src/dns.rs:50:70: 50:75]> {std::rc::Rc::<[closure@src/dns.rs:50:70: 50:75]>::new},
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:62: 50:69 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(559),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).559),
                ),
                value: e410,
            },
            ty: fn([closure@src/dns.rs:50:70: 50:75]) -> std::rc::Rc<[closure@src/dns.rs:50:70: 50:75]> {std::rc::Rc::<[closure@src/dns.rs:50:70: 50:75]>::new},
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:62: 50:69 (#0),
        },
        Expr {
            kind: Closure(
                ClosureExpr {
                    closure_id: DefId(0:506 ~ andrew_fuzz[741f]::dns::dns::{closure#1}),
                    substs: Closure(
                        [
                            i8,
                            for<'a> extern "rust-call" fn((std::rc::Rc<core::context::Context<'a>>,)) -> bool,
                            (),
                        ],
                    ),
                    upvars: [],
                    movability: None,
                    fake_reads: [],
                },
            ),
            ty: [closure@src/dns.rs:50:70: 50:75],
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:70: 50:153 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(563),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).563),
                ),
                value: e412,
            },
            ty: [closure@src/dns.rs:50:70: 50:75],
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:70: 50:153 (#0),
        },
        Expr {
            kind: Call {
                ty: fn([closure@src/dns.rs:50:70: 50:75]) -> std::rc::Rc<[closure@src/dns.rs:50:70: 50:75]> {std::rc::Rc::<[closure@src/dns.rs:50:70: 50:75]>::new},
                fun: e411,
                args: [
                    e413,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:50:62: 50:154 (#0),
            },
            ty: std::rc::Rc<[closure@src/dns.rs:50:70: 50:75]>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:62: 50:154 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e414,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:62: 50:154 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(558),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).558),
                ),
                value: e415,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:62: 50:154 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::rc::Rc<(dyn core::DataModel + 'static)>, std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>>, std::rc::Rc<(dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool + 'static)>) -> library::set::Set {library::set::Set::new},
                fun: e398,
                args: [
                    e405,
                    e409,
                    e416,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:50:26: 50:155 (#0),
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:26: 50:155 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(544),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).544),
                ),
                value: e417,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:26: 50:155 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::set::Set) -> std::rc::Rc<library::set::Set> {std::rc::Rc::<library::set::Set>::new},
                fun: e396,
                args: [
                    e418,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:50:18: 50:156 (#0),
            },
            ty: std::rc::Rc<library::set::Set>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:18: 50:156 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e419,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:18: 50:156 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(539),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).539),
                ),
                value: e420,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:18: 50:156 (#0),
        },
        Expr {
            kind: Tuple {
                fields: [
                    e394,
                    e421,
                ],
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:9: 50:157 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(537),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).537),
                ),
                value: e422,
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:50:9: 50:157 (#0),
        },
        Expr {
            kind: Array {
                fields: [
                    e338,
                    e351,
                    e364,
                    e377,
                    e390,
                    e423,
                ],
            },
            ty: [(&str, std::rc::Rc<dyn core::DataModel>); 6],
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:44:74: 51:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(506),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).506),
                ),
                value: e424,
            },
            ty: [(&str, std::rc::Rc<dyn core::DataModel>); 6],
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:44:74: 51:6 (#0),
        },
        Expr {
            kind: Call {
                ty: fn([(&str, std::rc::Rc<dyn core::DataModel>); 6]) -> core::bolts::ChildMap {<core::bolts::ChildMap as std::convert::From<[(&str, std::rc::Rc<dyn core::DataModel>); 6]>>::from},
                fun: e328,
                args: [
                    e425,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:44:59: 51:7 (#0),
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:44:59: 51:7 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(501),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).501),
                ),
                value: e426,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:44:59: 51:7 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(core::bolts::ChildMap) -> library::sequence::Sequence {library::sequence::Sequence::new},
                fun: e326,
                args: [
                    e427,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:44:45: 51:8 (#0),
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:44:45: 51:8 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(496),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).496),
                ),
                value: e428,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:44:45: 51:8 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::sequence::Sequence) -> std::boxed::Box<library::sequence::Sequence> {std::boxed::Box::<library::sequence::Sequence>::new},
                fun: e324,
                args: [
                    e429,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:44:36: 51:9 (#0),
            },
            ty: std::boxed::Box<library::sequence::Sequence>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:44:36: 51:9 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e430,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:44:36: 51:9 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(491),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).491),
                ),
                value: e431,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(484),
            ),
            span: src/dns.rs:44:36: 51:9 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::rc::Rc<std::vec::Vec<std::boxed::Box<(dyn core::DataModel + 'static)>>>, std::rc::Rc<(dyn core::DataModel + 'static)>) -> library::union::Union {library::union::Union::new},
            temp_lifetime: Some(
                Node(592),
            ),
            span: src/dns.rs:53:31: 53:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(594),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).594),
                ),
                value: e433,
            },
            ty: fn(std::rc::Rc<std::vec::Vec<std::boxed::Box<(dyn core::DataModel + 'static)>>>, std::rc::Rc<(dyn core::DataModel + 'static)>) -> library::union::Union {library::union::Union::new},
            temp_lifetime: Some(
                Node(592),
            ),
            span: src/dns.rs:53:31: 53:41 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(std::vec::Vec<std::boxed::Box<dyn core::DataModel>>) -> std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>> {std::rc::Rc::<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>::new},
            temp_lifetime: Some(
                Node(592),
            ),
            span: src/dns.rs:53:42: 53:49 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(599),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).599),
                ),
                value: e435,
            },
            ty: fn(std::vec::Vec<std::boxed::Box<dyn core::DataModel>>) -> std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>> {std::rc::Rc::<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>::new},
            temp_lifetime: Some(
                Node(592),
            ),
            span: src/dns.rs:53:42: 53:49 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:5127 ~ alloc[42dc]::slice::{impl#0}::into_vec),
                            UserSubsts {
                                substs: [
                                    ^0,
                                    ^1,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:5110 ~ alloc[42dc]::slice::{impl#0}),
                                        self_ty: [^2],
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(std::boxed::Box<[std::boxed::Box<dyn core::DataModel>]>) -> std::vec::Vec<std::boxed::Box<dyn core::DataModel>> {std::slice::<impl [std::boxed::Box<dyn core::DataModel>]>::into_vec::<std::alloc::Global>},
            temp_lifetime: Some(
                Node(592),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 50:51 (#88),
        },
        Expr {
            kind: Scope {
                region_scope: Node(604),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).604),
                ),
                value: e437,
            },
            ty: fn(std::boxed::Box<[std::boxed::Box<dyn core::DataModel>]>) -> std::vec::Vec<std::boxed::Box<dyn core::DataModel>> {std::slice::<impl [std::boxed::Box<dyn core::DataModel>]>::into_vec::<std::alloc::Global>},
            temp_lifetime: Some(
                Node(592),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 50:51 (#88),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).591),
                ),
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(592),
            ),
            span: src/dns.rs:53:55: 53:59 (#0),
        },
        Expr {
            kind: Deref {
                arg: e439,
            },
            ty: dyn core::DataModel,
            temp_lifetime: Some(
                Node(592),
            ),
            span: src/dns.rs:53:55: 53:67 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e440,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(592),
            ),
            span: src/dns.rs:53:55: 53:67 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(618),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).618),
                ),
                value: e441,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(592),
            ),
            span: src/dns.rs:53:55: 53:59 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a dyn core::DataModel) -> std::boxed::Box<(dyn core::DataModel + 'static)> {<dyn core::DataModel as core::Cloneable>::clone},
            temp_lifetime: Some(
                Node(592),
            ),
            span: src/dns.rs:53:60: 53:65 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a dyn core::DataModel) -> std::boxed::Box<(dyn core::DataModel + 'static)> {<dyn core::DataModel as core::Cloneable>::clone},
                fun: e443,
                args: [
                    e442,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:53:60: 53:67 (#0),
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(592),
            ),
            span: src/dns.rs:53:55: 53:67 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e444,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(592),
            ),
            span: src/dns.rs:53:55: 53:67 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(616),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).616),
                ),
                value: e445,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(592),
            ),
            span: src/dns.rs:53:55: 53:67 (#0),
        },
        Expr {
            kind: Array {
                fields: [
                    e446,
                ],
            },
            ty: [std::boxed::Box<dyn core::DataModel>; 1],
            temp_lifetime: Some(
                Node(592),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:37: 54:46 (#88),
        },
        Expr {
            kind: Scope {
                region_scope: Node(615),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).615),
                ),
                value: e447,
            },
            ty: [std::boxed::Box<dyn core::DataModel>; 1],
            temp_lifetime: Some(
                Node(592),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:37: 54:46 (#88),
        },
        Expr {
            kind: Box {
                value: e448,
            },
            ty: std::boxed::Box<[std::boxed::Box<dyn core::DataModel>; 1]>,
            temp_lifetime: Some(
                Node(592),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13: 54:47 (#88),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e449,
            },
            ty: std::boxed::Box<[std::boxed::Box<dyn core::DataModel>]>,
            temp_lifetime: Some(
                Node(592),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13: 54:47 (#88),
        },
        Expr {
            kind: Scope {
                region_scope: Node(608),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).608),
                ),
                value: e450,
            },
            ty: std::boxed::Box<[std::boxed::Box<dyn core::DataModel>]>,
            temp_lifetime: Some(
                Node(592),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13: 54:47 (#88),
        },
        Expr {
            kind: Call {
                ty: fn(std::boxed::Box<[std::boxed::Box<dyn core::DataModel>]>) -> std::vec::Vec<std::boxed::Box<dyn core::DataModel>> {std::slice::<impl [std::boxed::Box<dyn core::DataModel>]>::into_vec::<std::alloc::Global>},
                fun: e438,
                args: [
                    e451,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 55:10 (#88),
            },
            ty: std::vec::Vec<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(592),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 55:10 (#88),
        },
        Expr {
            kind: Scope {
                region_scope: Node(603),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).603),
                ),
                value: e452,
            },
            ty: std::vec::Vec<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(592),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:36: 55:10 (#88),
        },
        Expr {
            kind: Call {
                ty: fn(std::vec::Vec<std::boxed::Box<dyn core::DataModel>>) -> std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>> {std::rc::Rc::<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>::new},
                fun: e436,
                args: [
                    e453,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:53:42: 53:69 (#0),
            },
            ty: std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(592),
            ),
            span: src/dns.rs:53:42: 53:69 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(598),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).598),
                ),
                value: e454,
            },
            ty: std::rc::Rc<std::vec::Vec<std::boxed::Box<dyn core::DataModel>>>,
            temp_lifetime: Some(
                Node(592),
            ),
            span: src/dns.rs:53:42: 53:69 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(2:2508 ~ core[102f]::convert::From::from),
                            UserSubsts {
                                substs: [
                                    std::rc::Rc<^0>,
                                    ^1,
                                ],
                                user_self_ty: None,
                            },
                        ),
                    },
                ),
            },
            ty: fn(std::boxed::Box<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::convert::From<std::boxed::Box<dyn core::DataModel>>>::from},
            temp_lifetime: Some(
                Node(592),
            ),
            span: src/dns.rs:53:71: 53:79 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(621),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).621),
                ),
                value: e456,
            },
            ty: fn(std::boxed::Box<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::convert::From<std::boxed::Box<dyn core::DataModel>>>::from},
            temp_lifetime: Some(
                Node(592),
            ),
            span: src/dns.rs:53:71: 53:79 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).591),
                ),
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(592),
            ),
            span: src/dns.rs:53:80: 53:84 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(625),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).625),
                ),
                value: e458,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(592),
            ),
            span: src/dns.rs:53:80: 53:84 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::boxed::Box<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::convert::From<std::boxed::Box<dyn core::DataModel>>>::from},
                fun: e457,
                args: [
                    e459,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:53:71: 53:85 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(592),
            ),
            span: src/dns.rs:53:71: 53:85 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(620),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).620),
                ),
                value: e460,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(592),
            ),
            span: src/dns.rs:53:71: 53:85 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::rc::Rc<std::vec::Vec<std::boxed::Box<(dyn core::DataModel + 'static)>>>, std::rc::Rc<(dyn core::DataModel + 'static)>) -> library::union::Union {library::union::Union::new},
                fun: e434,
                args: [
                    e455,
                    e461,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:53:31: 53:86 (#0),
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(592),
            ),
            span: src/dns.rs:53:31: 53:86 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(593),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).593),
                ),
                value: e462,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(592),
            ),
            span: src/dns.rs:53:31: 53:86 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).628),
                ),
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(635),
            ),
            span: src/dns.rs:54:5: 54:20 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e464,
            },
            ty: &mut library::union::Union,
            temp_lifetime: Some(
                Node(635),
            ),
            span: src/dns.rs:54:5: 54:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(631),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).631),
                ),
                value: e465,
            },
            ty: &mut library::union::Union,
            temp_lifetime: Some(
                Node(635),
            ),
            span: src/dns.rs:54:5: 54:20 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "rr",
                        Cooked,
                    ),
                    span: src/dns.rs:54:31: 54:35 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(635),
            ),
            span: src/dns.rs:54:31: 54:35 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(634),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).634),
                ),
                value: e467,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(635),
            ),
            span: src/dns.rs:54:31: 54:35 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e468,
            },
            ty: &&str,
            temp_lifetime: Some(
                Node(635),
            ),
            span: src/dns.rs:54:30: 54:35 (#0),
        },
        Expr {
            kind: Deref {
                arg: e469,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(635),
            ),
            span: src/dns.rs:54:30: 54:35 (#0),
        },
        Expr {
            kind: Deref {
                arg: e470,
            },
            ty: str,
            temp_lifetime: Some(
                Node(635),
            ),
            span: src/dns.rs:54:30: 54:35 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e471,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(635),
            ),
            span: src/dns.rs:54:30: 54:35 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(633),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).633),
                ),
                value: e472,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(635),
            ),
            span: src/dns.rs:54:30: 54:35 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b> fn(&'a mut library::union::Union, &'b str) {<library::union::Union as core::Named>::set_name},
            temp_lifetime: Some(
                Node(635),
            ),
            span: src/dns.rs:54:21: 54:29 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b> fn(&'a mut library::union::Union, &'b str) {<library::union::Union as core::Named>::set_name},
                fun: e474,
                args: [
                    e466,
                    e473,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:54:21: 54:36 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(635),
            ),
            span: src/dns.rs:54:5: 54:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(629),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).629),
                ),
                value: e475,
            },
            ty: (),
            temp_lifetime: Some(
                Node(635),
            ),
            span: src/dns.rs:54:5: 54:36 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::union::Union) -> std::rc::Rc<library::union::Union> {std::rc::Rc::<library::union::Union>::new},
            temp_lifetime: Some(
                Node(636),
            ),
            span: src/dns.rs:55:27: 55:34 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(638),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).638),
                ),
                value: e477,
            },
            ty: fn(library::union::Union) -> std::rc::Rc<library::union::Union> {std::rc::Rc::<library::union::Union>::new},
            temp_lifetime: Some(
                Node(636),
            ),
            span: src/dns.rs:55:27: 55:34 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).628),
                ),
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(636),
            ),
            span: src/dns.rs:55:35: 55:50 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(642),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).642),
                ),
                value: e479,
            },
            ty: library::union::Union,
            temp_lifetime: Some(
                Node(636),
            ),
            span: src/dns.rs:55:35: 55:50 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::union::Union) -> std::rc::Rc<library::union::Union> {std::rc::Rc::<library::union::Union>::new},
                fun: e478,
                args: [
                    e480,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:55:27: 55:51 (#0),
            },
            ty: std::rc::Rc<library::union::Union>,
            temp_lifetime: Some(
                Node(636),
            ),
            span: src/dns.rs:55:27: 55:51 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(637),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).637),
                ),
                value: e481,
            },
            ty: std::rc::Rc<library::union::Union>,
            temp_lifetime: Some(
                Node(636),
            ),
            span: src/dns.rs:55:27: 55:51 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:296 ~ alloc[42dc]::boxed::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:294 ~ alloc[42dc]::boxed::{impl#0}),
                                        self_ty: std::boxed::Box<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::sequence::Sequence) -> std::boxed::Box<library::sequence::Sequence> {std::boxed::Box::<library::sequence::Sequence>::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:56:22: 56:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(648),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).648),
                ),
                value: e483,
            },
            ty: fn(library::sequence::Sequence) -> std::boxed::Box<library::sequence::Sequence> {std::boxed::Box::<library::sequence::Sequence>::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:56:22: 56:30 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(core::bolts::ChildMap) -> library::sequence::Sequence {library::sequence::Sequence::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:56:31: 56:44 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(653),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).653),
                ),
                value: e485,
            },
            ty: fn(core::bolts::ChildMap) -> library::sequence::Sequence {library::sequence::Sequence::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:56:31: 56:44 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(2:2508 ~ core[102f]::convert::From::from),
                            UserSubsts {
                                substs: [
                                    core::bolts::ChildMap,
                                    ^0,
                                ],
                                user_self_ty: None,
                            },
                        ),
                    },
                ),
            },
            ty: fn([(&str, std::rc::Rc<dyn core::DataModel>); 11]) -> core::bolts::ChildMap {<core::bolts::ChildMap as std::convert::From<[(&str, std::rc::Rc<dyn core::DataModel>); 11]>>::from},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:56:45: 56:59 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(658),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).658),
                ),
                value: e487,
            },
            ty: fn([(&str, std::rc::Rc<dyn core::DataModel>); 11]) -> core::bolts::ChildMap {<core::bolts::ChildMap as std::convert::From<[(&str, std::rc::Rc<dyn core::DataModel>); 11]>>::from},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:56:45: 56:59 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "transactionId",
                        Cooked,
                    ),
                    span: src/dns.rs:57:10: 57:25 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:57:10: 57:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(664),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).664),
                ),
                value: e489,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:57:10: 57:25 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).38),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:57:27: 57:33 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e491,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:57:27: 57:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(667),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).667),
                ),
                value: e492,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:57:27: 57:33 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:57:34: 57:39 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e494,
                args: [
                    e493,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:57:34: 57:41 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:57:27: 57:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(665),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).665),
                ),
                value: e495,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:57:27: 57:41 (#0),
        },
        Expr {
            kind: Tuple {
                fields: [
                    e490,
                    e496,
                ],
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:57:9: 57:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(663),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).663),
                ),
                value: e497,
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:57:9: 57:42 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "flags",
                        Cooked,
                    ),
                    span: src/dns.rs:58:10: 58:17 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:58:10: 58:17 (#0),
        },
        Expr {
            kind: Deref {
                arg: e499,
            },
            ty: str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:58:10: 58:17 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e500,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:58:10: 58:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(670),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).670),
                ),
                value: e501,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:58:10: 58:17 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).38),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:58:19: 58:25 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e503,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:58:19: 58:33 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(673),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).673),
                ),
                value: e504,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:58:19: 58:25 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:58:26: 58:31 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e506,
                args: [
                    e505,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:58:26: 58:33 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:58:19: 58:33 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e507,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:58:19: 58:33 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(671),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).671),
                ),
                value: e508,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:58:19: 58:33 (#0),
        },
        Expr {
            kind: Tuple {
                fields: [
                    e502,
                    e509,
                ],
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:58:9: 58:34 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(669),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).669),
                ),
                value: e510,
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:58:9: 58:34 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "numQuestion",
                        Cooked,
                    ),
                    span: src/dns.rs:59:10: 59:23 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:59:10: 59:23 (#0),
        },
        Expr {
            kind: Deref {
                arg: e512,
            },
            ty: str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:59:10: 59:23 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e513,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:59:10: 59:23 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(676),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).676),
                ),
                value: e514,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:59:10: 59:23 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).38),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:59:25: 59:31 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e516,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:59:25: 59:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(679),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).679),
                ),
                value: e517,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:59:25: 59:31 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:59:32: 59:37 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e519,
                args: [
                    e518,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:59:32: 59:39 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:59:25: 59:39 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e520,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:59:25: 59:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(677),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).677),
                ),
                value: e521,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:59:25: 59:39 (#0),
        },
        Expr {
            kind: Tuple {
                fields: [
                    e515,
                    e522,
                ],
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:59:9: 59:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(675),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).675),
                ),
                value: e523,
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:59:9: 59:40 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "numAnswer",
                        Cooked,
                    ),
                    span: src/dns.rs:60:10: 60:21 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:60:10: 60:21 (#0),
        },
        Expr {
            kind: Deref {
                arg: e525,
            },
            ty: str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:60:10: 60:21 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e526,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:60:10: 60:21 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(682),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).682),
                ),
                value: e527,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:60:10: 60:21 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).38),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:60:23: 60:29 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e529,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:60:23: 60:37 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(685),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).685),
                ),
                value: e530,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:60:23: 60:29 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:60:30: 60:35 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e532,
                args: [
                    e531,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:60:30: 60:37 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:60:23: 60:37 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e533,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:60:23: 60:37 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(683),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).683),
                ),
                value: e534,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:60:23: 60:37 (#0),
        },
        Expr {
            kind: Tuple {
                fields: [
                    e528,
                    e535,
                ],
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:60:9: 60:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(681),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).681),
                ),
                value: e536,
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:60:9: 60:38 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "numAuthority",
                        Cooked,
                    ),
                    span: src/dns.rs:61:10: 61:24 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:61:10: 61:24 (#0),
        },
        Expr {
            kind: Deref {
                arg: e538,
            },
            ty: str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:61:10: 61:24 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e539,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:61:10: 61:24 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(688),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).688),
                ),
                value: e540,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:61:10: 61:24 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).38),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:61:26: 61:32 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e542,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:61:26: 61:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(691),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).691),
                ),
                value: e543,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:61:26: 61:32 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:61:33: 61:38 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e545,
                args: [
                    e544,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:61:33: 61:40 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:61:26: 61:40 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e546,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:61:26: 61:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(689),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).689),
                ),
                value: e547,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:61:26: 61:40 (#0),
        },
        Expr {
            kind: Tuple {
                fields: [
                    e541,
                    e548,
                ],
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:61:9: 61:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(687),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).687),
                ),
                value: e549,
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:61:9: 61:41 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "numAdditional",
                        Cooked,
                    ),
                    span: src/dns.rs:62:10: 62:25 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:62:10: 62:25 (#0),
        },
        Expr {
            kind: Deref {
                arg: e551,
            },
            ty: str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:62:10: 62:25 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e552,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:62:10: 62:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(694),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).694),
                ),
                value: e553,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:62:10: 62:25 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).38),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:62:27: 62:33 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e555,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:62:27: 62:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(697),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).697),
                ),
                value: e556,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:62:27: 62:33 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:62:34: 62:39 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e558,
                args: [
                    e557,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:62:34: 62:41 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:62:27: 62:41 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e559,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:62:27: 62:41 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(695),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).695),
                ),
                value: e560,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:62:27: 62:41 (#0),
        },
        Expr {
            kind: Tuple {
                fields: [
                    e554,
                    e561,
                ],
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:62:9: 62:42 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(693),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).693),
                ),
                value: e562,
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:62:9: 62:42 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "question",
                        Cooked,
                    ),
                    span: src/dns.rs:63:10: 63:20 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:10: 63:20 (#0),
        },
        Expr {
            kind: Deref {
                arg: e564,
            },
            ty: str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:10: 63:20 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e565,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:10: 63:20 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(700),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).700),
                ),
                value: e566,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:10: 63:20 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::set::Set) -> std::rc::Rc<library::set::Set> {std::rc::Rc::<library::set::Set>::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:22: 63:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(702),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).702),
                ),
                value: e568,
            },
            ty: fn(library::set::Set) -> std::rc::Rc<library::set::Set> {std::rc::Rc::<library::set::Set>::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:22: 63:29 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::rc::Rc<(dyn core::DataModel + 'static)>, std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>>, std::rc::Rc<(dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool + 'static)>) -> library::set::Set {library::set::Set::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:30: 63:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(707),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).707),
                ),
                value: e570,
            },
            ty: fn(std::rc::Rc<(dyn core::DataModel + 'static)>, std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>>, std::rc::Rc<(dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool + 'static)>) -> library::set::Set {library::set::Set::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:30: 63:38 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).645),
                ),
            },
            ty: std::rc::Rc<library::union::Union>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:39: 63:54 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e572,
            },
            ty: &std::rc::Rc<library::union::Union>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:39: 63:62 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(713),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).713),
                ),
                value: e573,
            },
            ty: &std::rc::Rc<library::union::Union>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:39: 63:54 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<library::union::Union>) -> std::rc::Rc<library::union::Union> {<std::rc::Rc<library::union::Union> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:55: 63:60 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<library::union::Union>) -> std::rc::Rc<library::union::Union> {<std::rc::Rc<library::union::Union> as std::clone::Clone>::clone},
                fun: e575,
                args: [
                    e574,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:63:55: 63:62 (#0),
            },
            ty: std::rc::Rc<library::union::Union>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:39: 63:62 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e576,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:39: 63:62 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(711),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).711),
                ),
                value: e577,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:39: 63:62 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:6607 ~ alloc[42dc]::vec::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:6605 ~ alloc[42dc]::vec::{impl#0}),
                                        self_ty: std::vec::Vec<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:64: 63:72 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(716),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).716),
                ),
                value: e579,
            },
            ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:64: 63:72 (#0),
        },
        Expr {
            kind: Call {
                ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
                fun: e580,
                args: [],
                from_hir_call: true,
                fn_span: src/dns.rs:63:64: 63:74 (#0),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:64: 63:74 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(715),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).715),
                ),
                value: e581,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:64: 63:74 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn([closure@src/dns.rs:63:84: 63:89]) -> std::rc::Rc<[closure@src/dns.rs:63:84: 63:89]> {std::rc::Rc::<[closure@src/dns.rs:63:84: 63:89]>::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:76: 63:83 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(721),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).721),
                ),
                value: e583,
            },
            ty: fn([closure@src/dns.rs:63:84: 63:89]) -> std::rc::Rc<[closure@src/dns.rs:63:84: 63:89]> {std::rc::Rc::<[closure@src/dns.rs:63:84: 63:89]>::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:76: 63:83 (#0),
        },
        Expr {
            kind: Closure(
                ClosureExpr {
                    closure_id: DefId(0:507 ~ andrew_fuzz[741f]::dns::dns::{closure#2}),
                    substs: Closure(
                        [
                            i8,
                            for<'a> extern "rust-call" fn((std::rc::Rc<core::context::Context<'a>>,)) -> bool,
                            (),
                        ],
                    ),
                    upvars: [],
                    movability: None,
                    fake_reads: [],
                },
            ),
            ty: [closure@src/dns.rs:63:84: 63:89],
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:84: 63:156 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(725),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).725),
                ),
                value: e585,
            },
            ty: [closure@src/dns.rs:63:84: 63:89],
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:84: 63:156 (#0),
        },
        Expr {
            kind: Call {
                ty: fn([closure@src/dns.rs:63:84: 63:89]) -> std::rc::Rc<[closure@src/dns.rs:63:84: 63:89]> {std::rc::Rc::<[closure@src/dns.rs:63:84: 63:89]>::new},
                fun: e584,
                args: [
                    e586,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:63:76: 63:157 (#0),
            },
            ty: std::rc::Rc<[closure@src/dns.rs:63:84: 63:89]>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:76: 63:157 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e587,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:76: 63:157 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(720),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).720),
                ),
                value: e588,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:76: 63:157 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::rc::Rc<(dyn core::DataModel + 'static)>, std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>>, std::rc::Rc<(dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool + 'static)>) -> library::set::Set {library::set::Set::new},
                fun: e571,
                args: [
                    e578,
                    e582,
                    e589,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:63:30: 63:158 (#0),
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:30: 63:158 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(706),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).706),
                ),
                value: e590,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:30: 63:158 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::set::Set) -> std::rc::Rc<library::set::Set> {std::rc::Rc::<library::set::Set>::new},
                fun: e569,
                args: [
                    e591,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:63:22: 63:159 (#0),
            },
            ty: std::rc::Rc<library::set::Set>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:22: 63:159 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e592,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:22: 63:159 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(701),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).701),
                ),
                value: e593,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:22: 63:159 (#0),
        },
        Expr {
            kind: Tuple {
                fields: [
                    e567,
                    e594,
                ],
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:9: 63:160 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(699),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).699),
                ),
                value: e595,
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:63:9: 63:160 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "answer",
                        Cooked,
                    ),
                    span: src/dns.rs:64:10: 64:18 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:10: 64:18 (#0),
        },
        Expr {
            kind: Deref {
                arg: e597,
            },
            ty: str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:10: 64:18 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e598,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:10: 64:18 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(751),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).751),
                ),
                value: e599,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:10: 64:18 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::set::Set) -> std::rc::Rc<library::set::Set> {std::rc::Rc::<library::set::Set>::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:20: 64:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(753),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).753),
                ),
                value: e601,
            },
            ty: fn(library::set::Set) -> std::rc::Rc<library::set::Set> {std::rc::Rc::<library::set::Set>::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:20: 64:27 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::rc::Rc<(dyn core::DataModel + 'static)>, std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>>, std::rc::Rc<(dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool + 'static)>) -> library::set::Set {library::set::Set::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:28: 64:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(758),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).758),
                ),
                value: e603,
            },
            ty: fn(std::rc::Rc<(dyn core::DataModel + 'static)>, std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>>, std::rc::Rc<(dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool + 'static)>) -> library::set::Set {library::set::Set::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:28: 64:36 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).645),
                ),
            },
            ty: std::rc::Rc<library::union::Union>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:37: 64:52 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e605,
            },
            ty: &std::rc::Rc<library::union::Union>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:37: 64:60 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(764),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).764),
                ),
                value: e606,
            },
            ty: &std::rc::Rc<library::union::Union>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:37: 64:52 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<library::union::Union>) -> std::rc::Rc<library::union::Union> {<std::rc::Rc<library::union::Union> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:53: 64:58 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<library::union::Union>) -> std::rc::Rc<library::union::Union> {<std::rc::Rc<library::union::Union> as std::clone::Clone>::clone},
                fun: e608,
                args: [
                    e607,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:64:53: 64:60 (#0),
            },
            ty: std::rc::Rc<library::union::Union>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:37: 64:60 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e609,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:37: 64:60 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(762),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).762),
                ),
                value: e610,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:37: 64:60 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:6607 ~ alloc[42dc]::vec::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:6605 ~ alloc[42dc]::vec::{impl#0}),
                                        self_ty: std::vec::Vec<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:62: 64:70 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(767),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).767),
                ),
                value: e612,
            },
            ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:62: 64:70 (#0),
        },
        Expr {
            kind: Call {
                ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
                fun: e613,
                args: [],
                from_hir_call: true,
                fn_span: src/dns.rs:64:62: 64:72 (#0),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:62: 64:72 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(766),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).766),
                ),
                value: e614,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:62: 64:72 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn([closure@src/dns.rs:64:82: 64:87]) -> std::rc::Rc<[closure@src/dns.rs:64:82: 64:87]> {std::rc::Rc::<[closure@src/dns.rs:64:82: 64:87]>::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:74: 64:81 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(772),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).772),
                ),
                value: e616,
            },
            ty: fn([closure@src/dns.rs:64:82: 64:87]) -> std::rc::Rc<[closure@src/dns.rs:64:82: 64:87]> {std::rc::Rc::<[closure@src/dns.rs:64:82: 64:87]>::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:74: 64:81 (#0),
        },
        Expr {
            kind: Closure(
                ClosureExpr {
                    closure_id: DefId(0:508 ~ andrew_fuzz[741f]::dns::dns::{closure#3}),
                    substs: Closure(
                        [
                            i8,
                            for<'a> extern "rust-call" fn((std::rc::Rc<core::context::Context<'a>>,)) -> bool,
                            (),
                        ],
                    ),
                    upvars: [],
                    movability: None,
                    fake_reads: [],
                },
            ),
            ty: [closure@src/dns.rs:64:82: 64:87],
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:82: 64:164 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(776),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).776),
                ),
                value: e618,
            },
            ty: [closure@src/dns.rs:64:82: 64:87],
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:82: 64:164 (#0),
        },
        Expr {
            kind: Call {
                ty: fn([closure@src/dns.rs:64:82: 64:87]) -> std::rc::Rc<[closure@src/dns.rs:64:82: 64:87]> {std::rc::Rc::<[closure@src/dns.rs:64:82: 64:87]>::new},
                fun: e617,
                args: [
                    e619,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:64:74: 64:165 (#0),
            },
            ty: std::rc::Rc<[closure@src/dns.rs:64:82: 64:87]>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:74: 64:165 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e620,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:74: 64:165 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(771),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).771),
                ),
                value: e621,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:74: 64:165 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::rc::Rc<(dyn core::DataModel + 'static)>, std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>>, std::rc::Rc<(dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool + 'static)>) -> library::set::Set {library::set::Set::new},
                fun: e604,
                args: [
                    e611,
                    e615,
                    e622,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:64:28: 64:166 (#0),
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:28: 64:166 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(757),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).757),
                ),
                value: e623,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:28: 64:166 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::set::Set) -> std::rc::Rc<library::set::Set> {std::rc::Rc::<library::set::Set>::new},
                fun: e602,
                args: [
                    e624,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:64:20: 64:167 (#0),
            },
            ty: std::rc::Rc<library::set::Set>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:20: 64:167 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e625,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:20: 64:167 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(752),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).752),
                ),
                value: e626,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:20: 64:167 (#0),
        },
        Expr {
            kind: Tuple {
                fields: [
                    e600,
                    e627,
                ],
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:9: 64:168 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(750),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).750),
                ),
                value: e628,
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:64:9: 64:168 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "authority",
                        Cooked,
                    ),
                    span: src/dns.rs:65:10: 65:21 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:10: 65:21 (#0),
        },
        Expr {
            kind: Deref {
                arg: e630,
            },
            ty: str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:10: 65:21 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e631,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:10: 65:21 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(804),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).804),
                ),
                value: e632,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:10: 65:21 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::set::Set) -> std::rc::Rc<library::set::Set> {std::rc::Rc::<library::set::Set>::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:23: 65:30 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(806),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).806),
                ),
                value: e634,
            },
            ty: fn(library::set::Set) -> std::rc::Rc<library::set::Set> {std::rc::Rc::<library::set::Set>::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:23: 65:30 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::rc::Rc<(dyn core::DataModel + 'static)>, std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>>, std::rc::Rc<(dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool + 'static)>) -> library::set::Set {library::set::Set::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:31: 65:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(811),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).811),
                ),
                value: e636,
            },
            ty: fn(std::rc::Rc<(dyn core::DataModel + 'static)>, std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>>, std::rc::Rc<(dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool + 'static)>) -> library::set::Set {library::set::Set::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:31: 65:39 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).645),
                ),
            },
            ty: std::rc::Rc<library::union::Union>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:40: 65:55 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e638,
            },
            ty: &std::rc::Rc<library::union::Union>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:40: 65:63 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(817),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).817),
                ),
                value: e639,
            },
            ty: &std::rc::Rc<library::union::Union>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:40: 65:55 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<library::union::Union>) -> std::rc::Rc<library::union::Union> {<std::rc::Rc<library::union::Union> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:56: 65:61 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<library::union::Union>) -> std::rc::Rc<library::union::Union> {<std::rc::Rc<library::union::Union> as std::clone::Clone>::clone},
                fun: e641,
                args: [
                    e640,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:65:56: 65:63 (#0),
            },
            ty: std::rc::Rc<library::union::Union>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:40: 65:63 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e642,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:40: 65:63 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(815),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).815),
                ),
                value: e643,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:40: 65:63 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:6607 ~ alloc[42dc]::vec::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:6605 ~ alloc[42dc]::vec::{impl#0}),
                                        self_ty: std::vec::Vec<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:65: 65:73 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(820),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).820),
                ),
                value: e645,
            },
            ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:65: 65:73 (#0),
        },
        Expr {
            kind: Call {
                ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
                fun: e646,
                args: [],
                from_hir_call: true,
                fn_span: src/dns.rs:65:65: 65:75 (#0),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:65: 65:75 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(819),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).819),
                ),
                value: e647,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:65: 65:75 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn([closure@src/dns.rs:65:85: 65:90]) -> std::rc::Rc<[closure@src/dns.rs:65:85: 65:90]> {std::rc::Rc::<[closure@src/dns.rs:65:85: 65:90]>::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:77: 65:84 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(825),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).825),
                ),
                value: e649,
            },
            ty: fn([closure@src/dns.rs:65:85: 65:90]) -> std::rc::Rc<[closure@src/dns.rs:65:85: 65:90]> {std::rc::Rc::<[closure@src/dns.rs:65:85: 65:90]>::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:77: 65:84 (#0),
        },
        Expr {
            kind: Closure(
                ClosureExpr {
                    closure_id: DefId(0:509 ~ andrew_fuzz[741f]::dns::dns::{closure#4}),
                    substs: Closure(
                        [
                            i8,
                            for<'a> extern "rust-call" fn((std::rc::Rc<core::context::Context<'a>>,)) -> bool,
                            (),
                        ],
                    ),
                    upvars: [],
                    movability: None,
                    fake_reads: [],
                },
            ),
            ty: [closure@src/dns.rs:65:85: 65:90],
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:85: 65:170 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(829),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).829),
                ),
                value: e651,
            },
            ty: [closure@src/dns.rs:65:85: 65:90],
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:85: 65:170 (#0),
        },
        Expr {
            kind: Call {
                ty: fn([closure@src/dns.rs:65:85: 65:90]) -> std::rc::Rc<[closure@src/dns.rs:65:85: 65:90]> {std::rc::Rc::<[closure@src/dns.rs:65:85: 65:90]>::new},
                fun: e650,
                args: [
                    e652,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:65:77: 65:171 (#0),
            },
            ty: std::rc::Rc<[closure@src/dns.rs:65:85: 65:90]>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:77: 65:171 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e653,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:77: 65:171 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(824),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).824),
                ),
                value: e654,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:77: 65:171 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::rc::Rc<(dyn core::DataModel + 'static)>, std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>>, std::rc::Rc<(dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool + 'static)>) -> library::set::Set {library::set::Set::new},
                fun: e637,
                args: [
                    e644,
                    e648,
                    e655,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:65:31: 65:172 (#0),
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:31: 65:172 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(810),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).810),
                ),
                value: e656,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:31: 65:172 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::set::Set) -> std::rc::Rc<library::set::Set> {std::rc::Rc::<library::set::Set>::new},
                fun: e635,
                args: [
                    e657,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:65:23: 65:173 (#0),
            },
            ty: std::rc::Rc<library::set::Set>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:23: 65:173 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e658,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:23: 65:173 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(805),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).805),
                ),
                value: e659,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:23: 65:173 (#0),
        },
        Expr {
            kind: Tuple {
                fields: [
                    e633,
                    e660,
                ],
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:9: 65:174 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(803),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).803),
                ),
                value: e661,
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:65:9: 65:174 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "additional",
                        Cooked,
                    ),
                    span: src/dns.rs:66:10: 66:22 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:10: 66:22 (#0),
        },
        Expr {
            kind: Deref {
                arg: e663,
            },
            ty: str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:10: 66:22 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e664,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:10: 66:22 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(857),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).857),
                ),
                value: e665,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:10: 66:22 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::set::Set) -> std::rc::Rc<library::set::Set> {std::rc::Rc::<library::set::Set>::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:24: 66:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(859),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).859),
                ),
                value: e667,
            },
            ty: fn(library::set::Set) -> std::rc::Rc<library::set::Set> {std::rc::Rc::<library::set::Set>::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:24: 66:31 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::rc::Rc<(dyn core::DataModel + 'static)>, std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>>, std::rc::Rc<(dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool + 'static)>) -> library::set::Set {library::set::Set::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:32: 66:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(864),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).864),
                ),
                value: e669,
            },
            ty: fn(std::rc::Rc<(dyn core::DataModel + 'static)>, std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>>, std::rc::Rc<(dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool + 'static)>) -> library::set::Set {library::set::Set::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:32: 66:40 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).645),
                ),
            },
            ty: std::rc::Rc<library::union::Union>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:41: 66:56 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e671,
            },
            ty: &std::rc::Rc<library::union::Union>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:41: 66:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(870),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).870),
                ),
                value: e672,
            },
            ty: &std::rc::Rc<library::union::Union>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:41: 66:56 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<library::union::Union>) -> std::rc::Rc<library::union::Union> {<std::rc::Rc<library::union::Union> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:57: 66:62 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<library::union::Union>) -> std::rc::Rc<library::union::Union> {<std::rc::Rc<library::union::Union> as std::clone::Clone>::clone},
                fun: e674,
                args: [
                    e673,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:66:57: 66:64 (#0),
            },
            ty: std::rc::Rc<library::union::Union>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:41: 66:64 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e675,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:41: 66:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(868),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).868),
                ),
                value: e676,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:41: 66:64 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:6607 ~ alloc[42dc]::vec::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:6605 ~ alloc[42dc]::vec::{impl#0}),
                                        self_ty: std::vec::Vec<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:66: 66:74 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(873),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).873),
                ),
                value: e678,
            },
            ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:66: 66:74 (#0),
        },
        Expr {
            kind: Call {
                ty: fn() -> std::vec::Vec<std::rc::Rc<dyn core::DataModel>> {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::new},
                fun: e679,
                args: [],
                from_hir_call: true,
                fn_span: src/dns.rs:66:66: 66:76 (#0),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:66: 66:76 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(872),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).872),
                ),
                value: e680,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:66: 66:76 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn([closure@src/dns.rs:66:86: 66:91]) -> std::rc::Rc<[closure@src/dns.rs:66:86: 66:91]> {std::rc::Rc::<[closure@src/dns.rs:66:86: 66:91]>::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:78: 66:85 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(878),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).878),
                ),
                value: e682,
            },
            ty: fn([closure@src/dns.rs:66:86: 66:91]) -> std::rc::Rc<[closure@src/dns.rs:66:86: 66:91]> {std::rc::Rc::<[closure@src/dns.rs:66:86: 66:91]>::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:78: 66:85 (#0),
        },
        Expr {
            kind: Closure(
                ClosureExpr {
                    closure_id: DefId(0:510 ~ andrew_fuzz[741f]::dns::dns::{closure#5}),
                    substs: Closure(
                        [
                            i8,
                            for<'a> extern "rust-call" fn((std::rc::Rc<core::context::Context<'a>>,)) -> bool,
                            (),
                        ],
                    ),
                    upvars: [],
                    movability: None,
                    fake_reads: [],
                },
            ),
            ty: [closure@src/dns.rs:66:86: 66:91],
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:86: 66:172 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(882),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).882),
                ),
                value: e684,
            },
            ty: [closure@src/dns.rs:66:86: 66:91],
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:86: 66:172 (#0),
        },
        Expr {
            kind: Call {
                ty: fn([closure@src/dns.rs:66:86: 66:91]) -> std::rc::Rc<[closure@src/dns.rs:66:86: 66:91]> {std::rc::Rc::<[closure@src/dns.rs:66:86: 66:91]>::new},
                fun: e683,
                args: [
                    e685,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:66:78: 66:173 (#0),
            },
            ty: std::rc::Rc<[closure@src/dns.rs:66:86: 66:91]>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:78: 66:173 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e686,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:78: 66:173 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(877),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).877),
                ),
                value: e687,
            },
            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:78: 66:173 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::rc::Rc<(dyn core::DataModel + 'static)>, std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>>, std::rc::Rc<(dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool + 'static)>) -> library::set::Set {library::set::Set::new},
                fun: e670,
                args: [
                    e677,
                    e681,
                    e688,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:66:32: 66:174 (#0),
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:32: 66:174 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(863),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).863),
                ),
                value: e689,
            },
            ty: library::set::Set,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:32: 66:174 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::set::Set) -> std::rc::Rc<library::set::Set> {std::rc::Rc::<library::set::Set>::new},
                fun: e668,
                args: [
                    e690,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:66:24: 66:175 (#0),
            },
            ty: std::rc::Rc<library::set::Set>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:24: 66:175 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e691,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:24: 66:175 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(858),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).858),
                ),
                value: e692,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:24: 66:175 (#0),
        },
        Expr {
            kind: Tuple {
                fields: [
                    e666,
                    e693,
                ],
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:9: 66:176 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(856),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).856),
                ),
                value: e694,
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:66:9: 66:176 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "end",
                        Cooked,
                    ),
                    span: src/dns.rs:67:10: 67:15 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:67:10: 67:15 (#0),
        },
        Expr {
            kind: Deref {
                arg: e696,
            },
            ty: str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:67:10: 67:15 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e697,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:67:10: 67:15 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(910),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).910),
                ),
                value: e698,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:67:10: 67:15 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(library::button::Button) -> std::rc::Rc<library::button::Button> {std::rc::Rc::<library::button::Button>::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:67:17: 67:24 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(912),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).912),
                ),
                value: e700,
            },
            ty: fn(library::button::Button) -> std::rc::Rc<library::button::Button> {std::rc::Rc::<library::button::Button>::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:67:17: 67:24 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn() -> library::button::Button {library::button::Button::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:67:25: 67:36 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(917),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).917),
                ),
                value: e702,
            },
            ty: fn() -> library::button::Button {library::button::Button::new},
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:67:25: 67:36 (#0),
        },
        Expr {
            kind: Call {
                ty: fn() -> library::button::Button {library::button::Button::new},
                fun: e703,
                args: [],
                from_hir_call: true,
                fn_span: src/dns.rs:67:25: 67:38 (#0),
            },
            ty: library::button::Button,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:67:25: 67:38 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(916),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).916),
                ),
                value: e704,
            },
            ty: library::button::Button,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:67:25: 67:38 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::button::Button) -> std::rc::Rc<library::button::Button> {std::rc::Rc::<library::button::Button>::new},
                fun: e701,
                args: [
                    e705,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:67:17: 67:39 (#0),
            },
            ty: std::rc::Rc<library::button::Button>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:67:17: 67:39 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e706,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:67:17: 67:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(911),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).911),
                ),
                value: e707,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:67:17: 67:39 (#0),
        },
        Expr {
            kind: Tuple {
                fields: [
                    e699,
                    e708,
                ],
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:67:9: 67:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(909),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).909),
                ),
                value: e709,
            },
            ty: (&str, std::rc::Rc<dyn core::DataModel>),
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:67:9: 67:40 (#0),
        },
        Expr {
            kind: Array {
                fields: [
                    e498,
                    e511,
                    e524,
                    e537,
                    e550,
                    e563,
                    e596,
                    e629,
                    e662,
                    e695,
                    e710,
                ],
            },
            ty: [(&str, std::rc::Rc<dyn core::DataModel>); 11],
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:56:60: 68:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(662),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).662),
                ),
                value: e711,
            },
            ty: [(&str, std::rc::Rc<dyn core::DataModel>); 11],
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:56:60: 68:6 (#0),
        },
        Expr {
            kind: Call {
                ty: fn([(&str, std::rc::Rc<dyn core::DataModel>); 11]) -> core::bolts::ChildMap {<core::bolts::ChildMap as std::convert::From<[(&str, std::rc::Rc<dyn core::DataModel>); 11]>>::from},
                fun: e488,
                args: [
                    e712,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:56:45: 68:7 (#0),
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:56:45: 68:7 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(657),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).657),
                ),
                value: e713,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:56:45: 68:7 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(core::bolts::ChildMap) -> library::sequence::Sequence {library::sequence::Sequence::new},
                fun: e486,
                args: [
                    e714,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:56:31: 68:8 (#0),
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:56:31: 68:8 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(652),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).652),
                ),
                value: e715,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:56:31: 68:8 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(library::sequence::Sequence) -> std::boxed::Box<library::sequence::Sequence> {std::boxed::Box::<library::sequence::Sequence>::new},
                fun: e484,
                args: [
                    e716,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:56:22: 68:9 (#0),
            },
            ty: std::boxed::Box<library::sequence::Sequence>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:56:22: 68:9 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(647),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).647),
                ),
                value: e717,
            },
            ty: std::boxed::Box<library::sequence::Sequence>,
            temp_lifetime: Some(
                Node(646),
            ),
            span: src/dns.rs:56:22: 68:9 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).922),
                ),
            },
            ty: std::boxed::Box<library::sequence::Sequence>,
            temp_lifetime: Some(
                Node(929),
            ),
            span: src/dns.rs:69:5: 69:11 (#0),
        },
        Expr {
            kind: Deref {
                arg: e719,
            },
            ty: library::sequence::Sequence,
            temp_lifetime: Some(
                Node(929),
            ),
            span: src/dns.rs:69:5: 69:28 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e720,
            },
            ty: &mut library::sequence::Sequence,
            temp_lifetime: Some(
                Node(929),
            ),
            span: src/dns.rs:69:5: 69:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(925),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).925),
                ),
                value: e721,
            },
            ty: &mut library::sequence::Sequence,
            temp_lifetime: Some(
                Node(929),
            ),
            span: src/dns.rs:69:5: 69:11 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "dns",
                        Cooked,
                    ),
                    span: src/dns.rs:69:22: 69:27 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(929),
            ),
            span: src/dns.rs:69:22: 69:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(928),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).928),
                ),
                value: e723,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(929),
            ),
            span: src/dns.rs:69:22: 69:27 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e724,
            },
            ty: &&str,
            temp_lifetime: Some(
                Node(929),
            ),
            span: src/dns.rs:69:21: 69:27 (#0),
        },
        Expr {
            kind: Deref {
                arg: e725,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(929),
            ),
            span: src/dns.rs:69:21: 69:27 (#0),
        },
        Expr {
            kind: Deref {
                arg: e726,
            },
            ty: str,
            temp_lifetime: Some(
                Node(929),
            ),
            span: src/dns.rs:69:21: 69:27 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e727,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(929),
            ),
            span: src/dns.rs:69:21: 69:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(927),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).927),
                ),
                value: e728,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(929),
            ),
            span: src/dns.rs:69:21: 69:27 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b> fn(&'a mut library::sequence::Sequence, &'b str) {<library::sequence::Sequence as core::Named>::set_name},
            temp_lifetime: Some(
                Node(929),
            ),
            span: src/dns.rs:69:12: 69:20 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b> fn(&'a mut library::sequence::Sequence, &'b str) {<library::sequence::Sequence as core::Named>::set_name},
                fun: e730,
                args: [
                    e722,
                    e729,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:69:12: 69:28 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(929),
            ),
            span: src/dns.rs:69:5: 69:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(923),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).923),
                ),
                value: e731,
            },
            ty: (),
            temp_lifetime: Some(
                Node(929),
            ),
            span: src/dns.rs:69:5: 69:28 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).922),
                ),
            },
            ty: std::boxed::Box<library::sequence::Sequence>,
            temp_lifetime: Some(
                Node(933),
            ),
            span: src/dns.rs:70:5: 70:11 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e733,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(933),
            ),
            span: src/dns.rs:70:5: 70:11 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(930),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).930),
                ),
                value: e734,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(933),
            ),
            span: src/dns.rs:70:5: 70:11 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(933),
            ),
            span: src/dns.rs:70:5: 70:11 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e736,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(933),
            ),
            span: src/dns.rs:70:5: 70:11 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(933),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).933),
                ),
                value: e737,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(933),
            ),
            span: src/dns.rs:6:36: 71:2 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(933),
                lint_level: Inherited,
                value: e738,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(933),
            ),
            span: src/dns.rs:6:36: 71:2 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 932, first_statement_index: 0},
                init_scope: Node(1),
                pattern: Pat {
                    ty: std::rc::Rc<dyn core::DataModel>,
                    span: src/dns.rs:7:9: 7:14 (#0),
                    kind: AscribeUserType {
                        ascription: Ascription {
                            annotation: CanonicalUserTypeAnnotation {
                                user_ty: Canonical {
                                    max_universe: U0,
                                    variables: [
                                        CanonicalVarInfo {
                                            kind: Region(
                                                U0,
                                            ),
                                        },
                                    ],
                                    value: Ty(
                                        std::rc::Rc<dyn core::DataModel>,
                                    ),
                                },
                                span: src/dns.rs:7:16: 7:33 (#0),
                                inferred_ty: std::rc::Rc<dyn core::DataModel>,
                            },
                            variance: +,
                        },
                        subpattern: Pat {
                            ty: std::rc::Rc<dyn core::DataModel>,
                            span: src/dns.rs:7:9: 7:14 (#0),
                            kind: Binding {
                                mutability: Not,
                                name: "uint8",
                                mode: ByValue,
                                var: LocalVarId(
                                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).19),
                                ),
                                ty: std::rc::Rc<dyn core::DataModel>,
                                subpattern: None,
                                is_primary: true,
                            },
                        },
                    },
                },
                initializer: Some(
                    e8,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).18),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(1),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 932, first_statement_index: 1},
                init_scope: Node(20),
                pattern: Pat {
                    ty: std::rc::Rc<dyn core::DataModel>,
                    span: src/dns.rs:8:9: 8:15 (#0),
                    kind: AscribeUserType {
                        ascription: Ascription {
                            annotation: CanonicalUserTypeAnnotation {
                                user_ty: Canonical {
                                    max_universe: U0,
                                    variables: [
                                        CanonicalVarInfo {
                                            kind: Region(
                                                U0,
                                            ),
                                        },
                                    ],
                                    value: Ty(
                                        std::rc::Rc<dyn core::DataModel>,
                                    ),
                                },
                                span: src/dns.rs:8:17: 8:34 (#0),
                                inferred_ty: std::rc::Rc<dyn core::DataModel>,
                            },
                            variance: +,
                        },
                        subpattern: Pat {
                            ty: std::rc::Rc<dyn core::DataModel>,
                            span: src/dns.rs:8:9: 8:15 (#0),
                            kind: Binding {
                                mutability: Not,
                                name: "uint16",
                                mode: ByValue,
                                var: LocalVarId(
                                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).38),
                                ),
                                ty: std::rc::Rc<dyn core::DataModel>,
                                subpattern: None,
                                is_primary: true,
                            },
                        },
                    },
                },
                initializer: Some(
                    e17,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).37),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(20),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 932, first_statement_index: 2},
                init_scope: Node(39),
                pattern: Pat {
                    ty: std::rc::Rc<dyn core::DataModel>,
                    span: src/dns.rs:9:9: 9:15 (#0),
                    kind: AscribeUserType {
                        ascription: Ascription {
                            annotation: CanonicalUserTypeAnnotation {
                                user_ty: Canonical {
                                    max_universe: U0,
                                    variables: [
                                        CanonicalVarInfo {
                                            kind: Region(
                                                U0,
                                            ),
                                        },
                                    ],
                                    value: Ty(
                                        std::rc::Rc<dyn core::DataModel>,
                                    ),
                                },
                                span: src/dns.rs:9:17: 9:34 (#0),
                                inferred_ty: std::rc::Rc<dyn core::DataModel>,
                            },
                            variance: +,
                        },
                        subpattern: Pat {
                            ty: std::rc::Rc<dyn core::DataModel>,
                            span: src/dns.rs:9:9: 9:15 (#0),
                            kind: Binding {
                                mutability: Not,
                                name: "uint32",
                                mode: ByValue,
                                var: LocalVarId(
                                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).87),
                                ),
                                ty: std::rc::Rc<dyn core::DataModel>,
                                subpattern: None,
                                is_primary: true,
                            },
                        },
                    },
                },
                initializer: Some(
                    e81,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).86),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(39),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 932, first_statement_index: 3},
                init_scope: Node(88),
                pattern: Pat {
                    ty: library::union::Union,
                    span: src/dns.rs:15:9: 15:18 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "label",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).297),
                        ),
                        ty: library::union::Union,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e245,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).296),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(88),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(304),
                expr: e258,
            },
            opt_destruction_scope: Some(
                Destruction(304),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 932, first_statement_index: 5},
                init_scope: Node(305),
                pattern: Pat {
                    ty: std::rc::Rc<dyn core::DataModel>,
                    span: src/dns.rs:26:9: 26:14 (#0),
                    kind: AscribeUserType {
                        ascription: Ascription {
                            annotation: CanonicalUserTypeAnnotation {
                                user_ty: Canonical {
                                    max_universe: U0,
                                    variables: [
                                        CanonicalVarInfo {
                                            kind: Region(
                                                U0,
                                            ),
                                        },
                                    ],
                                    value: Ty(
                                        std::rc::Rc<dyn core::DataModel>,
                                    ),
                                },
                                span: src/dns.rs:26:16: 26:33 (#0),
                                inferred_ty: std::rc::Rc<dyn core::DataModel>,
                            },
                            variance: +,
                        },
                        subpattern: Pat {
                            ty: std::rc::Rc<dyn core::DataModel>,
                            span: src/dns.rs:26:9: 26:14 (#0),
                            kind: Binding {
                                mutability: Not,
                                name: "label",
                                mode: ByValue,
                                var: LocalVarId(
                                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).320),
                                ),
                                ty: std::rc::Rc<dyn core::DataModel>,
                                subpattern: None,
                                is_primary: true,
                            },
                        },
                    },
                },
                initializer: Some(
                    e265,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).319),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(305),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 932, first_statement_index: 6},
                init_scope: Node(321),
                pattern: Pat {
                    ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
                    span: src/dns.rs:27:9: 27:25 (#0),
                    kind: AscribeUserType {
                        ascription: Ascription {
                            annotation: CanonicalUserTypeAnnotation {
                                user_ty: Canonical {
                                    max_universe: U0,
                                    variables: [
                                        CanonicalVarInfo {
                                            kind: Region(
                                                U0,
                                            ),
                                        },
                                    ],
                                    value: Ty(
                                        std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
                                    ),
                                },
                                span: src/dns.rs:27:27: 27:58 (#0),
                                inferred_ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
                            },
                            variance: +,
                        },
                        subpattern: Pat {
                            ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
                            span: src/dns.rs:27:9: 27:25 (#0),
                            kind: Binding {
                                mutability: Not,
                                name: "domain_predicate",
                                mode: ByValue,
                                var: LocalVarId(
                                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).429),
                                ),
                                ty: std::rc::Rc<dyn for<'a> std::ops::Fn(std::rc::Rc<core::context::Context<'a>>) -> bool>,
                                subpattern: None,
                                is_primary: true,
                            },
                        },
                    },
                },
                initializer: Some(
                    e272,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).428),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(321),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 932, first_statement_index: 7},
                init_scope: Node(430),
                pattern: Pat {
                    ty: library::set::Set,
                    span: src/dns.rs:41:9: 41:19 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "domain",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).460),
                        ),
                        ty: library::set::Set,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e302,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).459),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(430),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(467),
                expr: e315,
            },
            opt_destruction_scope: Some(
                Destruction(467),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 932, first_statement_index: 9},
                init_scope: Node(468),
                pattern: Pat {
                    ty: std::rc::Rc<dyn core::DataModel>,
                    span: src/dns.rs:43:9: 43:15 (#0),
                    kind: AscribeUserType {
                        ascription: Ascription {
                            annotation: CanonicalUserTypeAnnotation {
                                user_ty: Canonical {
                                    max_universe: U0,
                                    variables: [
                                        CanonicalVarInfo {
                                            kind: Region(
                                                U0,
                                            ),
                                        },
                                    ],
                                    value: Ty(
                                        std::rc::Rc<dyn core::DataModel>,
                                    ),
                                },
                                span: src/dns.rs:43:17: 43:34 (#0),
                                inferred_ty: std::rc::Rc<dyn core::DataModel>,
                            },
                            variance: +,
                        },
                        subpattern: Pat {
                            ty: std::rc::Rc<dyn core::DataModel>,
                            span: src/dns.rs:43:9: 43:15 (#0),
                            kind: Binding {
                                mutability: Not,
                                name: "domain",
                                mode: ByValue,
                                var: LocalVarId(
                                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).483),
                                ),
                                ty: std::rc::Rc<dyn core::DataModel>,
                                subpattern: None,
                                is_primary: true,
                            },
                        },
                    },
                },
                initializer: Some(
                    e322,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).482),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(468),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 932, first_statement_index: 10},
                init_scope: Node(484),
                pattern: Pat {
                    ty: std::boxed::Box<dyn core::DataModel>,
                    span: src/dns.rs:44:9: 44:13 (#0),
                    kind: AscribeUserType {
                        ascription: Ascription {
                            annotation: CanonicalUserTypeAnnotation {
                                user_ty: Canonical {
                                    max_universe: U0,
                                    variables: [
                                        CanonicalVarInfo {
                                            kind: Region(
                                                U0,
                                            ),
                                        },
                                    ],
                                    value: Ty(
                                        std::boxed::Box<dyn core::DataModel>,
                                    ),
                                },
                                span: src/dns.rs:44:15: 44:33 (#0),
                                inferred_ty: std::boxed::Box<dyn core::DataModel>,
                            },
                            variance: +,
                        },
                        subpattern: Pat {
                            ty: std::boxed::Box<dyn core::DataModel>,
                            span: src/dns.rs:44:9: 44:13 (#0),
                            kind: Binding {
                                mutability: Not,
                                name: "rr_a",
                                mode: ByValue,
                                var: LocalVarId(
                                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).591),
                                ),
                                ty: std::boxed::Box<dyn core::DataModel>,
                                subpattern: None,
                                is_primary: true,
                            },
                        },
                    },
                },
                initializer: Some(
                    e432,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).590),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(484),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 932, first_statement_index: 11},
                init_scope: Node(592),
                pattern: Pat {
                    ty: library::union::Union,
                    span: src/dns.rs:53:9: 53:28 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "resource_record",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).628),
                        ),
                        ty: library::union::Union,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e463,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).627),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(592),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(635),
                expr: e476,
            },
            opt_destruction_scope: Some(
                Destruction(635),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 932, first_statement_index: 13},
                init_scope: Node(636),
                pattern: Pat {
                    ty: std::rc::Rc<library::union::Union>,
                    span: src/dns.rs:55:9: 55:24 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "resource_record",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).645),
                        ),
                        ty: std::rc::Rc<library::union::Union>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e482,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).644),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(636),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 932, first_statement_index: 14},
                init_scope: Node(646),
                pattern: Pat {
                    ty: std::boxed::Box<library::sequence::Sequence>,
                    span: src/dns.rs:56:9: 56:19 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "result",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).922),
                        ),
                        ty: std::boxed::Box<library::sequence::Sequence>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e718,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).921),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(646),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(929),
                expr: e732,
            },
            opt_destruction_scope: Some(
                Destruction(929),
            ),
        },
    ],
    params: [],
}

DefId(0:512 ~ andrew_fuzz[741f]::dns::dns::{closure#6}):
Thir {
    body_type: Fn(
        ([std::rc::Rc<core::context::Context<'_>>]; c_variadic: false)->bool,
    ),
    arms: [],
    blocks: [],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).152),
                ),
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(153),
            ),
            span: src/dns.rs:17:77: 17:80 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e0,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(153),
            ),
            span: src/dns.rs:17:77: 17:88 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(153),
            ),
            span: src/dns.rs:17:77: 17:88 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
                fun: e2,
                args: [
                    e1,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:17:77: 17:88 (#0),
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(153),
            ),
            span: src/dns.rs:17:77: 17:88 (#0),
        },
        Expr {
            kind: Deref {
                arg: e3,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(153),
            ),
            span: src/dns.rs:17:77: 17:88 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e4,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(153),
            ),
            span: src/dns.rs:17:77: 17:88 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(158),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).158),
                ),
                value: e5,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(153),
            ),
            span: src/dns.rs:17:77: 17:80 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::context::Context<'_>) -> std::rc::Rc<(dyn core::DataModel + 'static)> {core::context::Context::<'_>::child},
            temp_lifetime: Some(
                Node(153),
            ),
            span: src/dns.rs:17:81: 17:86 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::context::Context<'_>) -> std::rc::Rc<(dyn core::DataModel + 'static)> {core::context::Context::<'_>::child},
                fun: e7,
                args: [
                    e6,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:17:81: 17:88 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(153),
            ),
            span: src/dns.rs:17:77: 17:88 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e8,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(153),
            ),
            span: src/dns.rs:17:77: 17:94 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(153),
            ),
            span: src/dns.rs:17:77: 17:94 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
                fun: e10,
                args: [
                    e9,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:17:77: 17:94 (#0),
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(153),
            ),
            span: src/dns.rs:17:77: 17:94 (#0),
        },
        Expr {
            kind: Deref {
                arg: e11,
            },
            ty: dyn core::DataModel,
            temp_lifetime: Some(
                Node(153),
            ),
            span: src/dns.rs:17:77: 17:94 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e12,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(153),
            ),
            span: src/dns.rs:17:77: 17:94 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(156),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).156),
                ),
                value: e13,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(153),
            ),
            span: src/dns.rs:17:77: 17:88 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a dyn core::DataModel) -> i32 {<dyn core::DataModel as core::Contextual>::int},
            temp_lifetime: Some(
                Node(153),
            ),
            span: src/dns.rs:17:89: 17:92 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a dyn core::DataModel) -> i32 {<dyn core::DataModel as core::Contextual>::int},
                fun: e15,
                args: [
                    e14,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:17:89: 17:94 (#0),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(153),
            ),
            span: src/dns.rs:17:77: 17:94 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(154),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).154),
                ),
                value: e16,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(153),
            ),
            span: src/dns.rs:17:77: 17:94 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        192,
                        Unsuffixed,
                    ),
                    span: src/dns.rs:17:97: 17:101 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(153),
            ),
            span: src/dns.rs:17:97: 17:101 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(160),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).160),
                ),
                value: e18,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(153),
            ),
            span: src/dns.rs:17:97: 17:101 (#0),
        },
        Expr {
            kind: Binary {
                op: Lt,
                lhs: e17,
                rhs: e19,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(153),
            ),
            span: src/dns.rs:17:77: 17:101 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(153),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).153),
                ),
                value: e20,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(153),
            ),
            span: src/dns.rs:17:77: 17:101 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(153),
                lint_level: Inherited,
                value: e21,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(153),
            ),
            span: src/dns.rs:17:77: 17:101 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: None,
            ty: &[closure@src/dns.rs:17:71: 17:76],
            ty_span: None,
            self_kind: None,
            hir_id: None,
        },
        Param {
            pat: Some(
                Pat {
                    ty: std::rc::Rc<core::context::Context<'_>>,
                    span: src/dns.rs:17:72: 17:75 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "ctx",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).152),
                        ),
                        ty: std::rc::Rc<core::context::Context<'_>>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::rc::Rc<core::context::Context<'_>>,
            ty_span: None,
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).151),
            ),
        },
    ],
}

DefId(0:513 ~ andrew_fuzz[741f]::dns::dns::{closure#7}):
Thir {
    body_type: Fn(
        ([std::rc::Rc<core::context::Context<'_>>]; c_variadic: false)->bool,
    ),
    arms: [],
    blocks: [],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).197),
                ),
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:83: 18:86 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e0,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:83: 18:92 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:83: 18:92 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
                fun: e2,
                args: [
                    e1,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:18:83: 18:92 (#0),
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:83: 18:92 (#0),
        },
        Expr {
            kind: Deref {
                arg: e3,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:83: 18:92 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e4,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:83: 18:92 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(204),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).204),
                ),
                value: e5,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:83: 18:86 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::context::Context<'_>) -> &'a std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>> {core::context::Context::<'_>::vec},
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:87: 18:90 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::context::Context<'_>) -> &'a std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>> {core::context::Context::<'_>::vec},
                fun: e7,
                args: [
                    e6,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:18:87: 18:92 (#0),
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:83: 18:92 (#0),
        },
        Expr {
            kind: Deref {
                arg: e8,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:83: 18:98 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e9,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:83: 18:98 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(202),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).202),
                ),
                value: e10,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:83: 18:92 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> usize {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::len},
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:93: 18:96 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> usize {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::len},
                fun: e12,
                args: [
                    e11,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:18:93: 18:98 (#0),
            },
            ty: usize,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:83: 18:98 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(200),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).200),
                ),
                value: e13,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:83: 18:98 (#0),
        },
        Expr {
            kind: Cast {
                source: e14,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:83: 18:105 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(199),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).199),
                ),
                value: e15,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:83: 18:105 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).197),
                ),
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:112 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e17,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:121 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:121 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
                fun: e19,
                args: [
                    e18,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:18:109: 18:121 (#0),
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:121 (#0),
        },
        Expr {
            kind: Deref {
                arg: e20,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:121 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e21,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:121 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(217),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).217),
                ),
                value: e22,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:112 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::context::Context<'_>) -> std::rc::Rc<core::context::Context<'a>> {core::context::Context::<'_>::parent},
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:113: 18:119 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::context::Context<'_>) -> std::rc::Rc<core::context::Context<'a>> {core::context::Context::<'_>::parent},
                fun: e24,
                args: [
                    e23,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:18:113: 18:121 (#0),
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:121 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e25,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:127 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:127 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
                fun: e27,
                args: [
                    e26,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:18:109: 18:127 (#0),
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:127 (#0),
        },
        Expr {
            kind: Deref {
                arg: e28,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:127 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e29,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:127 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(215),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).215),
                ),
                value: e30,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:121 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::context::Context<'_>) -> &'a core::bolts::ChildMap {core::context::Context::<'_>::map},
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:122: 18:125 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::context::Context<'_>) -> &'a core::bolts::ChildMap {core::context::Context::<'_>::map},
                fun: e32,
                args: [
                    e31,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:18:122: 18:127 (#0),
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:127 (#0),
        },
        Expr {
            kind: Deref {
                arg: e33,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:127 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e34,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:127 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(213),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).213),
                ),
                value: e35,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:127 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "length",
                        Cooked,
                    ),
                    span: src/dns.rs:18:129: 18:137 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:129: 18:137 (#0),
        },
        Expr {
            kind: Deref {
                arg: e37,
            },
            ty: str,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:129: 18:149 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e38,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:129: 18:149 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(222),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).222),
                ),
                value: e39,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:129: 18:137 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:138: 18:147 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
                fun: e41,
                args: [
                    e40,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:18:138: 18:149 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:129: 18:149 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(220),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).220),
                ),
                value: e42,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:129: 18:149 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e43,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:128: 18:149 (#0),
        },
        Expr {
            kind: Deref {
                arg: e44,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:128: 18:149 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e45,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:128: 18:149 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::string::String) -> &'a <std::string::String as std::ops::Deref>::Target {<std::string::String as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:128: 18:149 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::string::String) -> &'a <std::string::String as std::ops::Deref>::Target {<std::string::String as std::ops::Deref>::deref},
                fun: e47,
                args: [
                    e46,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:18:128: 18:149 (#0),
            },
            ty: &str,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:128: 18:149 (#0),
        },
        Expr {
            kind: Deref {
                arg: e48,
            },
            ty: str,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:128: 18:149 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e49,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:128: 18:149 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(219),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).219),
                ),
                value: e50,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:128: 18:149 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bolts::ChildMap, &str) -> &'a <core::bolts::ChildMap as std::ops::Index<&str>>::Output {<core::bolts::ChildMap as std::ops::Index<&str>>::index},
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:150 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bolts::ChildMap, &str) -> &'a <core::bolts::ChildMap as std::ops::Index<&str>>::Output {<core::bolts::ChildMap as std::ops::Index<&str>>::index},
                fun: e52,
                args: [
                    e36,
                    e51,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:18:109: 18:150 (#0),
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:150 (#0),
        },
        Expr {
            kind: Deref {
                arg: e53,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:150 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e54,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:158 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:158 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
                fun: e56,
                args: [
                    e55,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:18:109: 18:158 (#0),
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:158 (#0),
        },
        Expr {
            kind: Deref {
                arg: e57,
            },
            ty: dyn core::DataModel,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:158 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e58,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:158 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(212),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).212),
                ),
                value: e59,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:150 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a dyn core::DataModel) -> std::rc::Rc<(dyn core::DataModel + 'static)> {<dyn core::DataModel as core::Contextual>::child},
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:151: 18:156 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a dyn core::DataModel) -> std::rc::Rc<(dyn core::DataModel + 'static)> {<dyn core::DataModel as core::Contextual>::child},
                fun: e61,
                args: [
                    e60,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:18:151: 18:158 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:158 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e62,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:164 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:164 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
                fun: e64,
                args: [
                    e63,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:18:109: 18:164 (#0),
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:164 (#0),
        },
        Expr {
            kind: Deref {
                arg: e65,
            },
            ty: dyn core::DataModel,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:164 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e66,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:164 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(210),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).210),
                ),
                value: e67,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:158 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a dyn core::DataModel) -> i32 {<dyn core::DataModel as core::Contextual>::int},
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:159: 18:162 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a dyn core::DataModel) -> i32 {<dyn core::DataModel as core::Contextual>::int},
                fun: e69,
                args: [
                    e68,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:18:159: 18:164 (#0),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:164 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(208),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).208),
                ),
                value: e70,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:109: 18:164 (#0),
        },
        Expr {
            kind: Binary {
                op: Eq,
                lhs: e16,
                rhs: e71,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:83: 18:164 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(198),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).198),
                ),
                value: e72,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:83: 18:164 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(198),
                lint_level: Inherited,
                value: e73,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(198),
            ),
            span: src/dns.rs:18:83: 18:164 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: None,
            ty: &[closure@src/dns.rs:18:77: 18:82],
            ty_span: None,
            self_kind: None,
            hir_id: None,
        },
        Param {
            pat: Some(
                Pat {
                    ty: std::rc::Rc<core::context::Context<'_>>,
                    span: src/dns.rs:18:78: 18:81 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "ctx",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).197),
                        ),
                        ty: std::rc::Rc<core::context::Context<'_>>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::rc::Rc<core::context::Context<'_>>,
            ty_span: None,
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).196),
            ),
        },
    ],
}

DefId(0:514 ~ andrew_fuzz[741f]::dns::dns::{closure#8}):
Thir {
    body_type: Fn(
        ([std::rc::Rc<core::context::Context<'_>>]; c_variadic: false)->bool,
    ),
    arms: [],
    blocks: [],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).270),
                ),
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(271),
            ),
            span: src/dns.rs:21:77: 21:80 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e0,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(271),
            ),
            span: src/dns.rs:21:77: 21:88 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(271),
            ),
            span: src/dns.rs:21:77: 21:88 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
                fun: e2,
                args: [
                    e1,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:21:77: 21:88 (#0),
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(271),
            ),
            span: src/dns.rs:21:77: 21:88 (#0),
        },
        Expr {
            kind: Deref {
                arg: e3,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(271),
            ),
            span: src/dns.rs:21:77: 21:88 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e4,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(271),
            ),
            span: src/dns.rs:21:77: 21:88 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(276),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).276),
                ),
                value: e5,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(271),
            ),
            span: src/dns.rs:21:77: 21:80 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::context::Context<'_>) -> std::rc::Rc<(dyn core::DataModel + 'static)> {core::context::Context::<'_>::child},
            temp_lifetime: Some(
                Node(271),
            ),
            span: src/dns.rs:21:81: 21:86 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::context::Context<'_>) -> std::rc::Rc<(dyn core::DataModel + 'static)> {core::context::Context::<'_>::child},
                fun: e7,
                args: [
                    e6,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:21:81: 21:88 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(271),
            ),
            span: src/dns.rs:21:77: 21:88 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e8,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(271),
            ),
            span: src/dns.rs:21:77: 21:94 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(271),
            ),
            span: src/dns.rs:21:77: 21:94 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
                fun: e10,
                args: [
                    e9,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:21:77: 21:94 (#0),
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(271),
            ),
            span: src/dns.rs:21:77: 21:94 (#0),
        },
        Expr {
            kind: Deref {
                arg: e11,
            },
            ty: dyn core::DataModel,
            temp_lifetime: Some(
                Node(271),
            ),
            span: src/dns.rs:21:77: 21:94 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e12,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(271),
            ),
            span: src/dns.rs:21:77: 21:94 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(274),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).274),
                ),
                value: e13,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(271),
            ),
            span: src/dns.rs:21:77: 21:88 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a dyn core::DataModel) -> i32 {<dyn core::DataModel as core::Contextual>::int},
            temp_lifetime: Some(
                Node(271),
            ),
            span: src/dns.rs:21:89: 21:92 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a dyn core::DataModel) -> i32 {<dyn core::DataModel as core::Contextual>::int},
                fun: e15,
                args: [
                    e14,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:21:89: 21:94 (#0),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(271),
            ),
            span: src/dns.rs:21:77: 21:94 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(272),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).272),
                ),
                value: e16,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(271),
            ),
            span: src/dns.rs:21:77: 21:94 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        192,
                        Unsuffixed,
                    ),
                    span: src/dns.rs:21:98: 21:102 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(271),
            ),
            span: src/dns.rs:21:98: 21:102 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(278),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).278),
                ),
                value: e18,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(271),
            ),
            span: src/dns.rs:21:98: 21:102 (#0),
        },
        Expr {
            kind: Binary {
                op: Ge,
                lhs: e17,
                rhs: e19,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(271),
            ),
            span: src/dns.rs:21:77: 21:102 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(271),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).271),
                ),
                value: e20,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(271),
            ),
            span: src/dns.rs:21:77: 21:102 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(271),
                lint_level: Inherited,
                value: e21,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(271),
            ),
            span: src/dns.rs:21:77: 21:102 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: None,
            ty: &[closure@src/dns.rs:21:71: 21:76],
            ty_span: None,
            self_kind: None,
            hir_id: None,
        },
        Param {
            pat: Some(
                Pat {
                    ty: std::rc::Rc<core::context::Context<'_>>,
                    span: src/dns.rs:21:72: 21:75 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "ctx",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).270),
                        ),
                        ty: std::rc::Rc<core::context::Context<'_>>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::rc::Rc<core::context::Context<'_>>,
            ty_span: None,
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).269),
            ),
        },
    ],
}

DefId(0:505 ~ andrew_fuzz[741f]::dns::dns::{closure#0}):
Thir {
    body_type: Fn(
        ([std::rc::Rc<core::context::Context<'_>>]; c_variadic: false)->bool,
    ),
    arms: [],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(370),
            opt_destruction_scope: None,
            span: src/dns.rs:30:23: 32:10 (#0),
            stmts: [
                s2,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(421),
            opt_destruction_scope: None,
            span: src/dns.rs:34:93: 37:10 (#0),
            stmts: [
                s5,
            ],
            expr: Some(
                e127,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(425),
            opt_destruction_scope: None,
            span: src/dns.rs:37:16: 39:10 (#0),
            stmts: [],
            expr: Some(
                e132,
            ),
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(426),
            opt_destruction_scope: None,
            span: src/dns.rs:27:75: 40:6 (#0),
            stmts: [
                s0,
                s1,
                s3,
                s4,
            ],
            expr: Some(
                e137,
            ),
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).345),
                ),
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(347),
            ),
            span: src/dns.rs:28:17: 28:20 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e0,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(347),
            ),
            span: src/dns.rs:28:17: 28:26 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(347),
            ),
            span: src/dns.rs:28:17: 28:26 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
                fun: e2,
                args: [
                    e1,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:28:17: 28:26 (#0),
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(347),
            ),
            span: src/dns.rs:28:17: 28:26 (#0),
        },
        Expr {
            kind: Deref {
                arg: e3,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(347),
            ),
            span: src/dns.rs:28:17: 28:26 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e4,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(347),
            ),
            span: src/dns.rs:28:17: 28:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(350),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).350),
                ),
                value: e5,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(347),
            ),
            span: src/dns.rs:28:17: 28:20 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::context::Context<'_>) -> &'a std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>> {core::context::Context::<'_>::vec},
            temp_lifetime: Some(
                Node(347),
            ),
            span: src/dns.rs:28:21: 28:24 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::context::Context<'_>) -> &'a std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>> {core::context::Context::<'_>::vec},
                fun: e7,
                args: [
                    e6,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:28:21: 28:26 (#0),
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(347),
            ),
            span: src/dns.rs:28:17: 28:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(348),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).348),
                ),
                value: e8,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(347),
            ),
            span: src/dns.rs:28:17: 28:26 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).353),
                ),
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(354),
            ),
            span: src/dns.rs:29:21: 29:22 (#0),
        },
        Expr {
            kind: Deref {
                arg: e10,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(354),
            ),
            span: src/dns.rs:29:21: 29:28 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e11,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(354),
            ),
            span: src/dns.rs:29:21: 29:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(357),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).357),
                ),
                value: e12,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(354),
            ),
            span: src/dns.rs:29:21: 29:22 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> usize {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::len},
            temp_lifetime: Some(
                Node(354),
            ),
            span: src/dns.rs:29:23: 29:26 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> usize {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::len},
                fun: e14,
                args: [
                    e13,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:29:23: 29:28 (#0),
            },
            ty: usize,
            temp_lifetime: Some(
                Node(354),
            ),
            span: src/dns.rs:29:21: 29:28 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(355),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).355),
                ),
                value: e15,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(354),
            ),
            span: src/dns.rs:29:21: 29:28 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).360),
                ),
            },
            ty: usize,
            temp_lifetime: Some(
                Node(362),
            ),
            span: src/dns.rs:30:12: 30:17 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(363),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).363),
                ),
                value: e17,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(362),
            ),
            span: src/dns.rs:30:12: 30:17 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        0,
                        Unsuffixed,
                    ),
                    span: src/dns.rs:30:21: 30:22 (#0),
                },
                neg: false,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(362),
            ),
            span: src/dns.rs:30:21: 30:22 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(365),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).365),
                ),
                value: e19,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(362),
            ),
            span: src/dns.rs:30:21: 30:22 (#0),
        },
        Expr {
            kind: Binary {
                op: Le,
                lhs: e18,
                rhs: e20,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(362),
            ),
            span: src/dns.rs:30:12: 30:22 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(362),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).362),
                ),
                value: e21,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(362),
            ),
            span: src/dns.rs:30:12: 30:22 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(362),
                lint_level: Inherited,
                value: e22,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(362),
            ),
            span: src/dns.rs:30:12: 30:22 (#0),
        },
        Expr {
            kind: Use {
                source: e23,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(372),
            ),
            span: src/dns.rs:30:12: 30:22 (#156),
        },
        Expr {
            kind: Scope {
                region_scope: Node(366),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).366),
                ),
                value: e24,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(372),
            ),
            span: src/dns.rs:30:12: 30:22 (#156),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Bool(
                        false,
                    ),
                    span: src/dns.rs:31:20: 31:25 (#0),
                },
                neg: false,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(369),
            ),
            span: src/dns.rs:31:20: 31:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(368),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).368),
                ),
                value: e26,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(369),
            ),
            span: src/dns.rs:31:20: 31:25 (#0),
        },
        Expr {
            kind: Return {
                value: Some(
                    e27,
                ),
            },
            ty: !,
            temp_lifetime: Some(
                Node(369),
            ),
            span: src/dns.rs:31:13: 31:25 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(367),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).367),
                ),
                value: e28,
            },
            ty: !,
            temp_lifetime: Some(
                Node(369),
            ),
            span: src/dns.rs:31:13: 31:25 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: !,
            temp_lifetime: Some(
                Node(371),
            ),
            span: src/dns.rs:30:23: 32:10 (#0),
        },
        Expr {
            kind: NeverToAny {
                source: e30,
            },
            ty: (),
            temp_lifetime: Some(
                Node(371),
            ),
            span: src/dns.rs:30:23: 32:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(371),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).371),
                ),
                value: e31,
            },
            ty: (),
            temp_lifetime: Some(
                Node(371),
            ),
            span: src/dns.rs:30:23: 32:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(371),
                lint_level: Inherited,
                value: e32,
            },
            ty: (),
            temp_lifetime: Some(
                Node(371),
            ),
            span: src/dns.rs:30:23: 32:10 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(371),
                cond: e25,
                then: e33,
                else_opt: None,
            },
            ty: (),
            temp_lifetime: Some(
                Node(372),
            ),
            span: src/dns.rs:30:9: 32:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(361),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).361),
                ),
                value: e34,
            },
            ty: (),
            temp_lifetime: Some(
                Node(372),
            ),
            span: src/dns.rs:30:9: 32:10 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).353),
                ),
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(373),
            ),
            span: src/dns.rs:33:28: 33:29 (#0),
        },
        Expr {
            kind: Deref {
                arg: e36,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(373),
            ),
            span: src/dns.rs:33:28: 33:29 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e37,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(373),
            ),
            span: src/dns.rs:33:28: 33:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(377),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).377),
                ),
                value: e38,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(373),
            ),
            span: src/dns.rs:33:28: 33:29 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).360),
                ),
            },
            ty: usize,
            temp_lifetime: Some(
                Node(373),
            ),
            span: src/dns.rs:33:30: 33:35 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(380),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).380),
                ),
                value: e40,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(373),
            ),
            span: src/dns.rs:33:30: 33:35 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        1,
                        Unsuffixed,
                    ),
                    span: src/dns.rs:33:38: 33:39 (#0),
                },
                neg: false,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(373),
            ),
            span: src/dns.rs:33:38: 33:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(382),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).382),
                ),
                value: e42,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(373),
            ),
            span: src/dns.rs:33:38: 33:39 (#0),
        },
        Expr {
            kind: Binary {
                op: Sub,
                lhs: e41,
                rhs: e43,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(373),
            ),
            span: src/dns.rs:33:30: 33:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(379),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).379),
                ),
                value: e44,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(373),
            ),
            span: src/dns.rs:33:30: 33:39 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::vec::Vec<std::rc::Rc<dyn core::DataModel>>, usize) -> &'a <std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::ops::Index<usize>>::Output {<std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::ops::Index<usize>>::index},
            temp_lifetime: Some(
                Node(373),
            ),
            span: src/dns.rs:33:28: 33:40 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::vec::Vec<std::rc::Rc<dyn core::DataModel>>, usize) -> &'a <std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::ops::Index<usize>>::Output {<std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::ops::Index<usize>>::index},
                fun: e46,
                args: [
                    e39,
                    e45,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:33:28: 33:40 (#0),
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(373),
            ),
            span: src/dns.rs:33:28: 33:40 (#0),
        },
        Expr {
            kind: Deref {
                arg: e47,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(373),
            ),
            span: src/dns.rs:33:28: 33:40 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e48,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(373),
            ),
            span: src/dns.rs:33:28: 33:48 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(376),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).376),
                ),
                value: e49,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(373),
            ),
            span: src/dns.rs:33:28: 33:40 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
            temp_lifetime: Some(
                Node(373),
            ),
            span: src/dns.rs:33:41: 33:46 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> std::rc::Rc<dyn core::DataModel> {<std::rc::Rc<dyn core::DataModel> as std::clone::Clone>::clone},
                fun: e51,
                args: [
                    e50,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:33:41: 33:48 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(373),
            ),
            span: src/dns.rs:33:28: 33:48 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(374),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).374),
                ),
                value: e52,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(373),
            ),
            span: src/dns.rs:33:28: 33:48 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).384),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:39: 34:51 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e54,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:39: 34:59 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:39: 34:59 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
                fun: e56,
                args: [
                    e55,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:34:39: 34:59 (#0),
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:39: 34:59 (#0),
        },
        Expr {
            kind: Deref {
                arg: e57,
            },
            ty: dyn core::DataModel,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:39: 34:59 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e58,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:39: 34:59 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(397),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).397),
                ),
                value: e59,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:39: 34:51 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a dyn core::DataModel) -> std::rc::Rc<(dyn core::DataModel + 'static)> {<dyn core::DataModel as core::Contextual>::child},
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:52: 34:57 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a dyn core::DataModel) -> std::rc::Rc<(dyn core::DataModel + 'static)> {<dyn core::DataModel as core::Contextual>::child},
                fun: e61,
                args: [
                    e60,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:34:52: 34:59 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:39: 34:59 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e62,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:39: 34:65 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:39: 34:65 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
                fun: e64,
                args: [
                    e63,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:34:39: 34:65 (#0),
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:39: 34:65 (#0),
        },
        Expr {
            kind: Deref {
                arg: e65,
            },
            ty: dyn core::DataModel,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:39: 34:65 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e66,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:39: 34:65 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(395),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).395),
                ),
                value: e67,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:39: 34:59 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a dyn core::DataModel) -> &'a core::bolts::ChildMap {<dyn core::DataModel as core::Contextual>::map},
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:60: 34:63 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a dyn core::DataModel) -> &'a core::bolts::ChildMap {<dyn core::DataModel as core::Contextual>::map},
                fun: e69,
                args: [
                    e68,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:34:60: 34:65 (#0),
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:39: 34:65 (#0),
        },
        Expr {
            kind: Deref {
                arg: e70,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:39: 34:92 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e71,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:39: 34:92 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(393),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).393),
                ),
                value: e72,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:39: 34:65 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "length",
                        Cooked,
                    ),
                    span: src/dns.rs:34:71: 34:79 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:71: 34:79 (#0),
        },
        Expr {
            kind: Deref {
                arg: e74,
            },
            ty: str,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:71: 34:91 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e75,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:71: 34:91 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(402),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).402),
                ),
                value: e76,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:71: 34:79 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:80: 34:89 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
                fun: e78,
                args: [
                    e77,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:34:80: 34:91 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:71: 34:91 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(400),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).400),
                ),
                value: e79,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:71: 34:91 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e80,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:70: 34:91 (#0),
        },
        Expr {
            kind: Deref {
                arg: e81,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:70: 34:91 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e82,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:70: 34:91 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::string::String) -> &'a <std::string::String as std::ops::Deref>::Target {<std::string::String as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:70: 34:91 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::string::String) -> &'a <std::string::String as std::ops::Deref>::Target {<std::string::String as std::ops::Deref>::deref},
                fun: e84,
                args: [
                    e83,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:34:70: 34:91 (#0),
            },
            ty: &str,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:70: 34:91 (#0),
        },
        Expr {
            kind: Deref {
                arg: e85,
            },
            ty: str,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:70: 34:91 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e86,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:70: 34:91 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(399),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).399),
                ),
                value: e87,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:70: 34:91 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b> fn(&'a core::bolts::ChildMap, &'b str) -> std::option::Option<std::rc::Rc<(dyn core::DataModel + 'static)>> {core::bolts::ChildMap::get},
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:66: 34:69 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b> fn(&'a core::bolts::ChildMap, &'b str) -> std::option::Option<std::rc::Rc<(dyn core::DataModel + 'static)>> {core::bolts::ChildMap::get},
                fun: e89,
                args: [
                    e73,
                    e88,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:34:66: 34:92 (#0),
            },
            ty: std::option::Option<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:39: 34:92 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(391),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).391),
                ),
                value: e90,
            },
            ty: std::option::Option<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:39: 34:92 (#0),
        },
        Expr {
            kind: Let {
                expr: e91,
                pat: Pat {
                    ty: std::option::Option<std::rc::Rc<dyn core::DataModel>>,
                    span: src/dns.rs:34:16: 34:36 (#0),
                    kind: Variant {
                        adt_def: std::option::Option,
                        substs: [
                            std::rc::Rc<dyn core::DataModel>,
                        ],
                        variant_index: 1,
                        subpatterns: [
                            FieldPat {
                                field: field[0],
                                pattern: Pat {
                                    ty: std::rc::Rc<dyn core::DataModel>,
                                    span: src/dns.rs:34:21: 34:35 (#0),
                                    kind: Binding {
                                        mutability: Not,
                                        name: "constraint_obj",
                                        mode: ByValue,
                                        var: LocalVarId(
                                            HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).389),
                                        ),
                                        ty: std::rc::Rc<dyn core::DataModel>,
                                        subpattern: None,
                                        is_primary: true,
                                    },
                                },
                            },
                        ],
                    },
                },
            },
            ty: bool,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:12: 34:92 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(386),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).386),
                ),
                value: e92,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:12: 34:92 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).389),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(403),
            ),
            span: src/dns.rs:35:36: 35:50 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e94,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(403),
            ),
            span: src/dns.rs:35:36: 35:58 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(403),
            ),
            span: src/dns.rs:35:36: 35:58 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
                fun: e96,
                args: [
                    e95,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:35:36: 35:58 (#0),
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(403),
            ),
            span: src/dns.rs:35:36: 35:58 (#0),
        },
        Expr {
            kind: Deref {
                arg: e97,
            },
            ty: dyn core::DataModel,
            temp_lifetime: Some(
                Node(403),
            ),
            span: src/dns.rs:35:36: 35:58 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e98,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(403),
            ),
            span: src/dns.rs:35:36: 35:58 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(408),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).408),
                ),
                value: e99,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(403),
            ),
            span: src/dns.rs:35:36: 35:50 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a dyn core::DataModel) -> std::rc::Rc<(dyn core::DataModel + 'static)> {<dyn core::DataModel as core::Contextual>::child},
            temp_lifetime: Some(
                Node(403),
            ),
            span: src/dns.rs:35:51: 35:56 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a dyn core::DataModel) -> std::rc::Rc<(dyn core::DataModel + 'static)> {<dyn core::DataModel as core::Contextual>::child},
                fun: e101,
                args: [
                    e100,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:35:51: 35:58 (#0),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(403),
            ),
            span: src/dns.rs:35:36: 35:58 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e102,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(403),
            ),
            span: src/dns.rs:35:36: 35:64 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(403),
            ),
            span: src/dns.rs:35:36: 35:64 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
                fun: e104,
                args: [
                    e103,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:35:36: 35:64 (#0),
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(403),
            ),
            span: src/dns.rs:35:36: 35:64 (#0),
        },
        Expr {
            kind: Deref {
                arg: e105,
            },
            ty: dyn core::DataModel,
            temp_lifetime: Some(
                Node(403),
            ),
            span: src/dns.rs:35:36: 35:64 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e106,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(403),
            ),
            span: src/dns.rs:35:36: 35:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(406),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).406),
                ),
                value: e107,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(403),
            ),
            span: src/dns.rs:35:36: 35:58 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a dyn core::DataModel) -> i32 {<dyn core::DataModel as core::Contextual>::int},
            temp_lifetime: Some(
                Node(403),
            ),
            span: src/dns.rs:35:59: 35:62 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a dyn core::DataModel) -> i32 {<dyn core::DataModel as core::Contextual>::int},
                fun: e109,
                args: [
                    e108,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:35:59: 35:64 (#0),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(403),
            ),
            span: src/dns.rs:35:36: 35:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(404),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).404),
                ),
                value: e110,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(403),
            ),
            span: src/dns.rs:35:36: 35:64 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).411),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(413),
            ),
            span: src/dns.rs:36:13: 36:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(414),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).414),
                ),
                value: e112,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(413),
            ),
            span: src/dns.rs:36:13: 36:29 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        0,
                        Unsuffixed,
                    ),
                    span: src/dns.rs:36:33: 36:34 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(413),
            ),
            span: src/dns.rs:36:33: 36:34 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(416),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).416),
                ),
                value: e114,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(413),
            ),
            span: src/dns.rs:36:33: 36:34 (#0),
        },
        Expr {
            kind: Binary {
                op: Eq,
                lhs: e113,
                rhs: e115,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(413),
            ),
            span: src/dns.rs:36:13: 36:34 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(413),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).413),
                ),
                value: e116,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(413),
            ),
            span: src/dns.rs:36:13: 36:34 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(413),
                lint_level: Inherited,
                value: e117,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(413),
            ),
            span: src/dns.rs:36:13: 36:34 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).411),
                ),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(417),
            ),
            span: src/dns.rs:36:38: 36:54 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(418),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).418),
                ),
                value: e119,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(417),
            ),
            span: src/dns.rs:36:38: 36:54 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Int(
                        192,
                        Unsuffixed,
                    ),
                    span: src/dns.rs:36:57: 36:61 (#0),
                },
                neg: false,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(417),
            ),
            span: src/dns.rs:36:57: 36:61 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(420),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).420),
                ),
                value: e121,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(417),
            ),
            span: src/dns.rs:36:57: 36:61 (#0),
        },
        Expr {
            kind: Binary {
                op: Gt,
                lhs: e120,
                rhs: e122,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(417),
            ),
            span: src/dns.rs:36:38: 36:61 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(417),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).417),
                ),
                value: e123,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(417),
            ),
            span: src/dns.rs:36:38: 36:61 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(417),
                lint_level: Inherited,
                value: e124,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(417),
            ),
            span: src/dns.rs:36:38: 36:61 (#0),
        },
        Expr {
            kind: LogicalOp {
                op: Or,
                lhs: e118,
                rhs: e125,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(422),
            ),
            span: src/dns.rs:36:13: 36:61 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(412),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).412),
                ),
                value: e126,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(422),
            ),
            span: src/dns.rs:36:13: 36:61 (#0),
        },
        Expr {
            kind: Block {
                block: b1,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(422),
            ),
            span: src/dns.rs:34:93: 37:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(422),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).422),
                ),
                value: e128,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(422),
            ),
            span: src/dns.rs:34:93: 37:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(422),
                lint_level: Inherited,
                value: e129,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(422),
            ),
            span: src/dns.rs:34:93: 37:10 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Bool(
                        false,
                    ),
                    span: src/dns.rs:38:13: 38:18 (#0),
                },
                neg: false,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(423),
            ),
            span: src/dns.rs:38:13: 38:18 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(424),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).424),
                ),
                value: e131,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(423),
            ),
            span: src/dns.rs:38:13: 38:18 (#0),
        },
        Expr {
            kind: Block {
                block: b2,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(423),
            ),
            span: src/dns.rs:37:16: 39:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(423),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).423),
                ),
                value: e133,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(423),
            ),
            span: src/dns.rs:37:16: 39:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(423),
                lint_level: Inherited,
                value: e134,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(423),
            ),
            span: src/dns.rs:37:16: 39:10 (#0),
        },
        Expr {
            kind: If {
                if_then_scope: IfThen(422),
                cond: e93,
                then: e130,
                else_opt: Some(
                    e135,
                ),
            },
            ty: bool,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:9: 39:10 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(385),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).385),
                ),
                value: e136,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:34:9: 39:10 (#0),
        },
        Expr {
            kind: Block {
                block: b3,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:27:75: 40:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(346),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).346),
                ),
                value: e138,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:27:75: 40:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(346),
                lint_level: Inherited,
                value: e139,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(346),
            ),
            span: src/dns.rs:27:75: 40:6 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 426, first_statement_index: 0},
                init_scope: Node(347),
                pattern: Pat {
                    ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
                    span: src/dns.rs:28:13: 28:14 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "v",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).353),
                        ),
                        ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e9,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).352),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(347),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 426, first_statement_index: 1},
                init_scope: Node(354),
                pattern: Pat {
                    ty: usize,
                    span: src/dns.rs:29:13: 29:18 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "v_len",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).360),
                        ),
                        ty: usize,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e16,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).359),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(354),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(369),
                expr: e29,
            },
            opt_destruction_scope: Some(
                Destruction(369),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(372),
                expr: e35,
            },
            opt_destruction_scope: Some(
                Destruction(372),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 426, first_statement_index: 3},
                init_scope: Node(373),
                pattern: Pat {
                    ty: std::rc::Rc<dyn core::DataModel>,
                    span: src/dns.rs:33:13: 33:25 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "last_element",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).384),
                        ),
                        ty: std::rc::Rc<dyn core::DataModel>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e53,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).383),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(373),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 421, first_statement_index: 0},
                init_scope: Node(403),
                pattern: Pat {
                    ty: i32,
                    span: src/dns.rs:35:17: 35:33 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "last_element_len",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).411),
                        ),
                        ty: i32,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e111,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).410),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(403),
            ),
        },
    ],
    params: [
        Param {
            pat: None,
            ty: &[closure@src/dns.rs:27:69: 27:74],
            ty_span: None,
            self_kind: None,
            hir_id: None,
        },
        Param {
            pat: Some(
                Pat {
                    ty: std::rc::Rc<core::context::Context<'_>>,
                    span: src/dns.rs:27:70: 27:73 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "ctx",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).345),
                        ),
                        ty: std::rc::Rc<core::context::Context<'_>>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::rc::Rc<core::context::Context<'_>>,
            ty_span: None,
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).344),
            ),
        },
    ],
}

DefId(0:506 ~ andrew_fuzz[741f]::dns::dns::{closure#1}):
Thir {
    body_type: Fn(
        ([std::rc::Rc<core::context::Context<'_>>]; c_variadic: false)->bool,
    ),
    arms: [],
    blocks: [],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).565),
                ),
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:76: 50:79 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e0,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:76: 50:85 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:76: 50:85 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
                fun: e2,
                args: [
                    e1,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:50:76: 50:85 (#0),
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:76: 50:85 (#0),
        },
        Expr {
            kind: Deref {
                arg: e3,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:76: 50:85 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e4,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:76: 50:85 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(572),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).572),
                ),
                value: e5,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:76: 50:79 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::context::Context<'_>) -> &'a std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>> {core::context::Context::<'_>::vec},
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:80: 50:83 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::context::Context<'_>) -> &'a std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>> {core::context::Context::<'_>::vec},
                fun: e7,
                args: [
                    e6,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:50:80: 50:85 (#0),
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:76: 50:85 (#0),
        },
        Expr {
            kind: Deref {
                arg: e8,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:76: 50:91 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e9,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:76: 50:91 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(570),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).570),
                ),
                value: e10,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:76: 50:85 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> usize {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::len},
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:86: 50:89 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> usize {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::len},
                fun: e12,
                args: [
                    e11,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:50:86: 50:91 (#0),
            },
            ty: usize,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:76: 50:91 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(568),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).568),
                ),
                value: e13,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:76: 50:91 (#0),
        },
        Expr {
            kind: Cast {
                source: e14,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:76: 50:98 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(567),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).567),
                ),
                value: e15,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:76: 50:98 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).565),
                ),
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:102: 50:105 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e17,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:102: 50:114 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:102: 50:114 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
                fun: e19,
                args: [
                    e18,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:50:102: 50:114 (#0),
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:102: 50:114 (#0),
        },
        Expr {
            kind: Deref {
                arg: e20,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:102: 50:114 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e21,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:102: 50:114 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(583),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).583),
                ),
                value: e22,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:102: 50:105 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::context::Context<'_>) -> std::rc::Rc<core::context::Context<'a>> {core::context::Context::<'_>::parent},
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:106: 50:112 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::context::Context<'_>) -> std::rc::Rc<core::context::Context<'a>> {core::context::Context::<'_>::parent},
                fun: e24,
                args: [
                    e23,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:50:106: 50:114 (#0),
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:102: 50:114 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e25,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:102: 50:120 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:102: 50:120 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
                fun: e27,
                args: [
                    e26,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:50:102: 50:120 (#0),
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:102: 50:120 (#0),
        },
        Expr {
            kind: Deref {
                arg: e28,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:102: 50:120 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e29,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:102: 50:120 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(581),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).581),
                ),
                value: e30,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:102: 50:114 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::context::Context<'_>) -> &'a core::bolts::ChildMap {core::context::Context::<'_>::map},
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:115: 50:118 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::context::Context<'_>) -> &'a core::bolts::ChildMap {core::context::Context::<'_>::map},
                fun: e32,
                args: [
                    e31,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:50:115: 50:120 (#0),
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:102: 50:120 (#0),
        },
        Expr {
            kind: Deref {
                arg: e33,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:102: 50:120 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e34,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:102: 50:120 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(579),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).579),
                ),
                value: e35,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:102: 50:120 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "dataLength",
                        Cooked,
                    ),
                    span: src/dns.rs:50:122: 50:134 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:122: 50:134 (#0),
        },
        Expr {
            kind: Deref {
                arg: e37,
            },
            ty: str,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:122: 50:146 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e38,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:122: 50:146 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(588),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).588),
                ),
                value: e39,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:122: 50:134 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:135: 50:144 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
                fun: e41,
                args: [
                    e40,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:50:135: 50:146 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:122: 50:146 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(586),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).586),
                ),
                value: e42,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:122: 50:146 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e43,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:121: 50:146 (#0),
        },
        Expr {
            kind: Deref {
                arg: e44,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:121: 50:146 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e45,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:121: 50:146 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::string::String) -> &'a <std::string::String as std::ops::Deref>::Target {<std::string::String as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:121: 50:146 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::string::String) -> &'a <std::string::String as std::ops::Deref>::Target {<std::string::String as std::ops::Deref>::deref},
                fun: e47,
                args: [
                    e46,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:50:121: 50:146 (#0),
            },
            ty: &str,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:121: 50:146 (#0),
        },
        Expr {
            kind: Deref {
                arg: e48,
            },
            ty: str,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:121: 50:146 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e49,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:121: 50:146 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(585),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).585),
                ),
                value: e50,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:121: 50:146 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bolts::ChildMap, &str) -> &'a <core::bolts::ChildMap as std::ops::Index<&str>>::Output {<core::bolts::ChildMap as std::ops::Index<&str>>::index},
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:102: 50:147 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bolts::ChildMap, &str) -> &'a <core::bolts::ChildMap as std::ops::Index<&str>>::Output {<core::bolts::ChildMap as std::ops::Index<&str>>::index},
                fun: e52,
                args: [
                    e36,
                    e51,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:50:102: 50:147 (#0),
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:102: 50:147 (#0),
        },
        Expr {
            kind: Deref {
                arg: e53,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:102: 50:147 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e54,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:102: 50:153 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:102: 50:153 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
                fun: e56,
                args: [
                    e55,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:50:102: 50:153 (#0),
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:102: 50:153 (#0),
        },
        Expr {
            kind: Deref {
                arg: e57,
            },
            ty: dyn core::DataModel,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:102: 50:153 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e58,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:102: 50:153 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(578),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).578),
                ),
                value: e59,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:102: 50:147 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a dyn core::DataModel) -> i32 {<dyn core::DataModel as core::Contextual>::int},
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:148: 50:151 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a dyn core::DataModel) -> i32 {<dyn core::DataModel as core::Contextual>::int},
                fun: e61,
                args: [
                    e60,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:50:148: 50:153 (#0),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:102: 50:153 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(576),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).576),
                ),
                value: e62,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:102: 50:153 (#0),
        },
        Expr {
            kind: Binary {
                op: Eq,
                lhs: e16,
                rhs: e63,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:76: 50:153 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(566),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).566),
                ),
                value: e64,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:76: 50:153 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(566),
                lint_level: Inherited,
                value: e65,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(566),
            ),
            span: src/dns.rs:50:76: 50:153 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: None,
            ty: &[closure@src/dns.rs:50:70: 50:75],
            ty_span: None,
            self_kind: None,
            hir_id: None,
        },
        Param {
            pat: Some(
                Pat {
                    ty: std::rc::Rc<core::context::Context<'_>>,
                    span: src/dns.rs:50:71: 50:74 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "ctx",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).565),
                        ),
                        ty: std::rc::Rc<core::context::Context<'_>>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::rc::Rc<core::context::Context<'_>>,
            ty_span: None,
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).564),
            ),
        },
    ],
}

DefId(0:507 ~ andrew_fuzz[741f]::dns::dns::{closure#2}):
Thir {
    body_type: Fn(
        ([std::rc::Rc<core::context::Context<'_>>]; c_variadic: false)->bool,
    ),
    arms: [],
    blocks: [],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).727),
                ),
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:90: 63:93 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e0,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:90: 63:99 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:90: 63:99 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
                fun: e2,
                args: [
                    e1,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:63:90: 63:99 (#0),
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:90: 63:99 (#0),
        },
        Expr {
            kind: Deref {
                arg: e3,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:90: 63:99 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e4,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:90: 63:99 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(734),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).734),
                ),
                value: e5,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:90: 63:93 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::context::Context<'_>) -> &'a std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>> {core::context::Context::<'_>::vec},
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:94: 63:97 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::context::Context<'_>) -> &'a std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>> {core::context::Context::<'_>::vec},
                fun: e7,
                args: [
                    e6,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:63:94: 63:99 (#0),
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:90: 63:99 (#0),
        },
        Expr {
            kind: Deref {
                arg: e8,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:90: 63:105 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e9,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:90: 63:105 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(732),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).732),
                ),
                value: e10,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:90: 63:99 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> usize {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::len},
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:100: 63:103 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> usize {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::len},
                fun: e12,
                args: [
                    e11,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:63:100: 63:105 (#0),
            },
            ty: usize,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:90: 63:105 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(730),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).730),
                ),
                value: e13,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:90: 63:105 (#0),
        },
        Expr {
            kind: Cast {
                source: e14,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:90: 63:112 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(729),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).729),
                ),
                value: e15,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:90: 63:112 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).727),
                ),
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:116: 63:119 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e17,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:116: 63:128 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:116: 63:128 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
                fun: e19,
                args: [
                    e18,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:63:116: 63:128 (#0),
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:116: 63:128 (#0),
        },
        Expr {
            kind: Deref {
                arg: e20,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:116: 63:128 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e21,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:116: 63:128 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(745),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).745),
                ),
                value: e22,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:116: 63:119 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::context::Context<'_>) -> std::rc::Rc<core::context::Context<'a>> {core::context::Context::<'_>::parent},
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:120: 63:126 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::context::Context<'_>) -> std::rc::Rc<core::context::Context<'a>> {core::context::Context::<'_>::parent},
                fun: e24,
                args: [
                    e23,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:63:120: 63:128 (#0),
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:116: 63:128 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e25,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:116: 63:134 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:116: 63:134 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
                fun: e27,
                args: [
                    e26,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:63:116: 63:134 (#0),
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:116: 63:134 (#0),
        },
        Expr {
            kind: Deref {
                arg: e28,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:116: 63:134 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e29,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:116: 63:134 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(743),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).743),
                ),
                value: e30,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:116: 63:128 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::context::Context<'_>) -> &'a core::bolts::ChildMap {core::context::Context::<'_>::map},
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:129: 63:132 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::context::Context<'_>) -> &'a core::bolts::ChildMap {core::context::Context::<'_>::map},
                fun: e32,
                args: [
                    e31,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:63:129: 63:134 (#0),
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:116: 63:134 (#0),
        },
        Expr {
            kind: Deref {
                arg: e33,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:116: 63:134 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e34,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:116: 63:134 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(741),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).741),
                ),
                value: e35,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:116: 63:134 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "numQuestion",
                        Cooked,
                    ),
                    span: src/dns.rs:63:136: 63:149 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:136: 63:149 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(748),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).748),
                ),
                value: e37,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:136: 63:149 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e38,
            },
            ty: &&str,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:135: 63:149 (#0),
        },
        Expr {
            kind: Deref {
                arg: e39,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:135: 63:149 (#0),
        },
        Expr {
            kind: Deref {
                arg: e40,
            },
            ty: str,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:135: 63:149 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e41,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:135: 63:149 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(747),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).747),
                ),
                value: e42,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:135: 63:149 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bolts::ChildMap, &str) -> &'a <core::bolts::ChildMap as std::ops::Index<&str>>::Output {<core::bolts::ChildMap as std::ops::Index<&str>>::index},
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:116: 63:150 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bolts::ChildMap, &str) -> &'a <core::bolts::ChildMap as std::ops::Index<&str>>::Output {<core::bolts::ChildMap as std::ops::Index<&str>>::index},
                fun: e44,
                args: [
                    e36,
                    e43,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:63:116: 63:150 (#0),
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:116: 63:150 (#0),
        },
        Expr {
            kind: Deref {
                arg: e45,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:116: 63:150 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e46,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:116: 63:156 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:116: 63:156 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
                fun: e48,
                args: [
                    e47,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:63:116: 63:156 (#0),
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:116: 63:156 (#0),
        },
        Expr {
            kind: Deref {
                arg: e49,
            },
            ty: dyn core::DataModel,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:116: 63:156 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e50,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:116: 63:156 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(740),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).740),
                ),
                value: e51,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:116: 63:150 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a dyn core::DataModel) -> i32 {<dyn core::DataModel as core::Contextual>::int},
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:151: 63:154 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a dyn core::DataModel) -> i32 {<dyn core::DataModel as core::Contextual>::int},
                fun: e53,
                args: [
                    e52,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:63:151: 63:156 (#0),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:116: 63:156 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(738),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).738),
                ),
                value: e54,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:116: 63:156 (#0),
        },
        Expr {
            kind: Binary {
                op: Eq,
                lhs: e16,
                rhs: e55,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:90: 63:156 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(728),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).728),
                ),
                value: e56,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:90: 63:156 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(728),
                lint_level: Inherited,
                value: e57,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(728),
            ),
            span: src/dns.rs:63:90: 63:156 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: None,
            ty: &[closure@src/dns.rs:63:84: 63:89],
            ty_span: None,
            self_kind: None,
            hir_id: None,
        },
        Param {
            pat: Some(
                Pat {
                    ty: std::rc::Rc<core::context::Context<'_>>,
                    span: src/dns.rs:63:85: 63:88 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "ctx",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).727),
                        ),
                        ty: std::rc::Rc<core::context::Context<'_>>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::rc::Rc<core::context::Context<'_>>,
            ty_span: None,
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).726),
            ),
        },
    ],
}

DefId(0:508 ~ andrew_fuzz[741f]::dns::dns::{closure#3}):
Thir {
    body_type: Fn(
        ([std::rc::Rc<core::context::Context<'_>>]; c_variadic: false)->bool,
    ),
    arms: [],
    blocks: [],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).778),
                ),
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:88: 64:91 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e0,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:88: 64:97 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:88: 64:97 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
                fun: e2,
                args: [
                    e1,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:64:88: 64:97 (#0),
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:88: 64:97 (#0),
        },
        Expr {
            kind: Deref {
                arg: e3,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:88: 64:97 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e4,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:88: 64:97 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(785),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).785),
                ),
                value: e5,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:88: 64:91 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::context::Context<'_>) -> &'a std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>> {core::context::Context::<'_>::vec},
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:92: 64:95 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::context::Context<'_>) -> &'a std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>> {core::context::Context::<'_>::vec},
                fun: e7,
                args: [
                    e6,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:64:92: 64:97 (#0),
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:88: 64:97 (#0),
        },
        Expr {
            kind: Deref {
                arg: e8,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:88: 64:103 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e9,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:88: 64:103 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(783),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).783),
                ),
                value: e10,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:88: 64:97 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> usize {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::len},
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:98: 64:101 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> usize {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::len},
                fun: e12,
                args: [
                    e11,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:64:98: 64:103 (#0),
            },
            ty: usize,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:88: 64:103 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(781),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).781),
                ),
                value: e13,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:88: 64:103 (#0),
        },
        Expr {
            kind: Cast {
                source: e14,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:88: 64:110 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(780),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).780),
                ),
                value: e15,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:88: 64:110 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).778),
                ),
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:114: 64:117 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e17,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:114: 64:126 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:114: 64:126 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
                fun: e19,
                args: [
                    e18,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:64:114: 64:126 (#0),
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:114: 64:126 (#0),
        },
        Expr {
            kind: Deref {
                arg: e20,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:114: 64:126 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e21,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:114: 64:126 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(796),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).796),
                ),
                value: e22,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:114: 64:117 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::context::Context<'_>) -> std::rc::Rc<core::context::Context<'a>> {core::context::Context::<'_>::parent},
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:118: 64:124 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::context::Context<'_>) -> std::rc::Rc<core::context::Context<'a>> {core::context::Context::<'_>::parent},
                fun: e24,
                args: [
                    e23,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:64:118: 64:126 (#0),
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:114: 64:126 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e25,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:114: 64:132 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:114: 64:132 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
                fun: e27,
                args: [
                    e26,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:64:114: 64:132 (#0),
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:114: 64:132 (#0),
        },
        Expr {
            kind: Deref {
                arg: e28,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:114: 64:132 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e29,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:114: 64:132 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(794),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).794),
                ),
                value: e30,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:114: 64:126 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::context::Context<'_>) -> &'a core::bolts::ChildMap {core::context::Context::<'_>::map},
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:127: 64:130 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::context::Context<'_>) -> &'a core::bolts::ChildMap {core::context::Context::<'_>::map},
                fun: e32,
                args: [
                    e31,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:64:127: 64:132 (#0),
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:114: 64:132 (#0),
        },
        Expr {
            kind: Deref {
                arg: e33,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:114: 64:132 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e34,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:114: 64:132 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(792),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).792),
                ),
                value: e35,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:114: 64:132 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "numAnswer",
                        Cooked,
                    ),
                    span: src/dns.rs:64:134: 64:145 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:134: 64:145 (#0),
        },
        Expr {
            kind: Deref {
                arg: e37,
            },
            ty: str,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:134: 64:157 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e38,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:134: 64:157 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(801),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).801),
                ),
                value: e39,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:134: 64:145 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:146: 64:155 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
                fun: e41,
                args: [
                    e40,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:64:146: 64:157 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:134: 64:157 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(799),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).799),
                ),
                value: e42,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:134: 64:157 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e43,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:133: 64:157 (#0),
        },
        Expr {
            kind: Deref {
                arg: e44,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:133: 64:157 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e45,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:133: 64:157 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::string::String) -> &'a <std::string::String as std::ops::Deref>::Target {<std::string::String as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:133: 64:157 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::string::String) -> &'a <std::string::String as std::ops::Deref>::Target {<std::string::String as std::ops::Deref>::deref},
                fun: e47,
                args: [
                    e46,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:64:133: 64:157 (#0),
            },
            ty: &str,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:133: 64:157 (#0),
        },
        Expr {
            kind: Deref {
                arg: e48,
            },
            ty: str,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:133: 64:157 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e49,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:133: 64:157 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(798),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).798),
                ),
                value: e50,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:133: 64:157 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bolts::ChildMap, &str) -> &'a <core::bolts::ChildMap as std::ops::Index<&str>>::Output {<core::bolts::ChildMap as std::ops::Index<&str>>::index},
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:114: 64:158 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bolts::ChildMap, &str) -> &'a <core::bolts::ChildMap as std::ops::Index<&str>>::Output {<core::bolts::ChildMap as std::ops::Index<&str>>::index},
                fun: e52,
                args: [
                    e36,
                    e51,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:64:114: 64:158 (#0),
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:114: 64:158 (#0),
        },
        Expr {
            kind: Deref {
                arg: e53,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:114: 64:158 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e54,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:114: 64:164 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:114: 64:164 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
                fun: e56,
                args: [
                    e55,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:64:114: 64:164 (#0),
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:114: 64:164 (#0),
        },
        Expr {
            kind: Deref {
                arg: e57,
            },
            ty: dyn core::DataModel,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:114: 64:164 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e58,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:114: 64:164 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(791),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).791),
                ),
                value: e59,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:114: 64:158 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a dyn core::DataModel) -> i32 {<dyn core::DataModel as core::Contextual>::int},
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:159: 64:162 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a dyn core::DataModel) -> i32 {<dyn core::DataModel as core::Contextual>::int},
                fun: e61,
                args: [
                    e60,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:64:159: 64:164 (#0),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:114: 64:164 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(789),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).789),
                ),
                value: e62,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:114: 64:164 (#0),
        },
        Expr {
            kind: Binary {
                op: Eq,
                lhs: e16,
                rhs: e63,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:88: 64:164 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(779),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).779),
                ),
                value: e64,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:88: 64:164 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(779),
                lint_level: Inherited,
                value: e65,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(779),
            ),
            span: src/dns.rs:64:88: 64:164 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: None,
            ty: &[closure@src/dns.rs:64:82: 64:87],
            ty_span: None,
            self_kind: None,
            hir_id: None,
        },
        Param {
            pat: Some(
                Pat {
                    ty: std::rc::Rc<core::context::Context<'_>>,
                    span: src/dns.rs:64:83: 64:86 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "ctx",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).778),
                        ),
                        ty: std::rc::Rc<core::context::Context<'_>>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::rc::Rc<core::context::Context<'_>>,
            ty_span: None,
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).777),
            ),
        },
    ],
}

DefId(0:509 ~ andrew_fuzz[741f]::dns::dns::{closure#4}):
Thir {
    body_type: Fn(
        ([std::rc::Rc<core::context::Context<'_>>]; c_variadic: false)->bool,
    ),
    arms: [],
    blocks: [],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).831),
                ),
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:91: 65:94 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e0,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:91: 65:100 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:91: 65:100 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
                fun: e2,
                args: [
                    e1,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:65:91: 65:100 (#0),
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:91: 65:100 (#0),
        },
        Expr {
            kind: Deref {
                arg: e3,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:91: 65:100 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e4,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:91: 65:100 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(838),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).838),
                ),
                value: e5,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:91: 65:94 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::context::Context<'_>) -> &'a std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>> {core::context::Context::<'_>::vec},
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:95: 65:98 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::context::Context<'_>) -> &'a std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>> {core::context::Context::<'_>::vec},
                fun: e7,
                args: [
                    e6,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:65:95: 65:100 (#0),
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:91: 65:100 (#0),
        },
        Expr {
            kind: Deref {
                arg: e8,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:91: 65:106 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e9,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:91: 65:106 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(836),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).836),
                ),
                value: e10,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:91: 65:100 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> usize {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::len},
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:101: 65:104 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> usize {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::len},
                fun: e12,
                args: [
                    e11,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:65:101: 65:106 (#0),
            },
            ty: usize,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:91: 65:106 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(834),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).834),
                ),
                value: e13,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:91: 65:106 (#0),
        },
        Expr {
            kind: Cast {
                source: e14,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:91: 65:113 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(833),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).833),
                ),
                value: e15,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:91: 65:113 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).831),
                ),
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:117: 65:120 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e17,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:117: 65:129 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:117: 65:129 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
                fun: e19,
                args: [
                    e18,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:65:117: 65:129 (#0),
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:117: 65:129 (#0),
        },
        Expr {
            kind: Deref {
                arg: e20,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:117: 65:129 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e21,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:117: 65:129 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(849),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).849),
                ),
                value: e22,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:117: 65:120 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::context::Context<'_>) -> std::rc::Rc<core::context::Context<'a>> {core::context::Context::<'_>::parent},
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:121: 65:127 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::context::Context<'_>) -> std::rc::Rc<core::context::Context<'a>> {core::context::Context::<'_>::parent},
                fun: e24,
                args: [
                    e23,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:65:121: 65:129 (#0),
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:117: 65:129 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e25,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:117: 65:135 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:117: 65:135 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
                fun: e27,
                args: [
                    e26,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:65:117: 65:135 (#0),
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:117: 65:135 (#0),
        },
        Expr {
            kind: Deref {
                arg: e28,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:117: 65:135 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e29,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:117: 65:135 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(847),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).847),
                ),
                value: e30,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:117: 65:129 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::context::Context<'_>) -> &'a core::bolts::ChildMap {core::context::Context::<'_>::map},
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:130: 65:133 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::context::Context<'_>) -> &'a core::bolts::ChildMap {core::context::Context::<'_>::map},
                fun: e32,
                args: [
                    e31,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:65:130: 65:135 (#0),
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:117: 65:135 (#0),
        },
        Expr {
            kind: Deref {
                arg: e33,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:117: 65:135 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e34,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:117: 65:135 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(845),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).845),
                ),
                value: e35,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:117: 65:135 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "numAuthority",
                        Cooked,
                    ),
                    span: src/dns.rs:65:137: 65:151 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:137: 65:151 (#0),
        },
        Expr {
            kind: Deref {
                arg: e37,
            },
            ty: str,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:137: 65:163 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e38,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:137: 65:163 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(854),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).854),
                ),
                value: e39,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:137: 65:151 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:152: 65:161 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
                fun: e41,
                args: [
                    e40,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:65:152: 65:163 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:137: 65:163 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(852),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).852),
                ),
                value: e42,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:137: 65:163 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e43,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:136: 65:163 (#0),
        },
        Expr {
            kind: Deref {
                arg: e44,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:136: 65:163 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e45,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:136: 65:163 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::string::String) -> &'a <std::string::String as std::ops::Deref>::Target {<std::string::String as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:136: 65:163 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::string::String) -> &'a <std::string::String as std::ops::Deref>::Target {<std::string::String as std::ops::Deref>::deref},
                fun: e47,
                args: [
                    e46,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:65:136: 65:163 (#0),
            },
            ty: &str,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:136: 65:163 (#0),
        },
        Expr {
            kind: Deref {
                arg: e48,
            },
            ty: str,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:136: 65:163 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e49,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:136: 65:163 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(851),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).851),
                ),
                value: e50,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:136: 65:163 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bolts::ChildMap, &str) -> &'a <core::bolts::ChildMap as std::ops::Index<&str>>::Output {<core::bolts::ChildMap as std::ops::Index<&str>>::index},
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:117: 65:164 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bolts::ChildMap, &str) -> &'a <core::bolts::ChildMap as std::ops::Index<&str>>::Output {<core::bolts::ChildMap as std::ops::Index<&str>>::index},
                fun: e52,
                args: [
                    e36,
                    e51,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:65:117: 65:164 (#0),
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:117: 65:164 (#0),
        },
        Expr {
            kind: Deref {
                arg: e53,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:117: 65:164 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e54,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:117: 65:170 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:117: 65:170 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
                fun: e56,
                args: [
                    e55,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:65:117: 65:170 (#0),
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:117: 65:170 (#0),
        },
        Expr {
            kind: Deref {
                arg: e57,
            },
            ty: dyn core::DataModel,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:117: 65:170 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e58,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:117: 65:170 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(844),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).844),
                ),
                value: e59,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:117: 65:164 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a dyn core::DataModel) -> i32 {<dyn core::DataModel as core::Contextual>::int},
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:165: 65:168 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a dyn core::DataModel) -> i32 {<dyn core::DataModel as core::Contextual>::int},
                fun: e61,
                args: [
                    e60,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:65:165: 65:170 (#0),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:117: 65:170 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(842),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).842),
                ),
                value: e62,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:117: 65:170 (#0),
        },
        Expr {
            kind: Binary {
                op: Eq,
                lhs: e16,
                rhs: e63,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:91: 65:170 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(832),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).832),
                ),
                value: e64,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:91: 65:170 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(832),
                lint_level: Inherited,
                value: e65,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(832),
            ),
            span: src/dns.rs:65:91: 65:170 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: None,
            ty: &[closure@src/dns.rs:65:85: 65:90],
            ty_span: None,
            self_kind: None,
            hir_id: None,
        },
        Param {
            pat: Some(
                Pat {
                    ty: std::rc::Rc<core::context::Context<'_>>,
                    span: src/dns.rs:65:86: 65:89 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "ctx",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).831),
                        ),
                        ty: std::rc::Rc<core::context::Context<'_>>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::rc::Rc<core::context::Context<'_>>,
            ty_span: None,
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).830),
            ),
        },
    ],
}

DefId(0:510 ~ andrew_fuzz[741f]::dns::dns::{closure#5}):
Thir {
    body_type: Fn(
        ([std::rc::Rc<core::context::Context<'_>>]; c_variadic: false)->bool,
    ),
    arms: [],
    blocks: [],
    exprs: [
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).884),
                ),
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:92: 66:95 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e0,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:92: 66:101 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:92: 66:101 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
                fun: e2,
                args: [
                    e1,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:66:92: 66:101 (#0),
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:92: 66:101 (#0),
        },
        Expr {
            kind: Deref {
                arg: e3,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:92: 66:101 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e4,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:92: 66:101 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(891),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).891),
                ),
                value: e5,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:92: 66:95 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::context::Context<'_>) -> &'a std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>> {core::context::Context::<'_>::vec},
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:96: 66:99 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::context::Context<'_>) -> &'a std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>> {core::context::Context::<'_>::vec},
                fun: e7,
                args: [
                    e6,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:66:96: 66:101 (#0),
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:92: 66:101 (#0),
        },
        Expr {
            kind: Deref {
                arg: e8,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:92: 66:107 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e9,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:92: 66:107 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(889),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).889),
                ),
                value: e10,
            },
            ty: &std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:92: 66:101 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> usize {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::len},
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:102: 66:105 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> usize {std::vec::Vec::<std::rc::Rc<dyn core::DataModel>>::len},
                fun: e12,
                args: [
                    e11,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:66:102: 66:107 (#0),
            },
            ty: usize,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:92: 66:107 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(887),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).887),
                ),
                value: e13,
            },
            ty: usize,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:92: 66:107 (#0),
        },
        Expr {
            kind: Cast {
                source: e14,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:92: 66:114 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(886),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).886),
                ),
                value: e15,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:92: 66:114 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).884),
                ),
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:118: 66:121 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e17,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:118: 66:130 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:118: 66:130 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
                fun: e19,
                args: [
                    e18,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:66:118: 66:130 (#0),
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:118: 66:130 (#0),
        },
        Expr {
            kind: Deref {
                arg: e20,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:118: 66:130 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e21,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:118: 66:130 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(902),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).902),
                ),
                value: e22,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:118: 66:121 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::context::Context<'_>) -> std::rc::Rc<core::context::Context<'a>> {core::context::Context::<'_>::parent},
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:122: 66:128 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::context::Context<'_>) -> std::rc::Rc<core::context::Context<'a>> {core::context::Context::<'_>::parent},
                fun: e24,
                args: [
                    e23,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:66:122: 66:130 (#0),
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:118: 66:130 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e25,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:118: 66:136 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:118: 66:136 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<core::context::Context<'_>>) -> &'a <std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::Target {<std::rc::Rc<core::context::Context<'_>> as std::ops::Deref>::deref},
                fun: e27,
                args: [
                    e26,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:66:118: 66:136 (#0),
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:118: 66:136 (#0),
        },
        Expr {
            kind: Deref {
                arg: e28,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:118: 66:136 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e29,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:118: 66:136 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(900),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).900),
                ),
                value: e30,
            },
            ty: &core::context::Context<'_>,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:118: 66:130 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::context::Context<'_>) -> &'a core::bolts::ChildMap {core::context::Context::<'_>::map},
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:131: 66:134 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::context::Context<'_>) -> &'a core::bolts::ChildMap {core::context::Context::<'_>::map},
                fun: e32,
                args: [
                    e31,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:66:131: 66:136 (#0),
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:118: 66:136 (#0),
        },
        Expr {
            kind: Deref {
                arg: e33,
            },
            ty: core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:118: 66:136 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e34,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:118: 66:136 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(898),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).898),
                ),
                value: e35,
            },
            ty: &core::bolts::ChildMap,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:118: 66:136 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "numAdditional",
                        Cooked,
                    ),
                    span: src/dns.rs:66:138: 66:153 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:138: 66:153 (#0),
        },
        Expr {
            kind: Deref {
                arg: e37,
            },
            ty: str,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:138: 66:165 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e38,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:138: 66:165 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(907),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).907),
                ),
                value: e39,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:138: 66:153 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:154: 66:163 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
                fun: e41,
                args: [
                    e40,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:66:154: 66:165 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:138: 66:165 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(905),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).905),
                ),
                value: e42,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:138: 66:165 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e43,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:137: 66:165 (#0),
        },
        Expr {
            kind: Deref {
                arg: e44,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:137: 66:165 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e45,
            },
            ty: &std::string::String,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:137: 66:165 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::string::String) -> &'a <std::string::String as std::ops::Deref>::Target {<std::string::String as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:137: 66:165 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::string::String) -> &'a <std::string::String as std::ops::Deref>::Target {<std::string::String as std::ops::Deref>::deref},
                fun: e47,
                args: [
                    e46,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:66:137: 66:165 (#0),
            },
            ty: &str,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:137: 66:165 (#0),
        },
        Expr {
            kind: Deref {
                arg: e48,
            },
            ty: str,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:137: 66:165 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e49,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:137: 66:165 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(904),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).904),
                ),
                value: e50,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:137: 66:165 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bolts::ChildMap, &str) -> &'a <core::bolts::ChildMap as std::ops::Index<&str>>::Output {<core::bolts::ChildMap as std::ops::Index<&str>>::index},
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:118: 66:166 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bolts::ChildMap, &str) -> &'a <core::bolts::ChildMap as std::ops::Index<&str>>::Output {<core::bolts::ChildMap as std::ops::Index<&str>>::index},
                fun: e52,
                args: [
                    e36,
                    e51,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:66:118: 66:166 (#0),
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:118: 66:166 (#0),
        },
        Expr {
            kind: Deref {
                arg: e53,
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:118: 66:166 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e54,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:118: 66:172 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:118: 66:172 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
                fun: e56,
                args: [
                    e55,
                ],
                from_hir_call: false,
                fn_span: src/dns.rs:66:118: 66:172 (#0),
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:118: 66:172 (#0),
        },
        Expr {
            kind: Deref {
                arg: e57,
            },
            ty: dyn core::DataModel,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:118: 66:172 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e58,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:118: 66:172 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(897),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).897),
                ),
                value: e59,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:118: 66:166 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a dyn core::DataModel) -> i32 {<dyn core::DataModel as core::Contextual>::int},
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:167: 66:170 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a dyn core::DataModel) -> i32 {<dyn core::DataModel as core::Contextual>::int},
                fun: e61,
                args: [
                    e60,
                ],
                from_hir_call: true,
                fn_span: src/dns.rs:66:167: 66:172 (#0),
            },
            ty: i32,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:118: 66:172 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(895),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).895),
                ),
                value: e62,
            },
            ty: i32,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:118: 66:172 (#0),
        },
        Expr {
            kind: Binary {
                op: Eq,
                lhs: e16,
                rhs: e63,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:92: 66:172 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(885),
                lint_level: Explicit(
                    HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).885),
                ),
                value: e64,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:92: 66:172 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(885),
                lint_level: Inherited,
                value: e65,
            },
            ty: bool,
            temp_lifetime: Some(
                Node(885),
            ),
            span: src/dns.rs:66:92: 66:172 (#0),
        },
    ],
    stmts: [],
    params: [
        Param {
            pat: None,
            ty: &[closure@src/dns.rs:66:86: 66:91],
            ty_span: None,
            self_kind: None,
            hir_id: None,
        },
        Param {
            pat: Some(
                Pat {
                    ty: std::rc::Rc<core::context::Context<'_>>,
                    span: src/dns.rs:66:87: 66:90 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "ctx",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).884),
                        ),
                        ty: std::rc::Rc<core::context::Context<'_>>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
            ),
            ty: std::rc::Rc<core::context::Context<'_>>,
            ty_span: None,
            self_kind: None,
            hir_id: Some(
                HirId(DefId(0:504 ~ andrew_fuzz[741f]::dns::dns).883),
            ),
        },
    ],
}

DefId(0:511 ~ andrew_fuzz[741f]::main):
Thir {
    body_type: Fn(
        ([]; c_variadic: false)->(),
    ),
    arms: [
        Arm {
            pattern: Pat {
                ty: std::option::Option<std::rc::Rc<dyn core::DataModel>>,
                span: src/main.rs:16:5: 20:6 (#157),
                kind: Variant {
                    adt_def: std::option::Option,
                    substs: [
                        std::rc::Rc<dyn core::DataModel>,
                    ],
                    variant_index: 0,
                    subpatterns: [],
                },
            },
            guard: None,
            body: e84,
            lint_level: Explicit(
                HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).79),
            ),
            scope: Node(79),
            span: src/main.rs:16:5: 20:6 (#157),
        },
        Arm {
            pattern: Pat {
                ty: std::option::Option<std::rc::Rc<dyn core::DataModel>>,
                span: src/main.rs:16:9: 16:10 (#159),
                kind: Variant {
                    adt_def: std::option::Option,
                    substs: [
                        std::rc::Rc<dyn core::DataModel>,
                    ],
                    variant_index: 1,
                    subpatterns: [
                        FieldPat {
                            field: field[0],
                            pattern: Pat {
                                ty: std::rc::Rc<dyn core::DataModel>,
                                span: src/main.rs:16:9: 16:10 (#0),
                                kind: Binding {
                                    mutability: Not,
                                    name: "f",
                                    mode: ByValue,
                                    var: LocalVarId(
                                        HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).75),
                                    ),
                                    ty: std::rc::Rc<dyn core::DataModel>,
                                    subpattern: None,
                                    is_primary: true,
                                },
                            },
                        },
                    ],
                },
            },
            guard: None,
            body: e126,
            lint_level: Explicit(
                HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).108),
            ),
            scope: Node(108),
            span: src/main.rs:16:19: 20:6 (#0),
        },
        Arm {
            pattern: Pat {
                ty: std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>,
                span: src/main.rs:16:14: 16:18 (#158),
                kind: Binding {
                    mutability: Mut,
                    name: "iter",
                    mode: ByValue,
                    var: LocalVarId(
                        HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).109),
                    ),
                    ty: std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>,
                    subpattern: None,
                    is_primary: true,
                },
            },
            guard: None,
            body: e132,
            lint_level: Explicit(
                HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).118),
            ),
            scope: Node(118),
            span: src/main.rs:16:5: 20:6 (#157),
        },
    ],
    blocks: [
        Block {
            targeted_by_break: false,
            region_scope: Node(106),
            opt_destruction_scope: None,
            span: src/main.rs:16:19: 20:6 (#0),
            stmts: [
                s6,
                s7,
                s8,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(117),
            opt_destruction_scope: Some(
                Destruction(117),
            ),
            span: src/main.rs:16:5: 20:6 (#157),
            stmts: [
                s9,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(138),
            opt_destruction_scope: None,
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:136:23: 138:6 (#90),
            stmts: [
                s11,
            ],
            expr: None,
            safety_mode: Safe,
        },
        Block {
            targeted_by_break: false,
            region_scope: Node(140),
            opt_destruction_scope: None,
            span: src/main.rs:9:11: 22:2 (#0),
            stmts: [
                s0,
                s1,
                s2,
                s3,
                s4,
                s5,
                s10,
                s12,
            ],
            expr: None,
            safety_mode: Safe,
        },
    ],
    exprs: [
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn() -> std::boxed::Box<(dyn core::DataModel + 'static)> {dns::dns},
            temp_lifetime: Some(
                Node(1),
            ),
            span: src/main.rs:10:23: 10:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(3),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).3),
                ),
                value: e0,
            },
            ty: fn() -> std::boxed::Box<(dyn core::DataModel + 'static)> {dns::dns},
            temp_lifetime: Some(
                Node(1),
            ),
            span: src/main.rs:10:23: 10:31 (#0),
        },
        Expr {
            kind: Call {
                ty: fn() -> std::boxed::Box<(dyn core::DataModel + 'static)> {dns::dns},
                fun: e1,
                args: [],
                from_hir_call: true,
                fn_span: src/main.rs:10:23: 10:33 (#0),
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(1),
            ),
            span: src/main.rs:10:23: 10:33 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(2),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).2),
                ),
                value: e2,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(1),
            ),
            span: src/main.rs:10:23: 10:33 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::string::String) -> std::result::Result<core::bit_array::BitArray, std::io::Error> {core::bit_array::BitArray::from_file},
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/main.rs:11:21: 11:40 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(12),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).12),
                ),
                value: e4,
            },
            ty: fn(std::string::String) -> std::result::Result<core::bit_array::BitArray, std::io::Error> {core::bit_array::BitArray::from_file},
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/main.rs:11:21: 11:40 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "./input_data",
                        Cooked,
                    ),
                    span: src/main.rs:11:41: 11:55 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/main.rs:11:41: 11:55 (#0),
        },
        Expr {
            kind: Deref {
                arg: e6,
            },
            ty: str,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/main.rs:11:41: 11:67 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e7,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/main.rs:11:41: 11:67 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(18),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).18),
                ),
                value: e8,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/main.rs:11:41: 11:55 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/main.rs:11:56: 11:65 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
                fun: e10,
                args: [
                    e9,
                ],
                from_hir_call: true,
                fn_span: src/main.rs:11:56: 11:67 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/main.rs:11:41: 11:67 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(16),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).16),
                ),
                value: e11,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/main.rs:11:41: 11:67 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::string::String) -> std::result::Result<core::bit_array::BitArray, std::io::Error> {core::bit_array::BitArray::from_file},
                fun: e5,
                args: [
                    e12,
                ],
                from_hir_call: true,
                fn_span: src/main.rs:11:21: 11:68 (#0),
            },
            ty: std::result::Result<core::bit_array::BitArray, std::io::Error>,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/main.rs:11:21: 11:68 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(11),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).11),
                ),
                value: e13,
            },
            ty: std::result::Result<core::bit_array::BitArray, std::io::Error>,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/main.rs:11:21: 11:68 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::result::Result<core::bit_array::BitArray, std::io::Error>) -> core::bit_array::BitArray {std::result::Result::<core::bit_array::BitArray, std::io::Error>::unwrap},
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/main.rs:11:69: 11:75 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::result::Result<core::bit_array::BitArray, std::io::Error>) -> core::bit_array::BitArray {std::result::Result::<core::bit_array::BitArray, std::io::Error>::unwrap},
                fun: e15,
                args: [
                    e14,
                ],
                from_hir_call: true,
                fn_span: src/main.rs:11:69: 11:77 (#0),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/main.rs:11:21: 11:77 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(9),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).9),
                ),
                value: e16,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(8),
            ),
            span: src/main.rs:11:21: 11:77 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(0:98 ~ andrew_fuzz[741f]::core::context::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon(0, None) }),
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(0:96 ~ andrew_fuzz[741f]::core::context::{impl#0}),
                                        self_ty: core::context::Context<'_>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(std::rc::Weak<core::context::Context<'_>>, core::context::Children<'_>) -> core::context::Context<'_> {core::context::Context::<'_>::new},
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/main.rs:12:15: 12:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(23),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).23),
                ),
                value: e18,
            },
            ty: fn(std::rc::Weak<core::context::Context<'_>>, core::context::Children<'_>) -> core::context::Context<'_> {core::context::Context::<'_>::new},
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/main.rs:12:15: 12:27 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4954 ~ alloc[42dc]::rc::{impl#50}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4952 ~ alloc[42dc]::rc::{impl#50}),
                                        self_ty: std::rc::Weak<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn() -> std::rc::Weak<core::context::Context<'_>> {std::rc::Weak::<core::context::Context<'_>>::new},
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/main.rs:12:28: 12:37 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(29),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).29),
                ),
                value: e20,
            },
            ty: fn() -> std::rc::Weak<core::context::Context<'_>> {std::rc::Weak::<core::context::Context<'_>>::new},
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/main.rs:12:28: 12:37 (#0),
        },
        Expr {
            kind: Call {
                ty: fn() -> std::rc::Weak<core::context::Context<'_>> {std::rc::Weak::<core::context::Context<'_>>::new},
                fun: e21,
                args: [],
                from_hir_call: true,
                fn_span: src/main.rs:12:28: 12:39 (#0),
            },
            ty: std::rc::Weak<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/main.rs:12:28: 12:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(28),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).28),
                ),
                value: e22,
            },
            ty: std::rc::Weak<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/main.rs:12:28: 12:39 (#0),
        },
        Expr {
            kind: Adt(
                AdtExpr {
                    adt_def: core::context::Children,
                    variant_index: 0,
                    substs: [
                        ReErased,
                    ],
                    user_ty: None,
                    fields: [],
                    base: None,
                },
            ),
            ty: core::context::Children<'_>,
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/main.rs:12:41: 12:56 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(33),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).33),
                ),
                value: e24,
            },
            ty: core::context::Children<'_>,
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/main.rs:12:41: 12:56 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::rc::Weak<core::context::Context<'_>>, core::context::Children<'_>) -> core::context::Context<'_> {core::context::Context::<'_>::new},
                fun: e19,
                args: [
                    e23,
                    e25,
                ],
                from_hir_call: true,
                fn_span: src/main.rs:12:15: 12:57 (#0),
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/main.rs:12:15: 12:57 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(22),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).22),
                ),
                value: e26,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(21),
            ),
            span: src/main.rs:12:15: 12:57 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).7),
                ),
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/main.rs:13:15: 13:22 (#0),
        },
        Expr {
            kind: Deref {
                arg: e28,
            },
            ty: dyn core::DataModel,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/main.rs:13:15: 13:55 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e29,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/main.rs:13:15: 13:55 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(43),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).43),
                ),
                value: e30,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/main.rs:13:15: 13:22 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).20),
                ),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/main.rs:13:34: 13:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(46),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).46),
                ),
                value: e32,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/main.rs:13:34: 13:39 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: false,
                },
                arg: e33,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/main.rs:13:29: 13:39 (#0),
        },
        Expr {
            kind: Deref {
                arg: e34,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/main.rs:13:29: 13:39 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e35,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/main.rs:13:29: 13:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(45),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).45),
                ),
                value: e36,
            },
            ty: &mut core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/main.rs:13:29: 13:39 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:4747 ~ alloc[42dc]::rc::{impl#7}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:4745 ~ alloc[42dc]::rc::{impl#7}),
                                        self_ty: std::rc::Rc<^1>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(core::context::Context<'_>) -> std::rc::Rc<core::context::Context<'_>> {std::rc::Rc::<core::context::Context<'_>>::new},
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/main.rs:13:42: 13:49 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(50),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).50),
                ),
                value: e38,
            },
            ty: fn(core::context::Context<'_>) -> std::rc::Rc<core::context::Context<'_>> {std::rc::Rc::<core::context::Context<'_>>::new},
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/main.rs:13:42: 13:49 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).37),
                ),
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/main.rs:13:50: 13:53 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(54),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).54),
                ),
                value: e40,
            },
            ty: core::context::Context<'_>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/main.rs:13:50: 13:53 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(core::context::Context<'_>) -> std::rc::Rc<core::context::Context<'_>> {std::rc::Rc::<core::context::Context<'_>>::new},
                fun: e39,
                args: [
                    e41,
                ],
                from_hir_call: true,
                fn_span: src/main.rs:13:42: 13:54 (#0),
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/main.rs:13:42: 13:54 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(49),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).49),
                ),
                value: e42,
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/main.rs:13:42: 13:54 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e43,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/main.rs:13:41: 13:54 (#0),
        },
        Expr {
            kind: Deref {
                arg: e44,
            },
            ty: std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/main.rs:13:41: 13:54 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e45,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/main.rs:13:41: 13:54 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(48),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).48),
                ),
                value: e46,
            },
            ty: &std::rc::Rc<core::context::Context<'_>>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/main.rs:13:41: 13:54 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a, 'b, 'c, 'd> fn(&'a dyn core::DataModel, &'b mut core::bit_array::BitArray, &'c std::rc::Rc<core::context::Context<'d>>) -> std::option::Option<std::boxed::Box<(dyn core::DataModel + 'static)>> {<dyn core::DataModel as core::Parser>::parse},
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/main.rs:13:23: 13:28 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a, 'b, 'c, 'd> fn(&'a dyn core::DataModel, &'b mut core::bit_array::BitArray, &'c std::rc::Rc<core::context::Context<'d>>) -> std::option::Option<std::boxed::Box<(dyn core::DataModel + 'static)>> {<dyn core::DataModel as core::Parser>::parse},
                fun: e48,
                args: [
                    e31,
                    e37,
                    e47,
                ],
                from_hir_call: true,
                fn_span: src/main.rs:13:23: 13:55 (#0),
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/main.rs:13:15: 13:55 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(41),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).41),
                ),
                value: e49,
            },
            ty: std::option::Option<std::boxed::Box<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/main.rs:13:15: 13:55 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::option::Option<std::boxed::Box<dyn core::DataModel>>) -> std::boxed::Box<dyn core::DataModel> {std::option::Option::<std::boxed::Box<dyn core::DataModel>>::unwrap},
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/main.rs:13:56: 13:62 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::option::Option<std::boxed::Box<dyn core::DataModel>>) -> std::boxed::Box<dyn core::DataModel> {std::option::Option::<std::boxed::Box<dyn core::DataModel>>::unwrap},
                fun: e51,
                args: [
                    e50,
                ],
                from_hir_call: true,
                fn_span: src/main.rs:13:56: 13:64 (#0),
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/main.rs:13:15: 13:64 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(39),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).39),
                ),
                value: e52,
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(38),
            ),
            span: src/main.rs:13:15: 13:64 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).57),
                ),
            },
            ty: std::boxed::Box<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(58),
            ),
            span: src/main.rs:14:16: 14:19 (#0),
        },
        Expr {
            kind: Deref {
                arg: e54,
            },
            ty: dyn core::DataModel,
            temp_lifetime: Some(
                Node(58),
            ),
            span: src/main.rs:14:16: 14:26 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e55,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(58),
            ),
            span: src/main.rs:14:16: 14:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(61),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).61),
                ),
                value: e56,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(58),
            ),
            span: src/main.rs:14:16: 14:19 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a dyn core::DataModel) -> std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>> {<dyn core::DataModel as core::Fuzzer>::fuzz},
            temp_lifetime: Some(
                Node(58),
            ),
            span: src/main.rs:14:20: 14:24 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a dyn core::DataModel) -> std::vec::Vec<std::rc::Rc<(dyn core::DataModel + 'static)>> {<dyn core::DataModel as core::Fuzzer>::fuzz},
                fun: e58,
                args: [
                    e57,
                ],
                from_hir_call: true,
                fn_span: src/main.rs:14:20: 14:26 (#0),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(58),
            ),
            span: src/main.rs:14:16: 14:26 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(59),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).59),
                ),
                value: e59,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(58),
            ),
            span: src/main.rs:14:16: 14:26 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Ty(
                                    General(
                                        U0,
                                    ),
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(5:6607 ~ alloc[42dc]::vec::{impl#0}::new),
                            UserSubsts {
                                substs: [
                                    ^0,
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(5:6605 ~ alloc[42dc]::vec::{impl#0}),
                                        self_ty: std::vec::Vec<^1, ^2>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn() -> std::vec::Vec<core::feature_vector::FeatureVector> {std::vec::Vec::<core::feature_vector::FeatureVector>::new},
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/main.rs:15:19: 15:27 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(67),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).67),
                ),
                value: e61,
            },
            ty: fn() -> std::vec::Vec<core::feature_vector::FeatureVector> {std::vec::Vec::<core::feature_vector::FeatureVector>::new},
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/main.rs:15:19: 15:27 (#0),
        },
        Expr {
            kind: Call {
                ty: fn() -> std::vec::Vec<core::feature_vector::FeatureVector> {std::vec::Vec::<core::feature_vector::FeatureVector>::new},
                fun: e62,
                args: [],
                from_hir_call: true,
                fn_span: src/main.rs:15:19: 15:29 (#0),
            },
            ty: std::vec::Vec<core::feature_vector::FeatureVector>,
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/main.rs:15:19: 15:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(66),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).66),
                ),
                value: e63,
            },
            ty: std::vec::Vec<core::feature_vector::FeatureVector>,
            temp_lifetime: Some(
                Node(65),
            ),
            span: src/main.rs:15:19: 15:29 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: fn(std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> <std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::IntoIter {<std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::into_iter},
            temp_lifetime: Some(
                Node(121),
            ),
            span: src/main.rs:16:14: 16:18 (#158),
        },
        Expr {
            kind: Scope {
                region_scope: Node(119),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).119),
                ),
                value: e65,
            },
            ty: fn(std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> <std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::IntoIter {<std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::into_iter},
            temp_lifetime: Some(
                Node(121),
            ),
            span: src/main.rs:16:14: 16:18 (#158),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).64),
                ),
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(121),
            ),
            span: src/main.rs:16:14: 16:18 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(73),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).73),
                ),
                value: e67,
            },
            ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(121),
            ),
            span: src/main.rs:16:14: 16:18 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(std::vec::Vec<std::rc::Rc<dyn core::DataModel>>) -> <std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::IntoIter {<std::vec::Vec<std::rc::Rc<dyn core::DataModel>> as std::iter::IntoIterator>::into_iter},
                fun: e66,
                args: [
                    e68,
                ],
                from_hir_call: true,
                fn_span: src/main.rs:16:14: 16:18 (#158),
            },
            ty: std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(121),
            ),
            span: src/main.rs:16:14: 16:18 (#158),
        },
        Expr {
            kind: Scope {
                region_scope: Node(120),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).120),
                ),
                value: e69,
            },
            ty: std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(121),
            ),
            span: src/main.rs:16:14: 16:18 (#158),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>) -> std::option::Option<<std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::Item> {<std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::next},
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/main.rs:16:14: 16:18 (#158),
        },
        Expr {
            kind: Scope {
                region_scope: Node(113),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).113),
                ),
                value: e71,
            },
            ty: for<'a> fn(&'a mut std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>) -> std::option::Option<<std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::Item> {<std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::next},
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/main.rs:16:14: 16:18 (#158),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).109),
                ),
            },
            ty: std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/main.rs:16:14: 16:18 (#158),
        },
        Expr {
            kind: Scope {
                region_scope: Node(111),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).111),
                ),
                value: e73,
            },
            ty: std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/main.rs:16:14: 16:18 (#158),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: false,
                },
                arg: e74,
            },
            ty: &mut std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/main.rs:16:14: 16:18 (#158),
        },
        Expr {
            kind: Deref {
                arg: e75,
            },
            ty: std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/main.rs:16:14: 16:18 (#158),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e76,
            },
            ty: &mut std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/main.rs:16:14: 16:18 (#158),
        },
        Expr {
            kind: Scope {
                region_scope: Node(112),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).112),
                ),
                value: e77,
            },
            ty: &mut std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/main.rs:16:14: 16:18 (#158),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>>) -> std::option::Option<<std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::Item> {<std::vec::IntoIter<std::rc::Rc<dyn core::DataModel>> as std::iter::Iterator>::next},
                fun: e72,
                args: [
                    e78,
                ],
                from_hir_call: true,
                fn_span: src/main.rs:16:14: 16:18 (#158),
            },
            ty: std::option::Option<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/main.rs:16:14: 16:18 (#158),
        },
        Expr {
            kind: Scope {
                region_scope: Node(114),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).114),
                ),
                value: e79,
            },
            ty: std::option::Option<std::rc::Rc<dyn core::DataModel>>,
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/main.rs:16:14: 16:18 (#158),
        },
        Expr {
            kind: Break {
                label: Node(76),
                value: None,
            },
            ty: !,
            temp_lifetime: Some(
                Node(77),
            ),
            span: src/main.rs:16:5: 20:6 (#157),
        },
        Expr {
            kind: NeverToAny {
                source: e81,
            },
            ty: (),
            temp_lifetime: Some(
                Node(77),
            ),
            span: src/main.rs:16:5: 20:6 (#157),
        },
        Expr {
            kind: Scope {
                region_scope: Node(77),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).77),
                ),
                value: e82,
            },
            ty: (),
            temp_lifetime: Some(
                Node(77),
            ),
            span: src/main.rs:16:5: 20:6 (#157),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(77),
                lint_level: Inherited,
                value: e83,
            },
            ty: (),
            temp_lifetime: Some(
                Node(77),
            ),
            span: src/main.rs:16:5: 20:6 (#157),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).72),
                ),
            },
            ty: std::vec::Vec<core::feature_vector::FeatureVector>,
            temp_lifetime: Some(
                Node(90),
            ),
            span: src/main.rs:17:9: 17:12 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Mut {
                    allow_two_phase_borrow: true,
                },
                arg: e85,
            },
            ty: &mut std::vec::Vec<core::feature_vector::FeatureVector>,
            temp_lifetime: Some(
                Node(90),
            ),
            span: src/main.rs:17:9: 17:32 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(84),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).84),
                ),
                value: e86,
            },
            ty: &mut std::vec::Vec<core::feature_vector::FeatureVector>,
            temp_lifetime: Some(
                Node(90),
            ),
            span: src/main.rs:17:9: 17:12 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).75),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(90),
            ),
            span: src/main.rs:17:18: 17:19 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e88,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(90),
            ),
            span: src/main.rs:17:18: 17:31 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(90),
            ),
            span: src/main.rs:17:18: 17:31 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
                fun: e90,
                args: [
                    e89,
                ],
                from_hir_call: false,
                fn_span: src/main.rs:17:18: 17:31 (#0),
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(90),
            ),
            span: src/main.rs:17:18: 17:31 (#0),
        },
        Expr {
            kind: Deref {
                arg: e91,
            },
            ty: dyn core::DataModel,
            temp_lifetime: Some(
                Node(90),
            ),
            span: src/main.rs:17:18: 17:31 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e92,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(90),
            ),
            span: src/main.rs:17:18: 17:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(88),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).88),
                ),
                value: e93,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(90),
            ),
            span: src/main.rs:17:18: 17:19 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a dyn core::DataModel) -> core::feature_vector::FeatureVector {<dyn core::DataModel as core::Vectorizer>::vectorize},
            temp_lifetime: Some(
                Node(90),
            ),
            span: src/main.rs:17:20: 17:29 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a dyn core::DataModel) -> core::feature_vector::FeatureVector {<dyn core::DataModel as core::Vectorizer>::vectorize},
                fun: e95,
                args: [
                    e94,
                ],
                from_hir_call: true,
                fn_span: src/main.rs:17:20: 17:31 (#0),
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(90),
            ),
            span: src/main.rs:17:18: 17:31 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(86),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).86),
                ),
                value: e96,
            },
            ty: core::feature_vector::FeatureVector,
            temp_lifetime: Some(
                Node(90),
            ),
            span: src/main.rs:17:18: 17:31 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a mut std::vec::Vec<core::feature_vector::FeatureVector>, core::feature_vector::FeatureVector) {std::vec::Vec::<core::feature_vector::FeatureVector>::push},
            temp_lifetime: Some(
                Node(90),
            ),
            span: src/main.rs:17:13: 17:17 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a mut std::vec::Vec<core::feature_vector::FeatureVector>, core::feature_vector::FeatureVector) {std::vec::Vec::<core::feature_vector::FeatureVector>::push},
                fun: e98,
                args: [
                    e87,
                    e97,
                ],
                from_hir_call: true,
                fn_span: src/main.rs:17:13: 17:32 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(90),
            ),
            span: src/main.rs:17:9: 17:32 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(82),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).82),
                ),
                value: e99,
            },
            ty: (),
            temp_lifetime: Some(
                Node(90),
            ),
            span: src/main.rs:17:9: 17:32 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).75),
                ),
            },
            ty: std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/main.rs:18:26: 18:27 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e101,
            },
            ty: &std::rc::Rc<dyn core::DataModel>,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/main.rs:18:26: 18:39 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/main.rs:18:26: 18:39 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a std::rc::Rc<dyn core::DataModel>) -> &'a <std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::Target {<std::rc::Rc<dyn core::DataModel> as std::ops::Deref>::deref},
                fun: e103,
                args: [
                    e102,
                ],
                from_hir_call: false,
                fn_span: src/main.rs:18:26: 18:39 (#0),
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/main.rs:18:26: 18:39 (#0),
        },
        Expr {
            kind: Deref {
                arg: e104,
            },
            ty: dyn core::DataModel,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/main.rs:18:26: 18:39 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e105,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/main.rs:18:26: 18:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(94),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).94),
                ),
                value: e106,
            },
            ty: &dyn core::DataModel,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/main.rs:18:26: 18:27 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a dyn core::DataModel) -> core::bit_array::BitArray {<dyn core::DataModel as core::Serializer>::serialize},
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/main.rs:18:28: 18:37 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a dyn core::DataModel) -> core::bit_array::BitArray {<dyn core::DataModel as core::Serializer>::serialize},
                fun: e108,
                args: [
                    e107,
                ],
                from_hir_call: true,
                fn_span: src/main.rs:18:28: 18:39 (#0),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/main.rs:18:26: 18:39 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(92),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).92),
                ),
                value: e109,
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(91),
            ),
            span: src/main.rs:18:26: 18:39 (#0),
        },
        Expr {
            kind: VarRef {
                id: LocalVarId(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).97),
                ),
            },
            ty: core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/main.rs:19:9: 19:19 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e111,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/main.rs:19:9: 19:55 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(100),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).100),
                ),
                value: e112,
            },
            ty: &core::bit_array::BitArray,
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/main.rs:19:9: 19:19 (#0),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "./fuzzy_data",
                        Cooked,
                    ),
                    span: src/main.rs:19:28: 19:42 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/main.rs:19:28: 19:42 (#0),
        },
        Expr {
            kind: Deref {
                arg: e114,
            },
            ty: str,
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/main.rs:19:28: 19:54 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e115,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/main.rs:19:28: 19:54 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(104),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).104),
                ),
                value: e116,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/main.rs:19:28: 19:42 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/main.rs:19:43: 19:52 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a str) -> std::string::String {<str as std::string::ToString>::to_string},
                fun: e118,
                args: [
                    e117,
                ],
                from_hir_call: true,
                fn_span: src/main.rs:19:43: 19:54 (#0),
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/main.rs:19:28: 19:54 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(102),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).102),
                ),
                value: e119,
            },
            ty: std::string::String,
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/main.rs:19:28: 19:54 (#0),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(&'a core::bit_array::BitArray, std::string::String) {core::bit_array::BitArray::to_file},
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/main.rs:19:20: 19:27 (#0),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(&'a core::bit_array::BitArray, std::string::String) {core::bit_array::BitArray::to_file},
                fun: e121,
                args: [
                    e113,
                    e120,
                ],
                from_hir_call: true,
                fn_span: src/main.rs:19:20: 19:55 (#0),
            },
            ty: (),
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/main.rs:19:9: 19:55 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(98),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).98),
                ),
                value: e122,
            },
            ty: (),
            temp_lifetime: Some(
                Node(105),
            ),
            span: src/main.rs:19:9: 19:55 (#0),
        },
        Expr {
            kind: Block {
                block: b0,
            },
            ty: (),
            temp_lifetime: Some(
                Node(107),
            ),
            span: src/main.rs:16:19: 20:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(107),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).107),
                ),
                value: e124,
            },
            ty: (),
            temp_lifetime: Some(
                Node(107),
            ),
            span: src/main.rs:16:19: 20:6 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(107),
                lint_level: Inherited,
                value: e125,
            },
            ty: (),
            temp_lifetime: Some(
                Node(107),
            ),
            span: src/main.rs:16:19: 20:6 (#0),
        },
        Expr {
            kind: Match {
                scrutinee: e80,
                arms: [
                    a0,
                    a1,
                ],
            },
            ty: (),
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/main.rs:16:14: 16:18 (#158),
        },
        Expr {
            kind: Scope {
                region_scope: Node(115),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).115),
                ),
                value: e127,
            },
            ty: (),
            temp_lifetime: Some(
                Node(116),
            ),
            span: src/main.rs:16:14: 16:18 (#158),
        },
        Expr {
            kind: Block {
                block: b1,
            },
            ty: (),
            temp_lifetime: Some(
                Node(117),
            ),
            span: src/main.rs:16:5: 20:6 (#157),
        },
        Expr {
            kind: Loop {
                body: e129,
            },
            ty: (),
            temp_lifetime: Some(
                Node(76),
            ),
            span: src/main.rs:16:5: 20:6 (#157),
        },
        Expr {
            kind: Scope {
                region_scope: Node(76),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).76),
                ),
                value: e130,
            },
            ty: (),
            temp_lifetime: Some(
                Node(76),
            ),
            span: src/main.rs:16:5: 20:6 (#157),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(76),
                lint_level: Inherited,
                value: e131,
            },
            ty: (),
            temp_lifetime: Some(
                Node(76),
            ),
            span: src/main.rs:16:5: 20:6 (#157),
        },
        Expr {
            kind: Match {
                scrutinee: e70,
                arms: [
                    a2,
                ],
            },
            ty: (),
            temp_lifetime: Some(
                Node(121),
            ),
            span: src/main.rs:16:5: 20:6 (#157),
        },
        Expr {
            kind: Scope {
                region_scope: Node(121),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).121),
                ),
                value: e133,
            },
            ty: (),
            temp_lifetime: Some(
                Node(121),
            ),
            span: src/main.rs:16:5: 20:6 (#157),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(121),
                lint_level: Inherited,
                value: e134,
            },
            ty: (),
            temp_lifetime: Some(
                Node(121),
            ),
            span: src/main.rs:16:5: 20:6 (#157),
        },
        Expr {
            kind: Use {
                source: e135,
            },
            ty: (),
            temp_lifetime: Some(
                Node(123),
            ),
            span: src/main.rs:16:5: 20:6 (#157),
        },
        Expr {
            kind: Scope {
                region_scope: Node(122),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).122),
                ),
                value: e136,
            },
            ty: (),
            temp_lifetime: Some(
                Node(123),
            ),
            span: src/main.rs:16:5: 20:6 (#157),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: None,
            },
            ty: for<'a> fn(std::fmt::Arguments<'a>) {std::io::_print},
            temp_lifetime: Some(
                Node(137),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:9: 137:27 (#90),
        },
        Expr {
            kind: Scope {
                region_scope: Node(126),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).126),
                ),
                value: e138,
            },
            ty: for<'a> fn(std::fmt::Arguments<'a>) {std::io::_print},
            temp_lifetime: Some(
                Node(137),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:9: 137:27 (#90),
        },
        Expr {
            kind: ZstLiteral {
                user_ty: Some(
                    Canonical {
                        max_universe: U0,
                        variables: [
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                            CanonicalVarInfo {
                                kind: Region(
                                    U0,
                                ),
                            },
                        ],
                        value: TypeOf(
                            DefId(2:8999 ~ core[102f]::fmt::{impl#4}::new_const),
                            UserSubsts {
                                substs: [
                                    ReLateBound(DebruijnIndex(0), BoundRegion { var: 0, kind: BrAnon(0, None) }),
                                ],
                                user_self_ty: Some(
                                    UserSelfTy {
                                        impl_def_id: DefId(2:8997 ~ core[102f]::fmt::{impl#4}),
                                        self_ty: std::fmt::Arguments<'_>,
                                    },
                                ),
                            },
                        ),
                    },
                ),
            },
            ty: fn(&[&'static str]) -> std::fmt::Arguments<'_> {std::fmt::Arguments::<'_>::new_const},
            temp_lifetime: Some(
                Node(137),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#91),
        },
        Expr {
            kind: Scope {
                region_scope: Node(136),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).136),
                ),
                value: e140,
            },
            ty: fn(&[&'static str]) -> std::fmt::Arguments<'_> {std::fmt::Arguments::<'_>::new_const},
            temp_lifetime: Some(
                Node(137),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#91),
        },
        Expr {
            kind: Literal {
                lit: Spanned {
                    node: Str(
                        "Hello, world!\n",
                        Cooked,
                    ),
                    span: src/main.rs:21:14: 21:29 (#0),
                },
                neg: false,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(137),
            ),
            span: src/main.rs:21:14: 21:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(131),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).131),
                ),
                value: e142,
            },
            ty: &str,
            temp_lifetime: Some(
                Node(137),
            ),
            span: src/main.rs:21:14: 21:29 (#0),
        },
        Expr {
            kind: Array {
                fields: [
                    e143,
                ],
            },
            ty: [&str; 1],
            temp_lifetime: Some(
                Node(137),
            ),
            span: src/main.rs:21:14: 21:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(132),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).132),
                ),
                value: e144,
            },
            ty: [&str; 1],
            temp_lifetime: Some(
                Node(137),
            ),
            span: src/main.rs:21:14: 21:29 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e145,
            },
            ty: &[&str; 1],
            temp_lifetime: Some(
                Node(137),
            ),
            span: src/main.rs:21:14: 21:29 (#0),
        },
        Expr {
            kind: Deref {
                arg: e146,
            },
            ty: [&str; 1],
            temp_lifetime: Some(
                Node(137),
            ),
            span: src/main.rs:21:14: 21:29 (#0),
        },
        Expr {
            kind: Borrow {
                borrow_kind: Shared,
                arg: e147,
            },
            ty: &[&str; 1],
            temp_lifetime: Some(
                Node(137),
            ),
            span: src/main.rs:21:14: 21:29 (#0),
        },
        Expr {
            kind: Pointer {
                cast: Unsize,
                source: e148,
            },
            ty: &[&str],
            temp_lifetime: Some(
                Node(137),
            ),
            span: src/main.rs:21:14: 21:29 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(133),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).133),
                ),
                value: e149,
            },
            ty: &[&str],
            temp_lifetime: Some(
                Node(137),
            ),
            span: src/main.rs:21:14: 21:29 (#0),
        },
        Expr {
            kind: Call {
                ty: fn(&[&'static str]) -> std::fmt::Arguments<'_> {std::fmt::Arguments::<'_>::new_const},
                fun: e141,
                args: [
                    e150,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#91),
            },
            ty: std::fmt::Arguments<'_>,
            temp_lifetime: Some(
                Node(137),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#91),
        },
        Expr {
            kind: Scope {
                region_scope: Node(130),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).130),
                ),
                value: e151,
            },
            ty: std::fmt::Arguments<'_>,
            temp_lifetime: Some(
                Node(137),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:28: 137:61 (#91),
        },
        Expr {
            kind: Call {
                ty: for<'a> fn(std::fmt::Arguments<'a>) {std::io::_print},
                fun: e139,
                args: [
                    e152,
                ],
                from_hir_call: true,
                fn_span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:9: 137:62 (#90),
            },
            ty: (),
            temp_lifetime: Some(
                Node(137),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:9: 137:62 (#90),
        },
        Expr {
            kind: Scope {
                region_scope: Node(125),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).125),
                ),
                value: e153,
            },
            ty: (),
            temp_lifetime: Some(
                Node(137),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:137:9: 137:62 (#90),
        },
        Expr {
            kind: Block {
                block: b2,
            },
            ty: (),
            temp_lifetime: Some(
                Node(139),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:136:23: 138:6 (#90),
        },
        Expr {
            kind: Scope {
                region_scope: Node(124),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).124),
                ),
                value: e155,
            },
            ty: (),
            temp_lifetime: Some(
                Node(139),
            ),
            span: /home/afryer/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/macros.rs:136:23: 138:6 (#90),
        },
        Expr {
            kind: Block {
                block: b3,
            },
            ty: (),
            temp_lifetime: Some(
                Node(141),
            ),
            span: src/main.rs:9:11: 22:2 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Node(141),
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).141),
                ),
                value: e157,
            },
            ty: (),
            temp_lifetime: Some(
                Node(141),
            ),
            span: src/main.rs:9:11: 22:2 (#0),
        },
        Expr {
            kind: Scope {
                region_scope: Destruction(141),
                lint_level: Inherited,
                value: e158,
            },
            ty: (),
            temp_lifetime: Some(
                Node(141),
            ),
            span: src/main.rs:9:11: 22:2 (#0),
        },
    ],
    stmts: [
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 140, first_statement_index: 0},
                init_scope: Node(1),
                pattern: Pat {
                    ty: std::boxed::Box<dyn core::DataModel>,
                    span: src/main.rs:10:9: 10:20 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "grammar",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).7),
                        ),
                        ty: std::boxed::Box<dyn core::DataModel>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e3,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).6),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(1),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 140, first_statement_index: 1},
                init_scope: Node(8),
                pattern: Pat {
                    ty: core::bit_array::BitArray,
                    span: src/main.rs:11:9: 11:18 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "input",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).20),
                        ),
                        ty: core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e17,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).19),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(8),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 140, first_statement_index: 2},
                init_scope: Node(21),
                pattern: Pat {
                    ty: core::context::Context<'_>,
                    span: src/main.rs:12:9: 12:12 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "ctx",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).37),
                        ),
                        ty: core::context::Context<'_>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e27,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).36),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(21),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 140, first_statement_index: 3},
                init_scope: Node(38),
                pattern: Pat {
                    ty: std::boxed::Box<dyn core::DataModel>,
                    span: src/main.rs:13:9: 13:12 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "ast",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).57),
                        ),
                        ty: std::boxed::Box<dyn core::DataModel>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e53,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).56),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(38),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 140, first_statement_index: 4},
                init_scope: Node(58),
                pattern: Pat {
                    ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
                    span: src/main.rs:14:9: 14:13 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "fuzz",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).64),
                        ),
                        ty: std::vec::Vec<std::rc::Rc<dyn core::DataModel>>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e60,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).63),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(58),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 140, first_statement_index: 5},
                init_scope: Node(65),
                pattern: Pat {
                    ty: std::vec::Vec<core::feature_vector::FeatureVector>,
                    span: src/main.rs:15:9: 15:16 (#0),
                    kind: Binding {
                        mutability: Mut,
                        name: "fvs",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).72),
                        ),
                        ty: std::vec::Vec<core::feature_vector::FeatureVector>,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e64,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).71),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(65),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(90),
                expr: e100,
            },
            opt_destruction_scope: Some(
                Destruction(90),
            ),
        },
        Stmt {
            kind: Let {
                remainder_scope: Remainder { block: 106, first_statement_index: 1},
                init_scope: Node(91),
                pattern: Pat {
                    ty: core::bit_array::BitArray,
                    span: src/main.rs:18:13: 18:23 (#0),
                    kind: Binding {
                        mutability: Not,
                        name: "fuzzy_data",
                        mode: ByValue,
                        var: LocalVarId(
                            HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).97),
                        ),
                        ty: core::bit_array::BitArray,
                        subpattern: None,
                        is_primary: true,
                    },
                },
                initializer: Some(
                    e110,
                ),
                else_block: None,
                lint_level: Explicit(
                    HirId(DefId(0:511 ~ andrew_fuzz[741f]::main).96),
                ),
            },
            opt_destruction_scope: Some(
                Destruction(91),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(105),
                expr: e123,
            },
            opt_destruction_scope: Some(
                Destruction(105),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(116),
                expr: e128,
            },
            opt_destruction_scope: Some(
                Destruction(116),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(123),
                expr: e137,
            },
            opt_destruction_scope: Some(
                Destruction(123),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(137),
                expr: e154,
            },
            opt_destruction_scope: Some(
                Destruction(137),
            ),
        },
        Stmt {
            kind: Expr {
                scope: Node(139),
                expr: e156,
            },
            opt_destruction_scope: Some(
                Destruction(139),
            ),
        },
    ],
    params: [],
}

