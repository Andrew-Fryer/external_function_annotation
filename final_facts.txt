std :: result :: Result :: map:
std :: fs :: read:
std :: path :: Path :: new:
std :: fs :: write:
std :: vec :: Vec :: as_ref:
std :: cell :: RefCell :: new:
std :: cell :: Ref :: deref:
std :: cell :: RefCell :: borrow:
std :: collections :: HashMap :: len:
std :: option :: Option :: eq:
std :: collections :: HashMap :: insert:
std :: collections :: HashMap :: new:
Self :: do_vectorization:
Self :: features:
Self :: do_serialization:
std :: vec :: Vec :: len:
std :: vec :: Vec :: index_mut:
std :: vec :: Vec :: clone:
std :: iter :: Enumerate :: next:
std :: iter :: Enumerate :: into_iter:
std :: slice :: Iter :: enumerate:
core :: slice :: iter:
std :: slice :: Iter :: next:
core :: panicking :: panic:
std :: rc :: Rc :: downgrade:
std :: rc :: Rc :: from:
std :: slice :: into_vec:
std :: boxed :: Box :: new:
std :: rc :: Rc :: clone:
std :: fmt :: Arguments :: new_const:
std :: vec :: Vec :: push:
std :: rc :: Rc :: deref:
std :: vec :: IntoIter :: next:
std :: vec :: Vec :: into_iter:
std :: vec :: Vec :: new:
std :: option :: Option :: unwrap:
std :: rc :: Rc :: new:
std :: rc :: Weak :: new:
std :: result :: Result :: unwrap:
str :: to_string:
andrew_fuzz :: main:
	std :: io :: _print;
andrew_fuzz :: dns :: dns :: {closure # 0}:
andrew_fuzz :: dns :: dns:
andrew_fuzz :: library :: button :: {impl # 0} :: do_serialization:
andrew_fuzz :: library :: button :: {impl # 0} :: set_name:
andrew_fuzz :: library :: button :: {impl # 0} :: name:
andrew_fuzz :: library :: button :: {impl # 0} :: fuzz:
andrew_fuzz :: library :: button :: {impl # 0} :: debug:
	std :: string :: String :: new;
	std :: string :: String :: write_fmt;
andrew_fuzz :: library :: button :: {impl # 0} :: parse:
andrew_fuzz :: library :: button :: {impl # 0} :: breed:
andrew_fuzz :: library :: button :: {impl # 0} :: clone:
andrew_fuzz :: library :: button :: {impl # 0} :: new:
andrew_fuzz :: library :: constraint :: {impl # 0} :: do_serialization:
andrew_fuzz :: library :: constraint :: {impl # 0} :: do_vectorization:
	std :: f64 :: powi;
	std :: collections :: HashMap :: get_mut;
andrew_fuzz :: library :: constraint :: {impl # 0} :: do_features:
	Self :: name;
	std :: string :: String :: to_string;
	std :: collections :: HashSet :: insert;
andrew_fuzz :: library :: constraint :: {impl # 0} :: set_name:
andrew_fuzz :: library :: constraint :: {impl # 0} :: name:
andrew_fuzz :: library :: constraint :: {impl # 0} :: fuzz:
andrew_fuzz :: library :: constraint :: {impl # 0} :: debug:
	std :: string :: String :: new;
	std :: string :: String :: write_fmt;
andrew_fuzz :: library :: constraint :: {impl # 0} :: parse:
	< dyn for < ' a > std :: ops :: Fn (std :: rc :: Rc) -> bool as std :: ops :: Fn > :: call;
andrew_fuzz :: library :: constraint :: {impl # 0} :: breed:
andrew_fuzz :: library :: constraint :: {impl # 0} :: clone:
andrew_fuzz :: library :: constraint :: {impl # 0} :: child:
andrew_fuzz :: library :: constraint :: {impl # 0} :: new:
andrew_fuzz :: library :: u16 :: {impl # 0} :: do_serialization:
	std :: vec :: Vec :: index;
	std :: cell :: RefCell :: borrow_mut;
	std :: cell :: RefMut :: deref;
	std :: cell :: RefMut :: deref_mut;
andrew_fuzz :: library :: u16 :: {impl # 0} :: set_name:
andrew_fuzz :: library :: u16 :: {impl # 0} :: name:
andrew_fuzz :: library :: u16 :: {impl # 0} :: fuzz:
andrew_fuzz :: library :: u16 :: {impl # 0} :: debug:
	std :: string :: String :: new;
	std :: string :: String :: write_fmt;
	core :: fmt :: ArgumentV1 :: new_upper_hex;
	std :: fmt :: Arguments :: new_v1;
	std :: vec :: Vec :: index;
andrew_fuzz :: library :: u16 :: {impl # 0} :: parse:
andrew_fuzz :: library :: u16 :: {impl # 0} :: breed:
andrew_fuzz :: library :: u16 :: {impl # 0} :: clone:
andrew_fuzz :: library :: u16 :: {impl # 0} :: int:
	std :: vec :: Vec :: index;
andrew_fuzz :: library :: u16 :: {impl # 0} :: from_u16:
andrew_fuzz :: library :: u16 :: {impl # 0} :: new:
andrew_fuzz :: library :: u8 :: {impl # 0} :: do_serialization:
	std :: vec :: Vec :: index;
	std :: cell :: RefCell :: borrow_mut;
	std :: cell :: RefMut :: deref;
	std :: cell :: RefMut :: deref_mut;
andrew_fuzz :: library :: u8 :: {impl # 0} :: set_name:
andrew_fuzz :: library :: u8 :: {impl # 0} :: name:
andrew_fuzz :: library :: u8 :: {impl # 0} :: fuzz:
andrew_fuzz :: library :: u8 :: {impl # 0} :: debug:
	std :: string :: String :: new;
	std :: string :: String :: write_fmt;
	core :: fmt :: ArgumentV1 :: new_upper_hex;
	std :: fmt :: Arguments :: new_v1;
	std :: vec :: Vec :: index;
andrew_fuzz :: library :: u8 :: {impl # 0} :: parse:
andrew_fuzz :: library :: u8 :: {impl # 0} :: breed:
andrew_fuzz :: library :: u8 :: {impl # 0} :: clone:
andrew_fuzz :: library :: u8 :: {impl # 0} :: int:
	std :: vec :: Vec :: index;
andrew_fuzz :: library :: u8 :: {impl # 0} :: from_u8:
andrew_fuzz :: library :: u8 :: {impl # 0} :: new:
andrew_fuzz :: library :: set :: {impl # 0} :: do_serialization:
andrew_fuzz :: library :: set :: {impl # 0} :: set_name:
andrew_fuzz :: library :: set :: {impl # 0} :: name:
andrew_fuzz :: library :: set :: {impl # 0} :: fuzz:
	std :: vec :: Vec :: deref;
andrew_fuzz :: library :: set :: {impl # 0} :: debug:
andrew_fuzz :: library :: set :: {impl # 0} :: parse:
	< dyn for < ' a > std :: ops :: Fn (std :: rc :: Rc) -> bool as std :: ops :: Fn > :: call;
andrew_fuzz :: library :: set :: {impl # 0} :: breed:
andrew_fuzz :: library :: set :: {impl # 0} :: clone:
andrew_fuzz :: library :: set :: {impl # 0} :: new:
andrew_fuzz :: library :: union :: {impl # 0} :: do_serialization:
andrew_fuzz :: library :: union :: {impl # 0} :: set_name:
andrew_fuzz :: library :: union :: {impl # 0} :: name:
andrew_fuzz :: library :: union :: {impl # 0} :: fuzz :: {closure # 0}:
andrew_fuzz :: library :: union :: {impl # 0} :: fuzz:
	std :: vec :: Vec :: deref;
	std :: slice :: Iter :: map;
	std :: iter :: Map :: collect;
andrew_fuzz :: library :: union :: {impl # 0} :: debug:
andrew_fuzz :: library :: union :: {impl # 0} :: parse:
	std :: io :: _print;
	std :: vec :: Vec :: pop;
	std :: rc :: Rc :: eq;
andrew_fuzz :: library :: union :: {impl # 0} :: breed:
andrew_fuzz :: library :: union :: {impl # 0} :: clone:
andrew_fuzz :: library :: union :: {impl # 0} :: child:
andrew_fuzz :: library :: union :: {impl # 0} :: new:
andrew_fuzz :: library :: sequence :: {impl # 0} :: do_serialization:
andrew_fuzz :: library :: sequence :: {impl # 0} :: set_name:
andrew_fuzz :: library :: sequence :: {impl # 0} :: name:
andrew_fuzz :: library :: sequence :: {impl # 0} :: fuzz:
andrew_fuzz :: library :: sequence :: {impl # 0} :: debug:
andrew_fuzz :: library :: sequence :: {impl # 0} :: parse:
andrew_fuzz :: library :: sequence :: {impl # 0} :: breed:
andrew_fuzz :: library :: sequence :: {impl # 0} :: clone:
andrew_fuzz :: library :: sequence :: {impl # 0} :: map:
andrew_fuzz :: library :: sequence :: {impl # 0} :: new:
andrew_fuzz :: core :: Serializer :: serialize:
andrew_fuzz :: core :: Vectorizer :: vectorize:
andrew_fuzz :: core :: Vectorizer :: do_vectorization:
	std :: f64 :: powi;
	std :: collections :: HashMap :: get_mut;
andrew_fuzz :: core :: Vectorizer :: features:
	std :: collections :: HashSet :: new;
	Self :: do_features;
	std :: collections :: HashSet :: into_iter;
	std :: collections :: hash_set :: IntoIter :: collect;
	std :: string :: String :: to_string;
andrew_fuzz :: core :: Vectorizer :: do_features:
	Self :: name;
	std :: string :: String :: to_string;
	std :: collections :: HashSet :: insert;
andrew_fuzz :: core :: Ast :: debug:
	std :: string :: String :: new;
	std :: string :: String :: write_fmt;
	std :: fmt :: Arguments :: new_v1;
	Self :: name;
	core :: fmt :: ArgumentV1 :: new_display;
	std :: result :: Result :: expect;
andrew_fuzz :: core :: Contextual :: str:
andrew_fuzz :: core :: Contextual :: int:
andrew_fuzz :: core :: Contextual :: data:
andrew_fuzz :: core :: Contextual :: map:
andrew_fuzz :: core :: Contextual :: vec:
andrew_fuzz :: core :: Contextual :: child:
andrew_fuzz :: core :: {impl # 0} :: name:
andrew_fuzz :: core :: {impl # 0} :: new:
andrew_fuzz :: core :: bolts :: {impl # 0} :: index:
	std :: collections :: HashMap :: index;
	std :: vec :: Vec :: index;
andrew_fuzz :: core :: bolts :: {impl # 0} :: from :: {constant # 0}:
andrew_fuzz :: core :: bolts :: {impl # 0} :: from:
andrew_fuzz :: core :: bolts :: {impl # 0} :: {constant # 0}:
andrew_fuzz :: core :: bolts :: {impl # 0} :: get :: {closure # 0}:
andrew_fuzz :: core :: bolts :: {impl # 0} :: get:
	std :: vec :: Vec :: deref;
	std :: collections :: HashMap :: get;
	core :: slice :: get;
	std :: option :: Option :: map;
andrew_fuzz :: core :: bolts :: {impl # 0} :: push:
andrew_fuzz :: core :: bolts :: {impl # 0} :: vals:
andrew_fuzz :: core :: bolts :: {impl # 0} :: clone:
andrew_fuzz :: core :: bolts :: {impl # 0} :: empty:
andrew_fuzz :: core :: context :: {impl # 0} :: map:
andrew_fuzz :: core :: context :: {impl # 0} :: vec:
andrew_fuzz :: core :: context :: {impl # 0} :: child:
andrew_fuzz :: core :: context :: {impl # 0} :: parent:
	std :: rc :: Weak :: upgrade;
andrew_fuzz :: core :: context :: {impl # 0} :: new:
andrew_fuzz :: core :: feature_vector :: {impl # 0} :: features:
	std :: vec :: Vec :: deref;
andrew_fuzz :: core :: feature_vector :: {impl # 0} :: dist:
	std :: vec :: Vec :: deref;
	std :: string :: String :: to_string;
	std :: collections :: HashMap :: get;
	std :: slice :: Iter :: collect;
	std :: vec :: Vec :: eq;
	std :: slice :: Iter :: zip;
	std :: iter :: Zip :: into_iter;
	std :: iter :: Zip :: next;
	f64 :: sub;
	std :: f64 :: powi;
	std :: slice :: Iter :: into_iter;
andrew_fuzz :: core :: feature_vector :: {impl # 0} :: values:
	std :: vec :: Vec :: deref;
	std :: string :: String :: to_string;
	std :: collections :: HashMap :: get;
	std :: slice :: Iter :: into_iter;
andrew_fuzz :: core :: feature_vector :: {impl # 0} :: tally:
	std :: f64 :: powi;
	std :: collections :: HashMap :: get_mut;
andrew_fuzz :: core :: feature_vector :: {impl # 0} :: new:
	std :: string :: String :: to_string;
andrew_fuzz :: core :: bit_array :: {impl # 0} :: fmt:
	std :: io :: _print;
	core :: fmt :: ArgumentV1 :: new_debug;
	std :: fmt :: rt :: v1 :: Count :: Is;
	std :: fmt :: rt :: v1 :: Argument :: new;
	core :: fmt :: UnsafeArg :: new;
	std :: fmt :: Arguments :: new_v1_formatted;
andrew_fuzz :: core :: bit_array :: {impl # 0} :: eq:
	std :: vec :: Vec :: index;
andrew_fuzz :: core :: bit_array :: {impl # 0} :: add_assign:
	std :: vec :: Vec :: index;
	std :: cell :: RefCell :: borrow_mut;
	std :: cell :: RefMut :: deref;
	std :: cell :: RefMut :: deref_mut;
andrew_fuzz :: core :: bit_array :: {impl # 0} :: extend:
	std :: vec :: Vec :: index;
	std :: cell :: RefCell :: borrow_mut;
	std :: cell :: RefMut :: deref;
	std :: cell :: RefMut :: deref_mut;
andrew_fuzz :: core :: bit_array :: {impl # 0} :: pos:
andrew_fuzz :: core :: bit_array :: {impl # 0} :: advance_to_match:
	std :: rc :: Rc :: eq;
andrew_fuzz :: core :: bit_array :: {impl # 0} :: matching_data:
	std :: rc :: Rc :: eq;
andrew_fuzz :: core :: bit_array :: {impl # 0} :: advance:
andrew_fuzz :: core :: bit_array :: {impl # 0} :: eat:
andrew_fuzz :: core :: bit_array :: {impl # 0} :: len:
andrew_fuzz :: core :: bit_array :: {impl # 0} :: clean_end_offset:
andrew_fuzz :: core :: bit_array :: {impl # 0} :: clean_offset:
andrew_fuzz :: core :: bit_array :: {impl # 0} :: peek:
	std :: vec :: Vec :: index;
andrew_fuzz :: core :: bit_array :: {impl # 0} :: clone:
andrew_fuzz :: core :: bit_array :: {impl # 0} :: to_file:
andrew_fuzz :: core :: bit_array :: {impl # 0} :: from_file :: {closure # 0}:
andrew_fuzz :: core :: bit_array :: {impl # 0} :: from_file:
andrew_fuzz :: core :: bit_array :: {impl # 0} :: fresh:
andrew_fuzz :: core :: bit_array :: {impl # 0} :: new:

